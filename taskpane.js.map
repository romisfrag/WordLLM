{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/semver/functions/gte.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/semver/functions/lt.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/semver/ranges/intersects.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/semver/internal/parse-options.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/retry/lib/retry_operation.js","webpack://office-addin-taskpane/./node_modules/camelcase/index.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/semver/classes/comparator.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/semver/functions/patch.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/semver/functions/sort.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/semver/ranges/min-version.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/semver/functions/parse.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/semver/classes/range.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/semver/functions/eq.js","webpack://office-addin-taskpane/./node_modules/eventemitter3/index.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/semver/classes/semver.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/semver/functions/rsort.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/semver/ranges/ltr.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/semver/functions/inc.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/semver/functions/clean.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/semver/functions/compare-loose.js","webpack://office-addin-taskpane/./node_modules/p-finally/index.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/semver/functions/satisfies.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/semver/ranges/simplify.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/ansi-styles/index.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/retry/index.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/semver/functions/prerelease.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/semver/ranges/outside.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/semver/internal/debug.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/semver/functions/neq.js","webpack://office-addin-taskpane/./node_modules/p-queue/dist/priority-queue.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/semver/ranges/valid.js","webpack://office-addin-taskpane/./node_modules/p-timeout/index.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/semver/internal/re.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/semver/functions/cmp.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/semver/internal/lrucache.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/semver/ranges/max-satisfying.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/semver/index.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/semver/functions/coerce.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/semver/functions/rcompare.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/semver/ranges/min-satisfying.js","webpack://office-addin-taskpane/./node_modules/base64-js/index.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/semver/ranges/subset.js","webpack://office-addin-taskpane/./node_modules/p-queue/dist/index.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/semver/functions/minor.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/semver/ranges/gtr.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/semver/functions/compare.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/semver/internal/identifiers.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/semver/functions/diff.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/semver/functions/major.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/semver/functions/gt.js","webpack://office-addin-taskpane/./node_modules/decamelize/index.js","webpack://office-addin-taskpane/./node_modules/p-queue/dist/lower-bound.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/retry/lib/retry.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/semver/ranges/to-comparators.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/p-retry/index.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/semver/functions/lte.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/semver/internal/constants.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/semver/functions/compare-build.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/semver/functions/valid.js","webpack://office-addin-taskpane/webpack/bootstrap","webpack://office-addin-taskpane/webpack/runtime/define property getters","webpack://office-addin-taskpane/webpack/runtime/global","webpack://office-addin-taskpane/webpack/runtime/hasOwnProperty shorthand","webpack://office-addin-taskpane/webpack/runtime/make namespace object","webpack://office-addin-taskpane/webpack/runtime/node module decorator","webpack://office-addin-taskpane/webpack/runtime/publicPath","webpack://office-addin-taskpane/webpack/runtime/jsonp chunk loading","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/internal/qs/formats.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/internal/qs/utils.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/internal/qs/stringify.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/version.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/_shims/registry.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/_shims/MultipartBody.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/_shims/index.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/_shims/web-runtime.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/error.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/internal/decoders/line.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/internal/stream-utils.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/streaming.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/uploads.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/core.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/resource.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/resources/completions.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/resources/chat/completions/messages.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/pagination.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/resources/chat/completions/completions.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/resources/chat/chat.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/resources/embeddings.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/resources/files.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/resources/images.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/resources/audio/speech.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/resources/audio/transcriptions.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/resources/audio/translations.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/resources/audio/audio.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/resources/moderations.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/resources/models.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/resources/fine-tuning/checkpoints/permissions.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/resources/fine-tuning/checkpoints/checkpoints.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/resources/fine-tuning/jobs/checkpoints.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/resources/fine-tuning/jobs/jobs.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/resources/fine-tuning/fine-tuning.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/resources/vector-stores/files.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/resources/vector-stores/file-batches.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/lib/Util.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/resources/vector-stores/vector-stores.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/resources/beta/assistants.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/lib/RunnableFunction.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/lib/chatCompletionUtils.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/lib/EventStream.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/lib/parser.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/lib/AbstractChatCompletionRunner.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/lib/ChatCompletionRunner.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/_vendor/partial-json-parser/parser.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/lib/ChatCompletionStream.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/lib/ChatCompletionStreamingRunner.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/resources/beta/chat/completions.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/resources/beta/chat/chat.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/resources/beta/realtime/sessions.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/resources/beta/realtime/transcription-sessions.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/resources/beta/realtime/realtime.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/lib/AssistantStream.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/resources/beta/threads/messages.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/resources/beta/threads/runs/steps.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/resources/beta/threads/runs/runs.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/resources/beta/threads/threads.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/resources/beta/beta.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/resources/batches.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/resources/uploads/parts.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/resources/uploads/uploads.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/lib/ResponsesParser.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/resources/responses/input-items.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/lib/responses/ResponseStream.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/index.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/resources/responses/responses.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/resources/evals/runs/output-items.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/resources/evals/runs/runs.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/resources/evals/evals.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/core/dist/utils/json.js","webpack://office-addin-taskpane/./node_modules/zod/lib/index.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/core/dist/load/map_keys.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/dist/load/serializable.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/dist/messages/content_blocks.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/dist/messages/base.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/dist/messages/tool.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/dist/messages/ai.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/dist/messages/chat.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/dist/messages/function.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/dist/messages/human.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/dist/messages/system.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/dist/errors/index.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/dist/tools/utils.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/dist/messages/utils.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/uuid/dist/esm-browser/rng.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/uuid/dist/esm-browser/native.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/uuid/dist/esm-browser/stringify.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/uuid/dist/esm-browser/v4.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/langsmith/dist/singletons/fetch.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/langsmith/dist/utils/async_caller.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/langsmith/dist/utils/messages.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/uuid/dist/esm-browser/regex.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/uuid/dist/esm-browser/validate.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/langsmith/dist/utils/_uuid.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/langsmith/dist/utils/warn.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/langsmith/dist/utils/prompts.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/langsmith/dist/utils/error.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/langsmith/dist/utils/fast-safe-stringify/index.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/langsmith/dist/client.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/langsmith/dist/utils/env.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/langsmith/dist/index.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/langsmith/dist/env.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/langsmith/dist/singletons/constants.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/langsmith/dist/run_trees.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/node_modules/langsmith/dist/singletons/traceable.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/dist/utils/fast-json-patch/src/helpers.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/dist/utils/fast-json-patch/src/core.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/dist/utils/fast-json-patch/src/duplex.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/dist/utils/env.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/dist/callbacks/base.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/dist/tracers/base.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/dist/tracers/console.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/dist/singletons/tracer.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/dist/tracers/tracer_langchain.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/dist/singletons/async_local_storage/globals.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/dist/singletons/callbacks.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/dist/singletons/async_local_storage/context.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/dist/callbacks/manager.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/dist/utils/callbacks.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/dist/singletons/async_local_storage/index.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/dist/runnables/config.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/dist/utils/signal.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/dist/utils/stream.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/dist/tracers/log_stream.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/dist/outputs.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/dist/tracers/event_stream.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/dist/utils/async_caller.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/dist/tracers/root_listener.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/dist/runnables/utils.js","webpack://office-addin-taskpane/./node_modules/zod-to-json-schema/dist/esm/Options.js","webpack://office-addin-taskpane/./node_modules/zod-to-json-schema/dist/esm/errorMessages.js","webpack://office-addin-taskpane/./node_modules/zod-to-json-schema/dist/esm/parsers/branded.js","webpack://office-addin-taskpane/./node_modules/zod-to-json-schema/dist/esm/parsers/date.js","webpack://office-addin-taskpane/./node_modules/zod-to-json-schema/dist/esm/parsers/string.js","webpack://office-addin-taskpane/./node_modules/zod-to-json-schema/dist/esm/parsers/record.js","webpack://office-addin-taskpane/./node_modules/zod-to-json-schema/dist/esm/parsers/union.js","webpack://office-addin-taskpane/./node_modules/zod-to-json-schema/dist/esm/parsers/object.js","webpack://office-addin-taskpane/./node_modules/zod-to-json-schema/dist/esm/parsers/readonly.js","webpack://office-addin-taskpane/./node_modules/zod-to-json-schema/dist/esm/selectParser.js","webpack://office-addin-taskpane/./node_modules/zod-to-json-schema/dist/esm/parsers/number.js","webpack://office-addin-taskpane/./node_modules/zod-to-json-schema/dist/esm/parsers/bigint.js","webpack://office-addin-taskpane/./node_modules/zod-to-json-schema/dist/esm/parsers/boolean.js","webpack://office-addin-taskpane/./node_modules/zod-to-json-schema/dist/esm/parsers/undefined.js","webpack://office-addin-taskpane/./node_modules/zod-to-json-schema/dist/esm/parsers/null.js","webpack://office-addin-taskpane/./node_modules/zod-to-json-schema/dist/esm/parsers/array.js","webpack://office-addin-taskpane/./node_modules/zod-to-json-schema/dist/esm/parsers/intersection.js","webpack://office-addin-taskpane/./node_modules/zod-to-json-schema/dist/esm/parsers/tuple.js","webpack://office-addin-taskpane/./node_modules/zod-to-json-schema/dist/esm/parsers/literal.js","webpack://office-addin-taskpane/./node_modules/zod-to-json-schema/dist/esm/parsers/enum.js","webpack://office-addin-taskpane/./node_modules/zod-to-json-schema/dist/esm/parsers/nativeEnum.js","webpack://office-addin-taskpane/./node_modules/zod-to-json-schema/dist/esm/parsers/nullable.js","webpack://office-addin-taskpane/./node_modules/zod-to-json-schema/dist/esm/parsers/optional.js","webpack://office-addin-taskpane/./node_modules/zod-to-json-schema/dist/esm/parsers/map.js","webpack://office-addin-taskpane/./node_modules/zod-to-json-schema/dist/esm/parsers/set.js","webpack://office-addin-taskpane/./node_modules/zod-to-json-schema/dist/esm/parsers/promise.js","webpack://office-addin-taskpane/./node_modules/zod-to-json-schema/dist/esm/parsers/never.js","webpack://office-addin-taskpane/./node_modules/zod-to-json-schema/dist/esm/parsers/effects.js","webpack://office-addin-taskpane/./node_modules/zod-to-json-schema/dist/esm/parsers/unknown.js","webpack://office-addin-taskpane/./node_modules/zod-to-json-schema/dist/esm/parsers/default.js","webpack://office-addin-taskpane/./node_modules/zod-to-json-schema/dist/esm/parsers/catch.js","webpack://office-addin-taskpane/./node_modules/zod-to-json-schema/dist/esm/parsers/pipeline.js","webpack://office-addin-taskpane/./node_modules/zod-to-json-schema/dist/esm/parseDef.js","webpack://office-addin-taskpane/./node_modules/zod-to-json-schema/dist/esm/zodToJsonSchema.js","webpack://office-addin-taskpane/./node_modules/zod-to-json-schema/dist/esm/Refs.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/dist/runnables/graph_mermaid.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/dist/runnables/graph.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/dist/runnables/iter.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/dist/runnables/base.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/dist/runnables/wrappers.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/dist/utils/js-sha1/hash.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/dist/caches/base.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/dist/prompt_values.js","webpack://office-addin-taskpane/./node_modules/js-tiktoken/dist/chunk-ZDNLBERF.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/dist/utils/tiktoken.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/dist/language_models/base.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/dist/runnables/passthrough.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/dist/utils/types/is_zod_schema.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/dist/language_models/chat_models.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/dist/output_parsers/base.js","webpack://office-addin-taskpane/./node_modules/@cfworker/json-schema/dist/esm/deep-compare-strict.js","webpack://office-addin-taskpane/./node_modules/@cfworker/json-schema/dist/esm/pointer.js","webpack://office-addin-taskpane/./node_modules/@cfworker/json-schema/dist/esm/dereference.js","webpack://office-addin-taskpane/./node_modules/@cfworker/json-schema/dist/esm/format.js","webpack://office-addin-taskpane/./node_modules/@cfworker/json-schema/dist/esm/types.js","webpack://office-addin-taskpane/./node_modules/@cfworker/json-schema/dist/esm/validate.js","webpack://office-addin-taskpane/./node_modules/@cfworker/json-schema/dist/esm/ucs2-length.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/dist/output_parsers/transform.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/dist/output_parsers/structured.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/dist/output_parsers/json.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/dist/output_parsers/openai_tools/json_output_tools_parsers.js","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/errorMessages.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/parsers/date.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/parsers/string.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/parsers/record.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/parsers/union.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/parsers/object.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/parsers/readonly.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/Options.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/parseDef.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/parsers/number.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/parsers/bigint.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/parsers/boolean.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/parsers/undefined.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/parsers/null.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/parsers/array.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/parsers/intersection.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/parsers/tuple.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/parsers/literal.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/parsers/enum.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/parsers/nativeEnum.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/parsers/nullable.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/parsers/optional.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/parsers/map.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/parsers/set.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/parsers/promise.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/parsers/never.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/parsers/effects.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/parsers/unknown.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/parsers/default.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/parsers/branded.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/parsers/catch.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/parsers/pipeline.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/util.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/helpers/zod.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/zodToJsonSchema.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/openai/node_modules/openai/_vendor/zod-to-json-schema/Refs.mjs","webpack://office-addin-taskpane/./node_modules/@langchain/core/dist/tools/types.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/dist/utils/function_calling.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/dist/utils/json_schema.js","webpack://office-addin-taskpane/./node_modules/@langchain/openai/dist/utils/errors.js","webpack://office-addin-taskpane/./node_modules/@langchain/openai/dist/utils/openai.js","webpack://office-addin-taskpane/./node_modules/@langchain/openai/dist/utils/openai-format-fndef.js","webpack://office-addin-taskpane/./node_modules/@langchain/openai/dist/chat_models.js","webpack://office-addin-taskpane/./node_modules/@langchain/openai/dist/utils/tools.js","webpack://office-addin-taskpane/./node_modules/@langchain/openai/dist/utils/azure.js","webpack://office-addin-taskpane/./node_modules/@langchain/core/dist/tools/index.js","webpack://office-addin-taskpane/./src/lib/llm.ts","webpack://office-addin-taskpane/./node_modules/@langchain/openai/dist/tools/dalle.js","webpack://office-addin-taskpane/./node_modules/marked/lib/marked.esm.js","webpack://office-addin-taskpane/./src/lib/local_storage.ts","webpack://office-addin-taskpane/./src/lib/word_insertion.ts","webpack://office-addin-taskpane/./src/taskpane/taskpane.ts","webpack://office-addin-taskpane/./src/taskpane/taskpane.html"],"sourcesContent":["const compare = require('./compare')\nconst gte = (a, b, loose) => compare(a, b, loose) >= 0\nmodule.exports = gte\n","const compare = require('./compare')\nconst lt = (a, b, loose) => compare(a, b, loose) < 0\nmodule.exports = lt\n","const Range = require('../classes/range')\nconst intersects = (r1, r2, options) => {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2, options)\n}\nmodule.exports = intersects\n","// parse out just the options we care about\nconst looseOption = Object.freeze({ loose: true })\nconst emptyOpts = Object.freeze({ })\nconst parseOptions = options => {\n  if (!options) {\n    return emptyOpts\n  }\n\n  if (typeof options !== 'object') {\n    return looseOption\n  }\n\n  return options\n}\nmodule.exports = parseOptions\n","function RetryOperation(timeouts, options) {\n  // Compatibility for the old (timeouts, retryForever) signature\n  if (typeof options === 'boolean') {\n    options = { forever: options };\n  }\n\n  this._originalTimeouts = JSON.parse(JSON.stringify(timeouts));\n  this._timeouts = timeouts;\n  this._options = options || {};\n  this._maxRetryTime = options && options.maxRetryTime || Infinity;\n  this._fn = null;\n  this._errors = [];\n  this._attempts = 1;\n  this._operationTimeout = null;\n  this._operationTimeoutCb = null;\n  this._timeout = null;\n  this._operationStart = null;\n  this._timer = null;\n\n  if (this._options.forever) {\n    this._cachedTimeouts = this._timeouts.slice(0);\n  }\n}\nmodule.exports = RetryOperation;\n\nRetryOperation.prototype.reset = function() {\n  this._attempts = 1;\n  this._timeouts = this._originalTimeouts.slice(0);\n}\n\nRetryOperation.prototype.stop = function() {\n  if (this._timeout) {\n    clearTimeout(this._timeout);\n  }\n  if (this._timer) {\n    clearTimeout(this._timer);\n  }\n\n  this._timeouts       = [];\n  this._cachedTimeouts = null;\n};\n\nRetryOperation.prototype.retry = function(err) {\n  if (this._timeout) {\n    clearTimeout(this._timeout);\n  }\n\n  if (!err) {\n    return false;\n  }\n  var currentTime = new Date().getTime();\n  if (err && currentTime - this._operationStart >= this._maxRetryTime) {\n    this._errors.push(err);\n    this._errors.unshift(new Error('RetryOperation timeout occurred'));\n    return false;\n  }\n\n  this._errors.push(err);\n\n  var timeout = this._timeouts.shift();\n  if (timeout === undefined) {\n    if (this._cachedTimeouts) {\n      // retry forever, only keep last error\n      this._errors.splice(0, this._errors.length - 1);\n      timeout = this._cachedTimeouts.slice(-1);\n    } else {\n      return false;\n    }\n  }\n\n  var self = this;\n  this._timer = setTimeout(function() {\n    self._attempts++;\n\n    if (self._operationTimeoutCb) {\n      self._timeout = setTimeout(function() {\n        self._operationTimeoutCb(self._attempts);\n      }, self._operationTimeout);\n\n      if (self._options.unref) {\n          self._timeout.unref();\n      }\n    }\n\n    self._fn(self._attempts);\n  }, timeout);\n\n  if (this._options.unref) {\n      this._timer.unref();\n  }\n\n  return true;\n};\n\nRetryOperation.prototype.attempt = function(fn, timeoutOps) {\n  this._fn = fn;\n\n  if (timeoutOps) {\n    if (timeoutOps.timeout) {\n      this._operationTimeout = timeoutOps.timeout;\n    }\n    if (timeoutOps.cb) {\n      this._operationTimeoutCb = timeoutOps.cb;\n    }\n  }\n\n  var self = this;\n  if (this._operationTimeoutCb) {\n    this._timeout = setTimeout(function() {\n      self._operationTimeoutCb();\n    }, self._operationTimeout);\n  }\n\n  this._operationStart = new Date().getTime();\n\n  this._fn(this._attempts);\n};\n\nRetryOperation.prototype.try = function(fn) {\n  console.log('Using RetryOperation.try() is deprecated');\n  this.attempt(fn);\n};\n\nRetryOperation.prototype.start = function(fn) {\n  console.log('Using RetryOperation.start() is deprecated');\n  this.attempt(fn);\n};\n\nRetryOperation.prototype.start = RetryOperation.prototype.try;\n\nRetryOperation.prototype.errors = function() {\n  return this._errors;\n};\n\nRetryOperation.prototype.attempts = function() {\n  return this._attempts;\n};\n\nRetryOperation.prototype.mainError = function() {\n  if (this._errors.length === 0) {\n    return null;\n  }\n\n  var counts = {};\n  var mainError = null;\n  var mainErrorCount = 0;\n\n  for (var i = 0; i < this._errors.length; i++) {\n    var error = this._errors[i];\n    var message = error.message;\n    var count = (counts[message] || 0) + 1;\n\n    counts[message] = count;\n\n    if (count >= mainErrorCount) {\n      mainError = error;\n      mainErrorCount = count;\n    }\n  }\n\n  return mainError;\n};\n","'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","const ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n\n  constructor (comp, options) {\n    options = parseOptions(options)\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    comp = comp.trim().split(/\\s+/).join(' ')\n    debug('comparator', comp, options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp', this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test', version, this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options)\n  }\n\n  intersects (comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value, options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value, options).test(comp.semver)\n    }\n\n    options = parseOptions(options)\n\n    // Special cases where nothing can possibly be lower\n    if (options.includePrerelease &&\n      (this.value === '<0.0.0-0' || comp.value === '<0.0.0-0')) {\n      return false\n    }\n    if (!options.includePrerelease &&\n      (this.value.startsWith('<0.0.0') || comp.value.startsWith('<0.0.0'))) {\n      return false\n    }\n\n    // Same direction increasing (> or >=)\n    if (this.operator.startsWith('>') && comp.operator.startsWith('>')) {\n      return true\n    }\n    // Same direction decreasing (< or <=)\n    if (this.operator.startsWith('<') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // same SemVer and both sides are inclusive (<= or >=)\n    if (\n      (this.semver.version === comp.semver.version) &&\n      this.operator.includes('=') && comp.operator.includes('=')) {\n      return true\n    }\n    // opposite directions less than\n    if (cmp(this.semver, '<', comp.semver, options) &&\n      this.operator.startsWith('>') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // opposite directions greater than\n    if (cmp(this.semver, '>', comp.semver, options) &&\n      this.operator.startsWith('<') && comp.operator.startsWith('>')) {\n      return true\n    }\n    return false\n  }\n}\n\nmodule.exports = Comparator\n\nconst parseOptions = require('../internal/parse-options')\nconst { safeRe: re, t } = require('../internal/re')\nconst cmp = require('../functions/cmp')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst Range = require('./range')\n","const SemVer = require('../classes/semver')\nconst patch = (a, loose) => new SemVer(a, loose).patch\nmodule.exports = patch\n","const compareBuild = require('./compare-build')\nconst sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose))\nmodule.exports = sort\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst gt = require('../functions/gt')\n\nconst minVersion = (range, loose) => {\n  range = new Range(range, loose)\n\n  let minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let setMin = null\n    comparators.forEach((comparator) => {\n      // Clone to avoid manipulating the comparator's semver object.\n      const compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!setMin || gt(compver, setMin)) {\n            setMin = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error(`Unexpected operation: ${comparator.operator}`)\n      }\n    })\n    if (setMin && (!minver || gt(minver, setMin))) {\n      minver = setMin\n    }\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\nmodule.exports = minVersion\n","const SemVer = require('../classes/semver')\nconst parse = (version, options, throwErrors = false) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    if (!throwErrors) {\n      return null\n    }\n    throw er\n  }\n}\n\nmodule.exports = parse\n","const SPACE_CHARACTERS = /\\s+/g\n\n// hoisted class for cyclic dependency\nclass Range {\n  constructor (range, options) {\n    options = parseOptions(options)\n\n    if (range instanceof Range) {\n      if (\n        range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease\n      ) {\n        return range\n      } else {\n        return new Range(range.raw, options)\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value\n      this.set = [[range]]\n      this.formatted = undefined\n      return this\n    }\n\n    this.options = options\n    this.loose = !!options.loose\n    this.includePrerelease = !!options.includePrerelease\n\n    // First reduce all whitespace as much as possible so we do not have to rely\n    // on potentially slow regexes like \\s*. This is then stored and used for\n    // future error messages as well.\n    this.raw = range.trim().replace(SPACE_CHARACTERS, ' ')\n\n    // First, split on ||\n    this.set = this.raw\n      .split('||')\n      // map the range to a 2d array of comparators\n      .map(r => this.parseRange(r.trim()))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range, which is allowed\n      // in loose mode, but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length)\n\n    if (!this.set.length) {\n      throw new TypeError(`Invalid SemVer Range: ${this.raw}`)\n    }\n\n    // if we have any that are not the null set, throw out null sets.\n    if (this.set.length > 1) {\n      // keep the first one, in case they're all null sets\n      const first = this.set[0]\n      this.set = this.set.filter(c => !isNullSet(c[0]))\n      if (this.set.length === 0) {\n        this.set = [first]\n      } else if (this.set.length > 1) {\n        // if we have any that are *, then the range is just *\n        for (const c of this.set) {\n          if (c.length === 1 && isAny(c[0])) {\n            this.set = [c]\n            break\n          }\n        }\n      }\n    }\n\n    this.formatted = undefined\n  }\n\n  get range () {\n    if (this.formatted === undefined) {\n      this.formatted = ''\n      for (let i = 0; i < this.set.length; i++) {\n        if (i > 0) {\n          this.formatted += '||'\n        }\n        const comps = this.set[i]\n        for (let k = 0; k < comps.length; k++) {\n          if (k > 0) {\n            this.formatted += ' '\n          }\n          this.formatted += comps[k].toString().trim()\n        }\n      }\n    }\n    return this.formatted\n  }\n\n  format () {\n    return this.range\n  }\n\n  toString () {\n    return this.range\n  }\n\n  parseRange (range) {\n    // memoize range parsing for performance.\n    // this is a very hot path, and fully deterministic.\n    const memoOpts =\n      (this.options.includePrerelease && FLAG_INCLUDE_PRERELEASE) |\n      (this.options.loose && FLAG_LOOSE)\n    const memoKey = memoOpts + ':' + range\n    const cached = cache.get(memoKey)\n    if (cached) {\n      return cached\n    }\n\n    const loose = this.options.loose\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))\n    debug('hyphen replace', range)\n\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n    debug('comparator trim', range)\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n    debug('tilde trim', range)\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n    debug('caret trim', range)\n\n    // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    let rangeList = range\n      .split(' ')\n      .map(comp => parseComparator(comp, this.options))\n      .join(' ')\n      .split(/\\s+/)\n      // >=0.0.0 is equivalent to *\n      .map(comp => replaceGTE0(comp, this.options))\n\n    if (loose) {\n      // in loose mode, throw out any that are not valid comparators\n      rangeList = rangeList.filter(comp => {\n        debug('loose invalid filter', comp, this.options)\n        return !!comp.match(re[t.COMPARATORLOOSE])\n      })\n    }\n    debug('range list', rangeList)\n\n    // if any comparators are the null set, then replace with JUST null set\n    // if more than one comparator, remove any * comparators\n    // also, don't include the same comparator more than once\n    const rangeMap = new Map()\n    const comparators = rangeList.map(comp => new Comparator(comp, this.options))\n    for (const comp of comparators) {\n      if (isNullSet(comp)) {\n        return [comp]\n      }\n      rangeMap.set(comp.value, comp)\n    }\n    if (rangeMap.size > 1 && rangeMap.has('')) {\n      rangeMap.delete('')\n    }\n\n    const result = [...rangeMap.values()]\n    cache.set(memoKey, result)\n    return result\n  }\n\n  intersects (range, options) {\n    if (!(range instanceof Range)) {\n      throw new TypeError('a Range is required')\n    }\n\n    return this.set.some((thisComparators) => {\n      return (\n        isSatisfiable(thisComparators, options) &&\n        range.set.some((rangeComparators) => {\n          return (\n            isSatisfiable(rangeComparators, options) &&\n            thisComparators.every((thisComparator) => {\n              return rangeComparators.every((rangeComparator) => {\n                return thisComparator.intersects(rangeComparator, options)\n              })\n            })\n          )\n        })\n      )\n    })\n  }\n\n  // if ANY of the sets match ALL of its comparators, then pass\n  test (version) {\n    if (!version) {\n      return false\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    for (let i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version, this.options)) {\n        return true\n      }\n    }\n    return false\n  }\n}\n\nmodule.exports = Range\n\nconst LRU = require('../internal/lrucache')\nconst cache = new LRU()\n\nconst parseOptions = require('../internal/parse-options')\nconst Comparator = require('./comparator')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst {\n  safeRe: re,\n  t,\n  comparatorTrimReplace,\n  tildeTrimReplace,\n  caretTrimReplace,\n} = require('../internal/re')\nconst { FLAG_INCLUDE_PRERELEASE, FLAG_LOOSE } = require('../internal/constants')\n\nconst isNullSet = c => c.value === '<0.0.0-0'\nconst isAny = c => c.value === ''\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options) => {\n  let result = true\n  const remainingComparators = comparators.slice()\n  let testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every((otherComparator) => {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options) => {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\n// ~0.0.1 --> >=0.0.1 <0.1.0-0\nconst replaceTildes = (comp, options) => {\n  return comp\n    .trim()\n    .split(/\\s+/)\n    .map((c) => replaceTilde(c, options))\n    .join(' ')\n}\n\nconst replaceTilde = (comp, options) => {\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('tilde', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = `>=${M}.${m}.${p}-${pr\n      } <${M}.${+m + 1}.0-0`\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = `>=${M}.${m}.${p\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\n// ^0.0.1 --> >=0.0.1 <0.0.2-0\n// ^0.1.0 --> >=0.1.0 <0.2.0-0\nconst replaceCarets = (comp, options) => {\n  return comp\n    .trim()\n    .split(/\\s+/)\n    .map((c) => replaceCaret(c, options))\n    .join(' ')\n}\n\nconst replaceCaret = (comp, options) => {\n  debug('caret', comp, options)\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  const z = options.includePrerelease ? '-0' : ''\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('caret', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\n      } else {\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p}-${pr\n        } <${+M + 1}.0.0-0`\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p\n        } <${+M + 1}.0.0-0`\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nconst replaceXRanges = (comp, options) => {\n  debug('replaceXRanges', comp, options)\n  return comp\n    .split(/\\s+/)\n    .map((c) => replaceXRange(c, options))\n    .join(' ')\n}\n\nconst replaceXRange = (comp, options) => {\n  comp = comp.trim()\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    const xM = isX(M)\n    const xm = xM || isX(m)\n    const xp = xm || isX(p)\n    const anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      if (gtlt === '<') {\n        pr = '-0'\n      }\n\n      ret = `${gtlt + M}.${m}.${p}${pr}`\n    } else if (xm) {\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\n    } else if (xp) {\n      ret = `>=${M}.${m}.0${pr\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options) => {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp\n    .trim()\n    .replace(re[t.STAR], '')\n}\n\nconst replaceGTE0 = (comp, options) => {\n  debug('replaceGTE0', comp, options)\n  return comp\n    .trim()\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\n// TODO build?\nconst hyphenReplace = incPr => ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr) => {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\n  } else if (isX(fp)) {\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\n  } else if (fpr) {\n    from = `>=${from}`\n  } else {\n    from = `>=${from}${incPr ? '-0' : ''}`\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = `<${+tM + 1}.0.0-0`\n  } else if (isX(tp)) {\n    to = `<${tM}.${+tm + 1}.0-0`\n  } else if (tpr) {\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\n  } else if (incPr) {\n    to = `<${tM}.${tm}.${+tp + 1}-0`\n  } else {\n    to = `<=${to}`\n  }\n\n  return `${from} ${to}`.trim()\n}\n\nconst testSet = (set, version, options) => {\n  for (let i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (let i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === Comparator.ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        const allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n","const compare = require('./compare')\nconst eq = (a, b, loose) => compare(a, b, loose) === 0\nmodule.exports = eq\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","const debug = require('../internal/debug')\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { safeRe: re, safeSrc: src, t } = require('../internal/re')\n\nconst parseOptions = require('../internal/parse-options')\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n        version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid version. Must be a string. Got type \"${typeof version}\".`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('build compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier, identifierBase) {\n    if (release.startsWith('pre')) {\n      if (!identifier && identifierBase === false) {\n        throw new Error('invalid increment argument: identifier is empty')\n      }\n      // Avoid an invalid semver results\n      if (identifier) {\n        const r = new RegExp(`^${this.options.loose ? src[t.PRERELEASELOOSE] : src[t.PRERELEASE]}$`)\n        const match = `-${identifier}`.match(r)\n        if (!match || match[1] !== identifier) {\n          throw new Error(`invalid identifier: ${identifier}`)\n        }\n      }\n    }\n\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier, identifierBase)\n        this.inc('pre', identifier, identifierBase)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier, identifierBase)\n        }\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'release':\n        if (this.prerelease.length === 0) {\n          throw new Error(`version ${this.raw} is not a prerelease`)\n        }\n        this.prerelease.length = 0\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre': {\n        const base = Number(identifierBase) ? 1 : 0\n\n        if (this.prerelease.length === 0) {\n          this.prerelease = [base]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            if (identifier === this.prerelease.join('.') && identifierBase === false) {\n              throw new Error('invalid increment argument: identifier already exists')\n            }\n            this.prerelease.push(base)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          let prerelease = [identifier, base]\n          if (identifierBase === false) {\n            prerelease = [identifier]\n          }\n          if (compareIdentifiers(this.prerelease[0], identifier) === 0) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = prerelease\n            }\n          } else {\n            this.prerelease = prerelease\n          }\n        }\n        break\n      }\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.raw = this.format()\n    if (this.build.length) {\n      this.raw += `+${this.build.join('.')}`\n    }\n    return this\n  }\n}\n\nmodule.exports = SemVer\n","const compareBuild = require('./compare-build')\nconst rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose))\nmodule.exports = rsort\n","const outside = require('./outside')\n// Determine if version is less than all the versions possible in the range\nconst ltr = (version, range, options) => outside(version, range, '<', options)\nmodule.exports = ltr\n","const SemVer = require('../classes/semver')\n\nconst inc = (version, release, options, identifier, identifierBase) => {\n  if (typeof (options) === 'string') {\n    identifierBase = identifier\n    identifier = options\n    options = undefined\n  }\n\n  try {\n    return new SemVer(\n      version instanceof SemVer ? version.version : version,\n      options\n    ).inc(release, identifier, identifierBase).version\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = inc\n","const parse = require('./parse')\nconst clean = (version, options) => {\n  const s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\nmodule.exports = clean\n","const compare = require('./compare')\nconst compareLoose = (a, b) => compare(a, b, true)\nmodule.exports = compareLoose\n","'use strict';\nmodule.exports = (promise, onFinally) => {\n\tonFinally = onFinally || (() => {});\n\n\treturn promise.then(\n\t\tval => new Promise(resolve => {\n\t\t\tresolve(onFinally());\n\t\t}).then(() => val),\n\t\terr => new Promise(resolve => {\n\t\t\tresolve(onFinally());\n\t\t}).then(() => {\n\t\t\tthrow err;\n\t\t})\n\t);\n};\n","const Range = require('../classes/range')\nconst satisfies = (version, range, options) => {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\nmodule.exports = satisfies\n","// given a set of versions and a range, create a \"simplified\" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one, return that.\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\nmodule.exports = (versions, range, options) => {\n  const set = []\n  let first = null\n  let prev = null\n  const v = versions.sort((a, b) => compare(a, b, options))\n  for (const version of v) {\n    const included = satisfies(version, range, options)\n    if (included) {\n      prev = version\n      if (!first) {\n        first = version\n      }\n    } else {\n      if (prev) {\n        set.push([first, prev])\n      }\n      prev = null\n      first = null\n    }\n  }\n  if (first) {\n    set.push([first, null])\n  }\n\n  const ranges = []\n  for (const [min, max] of set) {\n    if (min === max) {\n      ranges.push(min)\n    } else if (!max && min === v[0]) {\n      ranges.push('*')\n    } else if (!max) {\n      ranges.push(`>=${min}`)\n    } else if (min === v[0]) {\n      ranges.push(`<=${max}`)\n    } else {\n      ranges.push(`${min} - ${max}`)\n    }\n  }\n  const simplified = ranges.join(' || ')\n  const original = typeof range.raw === 'string' ? range.raw : String(range)\n  return simplified.length < original.length ? simplified : range\n}\n","'use strict';\n\nconst ANSI_BACKGROUND_OFFSET = 10;\n\nconst wrapAnsi256 = (offset = 0) => code => `\\u001B[${38 + offset};5;${code}m`;\n\nconst wrapAnsi16m = (offset = 0) => (red, green, blue) => `\\u001B[${38 + offset};2;${red};${green};${blue}m`;\n\nfunction assembleStyles() {\n\tconst codes = new Map();\n\tconst styles = {\n\t\tmodifier: {\n\t\t\treset: [0, 0],\n\t\t\t// 21 isn't widely supported and 22 does the same thing\n\t\t\tbold: [1, 22],\n\t\t\tdim: [2, 22],\n\t\t\titalic: [3, 23],\n\t\t\tunderline: [4, 24],\n\t\t\toverline: [53, 55],\n\t\t\tinverse: [7, 27],\n\t\t\thidden: [8, 28],\n\t\t\tstrikethrough: [9, 29]\n\t\t},\n\t\tcolor: {\n\t\t\tblack: [30, 39],\n\t\t\tred: [31, 39],\n\t\t\tgreen: [32, 39],\n\t\t\tyellow: [33, 39],\n\t\t\tblue: [34, 39],\n\t\t\tmagenta: [35, 39],\n\t\t\tcyan: [36, 39],\n\t\t\twhite: [37, 39],\n\n\t\t\t// Bright color\n\t\t\tblackBright: [90, 39],\n\t\t\tredBright: [91, 39],\n\t\t\tgreenBright: [92, 39],\n\t\t\tyellowBright: [93, 39],\n\t\t\tblueBright: [94, 39],\n\t\t\tmagentaBright: [95, 39],\n\t\t\tcyanBright: [96, 39],\n\t\t\twhiteBright: [97, 39]\n\t\t},\n\t\tbgColor: {\n\t\t\tbgBlack: [40, 49],\n\t\t\tbgRed: [41, 49],\n\t\t\tbgGreen: [42, 49],\n\t\t\tbgYellow: [43, 49],\n\t\t\tbgBlue: [44, 49],\n\t\t\tbgMagenta: [45, 49],\n\t\t\tbgCyan: [46, 49],\n\t\t\tbgWhite: [47, 49],\n\n\t\t\t// Bright color\n\t\t\tbgBlackBright: [100, 49],\n\t\t\tbgRedBright: [101, 49],\n\t\t\tbgGreenBright: [102, 49],\n\t\t\tbgYellowBright: [103, 49],\n\t\t\tbgBlueBright: [104, 49],\n\t\t\tbgMagentaBright: [105, 49],\n\t\t\tbgCyanBright: [106, 49],\n\t\t\tbgWhiteBright: [107, 49]\n\t\t}\n\t};\n\n\t// Alias bright black as gray (and grey)\n\tstyles.color.gray = styles.color.blackBright;\n\tstyles.bgColor.bgGray = styles.bgColor.bgBlackBright;\n\tstyles.color.grey = styles.color.blackBright;\n\tstyles.bgColor.bgGrey = styles.bgColor.bgBlackBright;\n\n\tfor (const [groupName, group] of Object.entries(styles)) {\n\t\tfor (const [styleName, style] of Object.entries(group)) {\n\t\t\tstyles[styleName] = {\n\t\t\t\topen: `\\u001B[${style[0]}m`,\n\t\t\t\tclose: `\\u001B[${style[1]}m`\n\t\t\t};\n\n\t\t\tgroup[styleName] = styles[styleName];\n\n\t\t\tcodes.set(style[0], style[1]);\n\t\t}\n\n\t\tObject.defineProperty(styles, groupName, {\n\t\t\tvalue: group,\n\t\t\tenumerable: false\n\t\t});\n\t}\n\n\tObject.defineProperty(styles, 'codes', {\n\t\tvalue: codes,\n\t\tenumerable: false\n\t});\n\n\tstyles.color.close = '\\u001B[39m';\n\tstyles.bgColor.close = '\\u001B[49m';\n\n\tstyles.color.ansi256 = wrapAnsi256();\n\tstyles.color.ansi16m = wrapAnsi16m();\n\tstyles.bgColor.ansi256 = wrapAnsi256(ANSI_BACKGROUND_OFFSET);\n\tstyles.bgColor.ansi16m = wrapAnsi16m(ANSI_BACKGROUND_OFFSET);\n\n\t// From https://github.com/Qix-/color-convert/blob/3f0e0d4e92e235796ccb17f6e85c72094a651f49/conversions.js\n\tObject.defineProperties(styles, {\n\t\trgbToAnsi256: {\n\t\t\tvalue: (red, green, blue) => {\n\t\t\t\t// We use the extended greyscale palette here, with the exception of\n\t\t\t\t// black and white. normal palette only has 4 greyscale shades.\n\t\t\t\tif (red === green && green === blue) {\n\t\t\t\t\tif (red < 8) {\n\t\t\t\t\t\treturn 16;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (red > 248) {\n\t\t\t\t\t\treturn 231;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Math.round(((red - 8) / 247) * 24) + 232;\n\t\t\t\t}\n\n\t\t\t\treturn 16 +\n\t\t\t\t\t(36 * Math.round(red / 255 * 5)) +\n\t\t\t\t\t(6 * Math.round(green / 255 * 5)) +\n\t\t\t\t\tMath.round(blue / 255 * 5);\n\t\t\t},\n\t\t\tenumerable: false\n\t\t},\n\t\thexToRgb: {\n\t\t\tvalue: hex => {\n\t\t\t\tconst matches = /(?<colorString>[a-f\\d]{6}|[a-f\\d]{3})/i.exec(hex.toString(16));\n\t\t\t\tif (!matches) {\n\t\t\t\t\treturn [0, 0, 0];\n\t\t\t\t}\n\n\t\t\t\tlet {colorString} = matches.groups;\n\n\t\t\t\tif (colorString.length === 3) {\n\t\t\t\t\tcolorString = colorString.split('').map(character => character + character).join('');\n\t\t\t\t}\n\n\t\t\t\tconst integer = Number.parseInt(colorString, 16);\n\n\t\t\t\treturn [\n\t\t\t\t\t(integer >> 16) & 0xFF,\n\t\t\t\t\t(integer >> 8) & 0xFF,\n\t\t\t\t\tinteger & 0xFF\n\t\t\t\t];\n\t\t\t},\n\t\t\tenumerable: false\n\t\t},\n\t\thexToAnsi256: {\n\t\t\tvalue: hex => styles.rgbToAnsi256(...styles.hexToRgb(hex)),\n\t\t\tenumerable: false\n\t\t}\n\t});\n\n\treturn styles;\n}\n\n// Make the export immutable\nObject.defineProperty(module, 'exports', {\n\tenumerable: true,\n\tget: assembleStyles\n});\n","module.exports = require('./lib/retry');","const parse = require('./parse')\nconst prerelease = (version, options) => {\n  const parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\nmodule.exports = prerelease\n","const SemVer = require('../classes/semver')\nconst Comparator = require('../classes/comparator')\nconst { ANY } = Comparator\nconst Range = require('../classes/range')\nconst satisfies = require('../functions/satisfies')\nconst gt = require('../functions/gt')\nconst lt = require('../functions/lt')\nconst lte = require('../functions/lte')\nconst gte = require('../functions/gte')\n\nconst outside = (version, range, hilo, options) => {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  let gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisfies the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let high = null\n    let low = null\n\n    comparators.forEach((comparator) => {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nmodule.exports = outside\n","const debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n","const compare = require('./compare')\nconst neq = (a, b, loose) => compare(a, b, loose) !== 0\nmodule.exports = neq\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst lower_bound_1 = require(\"./lower-bound\");\nclass PriorityQueue {\n    constructor() {\n        this._queue = [];\n    }\n    enqueue(run, options) {\n        options = Object.assign({ priority: 0 }, options);\n        const element = {\n            priority: options.priority,\n            run\n        };\n        if (this.size && this._queue[this.size - 1].priority >= options.priority) {\n            this._queue.push(element);\n            return;\n        }\n        const index = lower_bound_1.default(this._queue, element, (a, b) => b.priority - a.priority);\n        this._queue.splice(index, 0, element);\n    }\n    dequeue() {\n        const item = this._queue.shift();\n        return item === null || item === void 0 ? void 0 : item.run;\n    }\n    filter(options) {\n        return this._queue.filter((element) => element.priority === options.priority).map((element) => element.run);\n    }\n    get size() {\n        return this._queue.length;\n    }\n}\nexports.default = PriorityQueue;\n","const Range = require('../classes/range')\nconst validRange = (range, options) => {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = validRange\n","'use strict';\n\nconst pFinally = require('p-finally');\n\nclass TimeoutError extends Error {\n\tconstructor(message) {\n\t\tsuper(message);\n\t\tthis.name = 'TimeoutError';\n\t}\n}\n\nconst pTimeout = (promise, milliseconds, fallback) => new Promise((resolve, reject) => {\n\tif (typeof milliseconds !== 'number' || milliseconds < 0) {\n\t\tthrow new TypeError('Expected `milliseconds` to be a positive number');\n\t}\n\n\tif (milliseconds === Infinity) {\n\t\tresolve(promise);\n\t\treturn;\n\t}\n\n\tconst timer = setTimeout(() => {\n\t\tif (typeof fallback === 'function') {\n\t\t\ttry {\n\t\t\t\tresolve(fallback());\n\t\t\t} catch (error) {\n\t\t\t\treject(error);\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst message = typeof fallback === 'string' ? fallback : `Promise timed out after ${milliseconds} milliseconds`;\n\t\tconst timeoutError = fallback instanceof Error ? fallback : new TimeoutError(message);\n\n\t\tif (typeof promise.cancel === 'function') {\n\t\t\tpromise.cancel();\n\t\t}\n\n\t\treject(timeoutError);\n\t}, milliseconds);\n\n\t// TODO: Use native `finally` keyword when targeting Node.js 10\n\tpFinally(\n\t\t// eslint-disable-next-line promise/prefer-await-to-then\n\t\tpromise.then(resolve, reject),\n\t\t() => {\n\t\t\tclearTimeout(timer);\n\t\t}\n\t);\n});\n\nmodule.exports = pTimeout;\n// TODO: Remove this for the next major release\nmodule.exports.default = pTimeout;\n\nmodule.exports.TimeoutError = TimeoutError;\n","const {\n  MAX_SAFE_COMPONENT_LENGTH,\n  MAX_SAFE_BUILD_LENGTH,\n  MAX_LENGTH,\n} = require('./constants')\nconst debug = require('./debug')\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst safeRe = exports.safeRe = []\nconst src = exports.src = []\nconst safeSrc = exports.safeSrc = []\nconst t = exports.t = {}\nlet R = 0\n\nconst LETTERDASHNUMBER = '[a-zA-Z0-9-]'\n\n// Replace some greedy regex tokens to prevent regex dos issues. These regex are\n// used internally via the safeRe object since all inputs in this library get\n// normalized first to trim and collapse all extra whitespace. The original\n// regexes are exported for userland consumption and lower level usage. A\n// future breaking change could export the safer regex only with a note that\n// all input should have extra whitespace removed.\nconst safeRegexReplacements = [\n  ['\\\\s', 1],\n  ['\\\\d', MAX_LENGTH],\n  [LETTERDASHNUMBER, MAX_SAFE_BUILD_LENGTH],\n]\n\nconst makeSafeRegex = (value) => {\n  for (const [token, max] of safeRegexReplacements) {\n    value = value\n      .split(`${token}*`).join(`${token}{0,${max}}`)\n      .split(`${token}+`).join(`${token}{1,${max}}`)\n  }\n  return value\n}\n\nconst createToken = (name, value, isGlobal) => {\n  const safe = makeSafeRegex(value)\n  const index = R++\n  debug(name, index, value)\n  t[name] = index\n  src[index] = value\n  safeSrc[index] = safe\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n  safeRe[index] = new RegExp(safe, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '\\\\d+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', `\\\\d*[a-zA-Z-]${LETTERDASHNUMBER}*`)\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NUMERICIDENTIFIER]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NUMERICIDENTIFIERLOOSE]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', `${LETTERDASHNUMBER}+`)\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCEPLAIN', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?`)\ncreateToken('COERCE', `${src[t.COERCEPLAIN]}(?:$|[^\\\\d])`)\ncreateToken('COERCEFULL', src[t.COERCEPLAIN] +\n              `(?:${src[t.PRERELEASE]})?` +\n              `(?:${src[t.BUILD]})?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\ncreateToken('COERCERTLFULL', src[t.COERCEFULL], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0-0\\\\s*$')\n","const eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n","class LRUCache {\n  constructor () {\n    this.max = 1000\n    this.map = new Map()\n  }\n\n  get (key) {\n    const value = this.map.get(key)\n    if (value === undefined) {\n      return undefined\n    } else {\n      // Remove the key from the map and add it to the end\n      this.map.delete(key)\n      this.map.set(key, value)\n      return value\n    }\n  }\n\n  delete (key) {\n    return this.map.delete(key)\n  }\n\n  set (key, value) {\n    const deleted = this.delete(key)\n\n    if (!deleted && value !== undefined) {\n      // If cache is full, delete the least recently used item\n      if (this.map.size >= this.max) {\n        const firstKey = this.map.keys().next().value\n        this.delete(firstKey)\n      }\n\n      this.map.set(key, value)\n    }\n\n    return this\n  }\n}\n\nmodule.exports = LRUCache\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\n\nconst maxSatisfying = (versions, range, options) => {\n  let max = null\n  let maxSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\nmodule.exports = maxSatisfying\n","// just pre-load all the stuff that index.js lazily exports\nconst internalRe = require('./internal/re')\nconst constants = require('./internal/constants')\nconst SemVer = require('./classes/semver')\nconst identifiers = require('./internal/identifiers')\nconst parse = require('./functions/parse')\nconst valid = require('./functions/valid')\nconst clean = require('./functions/clean')\nconst inc = require('./functions/inc')\nconst diff = require('./functions/diff')\nconst major = require('./functions/major')\nconst minor = require('./functions/minor')\nconst patch = require('./functions/patch')\nconst prerelease = require('./functions/prerelease')\nconst compare = require('./functions/compare')\nconst rcompare = require('./functions/rcompare')\nconst compareLoose = require('./functions/compare-loose')\nconst compareBuild = require('./functions/compare-build')\nconst sort = require('./functions/sort')\nconst rsort = require('./functions/rsort')\nconst gt = require('./functions/gt')\nconst lt = require('./functions/lt')\nconst eq = require('./functions/eq')\nconst neq = require('./functions/neq')\nconst gte = require('./functions/gte')\nconst lte = require('./functions/lte')\nconst cmp = require('./functions/cmp')\nconst coerce = require('./functions/coerce')\nconst Comparator = require('./classes/comparator')\nconst Range = require('./classes/range')\nconst satisfies = require('./functions/satisfies')\nconst toComparators = require('./ranges/to-comparators')\nconst maxSatisfying = require('./ranges/max-satisfying')\nconst minSatisfying = require('./ranges/min-satisfying')\nconst minVersion = require('./ranges/min-version')\nconst validRange = require('./ranges/valid')\nconst outside = require('./ranges/outside')\nconst gtr = require('./ranges/gtr')\nconst ltr = require('./ranges/ltr')\nconst intersects = require('./ranges/intersects')\nconst simplifyRange = require('./ranges/simplify')\nconst subset = require('./ranges/subset')\nmodule.exports = {\n  parse,\n  valid,\n  clean,\n  inc,\n  diff,\n  major,\n  minor,\n  patch,\n  prerelease,\n  compare,\n  rcompare,\n  compareLoose,\n  compareBuild,\n  sort,\n  rsort,\n  gt,\n  lt,\n  eq,\n  neq,\n  gte,\n  lte,\n  cmp,\n  coerce,\n  Comparator,\n  Range,\n  satisfies,\n  toComparators,\n  maxSatisfying,\n  minSatisfying,\n  minVersion,\n  validRange,\n  outside,\n  gtr,\n  ltr,\n  intersects,\n  simplifyRange,\n  subset,\n  SemVer,\n  re: internalRe.re,\n  src: internalRe.src,\n  tokens: internalRe.t,\n  SEMVER_SPEC_VERSION: constants.SEMVER_SPEC_VERSION,\n  RELEASE_TYPES: constants.RELEASE_TYPES,\n  compareIdentifiers: identifiers.compareIdentifiers,\n  rcompareIdentifiers: identifiers.rcompareIdentifiers,\n}\n","const SemVer = require('../classes/semver')\nconst parse = require('./parse')\nconst { safeRe: re, t } = require('../internal/re')\n\nconst coerce = (version, options) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  let match = null\n  if (!options.rtl) {\n    match = version.match(options.includePrerelease ? re[t.COERCEFULL] : re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    // With includePrerelease option set, '1.2.3.4-rc' wants to coerce '2.3.4-rc', not '2.3.4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    const coerceRtlRegex = options.includePrerelease ? re[t.COERCERTLFULL] : re[t.COERCERTL]\n    let next\n    while ((next = coerceRtlRegex.exec(version)) &&\n        (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n            next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      coerceRtlRegex.lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    coerceRtlRegex.lastIndex = -1\n  }\n\n  if (match === null) {\n    return null\n  }\n\n  const major = match[2]\n  const minor = match[3] || '0'\n  const patch = match[4] || '0'\n  const prerelease = options.includePrerelease && match[5] ? `-${match[5]}` : ''\n  const build = options.includePrerelease && match[6] ? `+${match[6]}` : ''\n\n  return parse(`${major}.${minor}.${patch}${prerelease}${build}`, options)\n}\nmodule.exports = coerce\n","const compare = require('./compare')\nconst rcompare = (a, b, loose) => compare(b, a, loose)\nmodule.exports = rcompare\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst minSatisfying = (versions, range, options) => {\n  let min = null\n  let minSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\nmodule.exports = minSatisfying\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","const Range = require('../classes/range.js')\nconst Comparator = require('../classes/comparator.js')\nconst { ANY } = Comparator\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\n\n// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:\n// - Every simple range `r1, r2, ...` is a null set, OR\n// - Every simple range `r1, r2, ...` which is not a null set is a subset of\n//   some `R1, R2, ...`\n//\n// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:\n// - If c is only the ANY comparator\n//   - If C is only the ANY comparator, return true\n//   - Else if in prerelease mode, return false\n//   - else replace c with `[>=0.0.0]`\n// - If C is only the ANY comparator\n//   - if in prerelease mode, return true\n//   - else replace C with `[>=0.0.0]`\n// - Let EQ be the set of = comparators in c\n// - If EQ is more than one, return true (null set)\n// - Let GT be the highest > or >= comparator in c\n// - Let LT be the lowest < or <= comparator in c\n// - If GT and LT, and GT.semver > LT.semver, return true (null set)\n// - If any C is a = range, and GT or LT are set, return false\n// - If EQ\n//   - If GT, and EQ does not satisfy GT, return true (null set)\n//   - If LT, and EQ does not satisfy LT, return true (null set)\n//   - If EQ satisfies every C, return true\n//   - Else return false\n// - If GT\n//   - If GT.semver is lower than any > or >= comp in C, return false\n//   - If GT is >=, and GT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the GT.semver tuple, return false\n// - If LT\n//   - If LT.semver is greater than any < or <= comp in C, return false\n//   - If LT is <=, and LT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the LT.semver tuple, return false\n// - Else return true\n\nconst subset = (sub, dom, options = {}) => {\n  if (sub === dom) {\n    return true\n  }\n\n  sub = new Range(sub, options)\n  dom = new Range(dom, options)\n  let sawNonNull = false\n\n  OUTER: for (const simpleSub of sub.set) {\n    for (const simpleDom of dom.set) {\n      const isSub = simpleSubset(simpleSub, simpleDom, options)\n      sawNonNull = sawNonNull || isSub !== null\n      if (isSub) {\n        continue OUTER\n      }\n    }\n    // the null set is a subset of everything, but null simple ranges in\n    // a complex range should be ignored.  so if we saw a non-null range,\n    // then we know this isn't a subset, but if EVERY simple range was null,\n    // then it is a subset.\n    if (sawNonNull) {\n      return false\n    }\n  }\n  return true\n}\n\nconst minimumVersionWithPreRelease = [new Comparator('>=0.0.0-0')]\nconst minimumVersion = [new Comparator('>=0.0.0')]\n\nconst simpleSubset = (sub, dom, options) => {\n  if (sub === dom) {\n    return true\n  }\n\n  if (sub.length === 1 && sub[0].semver === ANY) {\n    if (dom.length === 1 && dom[0].semver === ANY) {\n      return true\n    } else if (options.includePrerelease) {\n      sub = minimumVersionWithPreRelease\n    } else {\n      sub = minimumVersion\n    }\n  }\n\n  if (dom.length === 1 && dom[0].semver === ANY) {\n    if (options.includePrerelease) {\n      return true\n    } else {\n      dom = minimumVersion\n    }\n  }\n\n  const eqSet = new Set()\n  let gt, lt\n  for (const c of sub) {\n    if (c.operator === '>' || c.operator === '>=') {\n      gt = higherGT(gt, c, options)\n    } else if (c.operator === '<' || c.operator === '<=') {\n      lt = lowerLT(lt, c, options)\n    } else {\n      eqSet.add(c.semver)\n    }\n  }\n\n  if (eqSet.size > 1) {\n    return null\n  }\n\n  let gtltComp\n  if (gt && lt) {\n    gtltComp = compare(gt.semver, lt.semver, options)\n    if (gtltComp > 0) {\n      return null\n    } else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<=')) {\n      return null\n    }\n  }\n\n  // will iterate one or zero times\n  for (const eq of eqSet) {\n    if (gt && !satisfies(eq, String(gt), options)) {\n      return null\n    }\n\n    if (lt && !satisfies(eq, String(lt), options)) {\n      return null\n    }\n\n    for (const c of dom) {\n      if (!satisfies(eq, String(c), options)) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  let higher, lower\n  let hasDomLT, hasDomGT\n  // if the subset has a prerelease, we need a comparator in the superset\n  // with the same tuple and a prerelease, or it's not a subset\n  let needDomLTPre = lt &&\n    !options.includePrerelease &&\n    lt.semver.prerelease.length ? lt.semver : false\n  let needDomGTPre = gt &&\n    !options.includePrerelease &&\n    gt.semver.prerelease.length ? gt.semver : false\n  // exception: <1.2.3-0 is the same as <1.2.3\n  if (needDomLTPre && needDomLTPre.prerelease.length === 1 &&\n      lt.operator === '<' && needDomLTPre.prerelease[0] === 0) {\n    needDomLTPre = false\n  }\n\n  for (const c of dom) {\n    hasDomGT = hasDomGT || c.operator === '>' || c.operator === '>='\n    hasDomLT = hasDomLT || c.operator === '<' || c.operator === '<='\n    if (gt) {\n      if (needDomGTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomGTPre.major &&\n            c.semver.minor === needDomGTPre.minor &&\n            c.semver.patch === needDomGTPre.patch) {\n          needDomGTPre = false\n        }\n      }\n      if (c.operator === '>' || c.operator === '>=') {\n        higher = higherGT(gt, c, options)\n        if (higher === c && higher !== gt) {\n          return false\n        }\n      } else if (gt.operator === '>=' && !satisfies(gt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (lt) {\n      if (needDomLTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomLTPre.major &&\n            c.semver.minor === needDomLTPre.minor &&\n            c.semver.patch === needDomLTPre.patch) {\n          needDomLTPre = false\n        }\n      }\n      if (c.operator === '<' || c.operator === '<=') {\n        lower = lowerLT(lt, c, options)\n        if (lower === c && lower !== lt) {\n          return false\n        }\n      } else if (lt.operator === '<=' && !satisfies(lt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (!c.operator && (lt || gt) && gtltComp !== 0) {\n      return false\n    }\n  }\n\n  // if there was a < or >, and nothing in the dom, then must be false\n  // UNLESS it was limited by another range in the other direction.\n  // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0\n  if (gt && hasDomLT && !lt && gtltComp !== 0) {\n    return false\n  }\n\n  if (lt && hasDomGT && !gt && gtltComp !== 0) {\n    return false\n  }\n\n  // we needed a prerelease range in a specific tuple, but didn't get one\n  // then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0,\n  // because it includes prereleases in the 1.2.3 tuple\n  if (needDomGTPre || needDomLTPre) {\n    return false\n  }\n\n  return true\n}\n\n// >=1.2.3 is lower than >1.2.3\nconst higherGT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp > 0 ? a\n    : comp < 0 ? b\n    : b.operator === '>' && a.operator === '>=' ? b\n    : a\n}\n\n// <=1.2.3 is higher than <1.2.3\nconst lowerLT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp < 0 ? a\n    : comp > 0 ? b\n    : b.operator === '<' && a.operator === '<=' ? b\n    : a\n}\n\nmodule.exports = subset\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst EventEmitter = require(\"eventemitter3\");\nconst p_timeout_1 = require(\"p-timeout\");\nconst priority_queue_1 = require(\"./priority-queue\");\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst empty = () => { };\nconst timeoutError = new p_timeout_1.TimeoutError();\n/**\nPromise queue with concurrency control.\n*/\nclass PQueue extends EventEmitter {\n    constructor(options) {\n        var _a, _b, _c, _d;\n        super();\n        this._intervalCount = 0;\n        this._intervalEnd = 0;\n        this._pendingCount = 0;\n        this._resolveEmpty = empty;\n        this._resolveIdle = empty;\n        // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n        options = Object.assign({ carryoverConcurrencyCount: false, intervalCap: Infinity, interval: 0, concurrency: Infinity, autoStart: true, queueClass: priority_queue_1.default }, options);\n        if (!(typeof options.intervalCap === 'number' && options.intervalCap >= 1)) {\n            throw new TypeError(`Expected \\`intervalCap\\` to be a number from 1 and up, got \\`${(_b = (_a = options.intervalCap) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : ''}\\` (${typeof options.intervalCap})`);\n        }\n        if (options.interval === undefined || !(Number.isFinite(options.interval) && options.interval >= 0)) {\n            throw new TypeError(`Expected \\`interval\\` to be a finite number >= 0, got \\`${(_d = (_c = options.interval) === null || _c === void 0 ? void 0 : _c.toString()) !== null && _d !== void 0 ? _d : ''}\\` (${typeof options.interval})`);\n        }\n        this._carryoverConcurrencyCount = options.carryoverConcurrencyCount;\n        this._isIntervalIgnored = options.intervalCap === Infinity || options.interval === 0;\n        this._intervalCap = options.intervalCap;\n        this._interval = options.interval;\n        this._queue = new options.queueClass();\n        this._queueClass = options.queueClass;\n        this.concurrency = options.concurrency;\n        this._timeout = options.timeout;\n        this._throwOnTimeout = options.throwOnTimeout === true;\n        this._isPaused = options.autoStart === false;\n    }\n    get _doesIntervalAllowAnother() {\n        return this._isIntervalIgnored || this._intervalCount < this._intervalCap;\n    }\n    get _doesConcurrentAllowAnother() {\n        return this._pendingCount < this._concurrency;\n    }\n    _next() {\n        this._pendingCount--;\n        this._tryToStartAnother();\n        this.emit('next');\n    }\n    _resolvePromises() {\n        this._resolveEmpty();\n        this._resolveEmpty = empty;\n        if (this._pendingCount === 0) {\n            this._resolveIdle();\n            this._resolveIdle = empty;\n            this.emit('idle');\n        }\n    }\n    _onResumeInterval() {\n        this._onInterval();\n        this._initializeIntervalIfNeeded();\n        this._timeoutId = undefined;\n    }\n    _isIntervalPaused() {\n        const now = Date.now();\n        if (this._intervalId === undefined) {\n            const delay = this._intervalEnd - now;\n            if (delay < 0) {\n                // Act as the interval was done\n                // We don't need to resume it here because it will be resumed on line 160\n                this._intervalCount = (this._carryoverConcurrencyCount) ? this._pendingCount : 0;\n            }\n            else {\n                // Act as the interval is pending\n                if (this._timeoutId === undefined) {\n                    this._timeoutId = setTimeout(() => {\n                        this._onResumeInterval();\n                    }, delay);\n                }\n                return true;\n            }\n        }\n        return false;\n    }\n    _tryToStartAnother() {\n        if (this._queue.size === 0) {\n            // We can clear the interval (\"pause\")\n            // Because we can redo it later (\"resume\")\n            if (this._intervalId) {\n                clearInterval(this._intervalId);\n            }\n            this._intervalId = undefined;\n            this._resolvePromises();\n            return false;\n        }\n        if (!this._isPaused) {\n            const canInitializeInterval = !this._isIntervalPaused();\n            if (this._doesIntervalAllowAnother && this._doesConcurrentAllowAnother) {\n                const job = this._queue.dequeue();\n                if (!job) {\n                    return false;\n                }\n                this.emit('active');\n                job();\n                if (canInitializeInterval) {\n                    this._initializeIntervalIfNeeded();\n                }\n                return true;\n            }\n        }\n        return false;\n    }\n    _initializeIntervalIfNeeded() {\n        if (this._isIntervalIgnored || this._intervalId !== undefined) {\n            return;\n        }\n        this._intervalId = setInterval(() => {\n            this._onInterval();\n        }, this._interval);\n        this._intervalEnd = Date.now() + this._interval;\n    }\n    _onInterval() {\n        if (this._intervalCount === 0 && this._pendingCount === 0 && this._intervalId) {\n            clearInterval(this._intervalId);\n            this._intervalId = undefined;\n        }\n        this._intervalCount = this._carryoverConcurrencyCount ? this._pendingCount : 0;\n        this._processQueue();\n    }\n    /**\n    Executes all queued functions until it reaches the limit.\n    */\n    _processQueue() {\n        // eslint-disable-next-line no-empty\n        while (this._tryToStartAnother()) { }\n    }\n    get concurrency() {\n        return this._concurrency;\n    }\n    set concurrency(newConcurrency) {\n        if (!(typeof newConcurrency === 'number' && newConcurrency >= 1)) {\n            throw new TypeError(`Expected \\`concurrency\\` to be a number from 1 and up, got \\`${newConcurrency}\\` (${typeof newConcurrency})`);\n        }\n        this._concurrency = newConcurrency;\n        this._processQueue();\n    }\n    /**\n    Adds a sync or async task to the queue. Always returns a promise.\n    */\n    async add(fn, options = {}) {\n        return new Promise((resolve, reject) => {\n            const run = async () => {\n                this._pendingCount++;\n                this._intervalCount++;\n                try {\n                    const operation = (this._timeout === undefined && options.timeout === undefined) ? fn() : p_timeout_1.default(Promise.resolve(fn()), (options.timeout === undefined ? this._timeout : options.timeout), () => {\n                        if (options.throwOnTimeout === undefined ? this._throwOnTimeout : options.throwOnTimeout) {\n                            reject(timeoutError);\n                        }\n                        return undefined;\n                    });\n                    resolve(await operation);\n                }\n                catch (error) {\n                    reject(error);\n                }\n                this._next();\n            };\n            this._queue.enqueue(run, options);\n            this._tryToStartAnother();\n            this.emit('add');\n        });\n    }\n    /**\n    Same as `.add()`, but accepts an array of sync or async functions.\n\n    @returns A promise that resolves when all functions are resolved.\n    */\n    async addAll(functions, options) {\n        return Promise.all(functions.map(async (function_) => this.add(function_, options)));\n    }\n    /**\n    Start (or resume) executing enqueued tasks within concurrency limit. No need to call this if queue is not paused (via `options.autoStart = false` or by `.pause()` method.)\n    */\n    start() {\n        if (!this._isPaused) {\n            return this;\n        }\n        this._isPaused = false;\n        this._processQueue();\n        return this;\n    }\n    /**\n    Put queue execution on hold.\n    */\n    pause() {\n        this._isPaused = true;\n    }\n    /**\n    Clear the queue.\n    */\n    clear() {\n        this._queue = new this._queueClass();\n    }\n    /**\n    Can be called multiple times. Useful if you for example add additional items at a later time.\n\n    @returns A promise that settles when the queue becomes empty.\n    */\n    async onEmpty() {\n        // Instantly resolve if the queue is empty\n        if (this._queue.size === 0) {\n            return;\n        }\n        return new Promise(resolve => {\n            const existingResolve = this._resolveEmpty;\n            this._resolveEmpty = () => {\n                existingResolve();\n                resolve();\n            };\n        });\n    }\n    /**\n    The difference with `.onEmpty` is that `.onIdle` guarantees that all work from the queue has finished. `.onEmpty` merely signals that the queue is empty, but it could mean that some promises haven't completed yet.\n\n    @returns A promise that settles when the queue becomes empty, and all promises have completed; `queue.size === 0 && queue.pending === 0`.\n    */\n    async onIdle() {\n        // Instantly resolve if none pending and if nothing else is queued\n        if (this._pendingCount === 0 && this._queue.size === 0) {\n            return;\n        }\n        return new Promise(resolve => {\n            const existingResolve = this._resolveIdle;\n            this._resolveIdle = () => {\n                existingResolve();\n                resolve();\n            };\n        });\n    }\n    /**\n    Size of the queue.\n    */\n    get size() {\n        return this._queue.size;\n    }\n    /**\n    Size of the queue, filtered by the given options.\n\n    For example, this can be used to find the number of items remaining in the queue with a specific priority level.\n    */\n    sizeBy(options) {\n        // eslint-disable-next-line unicorn/no-fn-reference-in-iterator\n        return this._queue.filter(options).length;\n    }\n    /**\n    Number of pending promises.\n    */\n    get pending() {\n        return this._pendingCount;\n    }\n    /**\n    Whether the queue is currently paused.\n    */\n    get isPaused() {\n        return this._isPaused;\n    }\n    get timeout() {\n        return this._timeout;\n    }\n    /**\n    Set the timeout for future operations.\n    */\n    set timeout(milliseconds) {\n        this._timeout = milliseconds;\n    }\n}\nexports.default = PQueue;\n","const SemVer = require('../classes/semver')\nconst minor = (a, loose) => new SemVer(a, loose).minor\nmodule.exports = minor\n","// Determine if version is greater than all the versions possible in the range.\nconst outside = require('./outside')\nconst gtr = (version, range, options) => outside(version, range, '>', options)\nmodule.exports = gtr\n","const SemVer = require('../classes/semver')\nconst compare = (a, b, loose) =>\n  new SemVer(a, loose).compare(new SemVer(b, loose))\n\nmodule.exports = compare\n","const numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers,\n}\n","const parse = require('./parse.js')\n\nconst diff = (version1, version2) => {\n  const v1 = parse(version1, null, true)\n  const v2 = parse(version2, null, true)\n  const comparison = v1.compare(v2)\n\n  if (comparison === 0) {\n    return null\n  }\n\n  const v1Higher = comparison > 0\n  const highVersion = v1Higher ? v1 : v2\n  const lowVersion = v1Higher ? v2 : v1\n  const highHasPre = !!highVersion.prerelease.length\n  const lowHasPre = !!lowVersion.prerelease.length\n\n  if (lowHasPre && !highHasPre) {\n    // Going from prerelease -> no prerelease requires some special casing\n\n    // If the low version has only a major, then it will always be a major\n    // Some examples:\n    // 1.0.0-1 -> 1.0.0\n    // 1.0.0-1 -> 1.1.1\n    // 1.0.0-1 -> 2.0.0\n    if (!lowVersion.patch && !lowVersion.minor) {\n      return 'major'\n    }\n\n    // If the main part has no difference\n    if (lowVersion.compareMain(highVersion) === 0) {\n      if (lowVersion.minor && !lowVersion.patch) {\n        return 'minor'\n      }\n      return 'patch'\n    }\n  }\n\n  // add the `pre` prefix if we are going to a prerelease version\n  const prefix = highHasPre ? 'pre' : ''\n\n  if (v1.major !== v2.major) {\n    return prefix + 'major'\n  }\n\n  if (v1.minor !== v2.minor) {\n    return prefix + 'minor'\n  }\n\n  if (v1.patch !== v2.patch) {\n    return prefix + 'patch'\n  }\n\n  // high and low are preleases\n  return 'prerelease'\n}\n\nmodule.exports = diff\n","const SemVer = require('../classes/semver')\nconst major = (a, loose) => new SemVer(a, loose).major\nmodule.exports = major\n","const compare = require('./compare')\nconst gt = (a, b, loose) => compare(a, b, loose) > 0\nmodule.exports = gt\n","'use strict';\nmodule.exports = function (str, sep) {\n\tif (typeof str !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\tsep = typeof sep === 'undefined' ? '_' : sep;\n\n\treturn str\n\t\t.replace(/([a-z\\d])([A-Z])/g, '$1' + sep + '$2')\n\t\t.replace(/([A-Z]+)([A-Z][a-z\\d]+)/g, '$1' + sep + '$2')\n\t\t.toLowerCase();\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Port of lower_bound from https://en.cppreference.com/w/cpp/algorithm/lower_bound\n// Used to compute insertion index to keep queue sorted after insertion\nfunction lowerBound(array, value, comparator) {\n    let first = 0;\n    let count = array.length;\n    while (count > 0) {\n        const step = (count / 2) | 0;\n        let it = first + step;\n        if (comparator(array[it], value) <= 0) {\n            first = ++it;\n            count -= step + 1;\n        }\n        else {\n            count = step;\n        }\n    }\n    return first;\n}\nexports.default = lowerBound;\n","var RetryOperation = require('./retry_operation');\n\nexports.operation = function(options) {\n  var timeouts = exports.timeouts(options);\n  return new RetryOperation(timeouts, {\n      forever: options && (options.forever || options.retries === Infinity),\n      unref: options && options.unref,\n      maxRetryTime: options && options.maxRetryTime\n  });\n};\n\nexports.timeouts = function(options) {\n  if (options instanceof Array) {\n    return [].concat(options);\n  }\n\n  var opts = {\n    retries: 10,\n    factor: 2,\n    minTimeout: 1 * 1000,\n    maxTimeout: Infinity,\n    randomize: false\n  };\n  for (var key in options) {\n    opts[key] = options[key];\n  }\n\n  if (opts.minTimeout > opts.maxTimeout) {\n    throw new Error('minTimeout is greater than maxTimeout');\n  }\n\n  var timeouts = [];\n  for (var i = 0; i < opts.retries; i++) {\n    timeouts.push(this.createTimeout(i, opts));\n  }\n\n  if (options && options.forever && !timeouts.length) {\n    timeouts.push(this.createTimeout(i, opts));\n  }\n\n  // sort the array numerically ascending\n  timeouts.sort(function(a,b) {\n    return a - b;\n  });\n\n  return timeouts;\n};\n\nexports.createTimeout = function(attempt, opts) {\n  var random = (opts.randomize)\n    ? (Math.random() + 1)\n    : 1;\n\n  var timeout = Math.round(random * Math.max(opts.minTimeout, 1) * Math.pow(opts.factor, attempt));\n  timeout = Math.min(timeout, opts.maxTimeout);\n\n  return timeout;\n};\n\nexports.wrap = function(obj, options, methods) {\n  if (options instanceof Array) {\n    methods = options;\n    options = null;\n  }\n\n  if (!methods) {\n    methods = [];\n    for (var key in obj) {\n      if (typeof obj[key] === 'function') {\n        methods.push(key);\n      }\n    }\n  }\n\n  for (var i = 0; i < methods.length; i++) {\n    var method   = methods[i];\n    var original = obj[method];\n\n    obj[method] = function retryWrapper(original) {\n      var op       = exports.operation(options);\n      var args     = Array.prototype.slice.call(arguments, 1);\n      var callback = args.pop();\n\n      args.push(function(err) {\n        if (op.retry(err)) {\n          return;\n        }\n        if (err) {\n          arguments[0] = op.mainError();\n        }\n        callback.apply(this, arguments);\n      });\n\n      op.attempt(function() {\n        original.apply(obj, args);\n      });\n    }.bind(obj, original);\n    obj[method].options = options;\n  }\n};\n","const Range = require('../classes/range')\n\n// Mostly just for testing and legacy API reasons\nconst toComparators = (range, options) =>\n  new Range(range, options).set\n    .map(comp => comp.map(c => c.value).join(' ').trim().split(' '))\n\nmodule.exports = toComparators\n","'use strict';\nconst retry = require('retry');\n\nconst networkErrorMsgs = [\n\t'Failed to fetch', // Chrome\n\t'NetworkError when attempting to fetch resource.', // Firefox\n\t'The Internet connection appears to be offline.', // Safari\n\t'Network request failed' // `cross-fetch`\n];\n\nclass AbortError extends Error {\n\tconstructor(message) {\n\t\tsuper();\n\n\t\tif (message instanceof Error) {\n\t\t\tthis.originalError = message;\n\t\t\t({message} = message);\n\t\t} else {\n\t\t\tthis.originalError = new Error(message);\n\t\t\tthis.originalError.stack = this.stack;\n\t\t}\n\n\t\tthis.name = 'AbortError';\n\t\tthis.message = message;\n\t}\n}\n\nconst decorateErrorWithCounts = (error, attemptNumber, options) => {\n\t// Minus 1 from attemptNumber because the first attempt does not count as a retry\n\tconst retriesLeft = options.retries - (attemptNumber - 1);\n\n\terror.attemptNumber = attemptNumber;\n\terror.retriesLeft = retriesLeft;\n\treturn error;\n};\n\nconst isNetworkError = errorMessage => networkErrorMsgs.includes(errorMessage);\n\nconst pRetry = (input, options) => new Promise((resolve, reject) => {\n\toptions = {\n\t\tonFailedAttempt: () => {},\n\t\tretries: 10,\n\t\t...options\n\t};\n\n\tconst operation = retry.operation(options);\n\n\toperation.attempt(async attemptNumber => {\n\t\ttry {\n\t\t\tresolve(await input(attemptNumber));\n\t\t} catch (error) {\n\t\t\tif (!(error instanceof Error)) {\n\t\t\t\treject(new TypeError(`Non-error was thrown: \"${error}\". You should only throw errors.`));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (error instanceof AbortError) {\n\t\t\t\toperation.stop();\n\t\t\t\treject(error.originalError);\n\t\t\t} else if (error instanceof TypeError && !isNetworkError(error.message)) {\n\t\t\t\toperation.stop();\n\t\t\t\treject(error);\n\t\t\t} else {\n\t\t\t\tdecorateErrorWithCounts(error, attemptNumber, options);\n\n\t\t\t\ttry {\n\t\t\t\t\tawait options.onFailedAttempt(error);\n\t\t\t\t} catch (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!operation.retry(error)) {\n\t\t\t\t\treject(operation.mainError());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n});\n\nmodule.exports = pRetry;\n// TODO: remove this in the next major version\nmodule.exports.default = pRetry;\n\nmodule.exports.AbortError = AbortError;\n","const compare = require('./compare')\nconst lte = (a, b, loose) => compare(a, b, loose) <= 0\nmodule.exports = lte\n","// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n/* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\n// Max safe length for a build identifier. The max length minus 6 characters for\n// the shortest version with a build 0.0.0+BUILD.\nconst MAX_SAFE_BUILD_LENGTH = MAX_LENGTH - 6\n\nconst RELEASE_TYPES = [\n  'major',\n  'premajor',\n  'minor',\n  'preminor',\n  'patch',\n  'prepatch',\n  'prerelease',\n]\n\nmodule.exports = {\n  MAX_LENGTH,\n  MAX_SAFE_COMPONENT_LENGTH,\n  MAX_SAFE_BUILD_LENGTH,\n  MAX_SAFE_INTEGER,\n  RELEASE_TYPES,\n  SEMVER_SPEC_VERSION,\n  FLAG_INCLUDE_PRERELEASE: 0b001,\n  FLAG_LOOSE: 0b010,\n}\n","const SemVer = require('../classes/semver')\nconst compareBuild = (a, b, loose) => {\n  const versionA = new SemVer(a, loose)\n  const versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\nmodule.exports = compareBuild\n","const parse = require('./parse')\nconst valid = (version, options) => {\n  const v = parse(version, options)\n  return v ? v.version : null\n}\nmodule.exports = valid\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t926: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","export const default_format = 'RFC3986';\nexport const formatters = {\n    RFC1738: (v) => String(v).replace(/%20/g, '+'),\n    RFC3986: (v) => String(v),\n};\nexport const RFC1738 = 'RFC1738';\nexport const RFC3986 = 'RFC3986';\n//# sourceMappingURL=formats.mjs.map","import { RFC1738 } from \"./formats.mjs\";\nconst has = Object.prototype.hasOwnProperty;\nconst is_array = Array.isArray;\nconst hex_table = (() => {\n    const array = [];\n    for (let i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n    return array;\n})();\nfunction compact_queue(queue) {\n    while (queue.length > 1) {\n        const item = queue.pop();\n        if (!item)\n            continue;\n        const obj = item.obj[item.prop];\n        if (is_array(obj)) {\n            const compacted = [];\n            for (let j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n            // @ts-ignore\n            item.obj[item.prop] = compacted;\n        }\n    }\n}\nfunction array_to_object(source, options) {\n    const obj = options && options.plainObjects ? Object.create(null) : {};\n    for (let i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n    return obj;\n}\nexport function merge(target, source, options = {}) {\n    if (!source) {\n        return target;\n    }\n    if (typeof source !== 'object') {\n        if (is_array(target)) {\n            target.push(source);\n        }\n        else if (target && typeof target === 'object') {\n            if ((options && (options.plainObjects || options.allowPrototypes)) ||\n                !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        }\n        else {\n            return [target, source];\n        }\n        return target;\n    }\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n    let mergeTarget = target;\n    if (is_array(target) && !is_array(source)) {\n        // @ts-ignore\n        mergeTarget = array_to_object(target, options);\n    }\n    if (is_array(target) && is_array(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                const targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                }\n                else {\n                    target.push(item);\n                }\n            }\n            else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n    return Object.keys(source).reduce(function (acc, key) {\n        const value = source[key];\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        }\n        else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n}\nexport function assign_single_source(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n}\nexport function decode(str, _, charset) {\n    const strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    }\n    catch (e) {\n        return strWithoutPlus;\n    }\n}\nconst limit = 1024;\nexport const encode = (str, _defaultEncoder, charset, _kind, format) => {\n    // This code was originally written by Brian White for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n    let string = str;\n    if (typeof str === 'symbol') {\n        string = Symbol.prototype.toString.call(str);\n    }\n    else if (typeof str !== 'string') {\n        string = String(str);\n    }\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n    let out = '';\n    for (let j = 0; j < string.length; j += limit) {\n        const segment = string.length >= limit ? string.slice(j, j + limit) : string;\n        const arr = [];\n        for (let i = 0; i < segment.length; ++i) {\n            let c = segment.charCodeAt(i);\n            if (c === 0x2d || // -\n                c === 0x2e || // .\n                c === 0x5f || // _\n                c === 0x7e || // ~\n                (c >= 0x30 && c <= 0x39) || // 0-9\n                (c >= 0x41 && c <= 0x5a) || // a-z\n                (c >= 0x61 && c <= 0x7a) || // A-Z\n                (format === RFC1738 && (c === 0x28 || c === 0x29)) // ( )\n            ) {\n                arr[arr.length] = segment.charAt(i);\n                continue;\n            }\n            if (c < 0x80) {\n                arr[arr.length] = hex_table[c];\n                continue;\n            }\n            if (c < 0x800) {\n                arr[arr.length] = hex_table[0xc0 | (c >> 6)] + hex_table[0x80 | (c & 0x3f)];\n                continue;\n            }\n            if (c < 0xd800 || c >= 0xe000) {\n                arr[arr.length] =\n                    hex_table[0xe0 | (c >> 12)] + hex_table[0x80 | ((c >> 6) & 0x3f)] + hex_table[0x80 | (c & 0x3f)];\n                continue;\n            }\n            i += 1;\n            c = 0x10000 + (((c & 0x3ff) << 10) | (segment.charCodeAt(i) & 0x3ff));\n            arr[arr.length] =\n                hex_table[0xf0 | (c >> 18)] +\n                    hex_table[0x80 | ((c >> 12) & 0x3f)] +\n                    hex_table[0x80 | ((c >> 6) & 0x3f)] +\n                    hex_table[0x80 | (c & 0x3f)];\n        }\n        out += arr.join('');\n    }\n    return out;\n};\nexport function compact(value) {\n    const queue = [{ obj: { o: value }, prop: 'o' }];\n    const refs = [];\n    for (let i = 0; i < queue.length; ++i) {\n        const item = queue[i];\n        // @ts-ignore\n        const obj = item.obj[item.prop];\n        const keys = Object.keys(obj);\n        for (let j = 0; j < keys.length; ++j) {\n            const key = keys[j];\n            const val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n    compact_queue(queue);\n    return value;\n}\nexport function is_regexp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n}\nexport function is_buffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n}\nexport function combine(a, b) {\n    return [].concat(a, b);\n}\nexport function maybe_map(val, fn) {\n    if (is_array(val)) {\n        const mapped = [];\n        for (let i = 0; i < val.length; i += 1) {\n            mapped.push(fn(val[i]));\n        }\n        return mapped;\n    }\n    return fn(val);\n}\n//# sourceMappingURL=utils.mjs.map","import { encode, is_buffer, maybe_map } from \"./utils.mjs\";\nimport { default_format, formatters } from \"./formats.mjs\";\nconst has = Object.prototype.hasOwnProperty;\nconst array_prefix_generators = {\n    brackets(prefix) {\n        return String(prefix) + '[]';\n    },\n    comma: 'comma',\n    indices(prefix, key) {\n        return String(prefix) + '[' + key + ']';\n    },\n    repeat(prefix) {\n        return String(prefix);\n    },\n};\nconst is_array = Array.isArray;\nconst push = Array.prototype.push;\nconst push_to_array = function (arr, value_or_array) {\n    push.apply(arr, is_array(value_or_array) ? value_or_array : [value_or_array]);\n};\nconst to_ISO = Date.prototype.toISOString;\nconst defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    allowEmptyArrays: false,\n    arrayFormat: 'indices',\n    charset: 'utf-8',\n    charsetSentinel: false,\n    delimiter: '&',\n    encode: true,\n    encodeDotInKeys: false,\n    encoder: encode,\n    encodeValuesOnly: false,\n    format: default_format,\n    formatter: formatters[default_format],\n    /** @deprecated */\n    indices: false,\n    serializeDate(date) {\n        return to_ISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false,\n};\nfunction is_non_nullish_primitive(v) {\n    return (typeof v === 'string' ||\n        typeof v === 'number' ||\n        typeof v === 'boolean' ||\n        typeof v === 'symbol' ||\n        typeof v === 'bigint');\n}\nconst sentinel = {};\nfunction inner_stringify(object, prefix, generateArrayPrefix, commaRoundTrip, allowEmptyArrays, strictNullHandling, skipNulls, encodeDotInKeys, encoder, filter, sort, allowDots, serializeDate, format, formatter, encodeValuesOnly, charset, sideChannel) {\n    let obj = object;\n    let tmp_sc = sideChannel;\n    let step = 0;\n    let find_flag = false;\n    while ((tmp_sc = tmp_sc.get(sentinel)) !== void undefined && !find_flag) {\n        // Where object last appeared in the ref tree\n        const pos = tmp_sc.get(object);\n        step += 1;\n        if (typeof pos !== 'undefined') {\n            if (pos === step) {\n                throw new RangeError('Cyclic object value');\n            }\n            else {\n                find_flag = true; // Break while\n            }\n        }\n        if (typeof tmp_sc.get(sentinel) === 'undefined') {\n            step = 0;\n        }\n    }\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    }\n    else if (obj instanceof Date) {\n        obj = serializeDate?.(obj);\n    }\n    else if (generateArrayPrefix === 'comma' && is_array(obj)) {\n        obj = maybe_map(obj, function (value) {\n            if (value instanceof Date) {\n                return serializeDate?.(value);\n            }\n            return value;\n        });\n    }\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ?\n                // @ts-expect-error\n                encoder(prefix, defaults.encoder, charset, 'key', format)\n                : prefix;\n        }\n        obj = '';\n    }\n    if (is_non_nullish_primitive(obj) || is_buffer(obj)) {\n        if (encoder) {\n            const key_value = encodeValuesOnly ? prefix\n                // @ts-expect-error\n                : encoder(prefix, defaults.encoder, charset, 'key', format);\n            return [\n                formatter?.(key_value) +\n                    '=' +\n                    // @ts-expect-error\n                    formatter?.(encoder(obj, defaults.encoder, charset, 'value', format)),\n            ];\n        }\n        return [formatter?.(prefix) + '=' + formatter?.(String(obj))];\n    }\n    const values = [];\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n    let obj_keys;\n    if (generateArrayPrefix === 'comma' && is_array(obj)) {\n        // we need to join elements in\n        if (encodeValuesOnly && encoder) {\n            // @ts-expect-error values only\n            obj = maybe_map(obj, encoder);\n        }\n        obj_keys = [{ value: obj.length > 0 ? obj.join(',') || null : void undefined }];\n    }\n    else if (is_array(filter)) {\n        obj_keys = filter;\n    }\n    else {\n        const keys = Object.keys(obj);\n        obj_keys = sort ? keys.sort(sort) : keys;\n    }\n    const encoded_prefix = encodeDotInKeys ? String(prefix).replace(/\\./g, '%2E') : String(prefix);\n    const adjusted_prefix = commaRoundTrip && is_array(obj) && obj.length === 1 ? encoded_prefix + '[]' : encoded_prefix;\n    if (allowEmptyArrays && is_array(obj) && obj.length === 0) {\n        return adjusted_prefix + '[]';\n    }\n    for (let j = 0; j < obj_keys.length; ++j) {\n        const key = obj_keys[j];\n        const value = \n        // @ts-ignore\n        typeof key === 'object' && typeof key.value !== 'undefined' ? key.value : obj[key];\n        if (skipNulls && value === null) {\n            continue;\n        }\n        // @ts-ignore\n        const encoded_key = allowDots && encodeDotInKeys ? key.replace(/\\./g, '%2E') : key;\n        const key_prefix = is_array(obj) ?\n            typeof generateArrayPrefix === 'function' ?\n                generateArrayPrefix(adjusted_prefix, encoded_key)\n                : adjusted_prefix\n            : adjusted_prefix + (allowDots ? '.' + encoded_key : '[' + encoded_key + ']');\n        sideChannel.set(object, step);\n        const valueSideChannel = new WeakMap();\n        valueSideChannel.set(sentinel, sideChannel);\n        push_to_array(values, inner_stringify(value, key_prefix, generateArrayPrefix, commaRoundTrip, allowEmptyArrays, strictNullHandling, skipNulls, encodeDotInKeys, \n        // @ts-ignore\n        generateArrayPrefix === 'comma' && encodeValuesOnly && is_array(obj) ? null : encoder, filter, sort, allowDots, serializeDate, format, formatter, encodeValuesOnly, charset, valueSideChannel));\n    }\n    return values;\n}\nfunction normalize_stringify_options(opts = defaults) {\n    if (typeof opts.allowEmptyArrays !== 'undefined' && typeof opts.allowEmptyArrays !== 'boolean') {\n        throw new TypeError('`allowEmptyArrays` option can only be `true` or `false`, when provided');\n    }\n    if (typeof opts.encodeDotInKeys !== 'undefined' && typeof opts.encodeDotInKeys !== 'boolean') {\n        throw new TypeError('`encodeDotInKeys` option can only be `true` or `false`, when provided');\n    }\n    if (opts.encoder !== null && typeof opts.encoder !== 'undefined' && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n    const charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n    let format = default_format;\n    if (typeof opts.format !== 'undefined') {\n        if (!has.call(formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    const formatter = formatters[format];\n    let filter = defaults.filter;\n    if (typeof opts.filter === 'function' || is_array(opts.filter)) {\n        filter = opts.filter;\n    }\n    let arrayFormat;\n    if (opts.arrayFormat && opts.arrayFormat in array_prefix_generators) {\n        arrayFormat = opts.arrayFormat;\n    }\n    else if ('indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    }\n    else {\n        arrayFormat = defaults.arrayFormat;\n    }\n    if ('commaRoundTrip' in opts && typeof opts.commaRoundTrip !== 'boolean') {\n        throw new TypeError('`commaRoundTrip` must be a boolean, or absent');\n    }\n    const allowDots = typeof opts.allowDots === 'undefined' ?\n        !!opts.encodeDotInKeys === true ?\n            true\n            : defaults.allowDots\n        : !!opts.allowDots;\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        // @ts-ignore\n        allowDots: allowDots,\n        allowEmptyArrays: typeof opts.allowEmptyArrays === 'boolean' ? !!opts.allowEmptyArrays : defaults.allowEmptyArrays,\n        arrayFormat: arrayFormat,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        commaRoundTrip: !!opts.commaRoundTrip,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encodeDotInKeys: typeof opts.encodeDotInKeys === 'boolean' ? opts.encodeDotInKeys : defaults.encodeDotInKeys,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        format: format,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        // @ts-ignore\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling,\n    };\n}\nexport function stringify(object, opts = {}) {\n    let obj = object;\n    const options = normalize_stringify_options(opts);\n    let obj_keys;\n    let filter;\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    }\n    else if (is_array(options.filter)) {\n        filter = options.filter;\n        obj_keys = filter;\n    }\n    const keys = [];\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n    const generateArrayPrefix = array_prefix_generators[options.arrayFormat];\n    const commaRoundTrip = generateArrayPrefix === 'comma' && options.commaRoundTrip;\n    if (!obj_keys) {\n        obj_keys = Object.keys(obj);\n    }\n    if (options.sort) {\n        obj_keys.sort(options.sort);\n    }\n    const sideChannel = new WeakMap();\n    for (let i = 0; i < obj_keys.length; ++i) {\n        const key = obj_keys[i];\n        if (options.skipNulls && obj[key] === null) {\n            continue;\n        }\n        push_to_array(keys, inner_stringify(obj[key], key, \n        // @ts-expect-error\n        generateArrayPrefix, commaRoundTrip, options.allowEmptyArrays, options.strictNullHandling, options.skipNulls, options.encodeDotInKeys, options.encode ? options.encoder : null, options.filter, options.sort, options.allowDots, options.serializeDate, options.format, options.formatter, options.encodeValuesOnly, options.charset, sideChannel));\n    }\n    const joined = keys.join(options.delimiter);\n    let prefix = options.addQueryPrefix === true ? '?' : '';\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        }\n        else {\n            // encodeURIComponent('✓')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n    return joined.length > 0 ? prefix + joined : '';\n}\n//# sourceMappingURL=stringify.mjs.map","export const VERSION = '4.96.0'; // x-release-please-version\n//# sourceMappingURL=version.mjs.map","export let auto = false;\nexport let kind = undefined;\nexport let fetch = undefined;\nexport let Request = undefined;\nexport let Response = undefined;\nexport let Headers = undefined;\nexport let FormData = undefined;\nexport let Blob = undefined;\nexport let File = undefined;\nexport let ReadableStream = undefined;\nexport let getMultipartRequestOptions = undefined;\nexport let getDefaultAgent = undefined;\nexport let fileFromPath = undefined;\nexport let isFsReadStream = undefined;\nexport function setShims(shims, options = { auto: false }) {\n    if (auto) {\n        throw new Error(`you must \\`import 'openai/shims/${shims.kind}'\\` before importing anything else from openai`);\n    }\n    if (kind) {\n        throw new Error(`can't \\`import 'openai/shims/${shims.kind}'\\` after \\`import 'openai/shims/${kind}'\\``);\n    }\n    auto = options.auto;\n    kind = shims.kind;\n    fetch = shims.fetch;\n    Request = shims.Request;\n    Response = shims.Response;\n    Headers = shims.Headers;\n    FormData = shims.FormData;\n    Blob = shims.Blob;\n    File = shims.File;\n    ReadableStream = shims.ReadableStream;\n    getMultipartRequestOptions = shims.getMultipartRequestOptions;\n    getDefaultAgent = shims.getDefaultAgent;\n    fileFromPath = shims.fileFromPath;\n    isFsReadStream = shims.isFsReadStream;\n}\n//# sourceMappingURL=registry.mjs.map","/**\n * Disclaimer: modules in _shims aren't intended to be imported by SDK users.\n */\nexport class MultipartBody {\n    constructor(body) {\n        this.body = body;\n    }\n    get [Symbol.toStringTag]() {\n        return 'MultipartBody';\n    }\n}\n//# sourceMappingURL=MultipartBody.mjs.map","/**\n * Disclaimer: modules in _shims aren't intended to be imported by SDK users.\n */\nimport * as shims from './registry.mjs';\nimport * as auto from 'openai/_shims/auto/runtime';\nexport const init = () => {\n  if (!shims.kind) shims.setShims(auto.getRuntime(), { auto: true });\n};\nexport * from './registry.mjs';\n\ninit();\n","import { MultipartBody } from \"./MultipartBody.mjs\";\nexport function getRuntime({ manuallyImported } = {}) {\n    const recommendation = manuallyImported ?\n        `You may need to use polyfills`\n        : `Add one of these imports before your first \\`import … from 'openai'\\`:\n- \\`import 'openai/shims/node'\\` (if you're running on Node)\n- \\`import 'openai/shims/web'\\` (otherwise)\n`;\n    let _fetch, _Request, _Response, _Headers;\n    try {\n        // @ts-ignore\n        _fetch = fetch;\n        // @ts-ignore\n        _Request = Request;\n        // @ts-ignore\n        _Response = Response;\n        // @ts-ignore\n        _Headers = Headers;\n    }\n    catch (error) {\n        throw new Error(`this environment is missing the following Web Fetch API type: ${error.message}. ${recommendation}`);\n    }\n    return {\n        kind: 'web',\n        fetch: _fetch,\n        Request: _Request,\n        Response: _Response,\n        Headers: _Headers,\n        FormData: \n        // @ts-ignore\n        typeof FormData !== 'undefined' ? FormData : (class FormData {\n            // @ts-ignore\n            constructor() {\n                throw new Error(`file uploads aren't supported in this environment yet as 'FormData' is undefined. ${recommendation}`);\n            }\n        }),\n        Blob: typeof Blob !== 'undefined' ? Blob : (class Blob {\n            constructor() {\n                throw new Error(`file uploads aren't supported in this environment yet as 'Blob' is undefined. ${recommendation}`);\n            }\n        }),\n        File: \n        // @ts-ignore\n        typeof File !== 'undefined' ? File : (class File {\n            // @ts-ignore\n            constructor() {\n                throw new Error(`file uploads aren't supported in this environment yet as 'File' is undefined. ${recommendation}`);\n            }\n        }),\n        ReadableStream: \n        // @ts-ignore\n        typeof ReadableStream !== 'undefined' ? ReadableStream : (class ReadableStream {\n            // @ts-ignore\n            constructor() {\n                throw new Error(`streaming isn't supported in this environment yet as 'ReadableStream' is undefined. ${recommendation}`);\n            }\n        }),\n        getMultipartRequestOptions: async (\n        // @ts-ignore\n        form, opts) => ({\n            ...opts,\n            body: new MultipartBody(form),\n        }),\n        getDefaultAgent: (url) => undefined,\n        fileFromPath: () => {\n            throw new Error('The `fileFromPath` function is only supported in Node. See the README for more details: https://www.github.com/openai/openai-node#file-uploads');\n        },\n        isFsReadStream: (value) => false,\n    };\n}\n//# sourceMappingURL=web-runtime.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { castToError } from \"./core.mjs\";\nexport class OpenAIError extends Error {\n}\nexport class APIError extends OpenAIError {\n    constructor(status, error, message, headers) {\n        super(`${APIError.makeMessage(status, error, message)}`);\n        this.status = status;\n        this.headers = headers;\n        this.request_id = headers?.['x-request-id'];\n        this.error = error;\n        const data = error;\n        this.code = data?.['code'];\n        this.param = data?.['param'];\n        this.type = data?.['type'];\n    }\n    static makeMessage(status, error, message) {\n        const msg = error?.message ?\n            typeof error.message === 'string' ?\n                error.message\n                : JSON.stringify(error.message)\n            : error ? JSON.stringify(error)\n                : message;\n        if (status && msg) {\n            return `${status} ${msg}`;\n        }\n        if (status) {\n            return `${status} status code (no body)`;\n        }\n        if (msg) {\n            return msg;\n        }\n        return '(no status code or body)';\n    }\n    static generate(status, errorResponse, message, headers) {\n        if (!status || !headers) {\n            return new APIConnectionError({ message, cause: castToError(errorResponse) });\n        }\n        const error = errorResponse?.['error'];\n        if (status === 400) {\n            return new BadRequestError(status, error, message, headers);\n        }\n        if (status === 401) {\n            return new AuthenticationError(status, error, message, headers);\n        }\n        if (status === 403) {\n            return new PermissionDeniedError(status, error, message, headers);\n        }\n        if (status === 404) {\n            return new NotFoundError(status, error, message, headers);\n        }\n        if (status === 409) {\n            return new ConflictError(status, error, message, headers);\n        }\n        if (status === 422) {\n            return new UnprocessableEntityError(status, error, message, headers);\n        }\n        if (status === 429) {\n            return new RateLimitError(status, error, message, headers);\n        }\n        if (status >= 500) {\n            return new InternalServerError(status, error, message, headers);\n        }\n        return new APIError(status, error, message, headers);\n    }\n}\nexport class APIUserAbortError extends APIError {\n    constructor({ message } = {}) {\n        super(undefined, undefined, message || 'Request was aborted.', undefined);\n    }\n}\nexport class APIConnectionError extends APIError {\n    constructor({ message, cause }) {\n        super(undefined, undefined, message || 'Connection error.', undefined);\n        // in some environments the 'cause' property is already declared\n        // @ts-ignore\n        if (cause)\n            this.cause = cause;\n    }\n}\nexport class APIConnectionTimeoutError extends APIConnectionError {\n    constructor({ message } = {}) {\n        super({ message: message ?? 'Request timed out.' });\n    }\n}\nexport class BadRequestError extends APIError {\n}\nexport class AuthenticationError extends APIError {\n}\nexport class PermissionDeniedError extends APIError {\n}\nexport class NotFoundError extends APIError {\n}\nexport class ConflictError extends APIError {\n}\nexport class UnprocessableEntityError extends APIError {\n}\nexport class RateLimitError extends APIError {\n}\nexport class InternalServerError extends APIError {\n}\nexport class LengthFinishReasonError extends OpenAIError {\n    constructor() {\n        super(`Could not parse response content as the length limit was reached`);\n    }\n}\nexport class ContentFilterFinishReasonError extends OpenAIError {\n    constructor() {\n        super(`Could not parse response content as the request was rejected by the content filter`);\n    }\n}\n//# sourceMappingURL=error.mjs.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _LineDecoder_carriageReturnIndex;\nimport { OpenAIError } from \"../../error.mjs\";\n/**\n * A re-implementation of httpx's `LineDecoder` in Python that handles incrementally\n * reading lines from text.\n *\n * https://github.com/encode/httpx/blob/920333ea98118e9cf617f246905d7b202510941c/httpx/_decoders.py#L258\n */\nexport class LineDecoder {\n    constructor() {\n        _LineDecoder_carriageReturnIndex.set(this, void 0);\n        this.buffer = new Uint8Array();\n        __classPrivateFieldSet(this, _LineDecoder_carriageReturnIndex, null, \"f\");\n    }\n    decode(chunk) {\n        if (chunk == null) {\n            return [];\n        }\n        const binaryChunk = chunk instanceof ArrayBuffer ? new Uint8Array(chunk)\n            : typeof chunk === 'string' ? new TextEncoder().encode(chunk)\n                : chunk;\n        let newData = new Uint8Array(this.buffer.length + binaryChunk.length);\n        newData.set(this.buffer);\n        newData.set(binaryChunk, this.buffer.length);\n        this.buffer = newData;\n        const lines = [];\n        let patternIndex;\n        while ((patternIndex = findNewlineIndex(this.buffer, __classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\"))) != null) {\n            if (patternIndex.carriage && __classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\") == null) {\n                // skip until we either get a corresponding `\\n`, a new `\\r` or nothing\n                __classPrivateFieldSet(this, _LineDecoder_carriageReturnIndex, patternIndex.index, \"f\");\n                continue;\n            }\n            // we got double \\r or \\rtext\\n\n            if (__classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\") != null &&\n                (patternIndex.index !== __classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\") + 1 || patternIndex.carriage)) {\n                lines.push(this.decodeText(this.buffer.slice(0, __classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\") - 1)));\n                this.buffer = this.buffer.slice(__classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\"));\n                __classPrivateFieldSet(this, _LineDecoder_carriageReturnIndex, null, \"f\");\n                continue;\n            }\n            const endIndex = __classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\") !== null ? patternIndex.preceding - 1 : patternIndex.preceding;\n            const line = this.decodeText(this.buffer.slice(0, endIndex));\n            lines.push(line);\n            this.buffer = this.buffer.slice(patternIndex.index);\n            __classPrivateFieldSet(this, _LineDecoder_carriageReturnIndex, null, \"f\");\n        }\n        return lines;\n    }\n    decodeText(bytes) {\n        if (bytes == null)\n            return '';\n        if (typeof bytes === 'string')\n            return bytes;\n        // Node:\n        if (typeof Buffer !== 'undefined') {\n            if (bytes instanceof Buffer) {\n                return bytes.toString();\n            }\n            if (bytes instanceof Uint8Array) {\n                return Buffer.from(bytes).toString();\n            }\n            throw new OpenAIError(`Unexpected: received non-Uint8Array (${bytes.constructor.name}) stream chunk in an environment with a global \"Buffer\" defined, which this library assumes to be Node. Please report this error.`);\n        }\n        // Browser\n        if (typeof TextDecoder !== 'undefined') {\n            if (bytes instanceof Uint8Array || bytes instanceof ArrayBuffer) {\n                this.textDecoder ?? (this.textDecoder = new TextDecoder('utf8'));\n                return this.textDecoder.decode(bytes);\n            }\n            throw new OpenAIError(`Unexpected: received non-Uint8Array/ArrayBuffer (${bytes.constructor.name}) in a web platform. Please report this error.`);\n        }\n        throw new OpenAIError(`Unexpected: neither Buffer nor TextDecoder are available as globals. Please report this error.`);\n    }\n    flush() {\n        if (!this.buffer.length) {\n            return [];\n        }\n        return this.decode('\\n');\n    }\n}\n_LineDecoder_carriageReturnIndex = new WeakMap();\n// prettier-ignore\nLineDecoder.NEWLINE_CHARS = new Set(['\\n', '\\r']);\nLineDecoder.NEWLINE_REGEXP = /\\r\\n|[\\n\\r]/g;\n/**\n * This function searches the buffer for the end patterns, (\\r or \\n)\n * and returns an object with the index preceding the matched newline and the\n * index after the newline char. `null` is returned if no new line is found.\n *\n * ```ts\n * findNewLineIndex('abc\\ndef') -> { preceding: 2, index: 3 }\n * ```\n */\nfunction findNewlineIndex(buffer, startIndex) {\n    const newline = 0x0a; // \\n\n    const carriage = 0x0d; // \\r\n    for (let i = startIndex ?? 0; i < buffer.length; i++) {\n        if (buffer[i] === newline) {\n            return { preceding: i, index: i + 1, carriage: false };\n        }\n        if (buffer[i] === carriage) {\n            return { preceding: i, index: i + 1, carriage: true };\n        }\n    }\n    return null;\n}\nexport function findDoubleNewlineIndex(buffer) {\n    // This function searches the buffer for the end patterns (\\r\\r, \\n\\n, \\r\\n\\r\\n)\n    // and returns the index right after the first occurrence of any pattern,\n    // or -1 if none of the patterns are found.\n    const newline = 0x0a; // \\n\n    const carriage = 0x0d; // \\r\n    for (let i = 0; i < buffer.length - 1; i++) {\n        if (buffer[i] === newline && buffer[i + 1] === newline) {\n            // \\n\\n\n            return i + 2;\n        }\n        if (buffer[i] === carriage && buffer[i + 1] === carriage) {\n            // \\r\\r\n            return i + 2;\n        }\n        if (buffer[i] === carriage &&\n            buffer[i + 1] === newline &&\n            i + 3 < buffer.length &&\n            buffer[i + 2] === carriage &&\n            buffer[i + 3] === newline) {\n            // \\r\\n\\r\\n\n            return i + 4;\n        }\n    }\n    return -1;\n}\n//# sourceMappingURL=line.mjs.map","/**\n * Most browsers don't yet have async iterable support for ReadableStream,\n * and Node has a very different way of reading bytes from its \"ReadableStream\".\n *\n * This polyfill was pulled from https://github.com/MattiasBuelens/web-streams-polyfill/pull/122#issuecomment-1627354490\n */\nexport function ReadableStreamToAsyncIterable(stream) {\n    if (stream[Symbol.asyncIterator])\n        return stream;\n    const reader = stream.getReader();\n    return {\n        async next() {\n            try {\n                const result = await reader.read();\n                if (result?.done)\n                    reader.releaseLock(); // release lock when stream becomes closed\n                return result;\n            }\n            catch (e) {\n                reader.releaseLock(); // release lock when stream becomes errored\n                throw e;\n            }\n        },\n        async return() {\n            const cancelPromise = reader.cancel();\n            reader.releaseLock();\n            await cancelPromise;\n            return { done: true, value: undefined };\n        },\n        [Symbol.asyncIterator]() {\n            return this;\n        },\n    };\n}\n//# sourceMappingURL=stream-utils.mjs.map","import { ReadableStream } from \"./_shims/index.mjs\";\nimport { OpenAIError } from \"./error.mjs\";\nimport { findDoubleNewlineIndex, LineDecoder } from \"./internal/decoders/line.mjs\";\nimport { ReadableStreamToAsyncIterable } from \"./internal/stream-utils.mjs\";\nimport { createResponseHeaders } from \"./core.mjs\";\nimport { APIError } from \"./error.mjs\";\nexport class Stream {\n    constructor(iterator, controller) {\n        this.iterator = iterator;\n        this.controller = controller;\n    }\n    static fromSSEResponse(response, controller) {\n        let consumed = false;\n        async function* iterator() {\n            if (consumed) {\n                throw new Error('Cannot iterate over a consumed stream, use `.tee()` to split the stream.');\n            }\n            consumed = true;\n            let done = false;\n            try {\n                for await (const sse of _iterSSEMessages(response, controller)) {\n                    if (done)\n                        continue;\n                    if (sse.data.startsWith('[DONE]')) {\n                        done = true;\n                        continue;\n                    }\n                    if (sse.event === null ||\n                        sse.event.startsWith('response.') ||\n                        sse.event.startsWith('transcript.')) {\n                        let data;\n                        try {\n                            data = JSON.parse(sse.data);\n                        }\n                        catch (e) {\n                            console.error(`Could not parse message into JSON:`, sse.data);\n                            console.error(`From chunk:`, sse.raw);\n                            throw e;\n                        }\n                        if (data && data.error) {\n                            throw new APIError(undefined, data.error, undefined, createResponseHeaders(response.headers));\n                        }\n                        yield data;\n                    }\n                    else {\n                        let data;\n                        try {\n                            data = JSON.parse(sse.data);\n                        }\n                        catch (e) {\n                            console.error(`Could not parse message into JSON:`, sse.data);\n                            console.error(`From chunk:`, sse.raw);\n                            throw e;\n                        }\n                        // TODO: Is this where the error should be thrown?\n                        if (sse.event == 'error') {\n                            throw new APIError(undefined, data.error, data.message, undefined);\n                        }\n                        yield { event: sse.event, data: data };\n                    }\n                }\n                done = true;\n            }\n            catch (e) {\n                // If the user calls `stream.controller.abort()`, we should exit without throwing.\n                if (e instanceof Error && e.name === 'AbortError')\n                    return;\n                throw e;\n            }\n            finally {\n                // If the user `break`s, abort the ongoing request.\n                if (!done)\n                    controller.abort();\n            }\n        }\n        return new Stream(iterator, controller);\n    }\n    /**\n     * Generates a Stream from a newline-separated ReadableStream\n     * where each item is a JSON value.\n     */\n    static fromReadableStream(readableStream, controller) {\n        let consumed = false;\n        async function* iterLines() {\n            const lineDecoder = new LineDecoder();\n            const iter = ReadableStreamToAsyncIterable(readableStream);\n            for await (const chunk of iter) {\n                for (const line of lineDecoder.decode(chunk)) {\n                    yield line;\n                }\n            }\n            for (const line of lineDecoder.flush()) {\n                yield line;\n            }\n        }\n        async function* iterator() {\n            if (consumed) {\n                throw new Error('Cannot iterate over a consumed stream, use `.tee()` to split the stream.');\n            }\n            consumed = true;\n            let done = false;\n            try {\n                for await (const line of iterLines()) {\n                    if (done)\n                        continue;\n                    if (line)\n                        yield JSON.parse(line);\n                }\n                done = true;\n            }\n            catch (e) {\n                // If the user calls `stream.controller.abort()`, we should exit without throwing.\n                if (e instanceof Error && e.name === 'AbortError')\n                    return;\n                throw e;\n            }\n            finally {\n                // If the user `break`s, abort the ongoing request.\n                if (!done)\n                    controller.abort();\n            }\n        }\n        return new Stream(iterator, controller);\n    }\n    [Symbol.asyncIterator]() {\n        return this.iterator();\n    }\n    /**\n     * Splits the stream into two streams which can be\n     * independently read from at different speeds.\n     */\n    tee() {\n        const left = [];\n        const right = [];\n        const iterator = this.iterator();\n        const teeIterator = (queue) => {\n            return {\n                next: () => {\n                    if (queue.length === 0) {\n                        const result = iterator.next();\n                        left.push(result);\n                        right.push(result);\n                    }\n                    return queue.shift();\n                },\n            };\n        };\n        return [\n            new Stream(() => teeIterator(left), this.controller),\n            new Stream(() => teeIterator(right), this.controller),\n        ];\n    }\n    /**\n     * Converts this stream to a newline-separated ReadableStream of\n     * JSON stringified values in the stream\n     * which can be turned back into a Stream with `Stream.fromReadableStream()`.\n     */\n    toReadableStream() {\n        const self = this;\n        let iter;\n        const encoder = new TextEncoder();\n        return new ReadableStream({\n            async start() {\n                iter = self[Symbol.asyncIterator]();\n            },\n            async pull(ctrl) {\n                try {\n                    const { value, done } = await iter.next();\n                    if (done)\n                        return ctrl.close();\n                    const bytes = encoder.encode(JSON.stringify(value) + '\\n');\n                    ctrl.enqueue(bytes);\n                }\n                catch (err) {\n                    ctrl.error(err);\n                }\n            },\n            async cancel() {\n                await iter.return?.();\n            },\n        });\n    }\n}\nexport async function* _iterSSEMessages(response, controller) {\n    if (!response.body) {\n        controller.abort();\n        throw new OpenAIError(`Attempted to iterate over a response with no body`);\n    }\n    const sseDecoder = new SSEDecoder();\n    const lineDecoder = new LineDecoder();\n    const iter = ReadableStreamToAsyncIterable(response.body);\n    for await (const sseChunk of iterSSEChunks(iter)) {\n        for (const line of lineDecoder.decode(sseChunk)) {\n            const sse = sseDecoder.decode(line);\n            if (sse)\n                yield sse;\n        }\n    }\n    for (const line of lineDecoder.flush()) {\n        const sse = sseDecoder.decode(line);\n        if (sse)\n            yield sse;\n    }\n}\n/**\n * Given an async iterable iterator, iterates over it and yields full\n * SSE chunks, i.e. yields when a double new-line is encountered.\n */\nasync function* iterSSEChunks(iterator) {\n    let data = new Uint8Array();\n    for await (const chunk of iterator) {\n        if (chunk == null) {\n            continue;\n        }\n        const binaryChunk = chunk instanceof ArrayBuffer ? new Uint8Array(chunk)\n            : typeof chunk === 'string' ? new TextEncoder().encode(chunk)\n                : chunk;\n        let newData = new Uint8Array(data.length + binaryChunk.length);\n        newData.set(data);\n        newData.set(binaryChunk, data.length);\n        data = newData;\n        let patternIndex;\n        while ((patternIndex = findDoubleNewlineIndex(data)) !== -1) {\n            yield data.slice(0, patternIndex);\n            data = data.slice(patternIndex);\n        }\n    }\n    if (data.length > 0) {\n        yield data;\n    }\n}\nclass SSEDecoder {\n    constructor() {\n        this.event = null;\n        this.data = [];\n        this.chunks = [];\n    }\n    decode(line) {\n        if (line.endsWith('\\r')) {\n            line = line.substring(0, line.length - 1);\n        }\n        if (!line) {\n            // empty line and we didn't previously encounter any messages\n            if (!this.event && !this.data.length)\n                return null;\n            const sse = {\n                event: this.event,\n                data: this.data.join('\\n'),\n                raw: this.chunks,\n            };\n            this.event = null;\n            this.data = [];\n            this.chunks = [];\n            return sse;\n        }\n        this.chunks.push(line);\n        if (line.startsWith(':')) {\n            return null;\n        }\n        let [fieldname, _, value] = partition(line, ':');\n        if (value.startsWith(' ')) {\n            value = value.substring(1);\n        }\n        if (fieldname === 'event') {\n            this.event = value;\n        }\n        else if (fieldname === 'data') {\n            this.data.push(value);\n        }\n        return null;\n    }\n}\nfunction partition(str, delimiter) {\n    const index = str.indexOf(delimiter);\n    if (index !== -1) {\n        return [str.substring(0, index), delimiter, str.substring(index + delimiter.length)];\n    }\n    return [str, '', ''];\n}\n//# sourceMappingURL=streaming.mjs.map","import { FormData, File, getMultipartRequestOptions, isFsReadStream, } from \"./_shims/index.mjs\";\nexport { fileFromPath } from \"./_shims/index.mjs\";\nexport const isResponseLike = (value) => value != null &&\n    typeof value === 'object' &&\n    typeof value.url === 'string' &&\n    typeof value.blob === 'function';\nexport const isFileLike = (value) => value != null &&\n    typeof value === 'object' &&\n    typeof value.name === 'string' &&\n    typeof value.lastModified === 'number' &&\n    isBlobLike(value);\n/**\n * The BlobLike type omits arrayBuffer() because @types/node-fetch@^2.6.4 lacks it; but this check\n * adds the arrayBuffer() method type because it is available and used at runtime\n */\nexport const isBlobLike = (value) => value != null &&\n    typeof value === 'object' &&\n    typeof value.size === 'number' &&\n    typeof value.type === 'string' &&\n    typeof value.text === 'function' &&\n    typeof value.slice === 'function' &&\n    typeof value.arrayBuffer === 'function';\nexport const isUploadable = (value) => {\n    return isFileLike(value) || isResponseLike(value) || isFsReadStream(value);\n};\n/**\n * Helper for creating a {@link File} to pass to an SDK upload method from a variety of different data formats\n * @param value the raw content of the file.  Can be an {@link Uploadable}, {@link BlobLikePart}, or {@link AsyncIterable} of {@link BlobLikePart}s\n * @param {string=} name the name of the file. If omitted, toFile will try to determine a file name from bits if possible\n * @param {Object=} options additional properties\n * @param {string=} options.type the MIME type of the content\n * @param {number=} options.lastModified the last modified timestamp\n * @returns a {@link File} with the given properties\n */\nexport async function toFile(value, name, options) {\n    // If it's a promise, resolve it.\n    value = await value;\n    // If we've been given a `File` we don't need to do anything\n    if (isFileLike(value)) {\n        return value;\n    }\n    if (isResponseLike(value)) {\n        const blob = await value.blob();\n        name || (name = new URL(value.url).pathname.split(/[\\\\/]/).pop() ?? 'unknown_file');\n        // we need to convert the `Blob` into an array buffer because the `Blob` class\n        // that `node-fetch` defines is incompatible with the web standard which results\n        // in `new File` interpreting it as a string instead of binary data.\n        const data = isBlobLike(blob) ? [(await blob.arrayBuffer())] : [blob];\n        return new File(data, name, options);\n    }\n    const bits = await getBytes(value);\n    name || (name = getName(value) ?? 'unknown_file');\n    if (!options?.type) {\n        const type = bits[0]?.type;\n        if (typeof type === 'string') {\n            options = { ...options, type };\n        }\n    }\n    return new File(bits, name, options);\n}\nasync function getBytes(value) {\n    let parts = [];\n    if (typeof value === 'string' ||\n        ArrayBuffer.isView(value) || // includes Uint8Array, Buffer, etc.\n        value instanceof ArrayBuffer) {\n        parts.push(value);\n    }\n    else if (isBlobLike(value)) {\n        parts.push(await value.arrayBuffer());\n    }\n    else if (isAsyncIterableIterator(value) // includes Readable, ReadableStream, etc.\n    ) {\n        for await (const chunk of value) {\n            parts.push(chunk); // TODO, consider validating?\n        }\n    }\n    else {\n        throw new Error(`Unexpected data type: ${typeof value}; constructor: ${value?.constructor\n            ?.name}; props: ${propsForError(value)}`);\n    }\n    return parts;\n}\nfunction propsForError(value) {\n    const props = Object.getOwnPropertyNames(value);\n    return `[${props.map((p) => `\"${p}\"`).join(', ')}]`;\n}\nfunction getName(value) {\n    return (getStringFromMaybeBuffer(value.name) ||\n        getStringFromMaybeBuffer(value.filename) ||\n        // For fs.ReadStream\n        getStringFromMaybeBuffer(value.path)?.split(/[\\\\/]/).pop());\n}\nconst getStringFromMaybeBuffer = (x) => {\n    if (typeof x === 'string')\n        return x;\n    if (typeof Buffer !== 'undefined' && x instanceof Buffer)\n        return String(x);\n    return undefined;\n};\nconst isAsyncIterableIterator = (value) => value != null && typeof value === 'object' && typeof value[Symbol.asyncIterator] === 'function';\nexport const isMultipartBody = (body) => body && typeof body === 'object' && body.body && body[Symbol.toStringTag] === 'MultipartBody';\n/**\n * Returns a multipart/form-data request if any part of the given request body contains a File / Blob value.\n * Otherwise returns the request as is.\n */\nexport const maybeMultipartFormRequestOptions = async (opts) => {\n    if (!hasUploadableValue(opts.body))\n        return opts;\n    const form = await createForm(opts.body);\n    return getMultipartRequestOptions(form, opts);\n};\nexport const multipartFormRequestOptions = async (opts) => {\n    const form = await createForm(opts.body);\n    return getMultipartRequestOptions(form, opts);\n};\nexport const createForm = async (body) => {\n    const form = new FormData();\n    await Promise.all(Object.entries(body || {}).map(([key, value]) => addFormValue(form, key, value)));\n    return form;\n};\nconst hasUploadableValue = (value) => {\n    if (isUploadable(value))\n        return true;\n    if (Array.isArray(value))\n        return value.some(hasUploadableValue);\n    if (value && typeof value === 'object') {\n        for (const k in value) {\n            if (hasUploadableValue(value[k]))\n                return true;\n        }\n    }\n    return false;\n};\nconst addFormValue = async (form, key, value) => {\n    if (value === undefined)\n        return;\n    if (value == null) {\n        throw new TypeError(`Received null for \"${key}\"; to pass null in FormData, you must use the string 'null'`);\n    }\n    // TODO: make nested formats configurable\n    if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n        form.append(key, String(value));\n    }\n    else if (isUploadable(value)) {\n        const file = await toFile(value);\n        form.append(key, file);\n    }\n    else if (Array.isArray(value)) {\n        await Promise.all(value.map((entry) => addFormValue(form, key + '[]', entry)));\n    }\n    else if (typeof value === 'object') {\n        await Promise.all(Object.entries(value).map(([name, prop]) => addFormValue(form, `${key}[${name}]`, prop)));\n    }\n    else {\n        throw new TypeError(`Invalid value given to form, expected a string, number, boolean, object, Array, File or Blob but got ${value} instead`);\n    }\n};\n//# sourceMappingURL=uploads.mjs.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _AbstractPage_client;\nimport { VERSION } from \"./version.mjs\";\nimport { Stream } from \"./streaming.mjs\";\nimport { OpenAIError, APIError, APIConnectionError, APIConnectionTimeoutError, APIUserAbortError, } from \"./error.mjs\";\nimport { kind as shimsKind, getDefaultAgent, fetch, init, } from \"./_shims/index.mjs\";\n// try running side effects outside of _shims/index to workaround https://github.com/vercel/next.js/issues/76881\ninit();\nimport { isBlobLike, isMultipartBody } from \"./uploads.mjs\";\nexport { maybeMultipartFormRequestOptions, multipartFormRequestOptions, createForm, } from \"./uploads.mjs\";\nasync function defaultParseResponse(props) {\n    const { response } = props;\n    if (props.options.stream) {\n        debug('response', response.status, response.url, response.headers, response.body);\n        // Note: there is an invariant here that isn't represented in the type system\n        // that if you set `stream: true` the response type must also be `Stream<T>`\n        if (props.options.__streamClass) {\n            return props.options.__streamClass.fromSSEResponse(response, props.controller);\n        }\n        return Stream.fromSSEResponse(response, props.controller);\n    }\n    // fetch refuses to read the body when the status code is 204.\n    if (response.status === 204) {\n        return null;\n    }\n    if (props.options.__binaryResponse) {\n        return response;\n    }\n    const contentType = response.headers.get('content-type');\n    const mediaType = contentType?.split(';')[0]?.trim();\n    const isJSON = mediaType?.includes('application/json') || mediaType?.endsWith('+json');\n    if (isJSON) {\n        const json = await response.json();\n        debug('response', response.status, response.url, response.headers, json);\n        return _addRequestID(json, response);\n    }\n    const text = await response.text();\n    debug('response', response.status, response.url, response.headers, text);\n    // TODO handle blob, arraybuffer, other content types, etc.\n    return text;\n}\nfunction _addRequestID(value, response) {\n    if (!value || typeof value !== 'object' || Array.isArray(value)) {\n        return value;\n    }\n    return Object.defineProperty(value, '_request_id', {\n        value: response.headers.get('x-request-id'),\n        enumerable: false,\n    });\n}\n/**\n * A subclass of `Promise` providing additional helper methods\n * for interacting with the SDK.\n */\nexport class APIPromise extends Promise {\n    constructor(responsePromise, parseResponse = defaultParseResponse) {\n        super((resolve) => {\n            // this is maybe a bit weird but this has to be a no-op to not implicitly\n            // parse the response body; instead .then, .catch, .finally are overridden\n            // to parse the response\n            resolve(null);\n        });\n        this.responsePromise = responsePromise;\n        this.parseResponse = parseResponse;\n    }\n    _thenUnwrap(transform) {\n        return new APIPromise(this.responsePromise, async (props) => _addRequestID(transform(await this.parseResponse(props), props), props.response));\n    }\n    /**\n     * Gets the raw `Response` instance instead of parsing the response\n     * data.\n     *\n     * If you want to parse the response body but still get the `Response`\n     * instance, you can use {@link withResponse()}.\n     *\n     * 👋 Getting the wrong TypeScript type for `Response`?\n     * Try setting `\"moduleResolution\": \"NodeNext\"` if you can,\n     * or add one of these imports before your first `import … from 'openai'`:\n     * - `import 'openai/shims/node'` (if you're running on Node)\n     * - `import 'openai/shims/web'` (otherwise)\n     */\n    asResponse() {\n        return this.responsePromise.then((p) => p.response);\n    }\n    /**\n     * Gets the parsed response data, the raw `Response` instance and the ID of the request,\n     * returned via the X-Request-ID header which is useful for debugging requests and reporting\n     * issues to OpenAI.\n     *\n     * If you just want to get the raw `Response` instance without parsing it,\n     * you can use {@link asResponse()}.\n     *\n     *\n     * 👋 Getting the wrong TypeScript type for `Response`?\n     * Try setting `\"moduleResolution\": \"NodeNext\"` if you can,\n     * or add one of these imports before your first `import … from 'openai'`:\n     * - `import 'openai/shims/node'` (if you're running on Node)\n     * - `import 'openai/shims/web'` (otherwise)\n     */\n    async withResponse() {\n        const [data, response] = await Promise.all([this.parse(), this.asResponse()]);\n        return { data, response, request_id: response.headers.get('x-request-id') };\n    }\n    parse() {\n        if (!this.parsedPromise) {\n            this.parsedPromise = this.responsePromise.then(this.parseResponse);\n        }\n        return this.parsedPromise;\n    }\n    then(onfulfilled, onrejected) {\n        return this.parse().then(onfulfilled, onrejected);\n    }\n    catch(onrejected) {\n        return this.parse().catch(onrejected);\n    }\n    finally(onfinally) {\n        return this.parse().finally(onfinally);\n    }\n}\nexport class APIClient {\n    constructor({ baseURL, maxRetries = 2, timeout = 600000, // 10 minutes\n    httpAgent, fetch: overriddenFetch, }) {\n        this.baseURL = baseURL;\n        this.maxRetries = validatePositiveInteger('maxRetries', maxRetries);\n        this.timeout = validatePositiveInteger('timeout', timeout);\n        this.httpAgent = httpAgent;\n        this.fetch = overriddenFetch ?? fetch;\n    }\n    authHeaders(opts) {\n        return {};\n    }\n    /**\n     * Override this to add your own default headers, for example:\n     *\n     *  {\n     *    ...super.defaultHeaders(),\n     *    Authorization: 'Bearer 123',\n     *  }\n     */\n    defaultHeaders(opts) {\n        return {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            'User-Agent': this.getUserAgent(),\n            ...getPlatformHeaders(),\n            ...this.authHeaders(opts),\n        };\n    }\n    /**\n     * Override this to add your own headers validation:\n     */\n    validateHeaders(headers, customHeaders) { }\n    defaultIdempotencyKey() {\n        return `stainless-node-retry-${uuid4()}`;\n    }\n    get(path, opts) {\n        return this.methodRequest('get', path, opts);\n    }\n    post(path, opts) {\n        return this.methodRequest('post', path, opts);\n    }\n    patch(path, opts) {\n        return this.methodRequest('patch', path, opts);\n    }\n    put(path, opts) {\n        return this.methodRequest('put', path, opts);\n    }\n    delete(path, opts) {\n        return this.methodRequest('delete', path, opts);\n    }\n    methodRequest(method, path, opts) {\n        return this.request(Promise.resolve(opts).then(async (opts) => {\n            const body = opts && isBlobLike(opts?.body) ? new DataView(await opts.body.arrayBuffer())\n                : opts?.body instanceof DataView ? opts.body\n                    : opts?.body instanceof ArrayBuffer ? new DataView(opts.body)\n                        : opts && ArrayBuffer.isView(opts?.body) ? new DataView(opts.body.buffer)\n                            : opts?.body;\n            return { method, path, ...opts, body };\n        }));\n    }\n    getAPIList(path, Page, opts) {\n        return this.requestAPIList(Page, { method: 'get', path, ...opts });\n    }\n    calculateContentLength(body) {\n        if (typeof body === 'string') {\n            if (typeof Buffer !== 'undefined') {\n                return Buffer.byteLength(body, 'utf8').toString();\n            }\n            if (typeof TextEncoder !== 'undefined') {\n                const encoder = new TextEncoder();\n                const encoded = encoder.encode(body);\n                return encoded.length.toString();\n            }\n        }\n        else if (ArrayBuffer.isView(body)) {\n            return body.byteLength.toString();\n        }\n        return null;\n    }\n    buildRequest(inputOptions, { retryCount = 0 } = {}) {\n        const options = { ...inputOptions };\n        const { method, path, query, headers: headers = {} } = options;\n        const body = ArrayBuffer.isView(options.body) || (options.__binaryRequest && typeof options.body === 'string') ?\n            options.body\n            : isMultipartBody(options.body) ? options.body.body\n                : options.body ? JSON.stringify(options.body, null, 2)\n                    : null;\n        const contentLength = this.calculateContentLength(body);\n        const url = this.buildURL(path, query);\n        if ('timeout' in options)\n            validatePositiveInteger('timeout', options.timeout);\n        options.timeout = options.timeout ?? this.timeout;\n        const httpAgent = options.httpAgent ?? this.httpAgent ?? getDefaultAgent(url);\n        const minAgentTimeout = options.timeout + 1000;\n        if (typeof httpAgent?.options?.timeout === 'number' &&\n            minAgentTimeout > (httpAgent.options.timeout ?? 0)) {\n            // Allow any given request to bump our agent active socket timeout.\n            // This may seem strange, but leaking active sockets should be rare and not particularly problematic,\n            // and without mutating agent we would need to create more of them.\n            // This tradeoff optimizes for performance.\n            httpAgent.options.timeout = minAgentTimeout;\n        }\n        if (this.idempotencyHeader && method !== 'get') {\n            if (!inputOptions.idempotencyKey)\n                inputOptions.idempotencyKey = this.defaultIdempotencyKey();\n            headers[this.idempotencyHeader] = inputOptions.idempotencyKey;\n        }\n        const reqHeaders = this.buildHeaders({ options, headers, contentLength, retryCount });\n        const req = {\n            method,\n            ...(body && { body: body }),\n            headers: reqHeaders,\n            ...(httpAgent && { agent: httpAgent }),\n            // @ts-ignore node-fetch uses a custom AbortSignal type that is\n            // not compatible with standard web types\n            signal: options.signal ?? null,\n        };\n        return { req, url, timeout: options.timeout };\n    }\n    buildHeaders({ options, headers, contentLength, retryCount, }) {\n        const reqHeaders = {};\n        if (contentLength) {\n            reqHeaders['content-length'] = contentLength;\n        }\n        const defaultHeaders = this.defaultHeaders(options);\n        applyHeadersMut(reqHeaders, defaultHeaders);\n        applyHeadersMut(reqHeaders, headers);\n        // let builtin fetch set the Content-Type for multipart bodies\n        if (isMultipartBody(options.body) && shimsKind !== 'node') {\n            delete reqHeaders['content-type'];\n        }\n        // Don't set theses headers if they were already set or removed through default headers or by the caller.\n        // We check `defaultHeaders` and `headers`, which can contain nulls, instead of `reqHeaders` to account\n        // for the removal case.\n        if (getHeader(defaultHeaders, 'x-stainless-retry-count') === undefined &&\n            getHeader(headers, 'x-stainless-retry-count') === undefined) {\n            reqHeaders['x-stainless-retry-count'] = String(retryCount);\n        }\n        if (getHeader(defaultHeaders, 'x-stainless-timeout') === undefined &&\n            getHeader(headers, 'x-stainless-timeout') === undefined &&\n            options.timeout) {\n            reqHeaders['x-stainless-timeout'] = String(Math.trunc(options.timeout / 1000));\n        }\n        this.validateHeaders(reqHeaders, headers);\n        return reqHeaders;\n    }\n    /**\n     * Used as a callback for mutating the given `FinalRequestOptions` object.\n     */\n    async prepareOptions(options) { }\n    /**\n     * Used as a callback for mutating the given `RequestInit` object.\n     *\n     * This is useful for cases where you want to add certain headers based off of\n     * the request properties, e.g. `method` or `url`.\n     */\n    async prepareRequest(request, { url, options }) { }\n    parseHeaders(headers) {\n        return (!headers ? {}\n            : Symbol.iterator in headers ?\n                Object.fromEntries(Array.from(headers).map((header) => [...header]))\n                : { ...headers });\n    }\n    makeStatusError(status, error, message, headers) {\n        return APIError.generate(status, error, message, headers);\n    }\n    request(options, remainingRetries = null) {\n        return new APIPromise(this.makeRequest(options, remainingRetries));\n    }\n    async makeRequest(optionsInput, retriesRemaining) {\n        const options = await optionsInput;\n        const maxRetries = options.maxRetries ?? this.maxRetries;\n        if (retriesRemaining == null) {\n            retriesRemaining = maxRetries;\n        }\n        await this.prepareOptions(options);\n        const { req, url, timeout } = this.buildRequest(options, { retryCount: maxRetries - retriesRemaining });\n        await this.prepareRequest(req, { url, options });\n        debug('request', url, options, req.headers);\n        if (options.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        const controller = new AbortController();\n        const response = await this.fetchWithTimeout(url, req, timeout, controller).catch(castToError);\n        if (response instanceof Error) {\n            if (options.signal?.aborted) {\n                throw new APIUserAbortError();\n            }\n            if (retriesRemaining) {\n                return this.retryRequest(options, retriesRemaining);\n            }\n            if (response.name === 'AbortError') {\n                throw new APIConnectionTimeoutError();\n            }\n            throw new APIConnectionError({ cause: response });\n        }\n        const responseHeaders = createResponseHeaders(response.headers);\n        if (!response.ok) {\n            if (retriesRemaining && this.shouldRetry(response)) {\n                const retryMessage = `retrying, ${retriesRemaining} attempts remaining`;\n                debug(`response (error; ${retryMessage})`, response.status, url, responseHeaders);\n                return this.retryRequest(options, retriesRemaining, responseHeaders);\n            }\n            const errText = await response.text().catch((e) => castToError(e).message);\n            const errJSON = safeJSON(errText);\n            const errMessage = errJSON ? undefined : errText;\n            const retryMessage = retriesRemaining ? `(error; no more retries left)` : `(error; not retryable)`;\n            debug(`response (error; ${retryMessage})`, response.status, url, responseHeaders, errMessage);\n            const err = this.makeStatusError(response.status, errJSON, errMessage, responseHeaders);\n            throw err;\n        }\n        return { response, options, controller };\n    }\n    requestAPIList(Page, options) {\n        const request = this.makeRequest(options, null);\n        return new PagePromise(this, request, Page);\n    }\n    buildURL(path, query) {\n        const url = isAbsoluteURL(path) ?\n            new URL(path)\n            : new URL(this.baseURL + (this.baseURL.endsWith('/') && path.startsWith('/') ? path.slice(1) : path));\n        const defaultQuery = this.defaultQuery();\n        if (!isEmptyObj(defaultQuery)) {\n            query = { ...defaultQuery, ...query };\n        }\n        if (typeof query === 'object' && query && !Array.isArray(query)) {\n            url.search = this.stringifyQuery(query);\n        }\n        return url.toString();\n    }\n    stringifyQuery(query) {\n        return Object.entries(query)\n            .filter(([_, value]) => typeof value !== 'undefined')\n            .map(([key, value]) => {\n            if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n                return `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n            }\n            if (value === null) {\n                return `${encodeURIComponent(key)}=`;\n            }\n            throw new OpenAIError(`Cannot stringify type ${typeof value}; Expected string, number, boolean, or null. If you need to pass nested query parameters, you can manually encode them, e.g. { query: { 'foo[key1]': value1, 'foo[key2]': value2 } }, and please open a GitHub issue requesting better support for your use case.`);\n        })\n            .join('&');\n    }\n    async fetchWithTimeout(url, init, ms, controller) {\n        const { signal, ...options } = init || {};\n        if (signal)\n            signal.addEventListener('abort', () => controller.abort());\n        const timeout = setTimeout(() => controller.abort(), ms);\n        const fetchOptions = {\n            signal: controller.signal,\n            ...options,\n        };\n        if (fetchOptions.method) {\n            // Custom methods like 'patch' need to be uppercased\n            // See https://github.com/nodejs/undici/issues/2294\n            fetchOptions.method = fetchOptions.method.toUpperCase();\n        }\n        return (\n        // use undefined this binding; fetch errors if bound to something else in browser/cloudflare\n        this.fetch.call(undefined, url, fetchOptions).finally(() => {\n            clearTimeout(timeout);\n        }));\n    }\n    shouldRetry(response) {\n        // Note this is not a standard header.\n        const shouldRetryHeader = response.headers.get('x-should-retry');\n        // If the server explicitly says whether or not to retry, obey.\n        if (shouldRetryHeader === 'true')\n            return true;\n        if (shouldRetryHeader === 'false')\n            return false;\n        // Retry on request timeouts.\n        if (response.status === 408)\n            return true;\n        // Retry on lock timeouts.\n        if (response.status === 409)\n            return true;\n        // Retry on rate limits.\n        if (response.status === 429)\n            return true;\n        // Retry internal errors.\n        if (response.status >= 500)\n            return true;\n        return false;\n    }\n    async retryRequest(options, retriesRemaining, responseHeaders) {\n        let timeoutMillis;\n        // Note the `retry-after-ms` header may not be standard, but is a good idea and we'd like proactive support for it.\n        const retryAfterMillisHeader = responseHeaders?.['retry-after-ms'];\n        if (retryAfterMillisHeader) {\n            const timeoutMs = parseFloat(retryAfterMillisHeader);\n            if (!Number.isNaN(timeoutMs)) {\n                timeoutMillis = timeoutMs;\n            }\n        }\n        // About the Retry-After header: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After\n        const retryAfterHeader = responseHeaders?.['retry-after'];\n        if (retryAfterHeader && !timeoutMillis) {\n            const timeoutSeconds = parseFloat(retryAfterHeader);\n            if (!Number.isNaN(timeoutSeconds)) {\n                timeoutMillis = timeoutSeconds * 1000;\n            }\n            else {\n                timeoutMillis = Date.parse(retryAfterHeader) - Date.now();\n            }\n        }\n        // If the API asks us to wait a certain amount of time (and it's a reasonable amount),\n        // just do what it says, but otherwise calculate a default\n        if (!(timeoutMillis && 0 <= timeoutMillis && timeoutMillis < 60 * 1000)) {\n            const maxRetries = options.maxRetries ?? this.maxRetries;\n            timeoutMillis = this.calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries);\n        }\n        await sleep(timeoutMillis);\n        return this.makeRequest(options, retriesRemaining - 1);\n    }\n    calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries) {\n        const initialRetryDelay = 0.5;\n        const maxRetryDelay = 8.0;\n        const numRetries = maxRetries - retriesRemaining;\n        // Apply exponential backoff, but not more than the max.\n        const sleepSeconds = Math.min(initialRetryDelay * Math.pow(2, numRetries), maxRetryDelay);\n        // Apply some jitter, take up to at most 25 percent of the retry time.\n        const jitter = 1 - Math.random() * 0.25;\n        return sleepSeconds * jitter * 1000;\n    }\n    getUserAgent() {\n        return `${this.constructor.name}/JS ${VERSION}`;\n    }\n}\nexport class AbstractPage {\n    constructor(client, response, body, options) {\n        _AbstractPage_client.set(this, void 0);\n        __classPrivateFieldSet(this, _AbstractPage_client, client, \"f\");\n        this.options = options;\n        this.response = response;\n        this.body = body;\n    }\n    hasNextPage() {\n        const items = this.getPaginatedItems();\n        if (!items.length)\n            return false;\n        return this.nextPageInfo() != null;\n    }\n    async getNextPage() {\n        const nextInfo = this.nextPageInfo();\n        if (!nextInfo) {\n            throw new OpenAIError('No next page expected; please check `.hasNextPage()` before calling `.getNextPage()`.');\n        }\n        const nextOptions = { ...this.options };\n        if ('params' in nextInfo && typeof nextOptions.query === 'object') {\n            nextOptions.query = { ...nextOptions.query, ...nextInfo.params };\n        }\n        else if ('url' in nextInfo) {\n            const params = [...Object.entries(nextOptions.query || {}), ...nextInfo.url.searchParams.entries()];\n            for (const [key, value] of params) {\n                nextInfo.url.searchParams.set(key, value);\n            }\n            nextOptions.query = undefined;\n            nextOptions.path = nextInfo.url.toString();\n        }\n        return await __classPrivateFieldGet(this, _AbstractPage_client, \"f\").requestAPIList(this.constructor, nextOptions);\n    }\n    async *iterPages() {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        let page = this;\n        yield page;\n        while (page.hasNextPage()) {\n            page = await page.getNextPage();\n            yield page;\n        }\n    }\n    async *[(_AbstractPage_client = new WeakMap(), Symbol.asyncIterator)]() {\n        for await (const page of this.iterPages()) {\n            for (const item of page.getPaginatedItems()) {\n                yield item;\n            }\n        }\n    }\n}\n/**\n * This subclass of Promise will resolve to an instantiated Page once the request completes.\n *\n * It also implements AsyncIterable to allow auto-paginating iteration on an unawaited list call, eg:\n *\n *    for await (const item of client.items.list()) {\n *      console.log(item)\n *    }\n */\nexport class PagePromise extends APIPromise {\n    constructor(client, request, Page) {\n        super(request, async (props) => new Page(client, props.response, await defaultParseResponse(props), props.options));\n    }\n    /**\n     * Allow auto-paginating iteration on an unawaited list call, eg:\n     *\n     *    for await (const item of client.items.list()) {\n     *      console.log(item)\n     *    }\n     */\n    async *[Symbol.asyncIterator]() {\n        const page = await this;\n        for await (const item of page) {\n            yield item;\n        }\n    }\n}\nexport const createResponseHeaders = (headers) => {\n    return new Proxy(Object.fromEntries(\n    // @ts-ignore\n    headers.entries()), {\n        get(target, name) {\n            const key = name.toString();\n            return target[key.toLowerCase()] || target[key];\n        },\n    });\n};\n// This is required so that we can determine if a given object matches the RequestOptions\n// type at runtime. While this requires duplication, it is enforced by the TypeScript\n// compiler such that any missing / extraneous keys will cause an error.\nconst requestOptionsKeys = {\n    method: true,\n    path: true,\n    query: true,\n    body: true,\n    headers: true,\n    maxRetries: true,\n    stream: true,\n    timeout: true,\n    httpAgent: true,\n    signal: true,\n    idempotencyKey: true,\n    __metadata: true,\n    __binaryRequest: true,\n    __binaryResponse: true,\n    __streamClass: true,\n};\nexport const isRequestOptions = (obj) => {\n    return (typeof obj === 'object' &&\n        obj !== null &&\n        !isEmptyObj(obj) &&\n        Object.keys(obj).every((k) => hasOwn(requestOptionsKeys, k)));\n};\nconst getPlatformProperties = () => {\n    if (typeof Deno !== 'undefined' && Deno.build != null) {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': normalizePlatform(Deno.build.os),\n            'X-Stainless-Arch': normalizeArch(Deno.build.arch),\n            'X-Stainless-Runtime': 'deno',\n            'X-Stainless-Runtime-Version': typeof Deno.version === 'string' ? Deno.version : Deno.version?.deno ?? 'unknown',\n        };\n    }\n    if (typeof EdgeRuntime !== 'undefined') {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': 'Unknown',\n            'X-Stainless-Arch': `other:${EdgeRuntime}`,\n            'X-Stainless-Runtime': 'edge',\n            'X-Stainless-Runtime-Version': process.version,\n        };\n    }\n    // Check if Node.js\n    if (Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]') {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': normalizePlatform(process.platform),\n            'X-Stainless-Arch': normalizeArch(process.arch),\n            'X-Stainless-Runtime': 'node',\n            'X-Stainless-Runtime-Version': process.version,\n        };\n    }\n    const browserInfo = getBrowserInfo();\n    if (browserInfo) {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': 'Unknown',\n            'X-Stainless-Arch': 'unknown',\n            'X-Stainless-Runtime': `browser:${browserInfo.browser}`,\n            'X-Stainless-Runtime-Version': browserInfo.version,\n        };\n    }\n    // TODO add support for Cloudflare workers, etc.\n    return {\n        'X-Stainless-Lang': 'js',\n        'X-Stainless-Package-Version': VERSION,\n        'X-Stainless-OS': 'Unknown',\n        'X-Stainless-Arch': 'unknown',\n        'X-Stainless-Runtime': 'unknown',\n        'X-Stainless-Runtime-Version': 'unknown',\n    };\n};\n// Note: modified from https://github.com/JS-DevTools/host-environment/blob/b1ab79ecde37db5d6e163c050e54fe7d287d7c92/src/isomorphic.browser.ts\nfunction getBrowserInfo() {\n    if (typeof navigator === 'undefined' || !navigator) {\n        return null;\n    }\n    // NOTE: The order matters here!\n    const browserPatterns = [\n        { key: 'edge', pattern: /Edge(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'ie', pattern: /MSIE(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'ie', pattern: /Trident(?:.*rv\\:(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'chrome', pattern: /Chrome(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'firefox', pattern: /Firefox(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'safari', pattern: /(?:Version\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?(?:\\W+Mobile\\S*)?\\W+Safari/ },\n    ];\n    // Find the FIRST matching browser\n    for (const { key, pattern } of browserPatterns) {\n        const match = pattern.exec(navigator.userAgent);\n        if (match) {\n            const major = match[1] || 0;\n            const minor = match[2] || 0;\n            const patch = match[3] || 0;\n            return { browser: key, version: `${major}.${minor}.${patch}` };\n        }\n    }\n    return null;\n}\nconst normalizeArch = (arch) => {\n    // Node docs:\n    // - https://nodejs.org/api/process.html#processarch\n    // Deno docs:\n    // - https://doc.deno.land/deno/stable/~/Deno.build\n    if (arch === 'x32')\n        return 'x32';\n    if (arch === 'x86_64' || arch === 'x64')\n        return 'x64';\n    if (arch === 'arm')\n        return 'arm';\n    if (arch === 'aarch64' || arch === 'arm64')\n        return 'arm64';\n    if (arch)\n        return `other:${arch}`;\n    return 'unknown';\n};\nconst normalizePlatform = (platform) => {\n    // Node platforms:\n    // - https://nodejs.org/api/process.html#processplatform\n    // Deno platforms:\n    // - https://doc.deno.land/deno/stable/~/Deno.build\n    // - https://github.com/denoland/deno/issues/14799\n    platform = platform.toLowerCase();\n    // NOTE: this iOS check is untested and may not work\n    // Node does not work natively on IOS, there is a fork at\n    // https://github.com/nodejs-mobile/nodejs-mobile\n    // however it is unknown at the time of writing how to detect if it is running\n    if (platform.includes('ios'))\n        return 'iOS';\n    if (platform === 'android')\n        return 'Android';\n    if (platform === 'darwin')\n        return 'MacOS';\n    if (platform === 'win32')\n        return 'Windows';\n    if (platform === 'freebsd')\n        return 'FreeBSD';\n    if (platform === 'openbsd')\n        return 'OpenBSD';\n    if (platform === 'linux')\n        return 'Linux';\n    if (platform)\n        return `Other:${platform}`;\n    return 'Unknown';\n};\nlet _platformHeaders;\nconst getPlatformHeaders = () => {\n    return (_platformHeaders ?? (_platformHeaders = getPlatformProperties()));\n};\nexport const safeJSON = (text) => {\n    try {\n        return JSON.parse(text);\n    }\n    catch (err) {\n        return undefined;\n    }\n};\n// https://url.spec.whatwg.org/#url-scheme-string\nconst startsWithSchemeRegexp = /^[a-z][a-z0-9+.-]*:/i;\nconst isAbsoluteURL = (url) => {\n    return startsWithSchemeRegexp.test(url);\n};\nexport const sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\nconst validatePositiveInteger = (name, n) => {\n    if (typeof n !== 'number' || !Number.isInteger(n)) {\n        throw new OpenAIError(`${name} must be an integer`);\n    }\n    if (n < 0) {\n        throw new OpenAIError(`${name} must be a positive integer`);\n    }\n    return n;\n};\nexport const castToError = (err) => {\n    if (err instanceof Error)\n        return err;\n    if (typeof err === 'object' && err !== null) {\n        try {\n            return new Error(JSON.stringify(err));\n        }\n        catch { }\n    }\n    return new Error(err);\n};\nexport const ensurePresent = (value) => {\n    if (value == null)\n        throw new OpenAIError(`Expected a value to be given but received ${value} instead.`);\n    return value;\n};\n/**\n * Read an environment variable.\n *\n * Trims beginning and trailing whitespace.\n *\n * Will return undefined if the environment variable doesn't exist or cannot be accessed.\n */\nexport const readEnv = (env) => {\n    if (typeof process !== 'undefined') {\n        return process.env?.[env]?.trim() ?? undefined;\n    }\n    if (typeof Deno !== 'undefined') {\n        return Deno.env?.get?.(env)?.trim();\n    }\n    return undefined;\n};\nexport const coerceInteger = (value) => {\n    if (typeof value === 'number')\n        return Math.round(value);\n    if (typeof value === 'string')\n        return parseInt(value, 10);\n    throw new OpenAIError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\nexport const coerceFloat = (value) => {\n    if (typeof value === 'number')\n        return value;\n    if (typeof value === 'string')\n        return parseFloat(value);\n    throw new OpenAIError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\nexport const coerceBoolean = (value) => {\n    if (typeof value === 'boolean')\n        return value;\n    if (typeof value === 'string')\n        return value === 'true';\n    return Boolean(value);\n};\nexport const maybeCoerceInteger = (value) => {\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceInteger(value);\n};\nexport const maybeCoerceFloat = (value) => {\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceFloat(value);\n};\nexport const maybeCoerceBoolean = (value) => {\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceBoolean(value);\n};\n// https://stackoverflow.com/a/34491287\nexport function isEmptyObj(obj) {\n    if (!obj)\n        return true;\n    for (const _k in obj)\n        return false;\n    return true;\n}\n// https://eslint.org/docs/latest/rules/no-prototype-builtins\nexport function hasOwn(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\n/**\n * Copies headers from \"newHeaders\" onto \"targetHeaders\",\n * using lower-case for all properties,\n * ignoring any keys with undefined values,\n * and deleting any keys with null values.\n */\nfunction applyHeadersMut(targetHeaders, newHeaders) {\n    for (const k in newHeaders) {\n        if (!hasOwn(newHeaders, k))\n            continue;\n        const lowerKey = k.toLowerCase();\n        if (!lowerKey)\n            continue;\n        const val = newHeaders[k];\n        if (val === null) {\n            delete targetHeaders[lowerKey];\n        }\n        else if (val !== undefined) {\n            targetHeaders[lowerKey] = val;\n        }\n    }\n}\nconst SENSITIVE_HEADERS = new Set(['authorization', 'api-key']);\nexport function debug(action, ...args) {\n    if (typeof process !== 'undefined' && process?.env?.['DEBUG'] === 'true') {\n        const modifiedArgs = args.map((arg) => {\n            if (!arg) {\n                return arg;\n            }\n            // Check for sensitive headers in request body 'headers' object\n            if (arg['headers']) {\n                // clone so we don't mutate\n                const modifiedArg = { ...arg, headers: { ...arg['headers'] } };\n                for (const header in arg['headers']) {\n                    if (SENSITIVE_HEADERS.has(header.toLowerCase())) {\n                        modifiedArg['headers'][header] = 'REDACTED';\n                    }\n                }\n                return modifiedArg;\n            }\n            let modifiedArg = null;\n            // Check for sensitive headers in headers object\n            for (const header in arg) {\n                if (SENSITIVE_HEADERS.has(header.toLowerCase())) {\n                    // avoid making a copy until we need to\n                    modifiedArg ?? (modifiedArg = { ...arg });\n                    modifiedArg[header] = 'REDACTED';\n                }\n            }\n            return modifiedArg ?? arg;\n        });\n        console.log(`OpenAI:DEBUG:${action}`, ...modifiedArgs);\n    }\n}\n/**\n * https://stackoverflow.com/a/2117523\n */\nconst uuid4 = () => {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n        const r = (Math.random() * 16) | 0;\n        const v = c === 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n};\nexport const isRunningInBrowser = () => {\n    return (\n    // @ts-ignore\n    typeof window !== 'undefined' &&\n        // @ts-ignore\n        typeof window.document !== 'undefined' &&\n        // @ts-ignore\n        typeof navigator !== 'undefined');\n};\nexport const isHeadersProtocol = (headers) => {\n    return typeof headers?.get === 'function';\n};\nexport const getRequiredHeader = (headers, header) => {\n    const foundHeader = getHeader(headers, header);\n    if (foundHeader === undefined) {\n        throw new Error(`Could not find ${header} header`);\n    }\n    return foundHeader;\n};\nexport const getHeader = (headers, header) => {\n    const lowerCasedHeader = header.toLowerCase();\n    if (isHeadersProtocol(headers)) {\n        // to deal with the case where the header looks like Stainless-Event-Id\n        const intercapsHeader = header[0]?.toUpperCase() +\n            header.substring(1).replace(/([^\\w])(\\w)/g, (_m, g1, g2) => g1 + g2.toUpperCase());\n        for (const key of [header, lowerCasedHeader, header.toUpperCase(), intercapsHeader]) {\n            const value = headers.get(key);\n            if (value) {\n                return value;\n            }\n        }\n    }\n    for (const [key, value] of Object.entries(headers)) {\n        if (key.toLowerCase() === lowerCasedHeader) {\n            if (Array.isArray(value)) {\n                if (value.length <= 1)\n                    return value[0];\n                console.warn(`Received ${value.length} entries for the ${header} header, using the first entry.`);\n                return value[0];\n            }\n            return value;\n        }\n    }\n    return undefined;\n};\n/**\n * Encodes a string to Base64 format.\n */\nexport const toBase64 = (str) => {\n    if (!str)\n        return '';\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str).toString('base64');\n    }\n    if (typeof btoa !== 'undefined') {\n        return btoa(str);\n    }\n    throw new OpenAIError('Cannot generate b64 string; Expected `Buffer` or `btoa` to be defined');\n};\n/**\n * Converts a Base64 encoded string to a Float32Array.\n * @param base64Str - The Base64 encoded string.\n * @returns An Array of numbers interpreted as Float32 values.\n */\nexport const toFloat32Array = (base64Str) => {\n    if (typeof Buffer !== 'undefined') {\n        // for Node.js environment\n        const buf = Buffer.from(base64Str, 'base64');\n        return Array.from(new Float32Array(buf.buffer, buf.byteOffset, buf.length / Float32Array.BYTES_PER_ELEMENT));\n    }\n    else {\n        // for legacy web platform APIs\n        const binaryStr = atob(base64Str);\n        const len = binaryStr.length;\n        const bytes = new Uint8Array(len);\n        for (let i = 0; i < len; i++) {\n            bytes[i] = binaryStr.charCodeAt(i);\n        }\n        return Array.from(new Float32Array(bytes.buffer));\n    }\n};\nexport function isObj(obj) {\n    return obj != null && typeof obj === 'object' && !Array.isArray(obj);\n}\n//# sourceMappingURL=core.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nexport class APIResource {\n    constructor(client) {\n        this._client = client;\n    }\n}\n//# sourceMappingURL=resource.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../resource.mjs\";\nexport class Completions extends APIResource {\n    create(body, options) {\n        return this._client.post('/completions', { body, ...options, stream: body.stream ?? false });\n    }\n}\n//# sourceMappingURL=completions.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport { isRequestOptions } from \"../../../core.mjs\";\nimport { ChatCompletionStoreMessagesPage } from \"./completions.mjs\";\nexport class Messages extends APIResource {\n    list(completionId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list(completionId, {}, query);\n        }\n        return this._client.getAPIList(`/chat/completions/${completionId}/messages`, ChatCompletionStoreMessagesPage, { query, ...options });\n    }\n}\nexport { ChatCompletionStoreMessagesPage };\n//# sourceMappingURL=messages.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { AbstractPage } from \"./core.mjs\";\n/**\n * Note: no pagination actually occurs yet, this is for forwards-compatibility.\n */\nexport class Page extends AbstractPage {\n    constructor(client, response, body, options) {\n        super(client, response, body, options);\n        this.data = body.data || [];\n        this.object = body.object;\n    }\n    getPaginatedItems() {\n        return this.data ?? [];\n    }\n    // @deprecated Please use `nextPageInfo()` instead\n    /**\n     * This page represents a response that isn't actually paginated at the API level\n     * so there will never be any next page params.\n     */\n    nextPageParams() {\n        return null;\n    }\n    nextPageInfo() {\n        return null;\n    }\n}\nexport class CursorPage extends AbstractPage {\n    constructor(client, response, body, options) {\n        super(client, response, body, options);\n        this.data = body.data || [];\n        this.has_more = body.has_more || false;\n    }\n    getPaginatedItems() {\n        return this.data ?? [];\n    }\n    hasNextPage() {\n        if (this.has_more === false) {\n            return false;\n        }\n        return super.hasNextPage();\n    }\n    // @deprecated Please use `nextPageInfo()` instead\n    nextPageParams() {\n        const info = this.nextPageInfo();\n        if (!info)\n            return null;\n        if ('params' in info)\n            return info.params;\n        const params = Object.fromEntries(info.url.searchParams);\n        if (!Object.keys(params).length)\n            return null;\n        return params;\n    }\n    nextPageInfo() {\n        const data = this.getPaginatedItems();\n        if (!data.length) {\n            return null;\n        }\n        const id = data[data.length - 1]?.id;\n        if (!id) {\n            return null;\n        }\n        return { params: { after: id } };\n    }\n}\n//# sourceMappingURL=pagination.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport { isRequestOptions } from \"../../../core.mjs\";\nimport * as MessagesAPI from \"./messages.mjs\";\nimport { Messages } from \"./messages.mjs\";\nimport { CursorPage } from \"../../../pagination.mjs\";\nexport class Completions extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.messages = new MessagesAPI.Messages(this._client);\n    }\n    create(body, options) {\n        return this._client.post('/chat/completions', { body, ...options, stream: body.stream ?? false });\n    }\n    /**\n     * Get a stored chat completion. Only Chat Completions that have been created with\n     * the `store` parameter set to `true` will be returned.\n     */\n    retrieve(completionId, options) {\n        return this._client.get(`/chat/completions/${completionId}`, options);\n    }\n    /**\n     * Modify a stored chat completion. Only Chat Completions that have been created\n     * with the `store` parameter set to `true` can be modified. Currently, the only\n     * supported modification is to update the `metadata` field.\n     */\n    update(completionId, body, options) {\n        return this._client.post(`/chat/completions/${completionId}`, { body, ...options });\n    }\n    list(query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList('/chat/completions', ChatCompletionsPage, { query, ...options });\n    }\n    /**\n     * Delete a stored chat completion. Only Chat Completions that have been created\n     * with the `store` parameter set to `true` can be deleted.\n     */\n    del(completionId, options) {\n        return this._client.delete(`/chat/completions/${completionId}`, options);\n    }\n}\nexport class ChatCompletionsPage extends CursorPage {\n}\nexport class ChatCompletionStoreMessagesPage extends CursorPage {\n}\nCompletions.ChatCompletionsPage = ChatCompletionsPage;\nCompletions.Messages = Messages;\n//# sourceMappingURL=completions.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport * as CompletionsAPI from \"./completions/completions.mjs\";\nimport { ChatCompletionsPage, Completions, } from \"./completions/completions.mjs\";\nexport class Chat extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.completions = new CompletionsAPI.Completions(this._client);\n    }\n}\nChat.Completions = Completions;\nChat.ChatCompletionsPage = ChatCompletionsPage;\n//# sourceMappingURL=chat.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../resource.mjs\";\nimport * as Core from \"../core.mjs\";\nexport class Embeddings extends APIResource {\n    /**\n     * Creates an embedding vector representing the input text.\n     */\n    create(body, options) {\n        const hasUserProvidedEncodingFormat = !!body.encoding_format;\n        // No encoding_format specified, defaulting to base64 for performance reasons\n        // See https://github.com/openai/openai-node/pull/1312\n        let encoding_format = hasUserProvidedEncodingFormat ? body.encoding_format : 'base64';\n        if (hasUserProvidedEncodingFormat) {\n            Core.debug('Request', 'User defined encoding_format:', body.encoding_format);\n        }\n        const response = this._client.post('/embeddings', {\n            body: {\n                ...body,\n                encoding_format: encoding_format,\n            },\n            ...options,\n        });\n        // if the user specified an encoding_format, return the response as-is\n        if (hasUserProvidedEncodingFormat) {\n            return response;\n        }\n        // in this stage, we are sure the user did not specify an encoding_format\n        // and we defaulted to base64 for performance reasons\n        // we are sure then that the response is base64 encoded, let's decode it\n        // the returned result will be a float32 array since this is OpenAI API's default encoding\n        Core.debug('response', 'Decoding base64 embeddings to float32 array');\n        return response._thenUnwrap((response) => {\n            if (response && response.data) {\n                response.data.forEach((embeddingBase64Obj) => {\n                    const embeddingBase64Str = embeddingBase64Obj.embedding;\n                    embeddingBase64Obj.embedding = Core.toFloat32Array(embeddingBase64Str);\n                });\n            }\n            return response;\n        });\n    }\n}\n//# sourceMappingURL=embeddings.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../resource.mjs\";\nimport { isRequestOptions } from \"../core.mjs\";\nimport { sleep } from \"../core.mjs\";\nimport { APIConnectionTimeoutError } from \"../error.mjs\";\nimport * as Core from \"../core.mjs\";\nimport { CursorPage } from \"../pagination.mjs\";\nexport class Files extends APIResource {\n    /**\n     * Upload a file that can be used across various endpoints. Individual files can be\n     * up to 512 MB, and the size of all files uploaded by one organization can be up\n     * to 100 GB.\n     *\n     * The Assistants API supports files up to 2 million tokens and of specific file\n     * types. See the\n     * [Assistants Tools guide](https://platform.openai.com/docs/assistants/tools) for\n     * details.\n     *\n     * The Fine-tuning API only supports `.jsonl` files. The input also has certain\n     * required formats for fine-tuning\n     * [chat](https://platform.openai.com/docs/api-reference/fine-tuning/chat-input) or\n     * [completions](https://platform.openai.com/docs/api-reference/fine-tuning/completions-input)\n     * models.\n     *\n     * The Batch API only supports `.jsonl` files up to 200 MB in size. The input also\n     * has a specific required\n     * [format](https://platform.openai.com/docs/api-reference/batch/request-input).\n     *\n     * Please [contact us](https://help.openai.com/) if you need to increase these\n     * storage limits.\n     */\n    create(body, options) {\n        return this._client.post('/files', Core.multipartFormRequestOptions({ body, ...options }));\n    }\n    /**\n     * Returns information about a specific file.\n     */\n    retrieve(fileId, options) {\n        return this._client.get(`/files/${fileId}`, options);\n    }\n    list(query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList('/files', FileObjectsPage, { query, ...options });\n    }\n    /**\n     * Delete a file.\n     */\n    del(fileId, options) {\n        return this._client.delete(`/files/${fileId}`, options);\n    }\n    /**\n     * Returns the contents of the specified file.\n     */\n    content(fileId, options) {\n        return this._client.get(`/files/${fileId}/content`, {\n            ...options,\n            headers: { Accept: 'application/binary', ...options?.headers },\n            __binaryResponse: true,\n        });\n    }\n    /**\n     * Returns the contents of the specified file.\n     *\n     * @deprecated The `.content()` method should be used instead\n     */\n    retrieveContent(fileId, options) {\n        return this._client.get(`/files/${fileId}/content`, options);\n    }\n    /**\n     * Waits for the given file to be processed, default timeout is 30 mins.\n     */\n    async waitForProcessing(id, { pollInterval = 5000, maxWait = 30 * 60 * 1000 } = {}) {\n        const TERMINAL_STATES = new Set(['processed', 'error', 'deleted']);\n        const start = Date.now();\n        let file = await this.retrieve(id);\n        while (!file.status || !TERMINAL_STATES.has(file.status)) {\n            await sleep(pollInterval);\n            file = await this.retrieve(id);\n            if (Date.now() - start > maxWait) {\n                throw new APIConnectionTimeoutError({\n                    message: `Giving up on waiting for file ${id} to finish processing after ${maxWait} milliseconds.`,\n                });\n            }\n        }\n        return file;\n    }\n}\nexport class FileObjectsPage extends CursorPage {\n}\nFiles.FileObjectsPage = FileObjectsPage;\n//# sourceMappingURL=files.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../resource.mjs\";\nimport * as Core from \"../core.mjs\";\nexport class Images extends APIResource {\n    /**\n     * Creates a variation of a given image. This endpoint only supports `dall-e-2`.\n     */\n    createVariation(body, options) {\n        return this._client.post('/images/variations', Core.multipartFormRequestOptions({ body, ...options }));\n    }\n    /**\n     * Creates an edited or extended image given one or more source images and a\n     * prompt. This endpoint only supports `gpt-image-1` and `dall-e-2`.\n     */\n    edit(body, options) {\n        return this._client.post('/images/edits', Core.multipartFormRequestOptions({ body, ...options }));\n    }\n    /**\n     * Creates an image given a prompt.\n     * [Learn more](https://platform.openai.com/docs/guides/images).\n     */\n    generate(body, options) {\n        return this._client.post('/images/generations', { body, ...options });\n    }\n}\n//# sourceMappingURL=images.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nexport class Speech extends APIResource {\n    /**\n     * Generates audio from the input text.\n     */\n    create(body, options) {\n        return this._client.post('/audio/speech', {\n            body,\n            ...options,\n            headers: { Accept: 'application/octet-stream', ...options?.headers },\n            __binaryResponse: true,\n        });\n    }\n}\n//# sourceMappingURL=speech.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport * as Core from \"../../core.mjs\";\nexport class Transcriptions extends APIResource {\n    create(body, options) {\n        return this._client.post('/audio/transcriptions', Core.multipartFormRequestOptions({\n            body,\n            ...options,\n            stream: body.stream ?? false,\n            __metadata: { model: body.model },\n        }));\n    }\n}\n//# sourceMappingURL=transcriptions.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport * as Core from \"../../core.mjs\";\nexport class Translations extends APIResource {\n    create(body, options) {\n        return this._client.post('/audio/translations', Core.multipartFormRequestOptions({ body, ...options, __metadata: { model: body.model } }));\n    }\n}\n//# sourceMappingURL=translations.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport * as SpeechAPI from \"./speech.mjs\";\nimport { Speech } from \"./speech.mjs\";\nimport * as TranscriptionsAPI from \"./transcriptions.mjs\";\nimport { Transcriptions, } from \"./transcriptions.mjs\";\nimport * as TranslationsAPI from \"./translations.mjs\";\nimport { Translations, } from \"./translations.mjs\";\nexport class Audio extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.transcriptions = new TranscriptionsAPI.Transcriptions(this._client);\n        this.translations = new TranslationsAPI.Translations(this._client);\n        this.speech = new SpeechAPI.Speech(this._client);\n    }\n}\nAudio.Transcriptions = Transcriptions;\nAudio.Translations = Translations;\nAudio.Speech = Speech;\n//# sourceMappingURL=audio.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../resource.mjs\";\nexport class Moderations extends APIResource {\n    /**\n     * Classifies if text and/or image inputs are potentially harmful. Learn more in\n     * the [moderation guide](https://platform.openai.com/docs/guides/moderation).\n     */\n    create(body, options) {\n        return this._client.post('/moderations', { body, ...options });\n    }\n}\n//# sourceMappingURL=moderations.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../resource.mjs\";\nimport { Page } from \"../pagination.mjs\";\nexport class Models extends APIResource {\n    /**\n     * Retrieves a model instance, providing basic information about the model such as\n     * the owner and permissioning.\n     */\n    retrieve(model, options) {\n        return this._client.get(`/models/${model}`, options);\n    }\n    /**\n     * Lists the currently available models, and provides basic information about each\n     * one such as the owner and availability.\n     */\n    list(options) {\n        return this._client.getAPIList('/models', ModelsPage, options);\n    }\n    /**\n     * Delete a fine-tuned model. You must have the Owner role in your organization to\n     * delete a model.\n     */\n    del(model, options) {\n        return this._client.delete(`/models/${model}`, options);\n    }\n}\n/**\n * Note: no pagination actually occurs yet, this is for forwards-compatibility.\n */\nexport class ModelsPage extends Page {\n}\nModels.ModelsPage = ModelsPage;\n//# sourceMappingURL=models.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport { isRequestOptions } from \"../../../core.mjs\";\nimport { Page } from \"../../../pagination.mjs\";\nexport class Permissions extends APIResource {\n    /**\n     * **NOTE:** Calling this endpoint requires an [admin API key](../admin-api-keys).\n     *\n     * This enables organization owners to share fine-tuned models with other projects\n     * in their organization.\n     */\n    create(fineTunedModelCheckpoint, body, options) {\n        return this._client.getAPIList(`/fine_tuning/checkpoints/${fineTunedModelCheckpoint}/permissions`, PermissionCreateResponsesPage, { body, method: 'post', ...options });\n    }\n    retrieve(fineTunedModelCheckpoint, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.retrieve(fineTunedModelCheckpoint, {}, query);\n        }\n        return this._client.get(`/fine_tuning/checkpoints/${fineTunedModelCheckpoint}/permissions`, {\n            query,\n            ...options,\n        });\n    }\n    /**\n     * **NOTE:** This endpoint requires an [admin API key](../admin-api-keys).\n     *\n     * Organization owners can use this endpoint to delete a permission for a\n     * fine-tuned model checkpoint.\n     */\n    del(fineTunedModelCheckpoint, permissionId, options) {\n        return this._client.delete(`/fine_tuning/checkpoints/${fineTunedModelCheckpoint}/permissions/${permissionId}`, options);\n    }\n}\n/**\n * Note: no pagination actually occurs yet, this is for forwards-compatibility.\n */\nexport class PermissionCreateResponsesPage extends Page {\n}\nPermissions.PermissionCreateResponsesPage = PermissionCreateResponsesPage;\n//# sourceMappingURL=permissions.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport * as PermissionsAPI from \"./permissions.mjs\";\nimport { PermissionCreateResponsesPage, Permissions, } from \"./permissions.mjs\";\nexport class Checkpoints extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.permissions = new PermissionsAPI.Permissions(this._client);\n    }\n}\nCheckpoints.Permissions = Permissions;\nCheckpoints.PermissionCreateResponsesPage = PermissionCreateResponsesPage;\n//# sourceMappingURL=checkpoints.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport { isRequestOptions } from \"../../../core.mjs\";\nimport { CursorPage } from \"../../../pagination.mjs\";\nexport class Checkpoints extends APIResource {\n    list(fineTuningJobId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list(fineTuningJobId, {}, query);\n        }\n        return this._client.getAPIList(`/fine_tuning/jobs/${fineTuningJobId}/checkpoints`, FineTuningJobCheckpointsPage, { query, ...options });\n    }\n}\nexport class FineTuningJobCheckpointsPage extends CursorPage {\n}\nCheckpoints.FineTuningJobCheckpointsPage = FineTuningJobCheckpointsPage;\n//# sourceMappingURL=checkpoints.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport { isRequestOptions } from \"../../../core.mjs\";\nimport * as CheckpointsAPI from \"./checkpoints.mjs\";\nimport { Checkpoints, FineTuningJobCheckpointsPage, } from \"./checkpoints.mjs\";\nimport { CursorPage } from \"../../../pagination.mjs\";\nexport class Jobs extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.checkpoints = new CheckpointsAPI.Checkpoints(this._client);\n    }\n    /**\n     * Creates a fine-tuning job which begins the process of creating a new model from\n     * a given dataset.\n     *\n     * Response includes details of the enqueued job including job status and the name\n     * of the fine-tuned models once complete.\n     *\n     * [Learn more about fine-tuning](https://platform.openai.com/docs/guides/fine-tuning)\n     */\n    create(body, options) {\n        return this._client.post('/fine_tuning/jobs', { body, ...options });\n    }\n    /**\n     * Get info about a fine-tuning job.\n     *\n     * [Learn more about fine-tuning](https://platform.openai.com/docs/guides/fine-tuning)\n     */\n    retrieve(fineTuningJobId, options) {\n        return this._client.get(`/fine_tuning/jobs/${fineTuningJobId}`, options);\n    }\n    list(query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList('/fine_tuning/jobs', FineTuningJobsPage, { query, ...options });\n    }\n    /**\n     * Immediately cancel a fine-tune job.\n     */\n    cancel(fineTuningJobId, options) {\n        return this._client.post(`/fine_tuning/jobs/${fineTuningJobId}/cancel`, options);\n    }\n    listEvents(fineTuningJobId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.listEvents(fineTuningJobId, {}, query);\n        }\n        return this._client.getAPIList(`/fine_tuning/jobs/${fineTuningJobId}/events`, FineTuningJobEventsPage, {\n            query,\n            ...options,\n        });\n    }\n}\nexport class FineTuningJobsPage extends CursorPage {\n}\nexport class FineTuningJobEventsPage extends CursorPage {\n}\nJobs.FineTuningJobsPage = FineTuningJobsPage;\nJobs.FineTuningJobEventsPage = FineTuningJobEventsPage;\nJobs.Checkpoints = Checkpoints;\nJobs.FineTuningJobCheckpointsPage = FineTuningJobCheckpointsPage;\n//# sourceMappingURL=jobs.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport * as CheckpointsAPI from \"./checkpoints/checkpoints.mjs\";\nimport { Checkpoints } from \"./checkpoints/checkpoints.mjs\";\nimport * as JobsAPI from \"./jobs/jobs.mjs\";\nimport { FineTuningJobEventsPage, FineTuningJobsPage, Jobs, } from \"./jobs/jobs.mjs\";\nexport class FineTuning extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.jobs = new JobsAPI.Jobs(this._client);\n        this.checkpoints = new CheckpointsAPI.Checkpoints(this._client);\n    }\n}\nFineTuning.Jobs = Jobs;\nFineTuning.FineTuningJobsPage = FineTuningJobsPage;\nFineTuning.FineTuningJobEventsPage = FineTuningJobEventsPage;\nFineTuning.Checkpoints = Checkpoints;\n//# sourceMappingURL=fine-tuning.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport { sleep, isRequestOptions } from \"../../core.mjs\";\nimport { CursorPage, Page } from \"../../pagination.mjs\";\nexport class Files extends APIResource {\n    /**\n     * Create a vector store file by attaching a\n     * [File](https://platform.openai.com/docs/api-reference/files) to a\n     * [vector store](https://platform.openai.com/docs/api-reference/vector-stores/object).\n     */\n    create(vectorStoreId, body, options) {\n        return this._client.post(`/vector_stores/${vectorStoreId}/files`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Retrieves a vector store file.\n     */\n    retrieve(vectorStoreId, fileId, options) {\n        return this._client.get(`/vector_stores/${vectorStoreId}/files/${fileId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Update attributes on a vector store file.\n     */\n    update(vectorStoreId, fileId, body, options) {\n        return this._client.post(`/vector_stores/${vectorStoreId}/files/${fileId}`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    list(vectorStoreId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list(vectorStoreId, {}, query);\n        }\n        return this._client.getAPIList(`/vector_stores/${vectorStoreId}/files`, VectorStoreFilesPage, {\n            query,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Delete a vector store file. This will remove the file from the vector store but\n     * the file itself will not be deleted. To delete the file, use the\n     * [delete file](https://platform.openai.com/docs/api-reference/files/delete)\n     * endpoint.\n     */\n    del(vectorStoreId, fileId, options) {\n        return this._client.delete(`/vector_stores/${vectorStoreId}/files/${fileId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Attach a file to the given vector store and wait for it to be processed.\n     */\n    async createAndPoll(vectorStoreId, body, options) {\n        const file = await this.create(vectorStoreId, body, options);\n        return await this.poll(vectorStoreId, file.id, options);\n    }\n    /**\n     * Wait for the vector store file to finish processing.\n     *\n     * Note: this will return even if the file failed to process, you need to check\n     * file.last_error and file.status to handle these cases\n     */\n    async poll(vectorStoreId, fileId, options) {\n        const headers = { ...options?.headers, 'X-Stainless-Poll-Helper': 'true' };\n        if (options?.pollIntervalMs) {\n            headers['X-Stainless-Custom-Poll-Interval'] = options.pollIntervalMs.toString();\n        }\n        while (true) {\n            const fileResponse = await this.retrieve(vectorStoreId, fileId, {\n                ...options,\n                headers,\n            }).withResponse();\n            const file = fileResponse.data;\n            switch (file.status) {\n                case 'in_progress':\n                    let sleepInterval = 5000;\n                    if (options?.pollIntervalMs) {\n                        sleepInterval = options.pollIntervalMs;\n                    }\n                    else {\n                        const headerInterval = fileResponse.response.headers.get('openai-poll-after-ms');\n                        if (headerInterval) {\n                            const headerIntervalMs = parseInt(headerInterval);\n                            if (!isNaN(headerIntervalMs)) {\n                                sleepInterval = headerIntervalMs;\n                            }\n                        }\n                    }\n                    await sleep(sleepInterval);\n                    break;\n                case 'failed':\n                case 'completed':\n                    return file;\n            }\n        }\n    }\n    /**\n     * Upload a file to the `files` API and then attach it to the given vector store.\n     *\n     * Note the file will be asynchronously processed (you can use the alternative\n     * polling helper method to wait for processing to complete).\n     */\n    async upload(vectorStoreId, file, options) {\n        const fileInfo = await this._client.files.create({ file: file, purpose: 'assistants' }, options);\n        return this.create(vectorStoreId, { file_id: fileInfo.id }, options);\n    }\n    /**\n     * Add a file to a vector store and poll until processing is complete.\n     */\n    async uploadAndPoll(vectorStoreId, file, options) {\n        const fileInfo = await this.upload(vectorStoreId, file, options);\n        return await this.poll(vectorStoreId, fileInfo.id, options);\n    }\n    /**\n     * Retrieve the parsed contents of a vector store file.\n     */\n    content(vectorStoreId, fileId, options) {\n        return this._client.getAPIList(`/vector_stores/${vectorStoreId}/files/${fileId}/content`, FileContentResponsesPage, { ...options, headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers } });\n    }\n}\nexport class VectorStoreFilesPage extends CursorPage {\n}\n/**\n * Note: no pagination actually occurs yet, this is for forwards-compatibility.\n */\nexport class FileContentResponsesPage extends Page {\n}\nFiles.VectorStoreFilesPage = VectorStoreFilesPage;\nFiles.FileContentResponsesPage = FileContentResponsesPage;\n//# sourceMappingURL=files.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport { isRequestOptions } from \"../../core.mjs\";\nimport { sleep } from \"../../core.mjs\";\nimport { allSettledWithThrow } from \"../../lib/Util.mjs\";\nimport { VectorStoreFilesPage } from \"./files.mjs\";\nexport class FileBatches extends APIResource {\n    /**\n     * Create a vector store file batch.\n     */\n    create(vectorStoreId, body, options) {\n        return this._client.post(`/vector_stores/${vectorStoreId}/file_batches`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Retrieves a vector store file batch.\n     */\n    retrieve(vectorStoreId, batchId, options) {\n        return this._client.get(`/vector_stores/${vectorStoreId}/file_batches/${batchId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Cancel a vector store file batch. This attempts to cancel the processing of\n     * files in this batch as soon as possible.\n     */\n    cancel(vectorStoreId, batchId, options) {\n        return this._client.post(`/vector_stores/${vectorStoreId}/file_batches/${batchId}/cancel`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Create a vector store batch and poll until all files have been processed.\n     */\n    async createAndPoll(vectorStoreId, body, options) {\n        const batch = await this.create(vectorStoreId, body);\n        return await this.poll(vectorStoreId, batch.id, options);\n    }\n    listFiles(vectorStoreId, batchId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.listFiles(vectorStoreId, batchId, {}, query);\n        }\n        return this._client.getAPIList(`/vector_stores/${vectorStoreId}/file_batches/${batchId}/files`, VectorStoreFilesPage, { query, ...options, headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers } });\n    }\n    /**\n     * Wait for the given file batch to be processed.\n     *\n     * Note: this will return even if one of the files failed to process, you need to\n     * check batch.file_counts.failed_count to handle this case.\n     */\n    async poll(vectorStoreId, batchId, options) {\n        const headers = { ...options?.headers, 'X-Stainless-Poll-Helper': 'true' };\n        if (options?.pollIntervalMs) {\n            headers['X-Stainless-Custom-Poll-Interval'] = options.pollIntervalMs.toString();\n        }\n        while (true) {\n            const { data: batch, response } = await this.retrieve(vectorStoreId, batchId, {\n                ...options,\n                headers,\n            }).withResponse();\n            switch (batch.status) {\n                case 'in_progress':\n                    let sleepInterval = 5000;\n                    if (options?.pollIntervalMs) {\n                        sleepInterval = options.pollIntervalMs;\n                    }\n                    else {\n                        const headerInterval = response.headers.get('openai-poll-after-ms');\n                        if (headerInterval) {\n                            const headerIntervalMs = parseInt(headerInterval);\n                            if (!isNaN(headerIntervalMs)) {\n                                sleepInterval = headerIntervalMs;\n                            }\n                        }\n                    }\n                    await sleep(sleepInterval);\n                    break;\n                case 'failed':\n                case 'cancelled':\n                case 'completed':\n                    return batch;\n            }\n        }\n    }\n    /**\n     * Uploads the given files concurrently and then creates a vector store file batch.\n     *\n     * The concurrency limit is configurable using the `maxConcurrency` parameter.\n     */\n    async uploadAndPoll(vectorStoreId, { files, fileIds = [] }, options) {\n        if (files == null || files.length == 0) {\n            throw new Error(`No \\`files\\` provided to process. If you've already uploaded files you should use \\`.createAndPoll()\\` instead`);\n        }\n        const configuredConcurrency = options?.maxConcurrency ?? 5;\n        // We cap the number of workers at the number of files (so we don't start any unnecessary workers)\n        const concurrencyLimit = Math.min(configuredConcurrency, files.length);\n        const client = this._client;\n        const fileIterator = files.values();\n        const allFileIds = [...fileIds];\n        // This code is based on this design. The libraries don't accommodate our environment limits.\n        // https://stackoverflow.com/questions/40639432/what-is-the-best-way-to-limit-concurrency-when-using-es6s-promise-all\n        async function processFiles(iterator) {\n            for (let item of iterator) {\n                const fileObj = await client.files.create({ file: item, purpose: 'assistants' }, options);\n                allFileIds.push(fileObj.id);\n            }\n        }\n        // Start workers to process results\n        const workers = Array(concurrencyLimit).fill(fileIterator).map(processFiles);\n        // Wait for all processing to complete.\n        await allSettledWithThrow(workers);\n        return await this.createAndPoll(vectorStoreId, {\n            file_ids: allFileIds,\n        });\n    }\n}\nexport { VectorStoreFilesPage };\n//# sourceMappingURL=file-batches.mjs.map","/**\n * Like `Promise.allSettled()` but throws an error if any promises are rejected.\n */\nexport const allSettledWithThrow = async (promises) => {\n    const results = await Promise.allSettled(promises);\n    const rejected = results.filter((result) => result.status === 'rejected');\n    if (rejected.length) {\n        for (const result of rejected) {\n            console.error(result.reason);\n        }\n        throw new Error(`${rejected.length} promise(s) failed - see the above errors`);\n    }\n    // Note: TS was complaining about using `.filter().map()` here for some reason\n    const values = [];\n    for (const result of results) {\n        if (result.status === 'fulfilled') {\n            values.push(result.value);\n        }\n    }\n    return values;\n};\n//# sourceMappingURL=Util.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport { isRequestOptions } from \"../../core.mjs\";\nimport * as FileBatchesAPI from \"./file-batches.mjs\";\nimport { FileBatches, } from \"./file-batches.mjs\";\nimport * as FilesAPI from \"./files.mjs\";\nimport { FileContentResponsesPage, Files, VectorStoreFilesPage, } from \"./files.mjs\";\nimport { CursorPage, Page } from \"../../pagination.mjs\";\nexport class VectorStores extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.files = new FilesAPI.Files(this._client);\n        this.fileBatches = new FileBatchesAPI.FileBatches(this._client);\n    }\n    /**\n     * Create a vector store.\n     */\n    create(body, options) {\n        return this._client.post('/vector_stores', {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Retrieves a vector store.\n     */\n    retrieve(vectorStoreId, options) {\n        return this._client.get(`/vector_stores/${vectorStoreId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Modifies a vector store.\n     */\n    update(vectorStoreId, body, options) {\n        return this._client.post(`/vector_stores/${vectorStoreId}`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    list(query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList('/vector_stores', VectorStoresPage, {\n            query,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Delete a vector store.\n     */\n    del(vectorStoreId, options) {\n        return this._client.delete(`/vector_stores/${vectorStoreId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Search a vector store for relevant chunks based on a query and file attributes\n     * filter.\n     */\n    search(vectorStoreId, body, options) {\n        return this._client.getAPIList(`/vector_stores/${vectorStoreId}/search`, VectorStoreSearchResponsesPage, {\n            body,\n            method: 'post',\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n}\nexport class VectorStoresPage extends CursorPage {\n}\n/**\n * Note: no pagination actually occurs yet, this is for forwards-compatibility.\n */\nexport class VectorStoreSearchResponsesPage extends Page {\n}\nVectorStores.VectorStoresPage = VectorStoresPage;\nVectorStores.VectorStoreSearchResponsesPage = VectorStoreSearchResponsesPage;\nVectorStores.Files = Files;\nVectorStores.VectorStoreFilesPage = VectorStoreFilesPage;\nVectorStores.FileContentResponsesPage = FileContentResponsesPage;\nVectorStores.FileBatches = FileBatches;\n//# sourceMappingURL=vector-stores.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport { isRequestOptions } from \"../../core.mjs\";\nimport { CursorPage } from \"../../pagination.mjs\";\nimport { AssistantStream } from \"../../lib/AssistantStream.mjs\";\nexport class Assistants extends APIResource {\n    /**\n     * Create an assistant with a model and instructions.\n     */\n    create(body, options) {\n        return this._client.post('/assistants', {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Retrieves an assistant.\n     */\n    retrieve(assistantId, options) {\n        return this._client.get(`/assistants/${assistantId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Modifies an assistant.\n     */\n    update(assistantId, body, options) {\n        return this._client.post(`/assistants/${assistantId}`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    list(query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList('/assistants', AssistantsPage, {\n            query,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Delete an assistant.\n     */\n    del(assistantId, options) {\n        return this._client.delete(`/assistants/${assistantId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n}\nexport class AssistantsPage extends CursorPage {\n}\nAssistants.AssistantsPage = AssistantsPage;\n//# sourceMappingURL=assistants.mjs.map","export function isRunnableFunctionWithParse(fn) {\n    return typeof fn.parse === 'function';\n}\n/**\n * This is helper class for passing a `function` and `parse` where the `function`\n * argument type matches the `parse` return type.\n *\n * @deprecated - please use ParsingToolFunction instead.\n */\nexport class ParsingFunction {\n    constructor(input) {\n        this.function = input.function;\n        this.parse = input.parse;\n        this.parameters = input.parameters;\n        this.description = input.description;\n        this.name = input.name;\n    }\n}\n/**\n * This is helper class for passing a `function` and `parse` where the `function`\n * argument type matches the `parse` return type.\n */\nexport class ParsingToolFunction {\n    constructor(input) {\n        this.type = 'function';\n        this.function = input;\n    }\n}\n//# sourceMappingURL=RunnableFunction.mjs.map","export const isAssistantMessage = (message) => {\n    return message?.role === 'assistant';\n};\nexport const isFunctionMessage = (message) => {\n    return message?.role === 'function';\n};\nexport const isToolMessage = (message) => {\n    return message?.role === 'tool';\n};\nexport function isPresent(obj) {\n    return obj != null;\n}\n//# sourceMappingURL=chatCompletionUtils.mjs.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _EventStream_instances, _EventStream_connectedPromise, _EventStream_resolveConnectedPromise, _EventStream_rejectConnectedPromise, _EventStream_endPromise, _EventStream_resolveEndPromise, _EventStream_rejectEndPromise, _EventStream_listeners, _EventStream_ended, _EventStream_errored, _EventStream_aborted, _EventStream_catchingPromiseCreated, _EventStream_handleError;\nimport { APIUserAbortError, OpenAIError } from \"../error.mjs\";\nexport class EventStream {\n    constructor() {\n        _EventStream_instances.add(this);\n        this.controller = new AbortController();\n        _EventStream_connectedPromise.set(this, void 0);\n        _EventStream_resolveConnectedPromise.set(this, () => { });\n        _EventStream_rejectConnectedPromise.set(this, () => { });\n        _EventStream_endPromise.set(this, void 0);\n        _EventStream_resolveEndPromise.set(this, () => { });\n        _EventStream_rejectEndPromise.set(this, () => { });\n        _EventStream_listeners.set(this, {});\n        _EventStream_ended.set(this, false);\n        _EventStream_errored.set(this, false);\n        _EventStream_aborted.set(this, false);\n        _EventStream_catchingPromiseCreated.set(this, false);\n        __classPrivateFieldSet(this, _EventStream_connectedPromise, new Promise((resolve, reject) => {\n            __classPrivateFieldSet(this, _EventStream_resolveConnectedPromise, resolve, \"f\");\n            __classPrivateFieldSet(this, _EventStream_rejectConnectedPromise, reject, \"f\");\n        }), \"f\");\n        __classPrivateFieldSet(this, _EventStream_endPromise, new Promise((resolve, reject) => {\n            __classPrivateFieldSet(this, _EventStream_resolveEndPromise, resolve, \"f\");\n            __classPrivateFieldSet(this, _EventStream_rejectEndPromise, reject, \"f\");\n        }), \"f\");\n        // Don't let these promises cause unhandled rejection errors.\n        // we will manually cause an unhandled rejection error later\n        // if the user hasn't registered any error listener or called\n        // any promise-returning method.\n        __classPrivateFieldGet(this, _EventStream_connectedPromise, \"f\").catch(() => { });\n        __classPrivateFieldGet(this, _EventStream_endPromise, \"f\").catch(() => { });\n    }\n    _run(executor) {\n        // Unfortunately if we call `executor()` immediately we get runtime errors about\n        // references to `this` before the `super()` constructor call returns.\n        setTimeout(() => {\n            executor().then(() => {\n                this._emitFinal();\n                this._emit('end');\n            }, __classPrivateFieldGet(this, _EventStream_instances, \"m\", _EventStream_handleError).bind(this));\n        }, 0);\n    }\n    _connected() {\n        if (this.ended)\n            return;\n        __classPrivateFieldGet(this, _EventStream_resolveConnectedPromise, \"f\").call(this);\n        this._emit('connect');\n    }\n    get ended() {\n        return __classPrivateFieldGet(this, _EventStream_ended, \"f\");\n    }\n    get errored() {\n        return __classPrivateFieldGet(this, _EventStream_errored, \"f\");\n    }\n    get aborted() {\n        return __classPrivateFieldGet(this, _EventStream_aborted, \"f\");\n    }\n    abort() {\n        this.controller.abort();\n    }\n    /**\n     * Adds the listener function to the end of the listeners array for the event.\n     * No checks are made to see if the listener has already been added. Multiple calls passing\n     * the same combination of event and listener will result in the listener being added, and\n     * called, multiple times.\n     * @returns this ChatCompletionStream, so that calls can be chained\n     */\n    on(event, listener) {\n        const listeners = __classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event] || (__classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event] = []);\n        listeners.push({ listener });\n        return this;\n    }\n    /**\n     * Removes the specified listener from the listener array for the event.\n     * off() will remove, at most, one instance of a listener from the listener array. If any single\n     * listener has been added multiple times to the listener array for the specified event, then\n     * off() must be called multiple times to remove each instance.\n     * @returns this ChatCompletionStream, so that calls can be chained\n     */\n    off(event, listener) {\n        const listeners = __classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event];\n        if (!listeners)\n            return this;\n        const index = listeners.findIndex((l) => l.listener === listener);\n        if (index >= 0)\n            listeners.splice(index, 1);\n        return this;\n    }\n    /**\n     * Adds a one-time listener function for the event. The next time the event is triggered,\n     * this listener is removed and then invoked.\n     * @returns this ChatCompletionStream, so that calls can be chained\n     */\n    once(event, listener) {\n        const listeners = __classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event] || (__classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event] = []);\n        listeners.push({ listener, once: true });\n        return this;\n    }\n    /**\n     * This is similar to `.once()`, but returns a Promise that resolves the next time\n     * the event is triggered, instead of calling a listener callback.\n     * @returns a Promise that resolves the next time given event is triggered,\n     * or rejects if an error is emitted.  (If you request the 'error' event,\n     * returns a promise that resolves with the error).\n     *\n     * Example:\n     *\n     *   const message = await stream.emitted('message') // rejects if the stream errors\n     */\n    emitted(event) {\n        return new Promise((resolve, reject) => {\n            __classPrivateFieldSet(this, _EventStream_catchingPromiseCreated, true, \"f\");\n            if (event !== 'error')\n                this.once('error', reject);\n            this.once(event, resolve);\n        });\n    }\n    async done() {\n        __classPrivateFieldSet(this, _EventStream_catchingPromiseCreated, true, \"f\");\n        await __classPrivateFieldGet(this, _EventStream_endPromise, \"f\");\n    }\n    _emit(event, ...args) {\n        // make sure we don't emit any events after end\n        if (__classPrivateFieldGet(this, _EventStream_ended, \"f\")) {\n            return;\n        }\n        if (event === 'end') {\n            __classPrivateFieldSet(this, _EventStream_ended, true, \"f\");\n            __classPrivateFieldGet(this, _EventStream_resolveEndPromise, \"f\").call(this);\n        }\n        const listeners = __classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event];\n        if (listeners) {\n            __classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event] = listeners.filter((l) => !l.once);\n            listeners.forEach(({ listener }) => listener(...args));\n        }\n        if (event === 'abort') {\n            const error = args[0];\n            if (!__classPrivateFieldGet(this, _EventStream_catchingPromiseCreated, \"f\") && !listeners?.length) {\n                Promise.reject(error);\n            }\n            __classPrivateFieldGet(this, _EventStream_rejectConnectedPromise, \"f\").call(this, error);\n            __classPrivateFieldGet(this, _EventStream_rejectEndPromise, \"f\").call(this, error);\n            this._emit('end');\n            return;\n        }\n        if (event === 'error') {\n            // NOTE: _emit('error', error) should only be called from #handleError().\n            const error = args[0];\n            if (!__classPrivateFieldGet(this, _EventStream_catchingPromiseCreated, \"f\") && !listeners?.length) {\n                // Trigger an unhandled rejection if the user hasn't registered any error handlers.\n                // If you are seeing stack traces here, make sure to handle errors via either:\n                // - runner.on('error', () => ...)\n                // - await runner.done()\n                // - await runner.finalChatCompletion()\n                // - etc.\n                Promise.reject(error);\n            }\n            __classPrivateFieldGet(this, _EventStream_rejectConnectedPromise, \"f\").call(this, error);\n            __classPrivateFieldGet(this, _EventStream_rejectEndPromise, \"f\").call(this, error);\n            this._emit('end');\n        }\n    }\n    _emitFinal() { }\n}\n_EventStream_connectedPromise = new WeakMap(), _EventStream_resolveConnectedPromise = new WeakMap(), _EventStream_rejectConnectedPromise = new WeakMap(), _EventStream_endPromise = new WeakMap(), _EventStream_resolveEndPromise = new WeakMap(), _EventStream_rejectEndPromise = new WeakMap(), _EventStream_listeners = new WeakMap(), _EventStream_ended = new WeakMap(), _EventStream_errored = new WeakMap(), _EventStream_aborted = new WeakMap(), _EventStream_catchingPromiseCreated = new WeakMap(), _EventStream_instances = new WeakSet(), _EventStream_handleError = function _EventStream_handleError(error) {\n    __classPrivateFieldSet(this, _EventStream_errored, true, \"f\");\n    if (error instanceof Error && error.name === 'AbortError') {\n        error = new APIUserAbortError();\n    }\n    if (error instanceof APIUserAbortError) {\n        __classPrivateFieldSet(this, _EventStream_aborted, true, \"f\");\n        return this._emit('abort', error);\n    }\n    if (error instanceof OpenAIError) {\n        return this._emit('error', error);\n    }\n    if (error instanceof Error) {\n        const openAIError = new OpenAIError(error.message);\n        // @ts-ignore\n        openAIError.cause = error;\n        return this._emit('error', openAIError);\n    }\n    return this._emit('error', new OpenAIError(String(error)));\n};\n//# sourceMappingURL=EventStream.mjs.map","import { ContentFilterFinishReasonError, LengthFinishReasonError, OpenAIError } from \"../error.mjs\";\nexport function makeParseableResponseFormat(response_format, parser) {\n    const obj = { ...response_format };\n    Object.defineProperties(obj, {\n        $brand: {\n            value: 'auto-parseable-response-format',\n            enumerable: false,\n        },\n        $parseRaw: {\n            value: parser,\n            enumerable: false,\n        },\n    });\n    return obj;\n}\nexport function makeParseableTextFormat(response_format, parser) {\n    const obj = { ...response_format };\n    Object.defineProperties(obj, {\n        $brand: {\n            value: 'auto-parseable-response-format',\n            enumerable: false,\n        },\n        $parseRaw: {\n            value: parser,\n            enumerable: false,\n        },\n    });\n    return obj;\n}\nexport function isAutoParsableResponseFormat(response_format) {\n    return response_format?.['$brand'] === 'auto-parseable-response-format';\n}\nexport function makeParseableTool(tool, { parser, callback, }) {\n    const obj = { ...tool };\n    Object.defineProperties(obj, {\n        $brand: {\n            value: 'auto-parseable-tool',\n            enumerable: false,\n        },\n        $parseRaw: {\n            value: parser,\n            enumerable: false,\n        },\n        $callback: {\n            value: callback,\n            enumerable: false,\n        },\n    });\n    return obj;\n}\nexport function isAutoParsableTool(tool) {\n    return tool?.['$brand'] === 'auto-parseable-tool';\n}\nexport function maybeParseChatCompletion(completion, params) {\n    if (!params || !hasAutoParseableInput(params)) {\n        return {\n            ...completion,\n            choices: completion.choices.map((choice) => ({\n                ...choice,\n                message: {\n                    ...choice.message,\n                    parsed: null,\n                    ...(choice.message.tool_calls ?\n                        {\n                            tool_calls: choice.message.tool_calls,\n                        }\n                        : undefined),\n                },\n            })),\n        };\n    }\n    return parseChatCompletion(completion, params);\n}\nexport function parseChatCompletion(completion, params) {\n    const choices = completion.choices.map((choice) => {\n        if (choice.finish_reason === 'length') {\n            throw new LengthFinishReasonError();\n        }\n        if (choice.finish_reason === 'content_filter') {\n            throw new ContentFilterFinishReasonError();\n        }\n        return {\n            ...choice,\n            message: {\n                ...choice.message,\n                ...(choice.message.tool_calls ?\n                    {\n                        tool_calls: choice.message.tool_calls?.map((toolCall) => parseToolCall(params, toolCall)) ?? undefined,\n                    }\n                    : undefined),\n                parsed: choice.message.content && !choice.message.refusal ?\n                    parseResponseFormat(params, choice.message.content)\n                    : null,\n            },\n        };\n    });\n    return { ...completion, choices };\n}\nfunction parseResponseFormat(params, content) {\n    if (params.response_format?.type !== 'json_schema') {\n        return null;\n    }\n    if (params.response_format?.type === 'json_schema') {\n        if ('$parseRaw' in params.response_format) {\n            const response_format = params.response_format;\n            return response_format.$parseRaw(content);\n        }\n        return JSON.parse(content);\n    }\n    return null;\n}\nfunction parseToolCall(params, toolCall) {\n    const inputTool = params.tools?.find((inputTool) => inputTool.function?.name === toolCall.function.name);\n    return {\n        ...toolCall,\n        function: {\n            ...toolCall.function,\n            parsed_arguments: isAutoParsableTool(inputTool) ? inputTool.$parseRaw(toolCall.function.arguments)\n                : inputTool?.function.strict ? JSON.parse(toolCall.function.arguments)\n                    : null,\n        },\n    };\n}\nexport function shouldParseToolCall(params, toolCall) {\n    if (!params) {\n        return false;\n    }\n    const inputTool = params.tools?.find((inputTool) => inputTool.function?.name === toolCall.function.name);\n    return isAutoParsableTool(inputTool) || inputTool?.function.strict || false;\n}\nexport function hasAutoParseableInput(params) {\n    if (isAutoParsableResponseFormat(params.response_format)) {\n        return true;\n    }\n    return (params.tools?.some((t) => isAutoParsableTool(t) || (t.type === 'function' && t.function.strict === true)) ?? false);\n}\nexport function validateInputTools(tools) {\n    for (const tool of tools ?? []) {\n        if (tool.type !== 'function') {\n            throw new OpenAIError(`Currently only \\`function\\` tool types support auto-parsing; Received \\`${tool.type}\\``);\n        }\n        if (tool.function.strict !== true) {\n            throw new OpenAIError(`The \\`${tool.function.name}\\` tool is not marked with \\`strict: true\\`. Only strict function tools can be auto-parsed`);\n        }\n    }\n}\n//# sourceMappingURL=parser.mjs.map","var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _AbstractChatCompletionRunner_instances, _AbstractChatCompletionRunner_getFinalContent, _AbstractChatCompletionRunner_getFinalMessage, _AbstractChatCompletionRunner_getFinalFunctionCall, _AbstractChatCompletionRunner_getFinalFunctionCallResult, _AbstractChatCompletionRunner_calculateTotalUsage, _AbstractChatCompletionRunner_validateParams, _AbstractChatCompletionRunner_stringifyFunctionCallResult;\nimport { OpenAIError } from \"../error.mjs\";\nimport { isRunnableFunctionWithParse, } from \"./RunnableFunction.mjs\";\nimport { isAssistantMessage, isFunctionMessage, isToolMessage } from \"./chatCompletionUtils.mjs\";\nimport { EventStream } from \"./EventStream.mjs\";\nimport { isAutoParsableTool, parseChatCompletion } from \"../lib/parser.mjs\";\nconst DEFAULT_MAX_CHAT_COMPLETIONS = 10;\nexport class AbstractChatCompletionRunner extends EventStream {\n    constructor() {\n        super(...arguments);\n        _AbstractChatCompletionRunner_instances.add(this);\n        this._chatCompletions = [];\n        this.messages = [];\n    }\n    _addChatCompletion(chatCompletion) {\n        this._chatCompletions.push(chatCompletion);\n        this._emit('chatCompletion', chatCompletion);\n        const message = chatCompletion.choices[0]?.message;\n        if (message)\n            this._addMessage(message);\n        return chatCompletion;\n    }\n    _addMessage(message, emit = true) {\n        if (!('content' in message))\n            message.content = null;\n        this.messages.push(message);\n        if (emit) {\n            this._emit('message', message);\n            if ((isFunctionMessage(message) || isToolMessage(message)) && message.content) {\n                // Note, this assumes that {role: 'tool', content: …} is always the result of a call of tool of type=function.\n                this._emit('functionCallResult', message.content);\n            }\n            else if (isAssistantMessage(message) && message.function_call) {\n                this._emit('functionCall', message.function_call);\n            }\n            else if (isAssistantMessage(message) && message.tool_calls) {\n                for (const tool_call of message.tool_calls) {\n                    if (tool_call.type === 'function') {\n                        this._emit('functionCall', tool_call.function);\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * @returns a promise that resolves with the final ChatCompletion, or rejects\n     * if an error occurred or the stream ended prematurely without producing a ChatCompletion.\n     */\n    async finalChatCompletion() {\n        await this.done();\n        const completion = this._chatCompletions[this._chatCompletions.length - 1];\n        if (!completion)\n            throw new OpenAIError('stream ended without producing a ChatCompletion');\n        return completion;\n    }\n    /**\n     * @returns a promise that resolves with the content of the final ChatCompletionMessage, or rejects\n     * if an error occurred or the stream ended prematurely without producing a ChatCompletionMessage.\n     */\n    async finalContent() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalContent).call(this);\n    }\n    /**\n     * @returns a promise that resolves with the the final assistant ChatCompletionMessage response,\n     * or rejects if an error occurred or the stream ended prematurely without producing a ChatCompletionMessage.\n     */\n    async finalMessage() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalMessage).call(this);\n    }\n    /**\n     * @returns a promise that resolves with the content of the final FunctionCall, or rejects\n     * if an error occurred or the stream ended prematurely without producing a ChatCompletionMessage.\n     */\n    async finalFunctionCall() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionCall).call(this);\n    }\n    async finalFunctionCallResult() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionCallResult).call(this);\n    }\n    async totalUsage() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_calculateTotalUsage).call(this);\n    }\n    allChatCompletions() {\n        return [...this._chatCompletions];\n    }\n    _emitFinal() {\n        const completion = this._chatCompletions[this._chatCompletions.length - 1];\n        if (completion)\n            this._emit('finalChatCompletion', completion);\n        const finalMessage = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalMessage).call(this);\n        if (finalMessage)\n            this._emit('finalMessage', finalMessage);\n        const finalContent = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalContent).call(this);\n        if (finalContent)\n            this._emit('finalContent', finalContent);\n        const finalFunctionCall = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionCall).call(this);\n        if (finalFunctionCall)\n            this._emit('finalFunctionCall', finalFunctionCall);\n        const finalFunctionCallResult = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionCallResult).call(this);\n        if (finalFunctionCallResult != null)\n            this._emit('finalFunctionCallResult', finalFunctionCallResult);\n        if (this._chatCompletions.some((c) => c.usage)) {\n            this._emit('totalUsage', __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_calculateTotalUsage).call(this));\n        }\n    }\n    async _createChatCompletion(client, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_validateParams).call(this, params);\n        const chatCompletion = await client.chat.completions.create({ ...params, stream: false }, { ...options, signal: this.controller.signal });\n        this._connected();\n        return this._addChatCompletion(parseChatCompletion(chatCompletion, params));\n    }\n    async _runChatCompletion(client, params, options) {\n        for (const message of params.messages) {\n            this._addMessage(message, false);\n        }\n        return await this._createChatCompletion(client, params, options);\n    }\n    async _runFunctions(client, params, options) {\n        const role = 'function';\n        const { function_call = 'auto', stream, ...restParams } = params;\n        const singleFunctionToCall = typeof function_call !== 'string' && function_call?.name;\n        const { maxChatCompletions = DEFAULT_MAX_CHAT_COMPLETIONS } = options || {};\n        const functionsByName = {};\n        for (const f of params.functions) {\n            functionsByName[f.name || f.function.name] = f;\n        }\n        const functions = params.functions.map((f) => ({\n            name: f.name || f.function.name,\n            parameters: f.parameters,\n            description: f.description,\n        }));\n        for (const message of params.messages) {\n            this._addMessage(message, false);\n        }\n        for (let i = 0; i < maxChatCompletions; ++i) {\n            const chatCompletion = await this._createChatCompletion(client, {\n                ...restParams,\n                function_call,\n                functions,\n                messages: [...this.messages],\n            }, options);\n            const message = chatCompletion.choices[0]?.message;\n            if (!message) {\n                throw new OpenAIError(`missing message in ChatCompletion response`);\n            }\n            if (!message.function_call)\n                return;\n            const { name, arguments: args } = message.function_call;\n            const fn = functionsByName[name];\n            if (!fn) {\n                const content = `Invalid function_call: ${JSON.stringify(name)}. Available options are: ${functions\n                    .map((f) => JSON.stringify(f.name))\n                    .join(', ')}. Please try again`;\n                this._addMessage({ role, name, content });\n                continue;\n            }\n            else if (singleFunctionToCall && singleFunctionToCall !== name) {\n                const content = `Invalid function_call: ${JSON.stringify(name)}. ${JSON.stringify(singleFunctionToCall)} requested. Please try again`;\n                this._addMessage({ role, name, content });\n                continue;\n            }\n            let parsed;\n            try {\n                parsed = isRunnableFunctionWithParse(fn) ? await fn.parse(args) : args;\n            }\n            catch (error) {\n                this._addMessage({\n                    role,\n                    name,\n                    content: error instanceof Error ? error.message : String(error),\n                });\n                continue;\n            }\n            // @ts-expect-error it can't rule out `never` type.\n            const rawContent = await fn.function(parsed, this);\n            const content = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_stringifyFunctionCallResult).call(this, rawContent);\n            this._addMessage({ role, name, content });\n            if (singleFunctionToCall)\n                return;\n        }\n    }\n    async _runTools(client, params, options) {\n        const role = 'tool';\n        const { tool_choice = 'auto', stream, ...restParams } = params;\n        const singleFunctionToCall = typeof tool_choice !== 'string' && tool_choice?.function?.name;\n        const { maxChatCompletions = DEFAULT_MAX_CHAT_COMPLETIONS } = options || {};\n        // TODO(someday): clean this logic up\n        const inputTools = params.tools.map((tool) => {\n            if (isAutoParsableTool(tool)) {\n                if (!tool.$callback) {\n                    throw new OpenAIError('Tool given to `.runTools()` that does not have an associated function');\n                }\n                return {\n                    type: 'function',\n                    function: {\n                        function: tool.$callback,\n                        name: tool.function.name,\n                        description: tool.function.description || '',\n                        parameters: tool.function.parameters,\n                        parse: tool.$parseRaw,\n                        strict: true,\n                    },\n                };\n            }\n            return tool;\n        });\n        const functionsByName = {};\n        for (const f of inputTools) {\n            if (f.type === 'function') {\n                functionsByName[f.function.name || f.function.function.name] = f.function;\n            }\n        }\n        const tools = 'tools' in params ?\n            inputTools.map((t) => t.type === 'function' ?\n                {\n                    type: 'function',\n                    function: {\n                        name: t.function.name || t.function.function.name,\n                        parameters: t.function.parameters,\n                        description: t.function.description,\n                        strict: t.function.strict,\n                    },\n                }\n                : t)\n            : undefined;\n        for (const message of params.messages) {\n            this._addMessage(message, false);\n        }\n        for (let i = 0; i < maxChatCompletions; ++i) {\n            const chatCompletion = await this._createChatCompletion(client, {\n                ...restParams,\n                tool_choice,\n                tools,\n                messages: [...this.messages],\n            }, options);\n            const message = chatCompletion.choices[0]?.message;\n            if (!message) {\n                throw new OpenAIError(`missing message in ChatCompletion response`);\n            }\n            if (!message.tool_calls?.length) {\n                return;\n            }\n            for (const tool_call of message.tool_calls) {\n                if (tool_call.type !== 'function')\n                    continue;\n                const tool_call_id = tool_call.id;\n                const { name, arguments: args } = tool_call.function;\n                const fn = functionsByName[name];\n                if (!fn) {\n                    const content = `Invalid tool_call: ${JSON.stringify(name)}. Available options are: ${Object.keys(functionsByName)\n                        .map((name) => JSON.stringify(name))\n                        .join(', ')}. Please try again`;\n                    this._addMessage({ role, tool_call_id, content });\n                    continue;\n                }\n                else if (singleFunctionToCall && singleFunctionToCall !== name) {\n                    const content = `Invalid tool_call: ${JSON.stringify(name)}. ${JSON.stringify(singleFunctionToCall)} requested. Please try again`;\n                    this._addMessage({ role, tool_call_id, content });\n                    continue;\n                }\n                let parsed;\n                try {\n                    parsed = isRunnableFunctionWithParse(fn) ? await fn.parse(args) : args;\n                }\n                catch (error) {\n                    const content = error instanceof Error ? error.message : String(error);\n                    this._addMessage({ role, tool_call_id, content });\n                    continue;\n                }\n                // @ts-expect-error it can't rule out `never` type.\n                const rawContent = await fn.function(parsed, this);\n                const content = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_stringifyFunctionCallResult).call(this, rawContent);\n                this._addMessage({ role, tool_call_id, content });\n                if (singleFunctionToCall) {\n                    return;\n                }\n            }\n        }\n        return;\n    }\n}\n_AbstractChatCompletionRunner_instances = new WeakSet(), _AbstractChatCompletionRunner_getFinalContent = function _AbstractChatCompletionRunner_getFinalContent() {\n    return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalMessage).call(this).content ?? null;\n}, _AbstractChatCompletionRunner_getFinalMessage = function _AbstractChatCompletionRunner_getFinalMessage() {\n    let i = this.messages.length;\n    while (i-- > 0) {\n        const message = this.messages[i];\n        if (isAssistantMessage(message)) {\n            const { function_call, ...rest } = message;\n            // TODO: support audio here\n            const ret = {\n                ...rest,\n                content: message.content ?? null,\n                refusal: message.refusal ?? null,\n            };\n            if (function_call) {\n                ret.function_call = function_call;\n            }\n            return ret;\n        }\n    }\n    throw new OpenAIError('stream ended without producing a ChatCompletionMessage with role=assistant');\n}, _AbstractChatCompletionRunner_getFinalFunctionCall = function _AbstractChatCompletionRunner_getFinalFunctionCall() {\n    for (let i = this.messages.length - 1; i >= 0; i--) {\n        const message = this.messages[i];\n        if (isAssistantMessage(message) && message?.function_call) {\n            return message.function_call;\n        }\n        if (isAssistantMessage(message) && message?.tool_calls?.length) {\n            return message.tool_calls.at(-1)?.function;\n        }\n    }\n    return;\n}, _AbstractChatCompletionRunner_getFinalFunctionCallResult = function _AbstractChatCompletionRunner_getFinalFunctionCallResult() {\n    for (let i = this.messages.length - 1; i >= 0; i--) {\n        const message = this.messages[i];\n        if (isFunctionMessage(message) && message.content != null) {\n            return message.content;\n        }\n        if (isToolMessage(message) &&\n            message.content != null &&\n            typeof message.content === 'string' &&\n            this.messages.some((x) => x.role === 'assistant' &&\n                x.tool_calls?.some((y) => y.type === 'function' && y.id === message.tool_call_id))) {\n            return message.content;\n        }\n    }\n    return;\n}, _AbstractChatCompletionRunner_calculateTotalUsage = function _AbstractChatCompletionRunner_calculateTotalUsage() {\n    const total = {\n        completion_tokens: 0,\n        prompt_tokens: 0,\n        total_tokens: 0,\n    };\n    for (const { usage } of this._chatCompletions) {\n        if (usage) {\n            total.completion_tokens += usage.completion_tokens;\n            total.prompt_tokens += usage.prompt_tokens;\n            total.total_tokens += usage.total_tokens;\n        }\n    }\n    return total;\n}, _AbstractChatCompletionRunner_validateParams = function _AbstractChatCompletionRunner_validateParams(params) {\n    if (params.n != null && params.n > 1) {\n        throw new OpenAIError('ChatCompletion convenience helpers only support n=1 at this time. To use n>1, please use chat.completions.create() directly.');\n    }\n}, _AbstractChatCompletionRunner_stringifyFunctionCallResult = function _AbstractChatCompletionRunner_stringifyFunctionCallResult(rawContent) {\n    return (typeof rawContent === 'string' ? rawContent\n        : rawContent === undefined ? 'undefined'\n            : JSON.stringify(rawContent));\n};\n//# sourceMappingURL=AbstractChatCompletionRunner.mjs.map","import { AbstractChatCompletionRunner, } from \"./AbstractChatCompletionRunner.mjs\";\nimport { isAssistantMessage } from \"./chatCompletionUtils.mjs\";\nexport class ChatCompletionRunner extends AbstractChatCompletionRunner {\n    /** @deprecated - please use `runTools` instead. */\n    static runFunctions(client, params, options) {\n        const runner = new ChatCompletionRunner();\n        const opts = {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'runFunctions' },\n        };\n        runner._run(() => runner._runFunctions(client, params, opts));\n        return runner;\n    }\n    static runTools(client, params, options) {\n        const runner = new ChatCompletionRunner();\n        const opts = {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'runTools' },\n        };\n        runner._run(() => runner._runTools(client, params, opts));\n        return runner;\n    }\n    _addMessage(message, emit = true) {\n        super._addMessage(message, emit);\n        if (isAssistantMessage(message) && message.content) {\n            this._emit('content', message.content);\n        }\n    }\n}\n//# sourceMappingURL=ChatCompletionRunner.mjs.map","const STR = 0b000000001;\nconst NUM = 0b000000010;\nconst ARR = 0b000000100;\nconst OBJ = 0b000001000;\nconst NULL = 0b000010000;\nconst BOOL = 0b000100000;\nconst NAN = 0b001000000;\nconst INFINITY = 0b010000000;\nconst MINUS_INFINITY = 0b100000000;\nconst INF = INFINITY | MINUS_INFINITY;\nconst SPECIAL = NULL | BOOL | INF | NAN;\nconst ATOM = STR | NUM | SPECIAL;\nconst COLLECTION = ARR | OBJ;\nconst ALL = ATOM | COLLECTION;\nconst Allow = {\n    STR,\n    NUM,\n    ARR,\n    OBJ,\n    NULL,\n    BOOL,\n    NAN,\n    INFINITY,\n    MINUS_INFINITY,\n    INF,\n    SPECIAL,\n    ATOM,\n    COLLECTION,\n    ALL,\n};\n// The JSON string segment was unable to be parsed completely\nclass PartialJSON extends Error {\n}\nclass MalformedJSON extends Error {\n}\n/**\n * Parse incomplete JSON\n * @param {string} jsonString Partial JSON to be parsed\n * @param {number} allowPartial Specify what types are allowed to be partial, see {@link Allow} for details\n * @returns The parsed JSON\n * @throws {PartialJSON} If the JSON is incomplete (related to the `allow` parameter)\n * @throws {MalformedJSON} If the JSON is malformed\n */\nfunction parseJSON(jsonString, allowPartial = Allow.ALL) {\n    if (typeof jsonString !== 'string') {\n        throw new TypeError(`expecting str, got ${typeof jsonString}`);\n    }\n    if (!jsonString.trim()) {\n        throw new Error(`${jsonString} is empty`);\n    }\n    return _parseJSON(jsonString.trim(), allowPartial);\n}\nconst _parseJSON = (jsonString, allow) => {\n    const length = jsonString.length;\n    let index = 0;\n    const markPartialJSON = (msg) => {\n        throw new PartialJSON(`${msg} at position ${index}`);\n    };\n    const throwMalformedError = (msg) => {\n        throw new MalformedJSON(`${msg} at position ${index}`);\n    };\n    const parseAny = () => {\n        skipBlank();\n        if (index >= length)\n            markPartialJSON('Unexpected end of input');\n        if (jsonString[index] === '\"')\n            return parseStr();\n        if (jsonString[index] === '{')\n            return parseObj();\n        if (jsonString[index] === '[')\n            return parseArr();\n        if (jsonString.substring(index, index + 4) === 'null' ||\n            (Allow.NULL & allow && length - index < 4 && 'null'.startsWith(jsonString.substring(index)))) {\n            index += 4;\n            return null;\n        }\n        if (jsonString.substring(index, index + 4) === 'true' ||\n            (Allow.BOOL & allow && length - index < 4 && 'true'.startsWith(jsonString.substring(index)))) {\n            index += 4;\n            return true;\n        }\n        if (jsonString.substring(index, index + 5) === 'false' ||\n            (Allow.BOOL & allow && length - index < 5 && 'false'.startsWith(jsonString.substring(index)))) {\n            index += 5;\n            return false;\n        }\n        if (jsonString.substring(index, index + 8) === 'Infinity' ||\n            (Allow.INFINITY & allow && length - index < 8 && 'Infinity'.startsWith(jsonString.substring(index)))) {\n            index += 8;\n            return Infinity;\n        }\n        if (jsonString.substring(index, index + 9) === '-Infinity' ||\n            (Allow.MINUS_INFINITY & allow &&\n                1 < length - index &&\n                length - index < 9 &&\n                '-Infinity'.startsWith(jsonString.substring(index)))) {\n            index += 9;\n            return -Infinity;\n        }\n        if (jsonString.substring(index, index + 3) === 'NaN' ||\n            (Allow.NAN & allow && length - index < 3 && 'NaN'.startsWith(jsonString.substring(index)))) {\n            index += 3;\n            return NaN;\n        }\n        return parseNum();\n    };\n    const parseStr = () => {\n        const start = index;\n        let escape = false;\n        index++; // skip initial quote\n        while (index < length && (jsonString[index] !== '\"' || (escape && jsonString[index - 1] === '\\\\'))) {\n            escape = jsonString[index] === '\\\\' ? !escape : false;\n            index++;\n        }\n        if (jsonString.charAt(index) == '\"') {\n            try {\n                return JSON.parse(jsonString.substring(start, ++index - Number(escape)));\n            }\n            catch (e) {\n                throwMalformedError(String(e));\n            }\n        }\n        else if (Allow.STR & allow) {\n            try {\n                return JSON.parse(jsonString.substring(start, index - Number(escape)) + '\"');\n            }\n            catch (e) {\n                // SyntaxError: Invalid escape sequence\n                return JSON.parse(jsonString.substring(start, jsonString.lastIndexOf('\\\\')) + '\"');\n            }\n        }\n        markPartialJSON('Unterminated string literal');\n    };\n    const parseObj = () => {\n        index++; // skip initial brace\n        skipBlank();\n        const obj = {};\n        try {\n            while (jsonString[index] !== '}') {\n                skipBlank();\n                if (index >= length && Allow.OBJ & allow)\n                    return obj;\n                const key = parseStr();\n                skipBlank();\n                index++; // skip colon\n                try {\n                    const value = parseAny();\n                    Object.defineProperty(obj, key, { value, writable: true, enumerable: true, configurable: true });\n                }\n                catch (e) {\n                    if (Allow.OBJ & allow)\n                        return obj;\n                    else\n                        throw e;\n                }\n                skipBlank();\n                if (jsonString[index] === ',')\n                    index++; // skip comma\n            }\n        }\n        catch (e) {\n            if (Allow.OBJ & allow)\n                return obj;\n            else\n                markPartialJSON(\"Expected '}' at end of object\");\n        }\n        index++; // skip final brace\n        return obj;\n    };\n    const parseArr = () => {\n        index++; // skip initial bracket\n        const arr = [];\n        try {\n            while (jsonString[index] !== ']') {\n                arr.push(parseAny());\n                skipBlank();\n                if (jsonString[index] === ',') {\n                    index++; // skip comma\n                }\n            }\n        }\n        catch (e) {\n            if (Allow.ARR & allow) {\n                return arr;\n            }\n            markPartialJSON(\"Expected ']' at end of array\");\n        }\n        index++; // skip final bracket\n        return arr;\n    };\n    const parseNum = () => {\n        if (index === 0) {\n            if (jsonString === '-' && Allow.NUM & allow)\n                markPartialJSON(\"Not sure what '-' is\");\n            try {\n                return JSON.parse(jsonString);\n            }\n            catch (e) {\n                if (Allow.NUM & allow) {\n                    try {\n                        if ('.' === jsonString[jsonString.length - 1])\n                            return JSON.parse(jsonString.substring(0, jsonString.lastIndexOf('.')));\n                        return JSON.parse(jsonString.substring(0, jsonString.lastIndexOf('e')));\n                    }\n                    catch (e) { }\n                }\n                throwMalformedError(String(e));\n            }\n        }\n        const start = index;\n        if (jsonString[index] === '-')\n            index++;\n        while (jsonString[index] && !',]}'.includes(jsonString[index]))\n            index++;\n        if (index == length && !(Allow.NUM & allow))\n            markPartialJSON('Unterminated number literal');\n        try {\n            return JSON.parse(jsonString.substring(start, index));\n        }\n        catch (e) {\n            if (jsonString.substring(start, index) === '-' && Allow.NUM & allow)\n                markPartialJSON(\"Not sure what '-' is\");\n            try {\n                return JSON.parse(jsonString.substring(start, jsonString.lastIndexOf('e')));\n            }\n            catch (e) {\n                throwMalformedError(String(e));\n            }\n        }\n    };\n    const skipBlank = () => {\n        while (index < length && ' \\n\\r\\t'.includes(jsonString[index])) {\n            index++;\n        }\n    };\n    return parseAny();\n};\n// using this function with malformed JSON is undefined behavior\nconst partialParse = (input) => parseJSON(input, Allow.ALL ^ Allow.NUM);\nexport { partialParse, PartialJSON, MalformedJSON };\n//# sourceMappingURL=parser.mjs.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _ChatCompletionStream_instances, _ChatCompletionStream_params, _ChatCompletionStream_choiceEventStates, _ChatCompletionStream_currentChatCompletionSnapshot, _ChatCompletionStream_beginRequest, _ChatCompletionStream_getChoiceEventState, _ChatCompletionStream_addChunk, _ChatCompletionStream_emitToolCallDoneEvent, _ChatCompletionStream_emitContentDoneEvents, _ChatCompletionStream_endRequest, _ChatCompletionStream_getAutoParseableResponseFormat, _ChatCompletionStream_accumulateChatCompletion;\nimport { OpenAIError, APIUserAbortError, LengthFinishReasonError, ContentFilterFinishReasonError, } from \"../error.mjs\";\nimport { AbstractChatCompletionRunner, } from \"./AbstractChatCompletionRunner.mjs\";\nimport { Stream } from \"../streaming.mjs\";\nimport { hasAutoParseableInput, isAutoParsableResponseFormat, isAutoParsableTool, maybeParseChatCompletion, shouldParseToolCall, } from \"../lib/parser.mjs\";\nimport { partialParse } from \"../_vendor/partial-json-parser/parser.mjs\";\nexport class ChatCompletionStream extends AbstractChatCompletionRunner {\n    constructor(params) {\n        super();\n        _ChatCompletionStream_instances.add(this);\n        _ChatCompletionStream_params.set(this, void 0);\n        _ChatCompletionStream_choiceEventStates.set(this, void 0);\n        _ChatCompletionStream_currentChatCompletionSnapshot.set(this, void 0);\n        __classPrivateFieldSet(this, _ChatCompletionStream_params, params, \"f\");\n        __classPrivateFieldSet(this, _ChatCompletionStream_choiceEventStates, [], \"f\");\n    }\n    get currentChatCompletionSnapshot() {\n        return __classPrivateFieldGet(this, _ChatCompletionStream_currentChatCompletionSnapshot, \"f\");\n    }\n    /**\n     * Intended for use on the frontend, consuming a stream produced with\n     * `.toReadableStream()` on the backend.\n     *\n     * Note that messages sent to the model do not appear in `.on('message')`\n     * in this context.\n     */\n    static fromReadableStream(stream) {\n        const runner = new ChatCompletionStream(null);\n        runner._run(() => runner._fromReadableStream(stream));\n        return runner;\n    }\n    static createChatCompletion(client, params, options) {\n        const runner = new ChatCompletionStream(params);\n        runner._run(() => runner._runChatCompletion(client, { ...params, stream: true }, { ...options, headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' } }));\n        return runner;\n    }\n    async _createChatCompletion(client, params, options) {\n        super._createChatCompletion;\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_beginRequest).call(this);\n        const stream = await client.chat.completions.create({ ...params, stream: true }, { ...options, signal: this.controller.signal });\n        this._connected();\n        for await (const chunk of stream) {\n            __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_addChunk).call(this, chunk);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addChatCompletion(__classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_endRequest).call(this));\n    }\n    async _fromReadableStream(readableStream, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_beginRequest).call(this);\n        this._connected();\n        const stream = Stream.fromReadableStream(readableStream, this.controller);\n        let chatId;\n        for await (const chunk of stream) {\n            if (chatId && chatId !== chunk.id) {\n                // A new request has been made.\n                this._addChatCompletion(__classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_endRequest).call(this));\n            }\n            __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_addChunk).call(this, chunk);\n            chatId = chunk.id;\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addChatCompletion(__classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_endRequest).call(this));\n    }\n    [(_ChatCompletionStream_params = new WeakMap(), _ChatCompletionStream_choiceEventStates = new WeakMap(), _ChatCompletionStream_currentChatCompletionSnapshot = new WeakMap(), _ChatCompletionStream_instances = new WeakSet(), _ChatCompletionStream_beginRequest = function _ChatCompletionStream_beginRequest() {\n        if (this.ended)\n            return;\n        __classPrivateFieldSet(this, _ChatCompletionStream_currentChatCompletionSnapshot, undefined, \"f\");\n    }, _ChatCompletionStream_getChoiceEventState = function _ChatCompletionStream_getChoiceEventState(choice) {\n        let state = __classPrivateFieldGet(this, _ChatCompletionStream_choiceEventStates, \"f\")[choice.index];\n        if (state) {\n            return state;\n        }\n        state = {\n            content_done: false,\n            refusal_done: false,\n            logprobs_content_done: false,\n            logprobs_refusal_done: false,\n            done_tool_calls: new Set(),\n            current_tool_call_index: null,\n        };\n        __classPrivateFieldGet(this, _ChatCompletionStream_choiceEventStates, \"f\")[choice.index] = state;\n        return state;\n    }, _ChatCompletionStream_addChunk = function _ChatCompletionStream_addChunk(chunk) {\n        if (this.ended)\n            return;\n        const completion = __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_accumulateChatCompletion).call(this, chunk);\n        this._emit('chunk', chunk, completion);\n        for (const choice of chunk.choices) {\n            const choiceSnapshot = completion.choices[choice.index];\n            if (choice.delta.content != null &&\n                choiceSnapshot.message?.role === 'assistant' &&\n                choiceSnapshot.message?.content) {\n                this._emit('content', choice.delta.content, choiceSnapshot.message.content);\n                this._emit('content.delta', {\n                    delta: choice.delta.content,\n                    snapshot: choiceSnapshot.message.content,\n                    parsed: choiceSnapshot.message.parsed,\n                });\n            }\n            if (choice.delta.refusal != null &&\n                choiceSnapshot.message?.role === 'assistant' &&\n                choiceSnapshot.message?.refusal) {\n                this._emit('refusal.delta', {\n                    delta: choice.delta.refusal,\n                    snapshot: choiceSnapshot.message.refusal,\n                });\n            }\n            if (choice.logprobs?.content != null && choiceSnapshot.message?.role === 'assistant') {\n                this._emit('logprobs.content.delta', {\n                    content: choice.logprobs?.content,\n                    snapshot: choiceSnapshot.logprobs?.content ?? [],\n                });\n            }\n            if (choice.logprobs?.refusal != null && choiceSnapshot.message?.role === 'assistant') {\n                this._emit('logprobs.refusal.delta', {\n                    refusal: choice.logprobs?.refusal,\n                    snapshot: choiceSnapshot.logprobs?.refusal ?? [],\n                });\n            }\n            const state = __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getChoiceEventState).call(this, choiceSnapshot);\n            if (choiceSnapshot.finish_reason) {\n                __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_emitContentDoneEvents).call(this, choiceSnapshot);\n                if (state.current_tool_call_index != null) {\n                    __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_emitToolCallDoneEvent).call(this, choiceSnapshot, state.current_tool_call_index);\n                }\n            }\n            for (const toolCall of choice.delta.tool_calls ?? []) {\n                if (state.current_tool_call_index !== toolCall.index) {\n                    __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_emitContentDoneEvents).call(this, choiceSnapshot);\n                    // new tool call started, the previous one is done\n                    if (state.current_tool_call_index != null) {\n                        __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_emitToolCallDoneEvent).call(this, choiceSnapshot, state.current_tool_call_index);\n                    }\n                }\n                state.current_tool_call_index = toolCall.index;\n            }\n            for (const toolCallDelta of choice.delta.tool_calls ?? []) {\n                const toolCallSnapshot = choiceSnapshot.message.tool_calls?.[toolCallDelta.index];\n                if (!toolCallSnapshot?.type) {\n                    continue;\n                }\n                if (toolCallSnapshot?.type === 'function') {\n                    this._emit('tool_calls.function.arguments.delta', {\n                        name: toolCallSnapshot.function?.name,\n                        index: toolCallDelta.index,\n                        arguments: toolCallSnapshot.function.arguments,\n                        parsed_arguments: toolCallSnapshot.function.parsed_arguments,\n                        arguments_delta: toolCallDelta.function?.arguments ?? '',\n                    });\n                }\n                else {\n                    assertNever(toolCallSnapshot?.type);\n                }\n            }\n        }\n    }, _ChatCompletionStream_emitToolCallDoneEvent = function _ChatCompletionStream_emitToolCallDoneEvent(choiceSnapshot, toolCallIndex) {\n        const state = __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getChoiceEventState).call(this, choiceSnapshot);\n        if (state.done_tool_calls.has(toolCallIndex)) {\n            // we've already fired the done event\n            return;\n        }\n        const toolCallSnapshot = choiceSnapshot.message.tool_calls?.[toolCallIndex];\n        if (!toolCallSnapshot) {\n            throw new Error('no tool call snapshot');\n        }\n        if (!toolCallSnapshot.type) {\n            throw new Error('tool call snapshot missing `type`');\n        }\n        if (toolCallSnapshot.type === 'function') {\n            const inputTool = __classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\")?.tools?.find((tool) => tool.type === 'function' && tool.function.name === toolCallSnapshot.function.name);\n            this._emit('tool_calls.function.arguments.done', {\n                name: toolCallSnapshot.function.name,\n                index: toolCallIndex,\n                arguments: toolCallSnapshot.function.arguments,\n                parsed_arguments: isAutoParsableTool(inputTool) ? inputTool.$parseRaw(toolCallSnapshot.function.arguments)\n                    : inputTool?.function.strict ? JSON.parse(toolCallSnapshot.function.arguments)\n                        : null,\n            });\n        }\n        else {\n            assertNever(toolCallSnapshot.type);\n        }\n    }, _ChatCompletionStream_emitContentDoneEvents = function _ChatCompletionStream_emitContentDoneEvents(choiceSnapshot) {\n        const state = __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getChoiceEventState).call(this, choiceSnapshot);\n        if (choiceSnapshot.message.content && !state.content_done) {\n            state.content_done = true;\n            const responseFormat = __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getAutoParseableResponseFormat).call(this);\n            this._emit('content.done', {\n                content: choiceSnapshot.message.content,\n                parsed: responseFormat ? responseFormat.$parseRaw(choiceSnapshot.message.content) : null,\n            });\n        }\n        if (choiceSnapshot.message.refusal && !state.refusal_done) {\n            state.refusal_done = true;\n            this._emit('refusal.done', { refusal: choiceSnapshot.message.refusal });\n        }\n        if (choiceSnapshot.logprobs?.content && !state.logprobs_content_done) {\n            state.logprobs_content_done = true;\n            this._emit('logprobs.content.done', { content: choiceSnapshot.logprobs.content });\n        }\n        if (choiceSnapshot.logprobs?.refusal && !state.logprobs_refusal_done) {\n            state.logprobs_refusal_done = true;\n            this._emit('logprobs.refusal.done', { refusal: choiceSnapshot.logprobs.refusal });\n        }\n    }, _ChatCompletionStream_endRequest = function _ChatCompletionStream_endRequest() {\n        if (this.ended) {\n            throw new OpenAIError(`stream has ended, this shouldn't happen`);\n        }\n        const snapshot = __classPrivateFieldGet(this, _ChatCompletionStream_currentChatCompletionSnapshot, \"f\");\n        if (!snapshot) {\n            throw new OpenAIError(`request ended without sending any chunks`);\n        }\n        __classPrivateFieldSet(this, _ChatCompletionStream_currentChatCompletionSnapshot, undefined, \"f\");\n        __classPrivateFieldSet(this, _ChatCompletionStream_choiceEventStates, [], \"f\");\n        return finalizeChatCompletion(snapshot, __classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\"));\n    }, _ChatCompletionStream_getAutoParseableResponseFormat = function _ChatCompletionStream_getAutoParseableResponseFormat() {\n        const responseFormat = __classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\")?.response_format;\n        if (isAutoParsableResponseFormat(responseFormat)) {\n            return responseFormat;\n        }\n        return null;\n    }, _ChatCompletionStream_accumulateChatCompletion = function _ChatCompletionStream_accumulateChatCompletion(chunk) {\n        var _a, _b, _c, _d;\n        let snapshot = __classPrivateFieldGet(this, _ChatCompletionStream_currentChatCompletionSnapshot, \"f\");\n        const { choices, ...rest } = chunk;\n        if (!snapshot) {\n            snapshot = __classPrivateFieldSet(this, _ChatCompletionStream_currentChatCompletionSnapshot, {\n                ...rest,\n                choices: [],\n            }, \"f\");\n        }\n        else {\n            Object.assign(snapshot, rest);\n        }\n        for (const { delta, finish_reason, index, logprobs = null, ...other } of chunk.choices) {\n            let choice = snapshot.choices[index];\n            if (!choice) {\n                choice = snapshot.choices[index] = { finish_reason, index, message: {}, logprobs, ...other };\n            }\n            if (logprobs) {\n                if (!choice.logprobs) {\n                    choice.logprobs = Object.assign({}, logprobs);\n                }\n                else {\n                    const { content, refusal, ...rest } = logprobs;\n                    assertIsEmpty(rest);\n                    Object.assign(choice.logprobs, rest);\n                    if (content) {\n                        (_a = choice.logprobs).content ?? (_a.content = []);\n                        choice.logprobs.content.push(...content);\n                    }\n                    if (refusal) {\n                        (_b = choice.logprobs).refusal ?? (_b.refusal = []);\n                        choice.logprobs.refusal.push(...refusal);\n                    }\n                }\n            }\n            if (finish_reason) {\n                choice.finish_reason = finish_reason;\n                if (__classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\") && hasAutoParseableInput(__classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\"))) {\n                    if (finish_reason === 'length') {\n                        throw new LengthFinishReasonError();\n                    }\n                    if (finish_reason === 'content_filter') {\n                        throw new ContentFilterFinishReasonError();\n                    }\n                }\n            }\n            Object.assign(choice, other);\n            if (!delta)\n                continue; // Shouldn't happen; just in case.\n            const { content, refusal, function_call, role, tool_calls, ...rest } = delta;\n            assertIsEmpty(rest);\n            Object.assign(choice.message, rest);\n            if (refusal) {\n                choice.message.refusal = (choice.message.refusal || '') + refusal;\n            }\n            if (role)\n                choice.message.role = role;\n            if (function_call) {\n                if (!choice.message.function_call) {\n                    choice.message.function_call = function_call;\n                }\n                else {\n                    if (function_call.name)\n                        choice.message.function_call.name = function_call.name;\n                    if (function_call.arguments) {\n                        (_c = choice.message.function_call).arguments ?? (_c.arguments = '');\n                        choice.message.function_call.arguments += function_call.arguments;\n                    }\n                }\n            }\n            if (content) {\n                choice.message.content = (choice.message.content || '') + content;\n                if (!choice.message.refusal && __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getAutoParseableResponseFormat).call(this)) {\n                    choice.message.parsed = partialParse(choice.message.content);\n                }\n            }\n            if (tool_calls) {\n                if (!choice.message.tool_calls)\n                    choice.message.tool_calls = [];\n                for (const { index, id, type, function: fn, ...rest } of tool_calls) {\n                    const tool_call = ((_d = choice.message.tool_calls)[index] ?? (_d[index] = {}));\n                    Object.assign(tool_call, rest);\n                    if (id)\n                        tool_call.id = id;\n                    if (type)\n                        tool_call.type = type;\n                    if (fn)\n                        tool_call.function ?? (tool_call.function = { name: fn.name ?? '', arguments: '' });\n                    if (fn?.name)\n                        tool_call.function.name = fn.name;\n                    if (fn?.arguments) {\n                        tool_call.function.arguments += fn.arguments;\n                        if (shouldParseToolCall(__classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\"), tool_call)) {\n                            tool_call.function.parsed_arguments = partialParse(tool_call.function.arguments);\n                        }\n                    }\n                }\n            }\n        }\n        return snapshot;\n    }, Symbol.asyncIterator)]() {\n        const pushQueue = [];\n        const readQueue = [];\n        let done = false;\n        this.on('chunk', (chunk) => {\n            const reader = readQueue.shift();\n            if (reader) {\n                reader.resolve(chunk);\n            }\n            else {\n                pushQueue.push(chunk);\n            }\n        });\n        this.on('end', () => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.resolve(undefined);\n            }\n            readQueue.length = 0;\n        });\n        this.on('abort', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        this.on('error', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        return {\n            next: async () => {\n                if (!pushQueue.length) {\n                    if (done) {\n                        return { value: undefined, done: true };\n                    }\n                    return new Promise((resolve, reject) => readQueue.push({ resolve, reject })).then((chunk) => (chunk ? { value: chunk, done: false } : { value: undefined, done: true }));\n                }\n                const chunk = pushQueue.shift();\n                return { value: chunk, done: false };\n            },\n            return: async () => {\n                this.abort();\n                return { value: undefined, done: true };\n            },\n        };\n    }\n    toReadableStream() {\n        const stream = new Stream(this[Symbol.asyncIterator].bind(this), this.controller);\n        return stream.toReadableStream();\n    }\n}\nfunction finalizeChatCompletion(snapshot, params) {\n    const { id, choices, created, model, system_fingerprint, ...rest } = snapshot;\n    const completion = {\n        ...rest,\n        id,\n        choices: choices.map(({ message, finish_reason, index, logprobs, ...choiceRest }) => {\n            if (!finish_reason) {\n                throw new OpenAIError(`missing finish_reason for choice ${index}`);\n            }\n            const { content = null, function_call, tool_calls, ...messageRest } = message;\n            const role = message.role; // this is what we expect; in theory it could be different which would make our types a slight lie but would be fine.\n            if (!role) {\n                throw new OpenAIError(`missing role for choice ${index}`);\n            }\n            if (function_call) {\n                const { arguments: args, name } = function_call;\n                if (args == null) {\n                    throw new OpenAIError(`missing function_call.arguments for choice ${index}`);\n                }\n                if (!name) {\n                    throw new OpenAIError(`missing function_call.name for choice ${index}`);\n                }\n                return {\n                    ...choiceRest,\n                    message: {\n                        content,\n                        function_call: { arguments: args, name },\n                        role,\n                        refusal: message.refusal ?? null,\n                    },\n                    finish_reason,\n                    index,\n                    logprobs,\n                };\n            }\n            if (tool_calls) {\n                return {\n                    ...choiceRest,\n                    index,\n                    finish_reason,\n                    logprobs,\n                    message: {\n                        ...messageRest,\n                        role,\n                        content,\n                        refusal: message.refusal ?? null,\n                        tool_calls: tool_calls.map((tool_call, i) => {\n                            const { function: fn, type, id, ...toolRest } = tool_call;\n                            const { arguments: args, name, ...fnRest } = fn || {};\n                            if (id == null) {\n                                throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].id\\n${str(snapshot)}`);\n                            }\n                            if (type == null) {\n                                throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].type\\n${str(snapshot)}`);\n                            }\n                            if (name == null) {\n                                throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].function.name\\n${str(snapshot)}`);\n                            }\n                            if (args == null) {\n                                throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].function.arguments\\n${str(snapshot)}`);\n                            }\n                            return { ...toolRest, id, type, function: { ...fnRest, name, arguments: args } };\n                        }),\n                    },\n                };\n            }\n            return {\n                ...choiceRest,\n                message: { ...messageRest, content, role, refusal: message.refusal ?? null },\n                finish_reason,\n                index,\n                logprobs,\n            };\n        }),\n        created,\n        model,\n        object: 'chat.completion',\n        ...(system_fingerprint ? { system_fingerprint } : {}),\n    };\n    return maybeParseChatCompletion(completion, params);\n}\nfunction str(x) {\n    return JSON.stringify(x);\n}\n/**\n * Ensures the given argument is an empty object, useful for\n * asserting that all known properties on an object have been\n * destructured.\n */\nfunction assertIsEmpty(obj) {\n    return;\n}\nfunction assertNever(_x) { }\n//# sourceMappingURL=ChatCompletionStream.mjs.map","import { ChatCompletionStream } from \"./ChatCompletionStream.mjs\";\nexport class ChatCompletionStreamingRunner extends ChatCompletionStream {\n    static fromReadableStream(stream) {\n        const runner = new ChatCompletionStreamingRunner(null);\n        runner._run(() => runner._fromReadableStream(stream));\n        return runner;\n    }\n    /** @deprecated - please use `runTools` instead. */\n    static runFunctions(client, params, options) {\n        const runner = new ChatCompletionStreamingRunner(null);\n        const opts = {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'runFunctions' },\n        };\n        runner._run(() => runner._runFunctions(client, params, opts));\n        return runner;\n    }\n    static runTools(client, params, options) {\n        const runner = new ChatCompletionStreamingRunner(\n        // @ts-expect-error TODO these types are incompatible\n        params);\n        const opts = {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'runTools' },\n        };\n        runner._run(() => runner._runTools(client, params, opts));\n        return runner;\n    }\n}\n//# sourceMappingURL=ChatCompletionStreamingRunner.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport { ChatCompletionRunner } from \"../../../lib/ChatCompletionRunner.mjs\";\nimport { ChatCompletionStreamingRunner, } from \"../../../lib/ChatCompletionStreamingRunner.mjs\";\nimport { ChatCompletionStream } from \"../../../lib/ChatCompletionStream.mjs\";\nimport { parseChatCompletion, validateInputTools } from \"../../../lib/parser.mjs\";\nexport { ChatCompletionStreamingRunner, } from \"../../../lib/ChatCompletionStreamingRunner.mjs\";\nexport { ParsingFunction, ParsingToolFunction, } from \"../../../lib/RunnableFunction.mjs\";\nexport { ChatCompletionStream } from \"../../../lib/ChatCompletionStream.mjs\";\nexport { ChatCompletionRunner, } from \"../../../lib/ChatCompletionRunner.mjs\";\nexport class Completions extends APIResource {\n    parse(body, options) {\n        validateInputTools(body.tools);\n        return this._client.chat.completions\n            .create(body, {\n            ...options,\n            headers: {\n                ...options?.headers,\n                'X-Stainless-Helper-Method': 'beta.chat.completions.parse',\n            },\n        })\n            ._thenUnwrap((completion) => parseChatCompletion(completion, body));\n    }\n    runFunctions(body, options) {\n        if (body.stream) {\n            return ChatCompletionStreamingRunner.runFunctions(this._client, body, options);\n        }\n        return ChatCompletionRunner.runFunctions(this._client, body, options);\n    }\n    runTools(body, options) {\n        if (body.stream) {\n            return ChatCompletionStreamingRunner.runTools(this._client, body, options);\n        }\n        return ChatCompletionRunner.runTools(this._client, body, options);\n    }\n    /**\n     * Creates a chat completion stream\n     */\n    stream(body, options) {\n        return ChatCompletionStream.createChatCompletion(this._client, body, options);\n    }\n}\n//# sourceMappingURL=completions.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport * as CompletionsAPI from \"./completions.mjs\";\nexport class Chat extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.completions = new CompletionsAPI.Completions(this._client);\n    }\n}\n(function (Chat) {\n    Chat.Completions = CompletionsAPI.Completions;\n})(Chat || (Chat = {}));\n//# sourceMappingURL=chat.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nexport class Sessions extends APIResource {\n    /**\n     * Create an ephemeral API token for use in client-side applications with the\n     * Realtime API. Can be configured with the same session parameters as the\n     * `session.update` client event.\n     *\n     * It responds with a session object, plus a `client_secret` key which contains a\n     * usable ephemeral API token that can be used to authenticate browser clients for\n     * the Realtime API.\n     */\n    create(body, options) {\n        return this._client.post('/realtime/sessions', {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n}\n//# sourceMappingURL=sessions.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nexport class TranscriptionSessions extends APIResource {\n    /**\n     * Create an ephemeral API token for use in client-side applications with the\n     * Realtime API specifically for realtime transcriptions. Can be configured with\n     * the same session parameters as the `transcription_session.update` client event.\n     *\n     * It responds with a session object, plus a `client_secret` key which contains a\n     * usable ephemeral API token that can be used to authenticate browser clients for\n     * the Realtime API.\n     */\n    create(body, options) {\n        return this._client.post('/realtime/transcription_sessions', {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n}\n//# sourceMappingURL=transcription-sessions.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport * as SessionsAPI from \"./sessions.mjs\";\nimport { Sessions, } from \"./sessions.mjs\";\nimport * as TranscriptionSessionsAPI from \"./transcription-sessions.mjs\";\nimport { TranscriptionSessions, } from \"./transcription-sessions.mjs\";\nexport class Realtime extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.sessions = new SessionsAPI.Sessions(this._client);\n        this.transcriptionSessions = new TranscriptionSessionsAPI.TranscriptionSessions(this._client);\n    }\n}\nRealtime.Sessions = Sessions;\nRealtime.TranscriptionSessions = TranscriptionSessions;\n//# sourceMappingURL=realtime.mjs.map","var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _AssistantStream_instances, _AssistantStream_events, _AssistantStream_runStepSnapshots, _AssistantStream_messageSnapshots, _AssistantStream_messageSnapshot, _AssistantStream_finalRun, _AssistantStream_currentContentIndex, _AssistantStream_currentContent, _AssistantStream_currentToolCallIndex, _AssistantStream_currentToolCall, _AssistantStream_currentEvent, _AssistantStream_currentRunSnapshot, _AssistantStream_currentRunStepSnapshot, _AssistantStream_addEvent, _AssistantStream_endRequest, _AssistantStream_handleMessage, _AssistantStream_handleRunStep, _AssistantStream_handleEvent, _AssistantStream_accumulateRunStep, _AssistantStream_accumulateMessage, _AssistantStream_accumulateContent, _AssistantStream_handleRun;\nimport * as Core from \"../core.mjs\";\nimport { Stream } from \"../streaming.mjs\";\nimport { APIUserAbortError, OpenAIError } from \"../error.mjs\";\nimport { EventStream } from \"./EventStream.mjs\";\nexport class AssistantStream extends EventStream {\n    constructor() {\n        super(...arguments);\n        _AssistantStream_instances.add(this);\n        //Track all events in a single list for reference\n        _AssistantStream_events.set(this, []);\n        //Used to accumulate deltas\n        //We are accumulating many types so the value here is not strict\n        _AssistantStream_runStepSnapshots.set(this, {});\n        _AssistantStream_messageSnapshots.set(this, {});\n        _AssistantStream_messageSnapshot.set(this, void 0);\n        _AssistantStream_finalRun.set(this, void 0);\n        _AssistantStream_currentContentIndex.set(this, void 0);\n        _AssistantStream_currentContent.set(this, void 0);\n        _AssistantStream_currentToolCallIndex.set(this, void 0);\n        _AssistantStream_currentToolCall.set(this, void 0);\n        //For current snapshot methods\n        _AssistantStream_currentEvent.set(this, void 0);\n        _AssistantStream_currentRunSnapshot.set(this, void 0);\n        _AssistantStream_currentRunStepSnapshot.set(this, void 0);\n    }\n    [(_AssistantStream_events = new WeakMap(), _AssistantStream_runStepSnapshots = new WeakMap(), _AssistantStream_messageSnapshots = new WeakMap(), _AssistantStream_messageSnapshot = new WeakMap(), _AssistantStream_finalRun = new WeakMap(), _AssistantStream_currentContentIndex = new WeakMap(), _AssistantStream_currentContent = new WeakMap(), _AssistantStream_currentToolCallIndex = new WeakMap(), _AssistantStream_currentToolCall = new WeakMap(), _AssistantStream_currentEvent = new WeakMap(), _AssistantStream_currentRunSnapshot = new WeakMap(), _AssistantStream_currentRunStepSnapshot = new WeakMap(), _AssistantStream_instances = new WeakSet(), Symbol.asyncIterator)]() {\n        const pushQueue = [];\n        const readQueue = [];\n        let done = false;\n        //Catch all for passing along all events\n        this.on('event', (event) => {\n            const reader = readQueue.shift();\n            if (reader) {\n                reader.resolve(event);\n            }\n            else {\n                pushQueue.push(event);\n            }\n        });\n        this.on('end', () => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.resolve(undefined);\n            }\n            readQueue.length = 0;\n        });\n        this.on('abort', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        this.on('error', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        return {\n            next: async () => {\n                if (!pushQueue.length) {\n                    if (done) {\n                        return { value: undefined, done: true };\n                    }\n                    return new Promise((resolve, reject) => readQueue.push({ resolve, reject })).then((chunk) => (chunk ? { value: chunk, done: false } : { value: undefined, done: true }));\n                }\n                const chunk = pushQueue.shift();\n                return { value: chunk, done: false };\n            },\n            return: async () => {\n                this.abort();\n                return { value: undefined, done: true };\n            },\n        };\n    }\n    static fromReadableStream(stream) {\n        const runner = new AssistantStream();\n        runner._run(() => runner._fromReadableStream(stream));\n        return runner;\n    }\n    async _fromReadableStream(readableStream, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        this._connected();\n        const stream = Stream.fromReadableStream(readableStream, this.controller);\n        for await (const event of stream) {\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_addEvent).call(this, event);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addRun(__classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_endRequest).call(this));\n    }\n    toReadableStream() {\n        const stream = new Stream(this[Symbol.asyncIterator].bind(this), this.controller);\n        return stream.toReadableStream();\n    }\n    static createToolAssistantStream(threadId, runId, runs, params, options) {\n        const runner = new AssistantStream();\n        runner._run(() => runner._runToolAssistantStream(threadId, runId, runs, params, {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' },\n        }));\n        return runner;\n    }\n    async _createToolAssistantStream(run, threadId, runId, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        const body = { ...params, stream: true };\n        const stream = await run.submitToolOutputs(threadId, runId, body, {\n            ...options,\n            signal: this.controller.signal,\n        });\n        this._connected();\n        for await (const event of stream) {\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_addEvent).call(this, event);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addRun(__classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_endRequest).call(this));\n    }\n    static createThreadAssistantStream(params, thread, options) {\n        const runner = new AssistantStream();\n        runner._run(() => runner._threadAssistantStream(params, thread, {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' },\n        }));\n        return runner;\n    }\n    static createAssistantStream(threadId, runs, params, options) {\n        const runner = new AssistantStream();\n        runner._run(() => runner._runAssistantStream(threadId, runs, params, {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' },\n        }));\n        return runner;\n    }\n    currentEvent() {\n        return __classPrivateFieldGet(this, _AssistantStream_currentEvent, \"f\");\n    }\n    currentRun() {\n        return __classPrivateFieldGet(this, _AssistantStream_currentRunSnapshot, \"f\");\n    }\n    currentMessageSnapshot() {\n        return __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\");\n    }\n    currentRunStepSnapshot() {\n        return __classPrivateFieldGet(this, _AssistantStream_currentRunStepSnapshot, \"f\");\n    }\n    async finalRunSteps() {\n        await this.done();\n        return Object.values(__classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\"));\n    }\n    async finalMessages() {\n        await this.done();\n        return Object.values(__classPrivateFieldGet(this, _AssistantStream_messageSnapshots, \"f\"));\n    }\n    async finalRun() {\n        await this.done();\n        if (!__classPrivateFieldGet(this, _AssistantStream_finalRun, \"f\"))\n            throw Error('Final run was not received.');\n        return __classPrivateFieldGet(this, _AssistantStream_finalRun, \"f\");\n    }\n    async _createThreadAssistantStream(thread, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        const body = { ...params, stream: true };\n        const stream = await thread.createAndRun(body, { ...options, signal: this.controller.signal });\n        this._connected();\n        for await (const event of stream) {\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_addEvent).call(this, event);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addRun(__classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_endRequest).call(this));\n    }\n    async _createAssistantStream(run, threadId, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        const body = { ...params, stream: true };\n        const stream = await run.create(threadId, body, { ...options, signal: this.controller.signal });\n        this._connected();\n        for await (const event of stream) {\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_addEvent).call(this, event);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addRun(__classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_endRequest).call(this));\n    }\n    static accumulateDelta(acc, delta) {\n        for (const [key, deltaValue] of Object.entries(delta)) {\n            if (!acc.hasOwnProperty(key)) {\n                acc[key] = deltaValue;\n                continue;\n            }\n            let accValue = acc[key];\n            if (accValue === null || accValue === undefined) {\n                acc[key] = deltaValue;\n                continue;\n            }\n            // We don't accumulate these special properties\n            if (key === 'index' || key === 'type') {\n                acc[key] = deltaValue;\n                continue;\n            }\n            // Type-specific accumulation logic\n            if (typeof accValue === 'string' && typeof deltaValue === 'string') {\n                accValue += deltaValue;\n            }\n            else if (typeof accValue === 'number' && typeof deltaValue === 'number') {\n                accValue += deltaValue;\n            }\n            else if (Core.isObj(accValue) && Core.isObj(deltaValue)) {\n                accValue = this.accumulateDelta(accValue, deltaValue);\n            }\n            else if (Array.isArray(accValue) && Array.isArray(deltaValue)) {\n                if (accValue.every((x) => typeof x === 'string' || typeof x === 'number')) {\n                    accValue.push(...deltaValue); // Use spread syntax for efficient addition\n                    continue;\n                }\n                for (const deltaEntry of deltaValue) {\n                    if (!Core.isObj(deltaEntry)) {\n                        throw new Error(`Expected array delta entry to be an object but got: ${deltaEntry}`);\n                    }\n                    const index = deltaEntry['index'];\n                    if (index == null) {\n                        console.error(deltaEntry);\n                        throw new Error('Expected array delta entry to have an `index` property');\n                    }\n                    if (typeof index !== 'number') {\n                        throw new Error(`Expected array delta entry \\`index\\` property to be a number but got ${index}`);\n                    }\n                    const accEntry = accValue[index];\n                    if (accEntry == null) {\n                        accValue.push(deltaEntry);\n                    }\n                    else {\n                        accValue[index] = this.accumulateDelta(accEntry, deltaEntry);\n                    }\n                }\n                continue;\n            }\n            else {\n                throw Error(`Unhandled record type: ${key}, deltaValue: ${deltaValue}, accValue: ${accValue}`);\n            }\n            acc[key] = accValue;\n        }\n        return acc;\n    }\n    _addRun(run) {\n        return run;\n    }\n    async _threadAssistantStream(params, thread, options) {\n        return await this._createThreadAssistantStream(thread, params, options);\n    }\n    async _runAssistantStream(threadId, runs, params, options) {\n        return await this._createAssistantStream(runs, threadId, params, options);\n    }\n    async _runToolAssistantStream(threadId, runId, runs, params, options) {\n        return await this._createToolAssistantStream(runs, threadId, runId, params, options);\n    }\n}\n_AssistantStream_addEvent = function _AssistantStream_addEvent(event) {\n    if (this.ended)\n        return;\n    __classPrivateFieldSet(this, _AssistantStream_currentEvent, event, \"f\");\n    __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_handleEvent).call(this, event);\n    switch (event.event) {\n        case 'thread.created':\n            //No action on this event.\n            break;\n        case 'thread.run.created':\n        case 'thread.run.queued':\n        case 'thread.run.in_progress':\n        case 'thread.run.requires_action':\n        case 'thread.run.completed':\n        case 'thread.run.incomplete':\n        case 'thread.run.failed':\n        case 'thread.run.cancelling':\n        case 'thread.run.cancelled':\n        case 'thread.run.expired':\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_handleRun).call(this, event);\n            break;\n        case 'thread.run.step.created':\n        case 'thread.run.step.in_progress':\n        case 'thread.run.step.delta':\n        case 'thread.run.step.completed':\n        case 'thread.run.step.failed':\n        case 'thread.run.step.cancelled':\n        case 'thread.run.step.expired':\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_handleRunStep).call(this, event);\n            break;\n        case 'thread.message.created':\n        case 'thread.message.in_progress':\n        case 'thread.message.delta':\n        case 'thread.message.completed':\n        case 'thread.message.incomplete':\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_handleMessage).call(this, event);\n            break;\n        case 'error':\n            //This is included for completeness, but errors are processed in the SSE event processing so this should not occur\n            throw new Error('Encountered an error event in event processing - errors should be processed earlier');\n        default:\n            assertNever(event);\n    }\n}, _AssistantStream_endRequest = function _AssistantStream_endRequest() {\n    if (this.ended) {\n        throw new OpenAIError(`stream has ended, this shouldn't happen`);\n    }\n    if (!__classPrivateFieldGet(this, _AssistantStream_finalRun, \"f\"))\n        throw Error('Final run has not been received');\n    return __classPrivateFieldGet(this, _AssistantStream_finalRun, \"f\");\n}, _AssistantStream_handleMessage = function _AssistantStream_handleMessage(event) {\n    const [accumulatedMessage, newContent] = __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_accumulateMessage).call(this, event, __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\"));\n    __classPrivateFieldSet(this, _AssistantStream_messageSnapshot, accumulatedMessage, \"f\");\n    __classPrivateFieldGet(this, _AssistantStream_messageSnapshots, \"f\")[accumulatedMessage.id] = accumulatedMessage;\n    for (const content of newContent) {\n        const snapshotContent = accumulatedMessage.content[content.index];\n        if (snapshotContent?.type == 'text') {\n            this._emit('textCreated', snapshotContent.text);\n        }\n    }\n    switch (event.event) {\n        case 'thread.message.created':\n            this._emit('messageCreated', event.data);\n            break;\n        case 'thread.message.in_progress':\n            break;\n        case 'thread.message.delta':\n            this._emit('messageDelta', event.data.delta, accumulatedMessage);\n            if (event.data.delta.content) {\n                for (const content of event.data.delta.content) {\n                    //If it is text delta, emit a text delta event\n                    if (content.type == 'text' && content.text) {\n                        let textDelta = content.text;\n                        let snapshot = accumulatedMessage.content[content.index];\n                        if (snapshot && snapshot.type == 'text') {\n                            this._emit('textDelta', textDelta, snapshot.text);\n                        }\n                        else {\n                            throw Error('The snapshot associated with this text delta is not text or missing');\n                        }\n                    }\n                    if (content.index != __classPrivateFieldGet(this, _AssistantStream_currentContentIndex, \"f\")) {\n                        //See if we have in progress content\n                        if (__classPrivateFieldGet(this, _AssistantStream_currentContent, \"f\")) {\n                            switch (__classPrivateFieldGet(this, _AssistantStream_currentContent, \"f\").type) {\n                                case 'text':\n                                    this._emit('textDone', __classPrivateFieldGet(this, _AssistantStream_currentContent, \"f\").text, __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\"));\n                                    break;\n                                case 'image_file':\n                                    this._emit('imageFileDone', __classPrivateFieldGet(this, _AssistantStream_currentContent, \"f\").image_file, __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\"));\n                                    break;\n                            }\n                        }\n                        __classPrivateFieldSet(this, _AssistantStream_currentContentIndex, content.index, \"f\");\n                    }\n                    __classPrivateFieldSet(this, _AssistantStream_currentContent, accumulatedMessage.content[content.index], \"f\");\n                }\n            }\n            break;\n        case 'thread.message.completed':\n        case 'thread.message.incomplete':\n            //We emit the latest content we were working on on completion (including incomplete)\n            if (__classPrivateFieldGet(this, _AssistantStream_currentContentIndex, \"f\") !== undefined) {\n                const currentContent = event.data.content[__classPrivateFieldGet(this, _AssistantStream_currentContentIndex, \"f\")];\n                if (currentContent) {\n                    switch (currentContent.type) {\n                        case 'image_file':\n                            this._emit('imageFileDone', currentContent.image_file, __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\"));\n                            break;\n                        case 'text':\n                            this._emit('textDone', currentContent.text, __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\"));\n                            break;\n                    }\n                }\n            }\n            if (__classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\")) {\n                this._emit('messageDone', event.data);\n            }\n            __classPrivateFieldSet(this, _AssistantStream_messageSnapshot, undefined, \"f\");\n    }\n}, _AssistantStream_handleRunStep = function _AssistantStream_handleRunStep(event) {\n    const accumulatedRunStep = __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_accumulateRunStep).call(this, event);\n    __classPrivateFieldSet(this, _AssistantStream_currentRunStepSnapshot, accumulatedRunStep, \"f\");\n    switch (event.event) {\n        case 'thread.run.step.created':\n            this._emit('runStepCreated', event.data);\n            break;\n        case 'thread.run.step.delta':\n            const delta = event.data.delta;\n            if (delta.step_details &&\n                delta.step_details.type == 'tool_calls' &&\n                delta.step_details.tool_calls &&\n                accumulatedRunStep.step_details.type == 'tool_calls') {\n                for (const toolCall of delta.step_details.tool_calls) {\n                    if (toolCall.index == __classPrivateFieldGet(this, _AssistantStream_currentToolCallIndex, \"f\")) {\n                        this._emit('toolCallDelta', toolCall, accumulatedRunStep.step_details.tool_calls[toolCall.index]);\n                    }\n                    else {\n                        if (__classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\")) {\n                            this._emit('toolCallDone', __classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\"));\n                        }\n                        __classPrivateFieldSet(this, _AssistantStream_currentToolCallIndex, toolCall.index, \"f\");\n                        __classPrivateFieldSet(this, _AssistantStream_currentToolCall, accumulatedRunStep.step_details.tool_calls[toolCall.index], \"f\");\n                        if (__classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\"))\n                            this._emit('toolCallCreated', __classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\"));\n                    }\n                }\n            }\n            this._emit('runStepDelta', event.data.delta, accumulatedRunStep);\n            break;\n        case 'thread.run.step.completed':\n        case 'thread.run.step.failed':\n        case 'thread.run.step.cancelled':\n        case 'thread.run.step.expired':\n            __classPrivateFieldSet(this, _AssistantStream_currentRunStepSnapshot, undefined, \"f\");\n            const details = event.data.step_details;\n            if (details.type == 'tool_calls') {\n                if (__classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\")) {\n                    this._emit('toolCallDone', __classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\"));\n                    __classPrivateFieldSet(this, _AssistantStream_currentToolCall, undefined, \"f\");\n                }\n            }\n            this._emit('runStepDone', event.data, accumulatedRunStep);\n            break;\n        case 'thread.run.step.in_progress':\n            break;\n    }\n}, _AssistantStream_handleEvent = function _AssistantStream_handleEvent(event) {\n    __classPrivateFieldGet(this, _AssistantStream_events, \"f\").push(event);\n    this._emit('event', event);\n}, _AssistantStream_accumulateRunStep = function _AssistantStream_accumulateRunStep(event) {\n    switch (event.event) {\n        case 'thread.run.step.created':\n            __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id] = event.data;\n            return event.data;\n        case 'thread.run.step.delta':\n            let snapshot = __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id];\n            if (!snapshot) {\n                throw Error('Received a RunStepDelta before creation of a snapshot');\n            }\n            let data = event.data;\n            if (data.delta) {\n                const accumulated = AssistantStream.accumulateDelta(snapshot, data.delta);\n                __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id] = accumulated;\n            }\n            return __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id];\n        case 'thread.run.step.completed':\n        case 'thread.run.step.failed':\n        case 'thread.run.step.cancelled':\n        case 'thread.run.step.expired':\n        case 'thread.run.step.in_progress':\n            __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id] = event.data;\n            break;\n    }\n    if (__classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id])\n        return __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id];\n    throw new Error('No snapshot available');\n}, _AssistantStream_accumulateMessage = function _AssistantStream_accumulateMessage(event, snapshot) {\n    let newContent = [];\n    switch (event.event) {\n        case 'thread.message.created':\n            //On creation the snapshot is just the initial message\n            return [event.data, newContent];\n        case 'thread.message.delta':\n            if (!snapshot) {\n                throw Error('Received a delta with no existing snapshot (there should be one from message creation)');\n            }\n            let data = event.data;\n            //If this delta does not have content, nothing to process\n            if (data.delta.content) {\n                for (const contentElement of data.delta.content) {\n                    if (contentElement.index in snapshot.content) {\n                        let currentContent = snapshot.content[contentElement.index];\n                        snapshot.content[contentElement.index] = __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_accumulateContent).call(this, contentElement, currentContent);\n                    }\n                    else {\n                        snapshot.content[contentElement.index] = contentElement;\n                        // This is a new element\n                        newContent.push(contentElement);\n                    }\n                }\n            }\n            return [snapshot, newContent];\n        case 'thread.message.in_progress':\n        case 'thread.message.completed':\n        case 'thread.message.incomplete':\n            //No changes on other thread events\n            if (snapshot) {\n                return [snapshot, newContent];\n            }\n            else {\n                throw Error('Received thread message event with no existing snapshot');\n            }\n    }\n    throw Error('Tried to accumulate a non-message event');\n}, _AssistantStream_accumulateContent = function _AssistantStream_accumulateContent(contentElement, currentContent) {\n    return AssistantStream.accumulateDelta(currentContent, contentElement);\n}, _AssistantStream_handleRun = function _AssistantStream_handleRun(event) {\n    __classPrivateFieldSet(this, _AssistantStream_currentRunSnapshot, event.data, \"f\");\n    switch (event.event) {\n        case 'thread.run.created':\n            break;\n        case 'thread.run.queued':\n            break;\n        case 'thread.run.in_progress':\n            break;\n        case 'thread.run.requires_action':\n        case 'thread.run.cancelled':\n        case 'thread.run.failed':\n        case 'thread.run.completed':\n        case 'thread.run.expired':\n            __classPrivateFieldSet(this, _AssistantStream_finalRun, event.data, \"f\");\n            if (__classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\")) {\n                this._emit('toolCallDone', __classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\"));\n                __classPrivateFieldSet(this, _AssistantStream_currentToolCall, undefined, \"f\");\n            }\n            break;\n        case 'thread.run.cancelling':\n            break;\n    }\n};\nfunction assertNever(_x) { }\n//# sourceMappingURL=AssistantStream.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport { isRequestOptions } from \"../../../core.mjs\";\nimport { CursorPage } from \"../../../pagination.mjs\";\nexport class Messages extends APIResource {\n    /**\n     * Create a message.\n     */\n    create(threadId, body, options) {\n        return this._client.post(`/threads/${threadId}/messages`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Retrieve a message.\n     */\n    retrieve(threadId, messageId, options) {\n        return this._client.get(`/threads/${threadId}/messages/${messageId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Modifies a message.\n     */\n    update(threadId, messageId, body, options) {\n        return this._client.post(`/threads/${threadId}/messages/${messageId}`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    list(threadId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list(threadId, {}, query);\n        }\n        return this._client.getAPIList(`/threads/${threadId}/messages`, MessagesPage, {\n            query,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Deletes a message.\n     */\n    del(threadId, messageId, options) {\n        return this._client.delete(`/threads/${threadId}/messages/${messageId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n}\nexport class MessagesPage extends CursorPage {\n}\nMessages.MessagesPage = MessagesPage;\n//# sourceMappingURL=messages.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../../resource.mjs\";\nimport { isRequestOptions } from \"../../../../core.mjs\";\nimport { CursorPage } from \"../../../../pagination.mjs\";\nexport class Steps extends APIResource {\n    retrieve(threadId, runId, stepId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.retrieve(threadId, runId, stepId, {}, query);\n        }\n        return this._client.get(`/threads/${threadId}/runs/${runId}/steps/${stepId}`, {\n            query,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    list(threadId, runId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list(threadId, runId, {}, query);\n        }\n        return this._client.getAPIList(`/threads/${threadId}/runs/${runId}/steps`, RunStepsPage, {\n            query,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n}\nexport class RunStepsPage extends CursorPage {\n}\nSteps.RunStepsPage = RunStepsPage;\n//# sourceMappingURL=steps.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../../resource.mjs\";\nimport { isRequestOptions } from \"../../../../core.mjs\";\nimport { AssistantStream } from \"../../../../lib/AssistantStream.mjs\";\nimport { sleep } from \"../../../../core.mjs\";\nimport * as StepsAPI from \"./steps.mjs\";\nimport { RunStepsPage, Steps, } from \"./steps.mjs\";\nimport { CursorPage } from \"../../../../pagination.mjs\";\nexport class Runs extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.steps = new StepsAPI.Steps(this._client);\n    }\n    create(threadId, params, options) {\n        const { include, ...body } = params;\n        return this._client.post(`/threads/${threadId}/runs`, {\n            query: { include },\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n            stream: params.stream ?? false,\n        });\n    }\n    /**\n     * Retrieves a run.\n     */\n    retrieve(threadId, runId, options) {\n        return this._client.get(`/threads/${threadId}/runs/${runId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Modifies a run.\n     */\n    update(threadId, runId, body, options) {\n        return this._client.post(`/threads/${threadId}/runs/${runId}`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    list(threadId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list(threadId, {}, query);\n        }\n        return this._client.getAPIList(`/threads/${threadId}/runs`, RunsPage, {\n            query,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Cancels a run that is `in_progress`.\n     */\n    cancel(threadId, runId, options) {\n        return this._client.post(`/threads/${threadId}/runs/${runId}/cancel`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * A helper to create a run an poll for a terminal state. More information on Run\n     * lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */\n    async createAndPoll(threadId, body, options) {\n        const run = await this.create(threadId, body, options);\n        return await this.poll(threadId, run.id, options);\n    }\n    /**\n     * Create a Run stream\n     *\n     * @deprecated use `stream` instead\n     */\n    createAndStream(threadId, body, options) {\n        return AssistantStream.createAssistantStream(threadId, this._client.beta.threads.runs, body, options);\n    }\n    /**\n     * A helper to poll a run status until it reaches a terminal state. More\n     * information on Run lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */\n    async poll(threadId, runId, options) {\n        const headers = { ...options?.headers, 'X-Stainless-Poll-Helper': 'true' };\n        if (options?.pollIntervalMs) {\n            headers['X-Stainless-Custom-Poll-Interval'] = options.pollIntervalMs.toString();\n        }\n        while (true) {\n            const { data: run, response } = await this.retrieve(threadId, runId, {\n                ...options,\n                headers: { ...options?.headers, ...headers },\n            }).withResponse();\n            switch (run.status) {\n                //If we are in any sort of intermediate state we poll\n                case 'queued':\n                case 'in_progress':\n                case 'cancelling':\n                    let sleepInterval = 5000;\n                    if (options?.pollIntervalMs) {\n                        sleepInterval = options.pollIntervalMs;\n                    }\n                    else {\n                        const headerInterval = response.headers.get('openai-poll-after-ms');\n                        if (headerInterval) {\n                            const headerIntervalMs = parseInt(headerInterval);\n                            if (!isNaN(headerIntervalMs)) {\n                                sleepInterval = headerIntervalMs;\n                            }\n                        }\n                    }\n                    await sleep(sleepInterval);\n                    break;\n                //We return the run in any terminal state.\n                case 'requires_action':\n                case 'incomplete':\n                case 'cancelled':\n                case 'completed':\n                case 'failed':\n                case 'expired':\n                    return run;\n            }\n        }\n    }\n    /**\n     * Create a Run stream\n     */\n    stream(threadId, body, options) {\n        return AssistantStream.createAssistantStream(threadId, this._client.beta.threads.runs, body, options);\n    }\n    submitToolOutputs(threadId, runId, body, options) {\n        return this._client.post(`/threads/${threadId}/runs/${runId}/submit_tool_outputs`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n            stream: body.stream ?? false,\n        });\n    }\n    /**\n     * A helper to submit a tool output to a run and poll for a terminal run state.\n     * More information on Run lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */\n    async submitToolOutputsAndPoll(threadId, runId, body, options) {\n        const run = await this.submitToolOutputs(threadId, runId, body, options);\n        return await this.poll(threadId, run.id, options);\n    }\n    /**\n     * Submit the tool outputs from a previous run and stream the run to a terminal\n     * state. More information on Run lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */\n    submitToolOutputsStream(threadId, runId, body, options) {\n        return AssistantStream.createToolAssistantStream(threadId, runId, this._client.beta.threads.runs, body, options);\n    }\n}\nexport class RunsPage extends CursorPage {\n}\nRuns.RunsPage = RunsPage;\nRuns.Steps = Steps;\nRuns.RunStepsPage = RunStepsPage;\n//# sourceMappingURL=runs.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport { isRequestOptions } from \"../../../core.mjs\";\nimport { AssistantStream } from \"../../../lib/AssistantStream.mjs\";\nimport * as MessagesAPI from \"./messages.mjs\";\nimport { Messages, MessagesPage, } from \"./messages.mjs\";\nimport * as RunsAPI from \"./runs/runs.mjs\";\nimport { Runs, RunsPage, } from \"./runs/runs.mjs\";\nexport class Threads extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.runs = new RunsAPI.Runs(this._client);\n        this.messages = new MessagesAPI.Messages(this._client);\n    }\n    create(body = {}, options) {\n        if (isRequestOptions(body)) {\n            return this.create({}, body);\n        }\n        return this._client.post('/threads', {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Retrieves a thread.\n     */\n    retrieve(threadId, options) {\n        return this._client.get(`/threads/${threadId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Modifies a thread.\n     */\n    update(threadId, body, options) {\n        return this._client.post(`/threads/${threadId}`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Delete a thread.\n     */\n    del(threadId, options) {\n        return this._client.delete(`/threads/${threadId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    createAndRun(body, options) {\n        return this._client.post('/threads/runs', {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n            stream: body.stream ?? false,\n        });\n    }\n    /**\n     * A helper to create a thread, start a run and then poll for a terminal state.\n     * More information on Run lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */\n    async createAndRunPoll(body, options) {\n        const run = await this.createAndRun(body, options);\n        return await this.runs.poll(run.thread_id, run.id, options);\n    }\n    /**\n     * Create a thread and stream the run back\n     */\n    createAndRunStream(body, options) {\n        return AssistantStream.createThreadAssistantStream(body, this._client.beta.threads, options);\n    }\n}\nThreads.Runs = Runs;\nThreads.RunsPage = RunsPage;\nThreads.Messages = Messages;\nThreads.MessagesPage = MessagesPage;\n//# sourceMappingURL=threads.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport * as AssistantsAPI from \"./assistants.mjs\";\nimport * as ChatAPI from \"./chat/chat.mjs\";\nimport { Assistants, AssistantsPage, } from \"./assistants.mjs\";\nimport * as RealtimeAPI from \"./realtime/realtime.mjs\";\nimport { Realtime, } from \"./realtime/realtime.mjs\";\nimport * as ThreadsAPI from \"./threads/threads.mjs\";\nimport { Threads, } from \"./threads/threads.mjs\";\nimport { Chat } from \"./chat/chat.mjs\";\nexport class Beta extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.realtime = new RealtimeAPI.Realtime(this._client);\n        this.chat = new ChatAPI.Chat(this._client);\n        this.assistants = new AssistantsAPI.Assistants(this._client);\n        this.threads = new ThreadsAPI.Threads(this._client);\n    }\n}\nBeta.Realtime = Realtime;\nBeta.Assistants = Assistants;\nBeta.AssistantsPage = AssistantsPage;\nBeta.Threads = Threads;\n//# sourceMappingURL=beta.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../resource.mjs\";\nimport { isRequestOptions } from \"../core.mjs\";\nimport { CursorPage } from \"../pagination.mjs\";\nexport class Batches extends APIResource {\n    /**\n     * Creates and executes a batch from an uploaded file of requests\n     */\n    create(body, options) {\n        return this._client.post('/batches', { body, ...options });\n    }\n    /**\n     * Retrieves a batch.\n     */\n    retrieve(batchId, options) {\n        return this._client.get(`/batches/${batchId}`, options);\n    }\n    list(query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList('/batches', BatchesPage, { query, ...options });\n    }\n    /**\n     * Cancels an in-progress batch. The batch will be in status `cancelling` for up to\n     * 10 minutes, before changing to `cancelled`, where it will have partial results\n     * (if any) available in the output file.\n     */\n    cancel(batchId, options) {\n        return this._client.post(`/batches/${batchId}/cancel`, options);\n    }\n}\nexport class BatchesPage extends CursorPage {\n}\nBatches.BatchesPage = BatchesPage;\n//# sourceMappingURL=batches.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport * as Core from \"../../core.mjs\";\nexport class Parts extends APIResource {\n    /**\n     * Adds a\n     * [Part](https://platform.openai.com/docs/api-reference/uploads/part-object) to an\n     * [Upload](https://platform.openai.com/docs/api-reference/uploads/object) object.\n     * A Part represents a chunk of bytes from the file you are trying to upload.\n     *\n     * Each Part can be at most 64 MB, and you can add Parts until you hit the Upload\n     * maximum of 8 GB.\n     *\n     * It is possible to add multiple Parts in parallel. You can decide the intended\n     * order of the Parts when you\n     * [complete the Upload](https://platform.openai.com/docs/api-reference/uploads/complete).\n     */\n    create(uploadId, body, options) {\n        return this._client.post(`/uploads/${uploadId}/parts`, Core.multipartFormRequestOptions({ body, ...options }));\n    }\n}\n//# sourceMappingURL=parts.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport * as PartsAPI from \"./parts.mjs\";\nimport { Parts } from \"./parts.mjs\";\nexport class Uploads extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.parts = new PartsAPI.Parts(this._client);\n    }\n    /**\n     * Creates an intermediate\n     * [Upload](https://platform.openai.com/docs/api-reference/uploads/object) object\n     * that you can add\n     * [Parts](https://platform.openai.com/docs/api-reference/uploads/part-object) to.\n     * Currently, an Upload can accept at most 8 GB in total and expires after an hour\n     * after you create it.\n     *\n     * Once you complete the Upload, we will create a\n     * [File](https://platform.openai.com/docs/api-reference/files/object) object that\n     * contains all the parts you uploaded. This File is usable in the rest of our\n     * platform as a regular File object.\n     *\n     * For certain `purpose` values, the correct `mime_type` must be specified. Please\n     * refer to documentation for the\n     * [supported MIME types for your use case](https://platform.openai.com/docs/assistants/tools/file-search#supported-files).\n     *\n     * For guidance on the proper filename extensions for each purpose, please follow\n     * the documentation on\n     * [creating a File](https://platform.openai.com/docs/api-reference/files/create).\n     */\n    create(body, options) {\n        return this._client.post('/uploads', { body, ...options });\n    }\n    /**\n     * Cancels the Upload. No Parts may be added after an Upload is cancelled.\n     */\n    cancel(uploadId, options) {\n        return this._client.post(`/uploads/${uploadId}/cancel`, options);\n    }\n    /**\n     * Completes the\n     * [Upload](https://platform.openai.com/docs/api-reference/uploads/object).\n     *\n     * Within the returned Upload object, there is a nested\n     * [File](https://platform.openai.com/docs/api-reference/files/object) object that\n     * is ready to use in the rest of the platform.\n     *\n     * You can specify the order of the Parts by passing in an ordered list of the Part\n     * IDs.\n     *\n     * The number of bytes uploaded upon completion must match the number of bytes\n     * initially specified when creating the Upload object. No Parts may be added after\n     * an Upload is completed.\n     */\n    complete(uploadId, body, options) {\n        return this._client.post(`/uploads/${uploadId}/complete`, { body, ...options });\n    }\n}\nUploads.Parts = Parts;\n//# sourceMappingURL=uploads.mjs.map","import { OpenAIError } from \"../error.mjs\";\nimport { isAutoParsableResponseFormat } from \"../lib/parser.mjs\";\nexport function maybeParseResponse(response, params) {\n    if (!params || !hasAutoParseableInput(params)) {\n        return {\n            ...response,\n            output_parsed: null,\n            output: response.output.map((item) => {\n                if (item.type === 'function_call') {\n                    return {\n                        ...item,\n                        parsed_arguments: null,\n                    };\n                }\n                if (item.type === 'message') {\n                    return {\n                        ...item,\n                        content: item.content.map((content) => ({\n                            ...content,\n                            parsed: null,\n                        })),\n                    };\n                }\n                else {\n                    return item;\n                }\n            }),\n        };\n    }\n    return parseResponse(response, params);\n}\nexport function parseResponse(response, params) {\n    const output = response.output.map((item) => {\n        if (item.type === 'function_call') {\n            return {\n                ...item,\n                parsed_arguments: parseToolCall(params, item),\n            };\n        }\n        if (item.type === 'message') {\n            const content = item.content.map((content) => {\n                if (content.type === 'output_text') {\n                    return {\n                        ...content,\n                        parsed: parseTextFormat(params, content.text),\n                    };\n                }\n                return content;\n            });\n            return {\n                ...item,\n                content,\n            };\n        }\n        return item;\n    });\n    const parsed = Object.assign({}, response, { output });\n    if (!Object.getOwnPropertyDescriptor(response, 'output_text')) {\n        addOutputText(parsed);\n    }\n    Object.defineProperty(parsed, 'output_parsed', {\n        enumerable: true,\n        get() {\n            for (const output of parsed.output) {\n                if (output.type !== 'message') {\n                    continue;\n                }\n                for (const content of output.content) {\n                    if (content.type === 'output_text' && content.parsed !== null) {\n                        return content.parsed;\n                    }\n                }\n            }\n            return null;\n        },\n    });\n    return parsed;\n}\nfunction parseTextFormat(params, content) {\n    if (params.text?.format?.type !== 'json_schema') {\n        return null;\n    }\n    if ('$parseRaw' in params.text?.format) {\n        const text_format = params.text?.format;\n        return text_format.$parseRaw(content);\n    }\n    return JSON.parse(content);\n}\nexport function hasAutoParseableInput(params) {\n    if (isAutoParsableResponseFormat(params.text?.format)) {\n        return true;\n    }\n    return false;\n}\nexport function makeParseableResponseTool(tool, { parser, callback, }) {\n    const obj = { ...tool };\n    Object.defineProperties(obj, {\n        $brand: {\n            value: 'auto-parseable-tool',\n            enumerable: false,\n        },\n        $parseRaw: {\n            value: parser,\n            enumerable: false,\n        },\n        $callback: {\n            value: callback,\n            enumerable: false,\n        },\n    });\n    return obj;\n}\nexport function isAutoParsableTool(tool) {\n    return tool?.['$brand'] === 'auto-parseable-tool';\n}\nfunction getInputToolByName(input_tools, name) {\n    return input_tools.find((tool) => tool.type === 'function' && tool.name === name);\n}\nfunction parseToolCall(params, toolCall) {\n    const inputTool = getInputToolByName(params.tools ?? [], toolCall.name);\n    return {\n        ...toolCall,\n        ...toolCall,\n        parsed_arguments: isAutoParsableTool(inputTool) ? inputTool.$parseRaw(toolCall.arguments)\n            : inputTool?.strict ? JSON.parse(toolCall.arguments)\n                : null,\n    };\n}\nexport function shouldParseToolCall(params, toolCall) {\n    if (!params) {\n        return false;\n    }\n    const inputTool = getInputToolByName(params.tools ?? [], toolCall.name);\n    return isAutoParsableTool(inputTool) || inputTool?.strict || false;\n}\nexport function validateInputTools(tools) {\n    for (const tool of tools ?? []) {\n        if (tool.type !== 'function') {\n            throw new OpenAIError(`Currently only \\`function\\` tool types support auto-parsing; Received \\`${tool.type}\\``);\n        }\n        if (tool.function.strict !== true) {\n            throw new OpenAIError(`The \\`${tool.function.name}\\` tool is not marked with \\`strict: true\\`. Only strict function tools can be auto-parsed`);\n        }\n    }\n}\nexport function addOutputText(rsp) {\n    const texts = [];\n    for (const output of rsp.output) {\n        if (output.type !== 'message') {\n            continue;\n        }\n        for (const content of output.content) {\n            if (content.type === 'output_text') {\n                texts.push(content.text);\n            }\n        }\n    }\n    rsp.output_text = texts.join('');\n}\n//# sourceMappingURL=ResponsesParser.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport { isRequestOptions } from \"../../core.mjs\";\nimport { ResponseItemsPage } from \"./responses.mjs\";\nexport class InputItems extends APIResource {\n    list(responseId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list(responseId, {}, query);\n        }\n        return this._client.getAPIList(`/responses/${responseId}/input_items`, ResponseItemsPage, {\n            query,\n            ...options,\n        });\n    }\n}\nexport { ResponseItemsPage };\n//# sourceMappingURL=input-items.mjs.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _ResponseStream_instances, _ResponseStream_params, _ResponseStream_currentResponseSnapshot, _ResponseStream_finalResponse, _ResponseStream_beginRequest, _ResponseStream_addEvent, _ResponseStream_endRequest, _ResponseStream_accumulateResponse;\nimport { APIUserAbortError, OpenAIError } from \"../../error.mjs\";\nimport { EventStream } from \"../EventStream.mjs\";\nimport { maybeParseResponse } from \"../ResponsesParser.mjs\";\nexport class ResponseStream extends EventStream {\n    constructor(params) {\n        super();\n        _ResponseStream_instances.add(this);\n        _ResponseStream_params.set(this, void 0);\n        _ResponseStream_currentResponseSnapshot.set(this, void 0);\n        _ResponseStream_finalResponse.set(this, void 0);\n        __classPrivateFieldSet(this, _ResponseStream_params, params, \"f\");\n    }\n    static createResponse(client, params, options) {\n        const runner = new ResponseStream(params);\n        runner._run(() => runner._createResponse(client, params, {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' },\n        }));\n        return runner;\n    }\n    async _createResponse(client, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        __classPrivateFieldGet(this, _ResponseStream_instances, \"m\", _ResponseStream_beginRequest).call(this);\n        const stream = await client.responses.create({ ...params, stream: true }, { ...options, signal: this.controller.signal });\n        this._connected();\n        for await (const event of stream) {\n            __classPrivateFieldGet(this, _ResponseStream_instances, \"m\", _ResponseStream_addEvent).call(this, event);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return __classPrivateFieldGet(this, _ResponseStream_instances, \"m\", _ResponseStream_endRequest).call(this);\n    }\n    [(_ResponseStream_params = new WeakMap(), _ResponseStream_currentResponseSnapshot = new WeakMap(), _ResponseStream_finalResponse = new WeakMap(), _ResponseStream_instances = new WeakSet(), _ResponseStream_beginRequest = function _ResponseStream_beginRequest() {\n        if (this.ended)\n            return;\n        __classPrivateFieldSet(this, _ResponseStream_currentResponseSnapshot, undefined, \"f\");\n    }, _ResponseStream_addEvent = function _ResponseStream_addEvent(event) {\n        if (this.ended)\n            return;\n        const response = __classPrivateFieldGet(this, _ResponseStream_instances, \"m\", _ResponseStream_accumulateResponse).call(this, event);\n        this._emit('event', event);\n        switch (event.type) {\n            case 'response.output_text.delta': {\n                const output = response.output[event.output_index];\n                if (!output) {\n                    throw new OpenAIError(`missing output at index ${event.output_index}`);\n                }\n                if (output.type === 'message') {\n                    const content = output.content[event.content_index];\n                    if (!content) {\n                        throw new OpenAIError(`missing content at index ${event.content_index}`);\n                    }\n                    if (content.type !== 'output_text') {\n                        throw new OpenAIError(`expected content to be 'output_text', got ${content.type}`);\n                    }\n                    this._emit('response.output_text.delta', {\n                        ...event,\n                        snapshot: content.text,\n                    });\n                }\n                break;\n            }\n            case 'response.function_call_arguments.delta': {\n                const output = response.output[event.output_index];\n                if (!output) {\n                    throw new OpenAIError(`missing output at index ${event.output_index}`);\n                }\n                if (output.type === 'function_call') {\n                    this._emit('response.function_call_arguments.delta', {\n                        ...event,\n                        snapshot: output.arguments,\n                    });\n                }\n                break;\n            }\n            default:\n                // @ts-ignore\n                this._emit(event.type, event);\n                break;\n        }\n    }, _ResponseStream_endRequest = function _ResponseStream_endRequest() {\n        if (this.ended) {\n            throw new OpenAIError(`stream has ended, this shouldn't happen`);\n        }\n        const snapshot = __classPrivateFieldGet(this, _ResponseStream_currentResponseSnapshot, \"f\");\n        if (!snapshot) {\n            throw new OpenAIError(`request ended without sending any events`);\n        }\n        __classPrivateFieldSet(this, _ResponseStream_currentResponseSnapshot, undefined, \"f\");\n        const parsedResponse = finalizeResponse(snapshot, __classPrivateFieldGet(this, _ResponseStream_params, \"f\"));\n        __classPrivateFieldSet(this, _ResponseStream_finalResponse, parsedResponse, \"f\");\n        return parsedResponse;\n    }, _ResponseStream_accumulateResponse = function _ResponseStream_accumulateResponse(event) {\n        let snapshot = __classPrivateFieldGet(this, _ResponseStream_currentResponseSnapshot, \"f\");\n        if (!snapshot) {\n            if (event.type !== 'response.created') {\n                throw new OpenAIError(`When snapshot hasn't been set yet, expected 'response.created' event, got ${event.type}`);\n            }\n            snapshot = __classPrivateFieldSet(this, _ResponseStream_currentResponseSnapshot, event.response, \"f\");\n            return snapshot;\n        }\n        switch (event.type) {\n            case 'response.output_item.added': {\n                snapshot.output.push(event.item);\n                break;\n            }\n            case 'response.content_part.added': {\n                const output = snapshot.output[event.output_index];\n                if (!output) {\n                    throw new OpenAIError(`missing output at index ${event.output_index}`);\n                }\n                if (output.type === 'message') {\n                    output.content.push(event.part);\n                }\n                break;\n            }\n            case 'response.output_text.delta': {\n                const output = snapshot.output[event.output_index];\n                if (!output) {\n                    throw new OpenAIError(`missing output at index ${event.output_index}`);\n                }\n                if (output.type === 'message') {\n                    const content = output.content[event.content_index];\n                    if (!content) {\n                        throw new OpenAIError(`missing content at index ${event.content_index}`);\n                    }\n                    if (content.type !== 'output_text') {\n                        throw new OpenAIError(`expected content to be 'output_text', got ${content.type}`);\n                    }\n                    content.text += event.delta;\n                }\n                break;\n            }\n            case 'response.function_call_arguments.delta': {\n                const output = snapshot.output[event.output_index];\n                if (!output) {\n                    throw new OpenAIError(`missing output at index ${event.output_index}`);\n                }\n                if (output.type === 'function_call') {\n                    output.arguments += event.delta;\n                }\n                break;\n            }\n            case 'response.completed': {\n                __classPrivateFieldSet(this, _ResponseStream_currentResponseSnapshot, event.response, \"f\");\n                break;\n            }\n        }\n        return snapshot;\n    }, Symbol.asyncIterator)]() {\n        const pushQueue = [];\n        const readQueue = [];\n        let done = false;\n        this.on('event', (event) => {\n            const reader = readQueue.shift();\n            if (reader) {\n                reader.resolve(event);\n            }\n            else {\n                pushQueue.push(event);\n            }\n        });\n        this.on('end', () => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.resolve(undefined);\n            }\n            readQueue.length = 0;\n        });\n        this.on('abort', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        this.on('error', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        return {\n            next: async () => {\n                if (!pushQueue.length) {\n                    if (done) {\n                        return { value: undefined, done: true };\n                    }\n                    return new Promise((resolve, reject) => readQueue.push({ resolve, reject })).then((event) => (event ? { value: event, done: false } : { value: undefined, done: true }));\n                }\n                const event = pushQueue.shift();\n                return { value: event, done: false };\n            },\n            return: async () => {\n                this.abort();\n                return { value: undefined, done: true };\n            },\n        };\n    }\n    /**\n     * @returns a promise that resolves with the final Response, or rejects\n     * if an error occurred or the stream ended prematurely without producing a REsponse.\n     */\n    async finalResponse() {\n        await this.done();\n        const response = __classPrivateFieldGet(this, _ResponseStream_finalResponse, \"f\");\n        if (!response)\n            throw new OpenAIError('stream ended without producing a ChatCompletion');\n        return response;\n    }\n}\nfunction finalizeResponse(snapshot, params) {\n    return maybeParseResponse(snapshot, params);\n}\n//# sourceMappingURL=ResponseStream.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nvar _a;\nimport * as qs from \"./internal/qs/index.mjs\";\nimport * as Core from \"./core.mjs\";\nimport * as Errors from \"./error.mjs\";\nimport * as Pagination from \"./pagination.mjs\";\nimport * as Uploads from \"./uploads.mjs\";\nimport * as API from \"./resources/index.mjs\";\nimport { Batches, BatchesPage, } from \"./resources/batches.mjs\";\nimport { Completions, } from \"./resources/completions.mjs\";\nimport { Embeddings, } from \"./resources/embeddings.mjs\";\nimport { FileObjectsPage, Files, } from \"./resources/files.mjs\";\nimport { Images, } from \"./resources/images.mjs\";\nimport { Models, ModelsPage } from \"./resources/models.mjs\";\nimport { Moderations, } from \"./resources/moderations.mjs\";\nimport { Audio } from \"./resources/audio/audio.mjs\";\nimport { Beta } from \"./resources/beta/beta.mjs\";\nimport { Chat } from \"./resources/chat/chat.mjs\";\nimport { EvalListResponsesPage, Evals, } from \"./resources/evals/evals.mjs\";\nimport { FineTuning } from \"./resources/fine-tuning/fine-tuning.mjs\";\nimport { Responses } from \"./resources/responses/responses.mjs\";\nimport { Uploads as UploadsAPIUploads, } from \"./resources/uploads/uploads.mjs\";\nimport { VectorStoreSearchResponsesPage, VectorStores, VectorStoresPage, } from \"./resources/vector-stores/vector-stores.mjs\";\nimport { ChatCompletionsPage, } from \"./resources/chat/completions/completions.mjs\";\n/**\n * API Client for interfacing with the OpenAI API.\n */\nexport class OpenAI extends Core.APIClient {\n    /**\n     * API Client for interfacing with the OpenAI API.\n     *\n     * @param {string | undefined} [opts.apiKey=process.env['OPENAI_API_KEY'] ?? undefined]\n     * @param {string | null | undefined} [opts.organization=process.env['OPENAI_ORG_ID'] ?? null]\n     * @param {string | null | undefined} [opts.project=process.env['OPENAI_PROJECT_ID'] ?? null]\n     * @param {string} [opts.baseURL=process.env['OPENAI_BASE_URL'] ?? https://api.openai.com/v1] - Override the default base URL for the API.\n     * @param {number} [opts.timeout=10 minutes] - The maximum amount of time (in milliseconds) the client will wait for a response before timing out.\n     * @param {number} [opts.httpAgent] - An HTTP agent used to manage HTTP(s) connections.\n     * @param {Core.Fetch} [opts.fetch] - Specify a custom `fetch` function implementation.\n     * @param {number} [opts.maxRetries=2] - The maximum number of times the client will retry a request.\n     * @param {Core.Headers} opts.defaultHeaders - Default headers to include with every request to the API.\n     * @param {Core.DefaultQuery} opts.defaultQuery - Default query parameters to include with every request to the API.\n     * @param {boolean} [opts.dangerouslyAllowBrowser=false] - By default, client-side use of this library is not allowed, as it risks exposing your secret API credentials to attackers.\n     */\n    constructor({ baseURL = Core.readEnv('OPENAI_BASE_URL'), apiKey = Core.readEnv('OPENAI_API_KEY'), organization = Core.readEnv('OPENAI_ORG_ID') ?? null, project = Core.readEnv('OPENAI_PROJECT_ID') ?? null, ...opts } = {}) {\n        if (apiKey === undefined) {\n            throw new Errors.OpenAIError(\"The OPENAI_API_KEY environment variable is missing or empty; either provide it, or instantiate the OpenAI client with an apiKey option, like new OpenAI({ apiKey: 'My API Key' }).\");\n        }\n        const options = {\n            apiKey,\n            organization,\n            project,\n            ...opts,\n            baseURL: baseURL || `https://api.openai.com/v1`,\n        };\n        if (!options.dangerouslyAllowBrowser && Core.isRunningInBrowser()) {\n            throw new Errors.OpenAIError(\"It looks like you're running in a browser-like environment.\\n\\nThis is disabled by default, as it risks exposing your secret API credentials to attackers.\\nIf you understand the risks and have appropriate mitigations in place,\\nyou can set the `dangerouslyAllowBrowser` option to `true`, e.g.,\\n\\nnew OpenAI({ apiKey, dangerouslyAllowBrowser: true });\\n\\nhttps://help.openai.com/en/articles/5112595-best-practices-for-api-key-safety\\n\");\n        }\n        super({\n            baseURL: options.baseURL,\n            timeout: options.timeout ?? 600000 /* 10 minutes */,\n            httpAgent: options.httpAgent,\n            maxRetries: options.maxRetries,\n            fetch: options.fetch,\n        });\n        this.completions = new API.Completions(this);\n        this.chat = new API.Chat(this);\n        this.embeddings = new API.Embeddings(this);\n        this.files = new API.Files(this);\n        this.images = new API.Images(this);\n        this.audio = new API.Audio(this);\n        this.moderations = new API.Moderations(this);\n        this.models = new API.Models(this);\n        this.fineTuning = new API.FineTuning(this);\n        this.vectorStores = new API.VectorStores(this);\n        this.beta = new API.Beta(this);\n        this.batches = new API.Batches(this);\n        this.uploads = new API.Uploads(this);\n        this.responses = new API.Responses(this);\n        this.evals = new API.Evals(this);\n        this._options = options;\n        this.apiKey = apiKey;\n        this.organization = organization;\n        this.project = project;\n    }\n    defaultQuery() {\n        return this._options.defaultQuery;\n    }\n    defaultHeaders(opts) {\n        return {\n            ...super.defaultHeaders(opts),\n            'OpenAI-Organization': this.organization,\n            'OpenAI-Project': this.project,\n            ...this._options.defaultHeaders,\n        };\n    }\n    authHeaders(opts) {\n        return { Authorization: `Bearer ${this.apiKey}` };\n    }\n    stringifyQuery(query) {\n        return qs.stringify(query, { arrayFormat: 'brackets' });\n    }\n}\n_a = OpenAI;\nOpenAI.OpenAI = _a;\nOpenAI.DEFAULT_TIMEOUT = 600000; // 10 minutes\nOpenAI.OpenAIError = Errors.OpenAIError;\nOpenAI.APIError = Errors.APIError;\nOpenAI.APIConnectionError = Errors.APIConnectionError;\nOpenAI.APIConnectionTimeoutError = Errors.APIConnectionTimeoutError;\nOpenAI.APIUserAbortError = Errors.APIUserAbortError;\nOpenAI.NotFoundError = Errors.NotFoundError;\nOpenAI.ConflictError = Errors.ConflictError;\nOpenAI.RateLimitError = Errors.RateLimitError;\nOpenAI.BadRequestError = Errors.BadRequestError;\nOpenAI.AuthenticationError = Errors.AuthenticationError;\nOpenAI.InternalServerError = Errors.InternalServerError;\nOpenAI.PermissionDeniedError = Errors.PermissionDeniedError;\nOpenAI.UnprocessableEntityError = Errors.UnprocessableEntityError;\nOpenAI.toFile = Uploads.toFile;\nOpenAI.fileFromPath = Uploads.fileFromPath;\nOpenAI.Completions = Completions;\nOpenAI.Chat = Chat;\nOpenAI.ChatCompletionsPage = ChatCompletionsPage;\nOpenAI.Embeddings = Embeddings;\nOpenAI.Files = Files;\nOpenAI.FileObjectsPage = FileObjectsPage;\nOpenAI.Images = Images;\nOpenAI.Audio = Audio;\nOpenAI.Moderations = Moderations;\nOpenAI.Models = Models;\nOpenAI.ModelsPage = ModelsPage;\nOpenAI.FineTuning = FineTuning;\nOpenAI.VectorStores = VectorStores;\nOpenAI.VectorStoresPage = VectorStoresPage;\nOpenAI.VectorStoreSearchResponsesPage = VectorStoreSearchResponsesPage;\nOpenAI.Beta = Beta;\nOpenAI.Batches = Batches;\nOpenAI.BatchesPage = BatchesPage;\nOpenAI.Uploads = UploadsAPIUploads;\nOpenAI.Responses = Responses;\nOpenAI.Evals = Evals;\nOpenAI.EvalListResponsesPage = EvalListResponsesPage;\n/** API Client for interfacing with the Azure OpenAI API. */\nexport class AzureOpenAI extends OpenAI {\n    /**\n     * API Client for interfacing with the Azure OpenAI API.\n     *\n     * @param {string | undefined} [opts.apiVersion=process.env['OPENAI_API_VERSION'] ?? undefined]\n     * @param {string | undefined} [opts.endpoint=process.env['AZURE_OPENAI_ENDPOINT'] ?? undefined] - Your Azure endpoint, including the resource, e.g. `https://example-resource.azure.openai.com/`\n     * @param {string | undefined} [opts.apiKey=process.env['AZURE_OPENAI_API_KEY'] ?? undefined]\n     * @param {string | undefined} opts.deployment - A model deployment, if given, sets the base client URL to include `/deployments/{deployment}`.\n     * @param {string | null | undefined} [opts.organization=process.env['OPENAI_ORG_ID'] ?? null]\n     * @param {string} [opts.baseURL=process.env['OPENAI_BASE_URL']] - Sets the base URL for the API, e.g. `https://example-resource.azure.openai.com/openai/`.\n     * @param {number} [opts.timeout=10 minutes] - The maximum amount of time (in milliseconds) the client will wait for a response before timing out.\n     * @param {number} [opts.httpAgent] - An HTTP agent used to manage HTTP(s) connections.\n     * @param {Core.Fetch} [opts.fetch] - Specify a custom `fetch` function implementation.\n     * @param {number} [opts.maxRetries=2] - The maximum number of times the client will retry a request.\n     * @param {Core.Headers} opts.defaultHeaders - Default headers to include with every request to the API.\n     * @param {Core.DefaultQuery} opts.defaultQuery - Default query parameters to include with every request to the API.\n     * @param {boolean} [opts.dangerouslyAllowBrowser=false] - By default, client-side use of this library is not allowed, as it risks exposing your secret API credentials to attackers.\n     */\n    constructor({ baseURL = Core.readEnv('OPENAI_BASE_URL'), apiKey = Core.readEnv('AZURE_OPENAI_API_KEY'), apiVersion = Core.readEnv('OPENAI_API_VERSION'), endpoint, deployment, azureADTokenProvider, dangerouslyAllowBrowser, ...opts } = {}) {\n        if (!apiVersion) {\n            throw new Errors.OpenAIError(\"The OPENAI_API_VERSION environment variable is missing or empty; either provide it, or instantiate the AzureOpenAI client with an apiVersion option, like new AzureOpenAI({ apiVersion: 'My API Version' }).\");\n        }\n        if (typeof azureADTokenProvider === 'function') {\n            dangerouslyAllowBrowser = true;\n        }\n        if (!azureADTokenProvider && !apiKey) {\n            throw new Errors.OpenAIError('Missing credentials. Please pass one of `apiKey` and `azureADTokenProvider`, or set the `AZURE_OPENAI_API_KEY` environment variable.');\n        }\n        if (azureADTokenProvider && apiKey) {\n            throw new Errors.OpenAIError('The `apiKey` and `azureADTokenProvider` arguments are mutually exclusive; only one can be passed at a time.');\n        }\n        // define a sentinel value to avoid any typing issues\n        apiKey ?? (apiKey = API_KEY_SENTINEL);\n        opts.defaultQuery = { ...opts.defaultQuery, 'api-version': apiVersion };\n        if (!baseURL) {\n            if (!endpoint) {\n                endpoint = process.env['AZURE_OPENAI_ENDPOINT'];\n            }\n            if (!endpoint) {\n                throw new Errors.OpenAIError('Must provide one of the `baseURL` or `endpoint` arguments, or the `AZURE_OPENAI_ENDPOINT` environment variable');\n            }\n            baseURL = `${endpoint}/openai`;\n        }\n        else {\n            if (endpoint) {\n                throw new Errors.OpenAIError('baseURL and endpoint are mutually exclusive');\n            }\n        }\n        super({\n            apiKey,\n            baseURL,\n            ...opts,\n            ...(dangerouslyAllowBrowser !== undefined ? { dangerouslyAllowBrowser } : {}),\n        });\n        this.apiVersion = '';\n        this._azureADTokenProvider = azureADTokenProvider;\n        this.apiVersion = apiVersion;\n        this.deploymentName = deployment;\n    }\n    buildRequest(options, props = {}) {\n        if (_deployments_endpoints.has(options.path) && options.method === 'post' && options.body !== undefined) {\n            if (!Core.isObj(options.body)) {\n                throw new Error('Expected request body to be an object');\n            }\n            const model = this.deploymentName || options.body['model'] || options.__metadata?.['model'];\n            if (model !== undefined && !this.baseURL.includes('/deployments')) {\n                options.path = `/deployments/${model}${options.path}`;\n            }\n        }\n        return super.buildRequest(options, props);\n    }\n    async _getAzureADToken() {\n        if (typeof this._azureADTokenProvider === 'function') {\n            const token = await this._azureADTokenProvider();\n            if (!token || typeof token !== 'string') {\n                throw new Errors.OpenAIError(`Expected 'azureADTokenProvider' argument to return a string but it returned ${token}`);\n            }\n            return token;\n        }\n        return undefined;\n    }\n    authHeaders(opts) {\n        return {};\n    }\n    async prepareOptions(opts) {\n        /**\n         * The user should provide a bearer token provider if they want\n         * to use Azure AD authentication. The user shouldn't set the\n         * Authorization header manually because the header is overwritten\n         * with the Azure AD token if a bearer token provider is provided.\n         */\n        if (opts.headers?.['api-key']) {\n            return super.prepareOptions(opts);\n        }\n        const token = await this._getAzureADToken();\n        opts.headers ?? (opts.headers = {});\n        if (token) {\n            opts.headers['Authorization'] = `Bearer ${token}`;\n        }\n        else if (this.apiKey !== API_KEY_SENTINEL) {\n            opts.headers['api-key'] = this.apiKey;\n        }\n        else {\n            throw new Errors.OpenAIError('Unable to handle auth');\n        }\n        return super.prepareOptions(opts);\n    }\n}\nconst _deployments_endpoints = new Set([\n    '/completions',\n    '/chat/completions',\n    '/embeddings',\n    '/audio/transcriptions',\n    '/audio/translations',\n    '/audio/speech',\n    '/images/generations',\n]);\nconst API_KEY_SENTINEL = '<Missing Key>';\nexport { toFile, fileFromPath } from \"./uploads.mjs\";\nexport { OpenAIError, APIError, APIConnectionError, APIConnectionTimeoutError, APIUserAbortError, NotFoundError, ConflictError, RateLimitError, BadRequestError, AuthenticationError, InternalServerError, PermissionDeniedError, UnprocessableEntityError, } from \"./error.mjs\";\nexport default OpenAI;\n//# sourceMappingURL=index.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { parseResponse, addOutputText, } from \"../../lib/ResponsesParser.mjs\";\nimport { isRequestOptions } from \"../../core.mjs\";\nimport { APIResource } from \"../../resource.mjs\";\nimport * as InputItemsAPI from \"./input-items.mjs\";\nimport { InputItems } from \"./input-items.mjs\";\nimport { ResponseStream } from \"../../lib/responses/ResponseStream.mjs\";\nimport { CursorPage } from \"../../pagination.mjs\";\nexport class Responses extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.inputItems = new InputItemsAPI.InputItems(this._client);\n    }\n    create(body, options) {\n        return this._client.post('/responses', { body, ...options, stream: body.stream ?? false })._thenUnwrap((rsp) => {\n            if ('object' in rsp && rsp.object === 'response') {\n                addOutputText(rsp);\n            }\n            return rsp;\n        });\n    }\n    retrieve(responseId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.retrieve(responseId, {}, query);\n        }\n        return this._client.get(`/responses/${responseId}`, { query, ...options });\n    }\n    /**\n     * Deletes a model response with the given ID.\n     */\n    del(responseId, options) {\n        return this._client.delete(`/responses/${responseId}`, {\n            ...options,\n            headers: { Accept: '*/*', ...options?.headers },\n        });\n    }\n    parse(body, options) {\n        return this._client.responses\n            .create(body, options)\n            ._thenUnwrap((response) => parseResponse(response, body));\n    }\n    /**\n     * Creates a model response stream\n     */\n    stream(body, options) {\n        return ResponseStream.createResponse(this._client, body, options);\n    }\n}\nexport class ResponseItemsPage extends CursorPage {\n}\nResponses.InputItems = InputItems;\n//# sourceMappingURL=responses.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport { isRequestOptions } from \"../../../core.mjs\";\nimport { CursorPage } from \"../../../pagination.mjs\";\nexport class OutputItems extends APIResource {\n    /**\n     * Get an evaluation run output item by ID.\n     */\n    retrieve(evalId, runId, outputItemId, options) {\n        return this._client.get(`/evals/${evalId}/runs/${runId}/output_items/${outputItemId}`, options);\n    }\n    list(evalId, runId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list(evalId, runId, {}, query);\n        }\n        return this._client.getAPIList(`/evals/${evalId}/runs/${runId}/output_items`, OutputItemListResponsesPage, { query, ...options });\n    }\n}\nexport class OutputItemListResponsesPage extends CursorPage {\n}\nOutputItems.OutputItemListResponsesPage = OutputItemListResponsesPage;\n//# sourceMappingURL=output-items.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport { isRequestOptions } from \"../../../core.mjs\";\nimport * as OutputItemsAPI from \"./output-items.mjs\";\nimport { OutputItemListResponsesPage, OutputItems, } from \"./output-items.mjs\";\nimport { CursorPage } from \"../../../pagination.mjs\";\nexport class Runs extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.outputItems = new OutputItemsAPI.OutputItems(this._client);\n    }\n    /**\n     * Create a new evaluation run. This is the endpoint that will kick off grading.\n     */\n    create(evalId, body, options) {\n        return this._client.post(`/evals/${evalId}/runs`, { body, ...options });\n    }\n    /**\n     * Get an evaluation run by ID.\n     */\n    retrieve(evalId, runId, options) {\n        return this._client.get(`/evals/${evalId}/runs/${runId}`, options);\n    }\n    list(evalId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list(evalId, {}, query);\n        }\n        return this._client.getAPIList(`/evals/${evalId}/runs`, RunListResponsesPage, { query, ...options });\n    }\n    /**\n     * Delete an eval run.\n     */\n    del(evalId, runId, options) {\n        return this._client.delete(`/evals/${evalId}/runs/${runId}`, options);\n    }\n    /**\n     * Cancel an ongoing evaluation run.\n     */\n    cancel(evalId, runId, options) {\n        return this._client.post(`/evals/${evalId}/runs/${runId}`, options);\n    }\n}\nexport class RunListResponsesPage extends CursorPage {\n}\nRuns.RunListResponsesPage = RunListResponsesPage;\nRuns.OutputItems = OutputItems;\nRuns.OutputItemListResponsesPage = OutputItemListResponsesPage;\n//# sourceMappingURL=runs.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport { isRequestOptions } from \"../../core.mjs\";\nimport * as RunsAPI from \"./runs/runs.mjs\";\nimport { RunListResponsesPage, Runs, } from \"./runs/runs.mjs\";\nimport { CursorPage } from \"../../pagination.mjs\";\nexport class Evals extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.runs = new RunsAPI.Runs(this._client);\n    }\n    /**\n     * Create the structure of an evaluation that can be used to test a model's\n     * performance. An evaluation is a set of testing criteria and a datasource. After\n     * creating an evaluation, you can run it on different models and model parameters.\n     * We support several types of graders and datasources. For more information, see\n     * the [Evals guide](https://platform.openai.com/docs/guides/evals).\n     */\n    create(body, options) {\n        return this._client.post('/evals', { body, ...options });\n    }\n    /**\n     * Get an evaluation by ID.\n     */\n    retrieve(evalId, options) {\n        return this._client.get(`/evals/${evalId}`, options);\n    }\n    /**\n     * Update certain properties of an evaluation.\n     */\n    update(evalId, body, options) {\n        return this._client.post(`/evals/${evalId}`, { body, ...options });\n    }\n    list(query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList('/evals', EvalListResponsesPage, { query, ...options });\n    }\n    /**\n     * Delete an evaluation.\n     */\n    del(evalId, options) {\n        return this._client.delete(`/evals/${evalId}`, options);\n    }\n}\nexport class EvalListResponsesPage extends CursorPage {\n}\nEvals.EvalListResponsesPage = EvalListResponsesPage;\nEvals.Runs = Runs;\nEvals.RunListResponsesPage = RunListResponsesPage;\n//# sourceMappingURL=evals.mjs.map","export function parseJsonMarkdown(s, parser = parsePartialJson) {\n    // eslint-disable-next-line no-param-reassign\n    s = s.trim();\n    const match = /```(json)?(.*)```/s.exec(s);\n    if (!match) {\n        return parser(s);\n    }\n    else {\n        return parser(match[2]);\n    }\n}\n// Adapted from https://github.com/KillianLucas/open-interpreter/blob/main/interpreter/core/llm/utils/parse_partial_json.py\n// MIT License\nexport function parsePartialJson(s) {\n    // If the input is undefined, return null to indicate failure.\n    if (typeof s === \"undefined\") {\n        return null;\n    }\n    // Attempt to parse the string as-is.\n    try {\n        return JSON.parse(s);\n    }\n    catch (error) {\n        // Pass\n    }\n    // Initialize variables.\n    let new_s = \"\";\n    const stack = [];\n    let isInsideString = false;\n    let escaped = false;\n    // Process each character in the string one at a time.\n    for (let char of s) {\n        if (isInsideString) {\n            if (char === '\"' && !escaped) {\n                isInsideString = false;\n            }\n            else if (char === \"\\n\" && !escaped) {\n                char = \"\\\\n\"; // Replace the newline character with the escape sequence.\n            }\n            else if (char === \"\\\\\") {\n                escaped = !escaped;\n            }\n            else {\n                escaped = false;\n            }\n        }\n        else {\n            if (char === '\"') {\n                isInsideString = true;\n                escaped = false;\n            }\n            else if (char === \"{\") {\n                stack.push(\"}\");\n            }\n            else if (char === \"[\") {\n                stack.push(\"]\");\n            }\n            else if (char === \"}\" || char === \"]\") {\n                if (stack && stack[stack.length - 1] === char) {\n                    stack.pop();\n                }\n                else {\n                    // Mismatched closing character; the input is malformed.\n                    return null;\n                }\n            }\n        }\n        // Append the processed character to the new string.\n        new_s += char;\n    }\n    // If we're still inside a string at the end of processing,\n    // we need to close the string.\n    if (isInsideString) {\n        new_s += '\"';\n    }\n    // Close any remaining open structures in the reverse order that they were opened.\n    for (let i = stack.length - 1; i >= 0; i -= 1) {\n        new_s += stack[i];\n    }\n    // Attempt to parse the modified string as JSON.\n    try {\n        return JSON.parse(new_s);\n    }\n    catch (error) {\n        // If we still can't parse the string as JSON, return null to indicate failure.\n        return null;\n    }\n}\n","var util;\n(function (util) {\n    util.assertEqual = (val) => val;\n    function assertIs(_arg) { }\n    util.assertIs = assertIs;\n    function assertNever(_x) {\n        throw new Error();\n    }\n    util.assertNever = assertNever;\n    util.arrayToEnum = (items) => {\n        const obj = {};\n        for (const item of items) {\n            obj[item] = item;\n        }\n        return obj;\n    };\n    util.getValidEnumValues = (obj) => {\n        const validKeys = util.objectKeys(obj).filter((k) => typeof obj[obj[k]] !== \"number\");\n        const filtered = {};\n        for (const k of validKeys) {\n            filtered[k] = obj[k];\n        }\n        return util.objectValues(filtered);\n    };\n    util.objectValues = (obj) => {\n        return util.objectKeys(obj).map(function (e) {\n            return obj[e];\n        });\n    };\n    util.objectKeys = typeof Object.keys === \"function\" // eslint-disable-line ban/ban\n        ? (obj) => Object.keys(obj) // eslint-disable-line ban/ban\n        : (object) => {\n            const keys = [];\n            for (const key in object) {\n                if (Object.prototype.hasOwnProperty.call(object, key)) {\n                    keys.push(key);\n                }\n            }\n            return keys;\n        };\n    util.find = (arr, checker) => {\n        for (const item of arr) {\n            if (checker(item))\n                return item;\n        }\n        return undefined;\n    };\n    util.isInteger = typeof Number.isInteger === \"function\"\n        ? (val) => Number.isInteger(val) // eslint-disable-line ban/ban\n        : (val) => typeof val === \"number\" && isFinite(val) && Math.floor(val) === val;\n    function joinValues(array, separator = \" | \") {\n        return array\n            .map((val) => (typeof val === \"string\" ? `'${val}'` : val))\n            .join(separator);\n    }\n    util.joinValues = joinValues;\n    util.jsonStringifyReplacer = (_, value) => {\n        if (typeof value === \"bigint\") {\n            return value.toString();\n        }\n        return value;\n    };\n})(util || (util = {}));\nvar objectUtil;\n(function (objectUtil) {\n    objectUtil.mergeShapes = (first, second) => {\n        return {\n            ...first,\n            ...second, // second overwrites first\n        };\n    };\n})(objectUtil || (objectUtil = {}));\nconst ZodParsedType = util.arrayToEnum([\n    \"string\",\n    \"nan\",\n    \"number\",\n    \"integer\",\n    \"float\",\n    \"boolean\",\n    \"date\",\n    \"bigint\",\n    \"symbol\",\n    \"function\",\n    \"undefined\",\n    \"null\",\n    \"array\",\n    \"object\",\n    \"unknown\",\n    \"promise\",\n    \"void\",\n    \"never\",\n    \"map\",\n    \"set\",\n]);\nconst getParsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"undefined\":\n            return ZodParsedType.undefined;\n        case \"string\":\n            return ZodParsedType.string;\n        case \"number\":\n            return isNaN(data) ? ZodParsedType.nan : ZodParsedType.number;\n        case \"boolean\":\n            return ZodParsedType.boolean;\n        case \"function\":\n            return ZodParsedType.function;\n        case \"bigint\":\n            return ZodParsedType.bigint;\n        case \"symbol\":\n            return ZodParsedType.symbol;\n        case \"object\":\n            if (Array.isArray(data)) {\n                return ZodParsedType.array;\n            }\n            if (data === null) {\n                return ZodParsedType.null;\n            }\n            if (data.then &&\n                typeof data.then === \"function\" &&\n                data.catch &&\n                typeof data.catch === \"function\") {\n                return ZodParsedType.promise;\n            }\n            if (typeof Map !== \"undefined\" && data instanceof Map) {\n                return ZodParsedType.map;\n            }\n            if (typeof Set !== \"undefined\" && data instanceof Set) {\n                return ZodParsedType.set;\n            }\n            if (typeof Date !== \"undefined\" && data instanceof Date) {\n                return ZodParsedType.date;\n            }\n            return ZodParsedType.object;\n        default:\n            return ZodParsedType.unknown;\n    }\n};\n\nconst ZodIssueCode = util.arrayToEnum([\n    \"invalid_type\",\n    \"invalid_literal\",\n    \"custom\",\n    \"invalid_union\",\n    \"invalid_union_discriminator\",\n    \"invalid_enum_value\",\n    \"unrecognized_keys\",\n    \"invalid_arguments\",\n    \"invalid_return_type\",\n    \"invalid_date\",\n    \"invalid_string\",\n    \"too_small\",\n    \"too_big\",\n    \"invalid_intersection_types\",\n    \"not_multiple_of\",\n    \"not_finite\",\n]);\nconst quotelessJson = (obj) => {\n    const json = JSON.stringify(obj, null, 2);\n    return json.replace(/\"([^\"]+)\":/g, \"$1:\");\n};\nclass ZodError extends Error {\n    get errors() {\n        return this.issues;\n    }\n    constructor(issues) {\n        super();\n        this.issues = [];\n        this.addIssue = (sub) => {\n            this.issues = [...this.issues, sub];\n        };\n        this.addIssues = (subs = []) => {\n            this.issues = [...this.issues, ...subs];\n        };\n        const actualProto = new.target.prototype;\n        if (Object.setPrototypeOf) {\n            // eslint-disable-next-line ban/ban\n            Object.setPrototypeOf(this, actualProto);\n        }\n        else {\n            this.__proto__ = actualProto;\n        }\n        this.name = \"ZodError\";\n        this.issues = issues;\n    }\n    format(_mapper) {\n        const mapper = _mapper ||\n            function (issue) {\n                return issue.message;\n            };\n        const fieldErrors = { _errors: [] };\n        const processError = (error) => {\n            for (const issue of error.issues) {\n                if (issue.code === \"invalid_union\") {\n                    issue.unionErrors.map(processError);\n                }\n                else if (issue.code === \"invalid_return_type\") {\n                    processError(issue.returnTypeError);\n                }\n                else if (issue.code === \"invalid_arguments\") {\n                    processError(issue.argumentsError);\n                }\n                else if (issue.path.length === 0) {\n                    fieldErrors._errors.push(mapper(issue));\n                }\n                else {\n                    let curr = fieldErrors;\n                    let i = 0;\n                    while (i < issue.path.length) {\n                        const el = issue.path[i];\n                        const terminal = i === issue.path.length - 1;\n                        if (!terminal) {\n                            curr[el] = curr[el] || { _errors: [] };\n                            // if (typeof el === \"string\") {\n                            //   curr[el] = curr[el] || { _errors: [] };\n                            // } else if (typeof el === \"number\") {\n                            //   const errorArray: any = [];\n                            //   errorArray._errors = [];\n                            //   curr[el] = curr[el] || errorArray;\n                            // }\n                        }\n                        else {\n                            curr[el] = curr[el] || { _errors: [] };\n                            curr[el]._errors.push(mapper(issue));\n                        }\n                        curr = curr[el];\n                        i++;\n                    }\n                }\n            }\n        };\n        processError(this);\n        return fieldErrors;\n    }\n    static assert(value) {\n        if (!(value instanceof ZodError)) {\n            throw new Error(`Not a ZodError: ${value}`);\n        }\n    }\n    toString() {\n        return this.message;\n    }\n    get message() {\n        return JSON.stringify(this.issues, util.jsonStringifyReplacer, 2);\n    }\n    get isEmpty() {\n        return this.issues.length === 0;\n    }\n    flatten(mapper = (issue) => issue.message) {\n        const fieldErrors = {};\n        const formErrors = [];\n        for (const sub of this.issues) {\n            if (sub.path.length > 0) {\n                fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [];\n                fieldErrors[sub.path[0]].push(mapper(sub));\n            }\n            else {\n                formErrors.push(mapper(sub));\n            }\n        }\n        return { formErrors, fieldErrors };\n    }\n    get formErrors() {\n        return this.flatten();\n    }\n}\nZodError.create = (issues) => {\n    const error = new ZodError(issues);\n    return error;\n};\n\nconst errorMap = (issue, _ctx) => {\n    let message;\n    switch (issue.code) {\n        case ZodIssueCode.invalid_type:\n            if (issue.received === ZodParsedType.undefined) {\n                message = \"Required\";\n            }\n            else {\n                message = `Expected ${issue.expected}, received ${issue.received}`;\n            }\n            break;\n        case ZodIssueCode.invalid_literal:\n            message = `Invalid literal value, expected ${JSON.stringify(issue.expected, util.jsonStringifyReplacer)}`;\n            break;\n        case ZodIssueCode.unrecognized_keys:\n            message = `Unrecognized key(s) in object: ${util.joinValues(issue.keys, \", \")}`;\n            break;\n        case ZodIssueCode.invalid_union:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_union_discriminator:\n            message = `Invalid discriminator value. Expected ${util.joinValues(issue.options)}`;\n            break;\n        case ZodIssueCode.invalid_enum_value:\n            message = `Invalid enum value. Expected ${util.joinValues(issue.options)}, received '${issue.received}'`;\n            break;\n        case ZodIssueCode.invalid_arguments:\n            message = `Invalid function arguments`;\n            break;\n        case ZodIssueCode.invalid_return_type:\n            message = `Invalid function return type`;\n            break;\n        case ZodIssueCode.invalid_date:\n            message = `Invalid date`;\n            break;\n        case ZodIssueCode.invalid_string:\n            if (typeof issue.validation === \"object\") {\n                if (\"includes\" in issue.validation) {\n                    message = `Invalid input: must include \"${issue.validation.includes}\"`;\n                    if (typeof issue.validation.position === \"number\") {\n                        message = `${message} at one or more positions greater than or equal to ${issue.validation.position}`;\n                    }\n                }\n                else if (\"startsWith\" in issue.validation) {\n                    message = `Invalid input: must start with \"${issue.validation.startsWith}\"`;\n                }\n                else if (\"endsWith\" in issue.validation) {\n                    message = `Invalid input: must end with \"${issue.validation.endsWith}\"`;\n                }\n                else {\n                    util.assertNever(issue.validation);\n                }\n            }\n            else if (issue.validation !== \"regex\") {\n                message = `Invalid ${issue.validation}`;\n            }\n            else {\n                message = \"Invalid\";\n            }\n            break;\n        case ZodIssueCode.too_small:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `more than`} ${issue.minimum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `over`} ${issue.minimum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact\n                    ? `exactly equal to `\n                    : issue.inclusive\n                        ? `greater than or equal to `\n                        : `greater than `}${issue.minimum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact\n                    ? `exactly equal to `\n                    : issue.inclusive\n                        ? `greater than or equal to `\n                        : `greater than `}${new Date(Number(issue.minimum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.too_big:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `less than`} ${issue.maximum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `under`} ${issue.maximum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `less than or equal to`\n                        : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"bigint\")\n                message = `BigInt must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `less than or equal to`\n                        : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `smaller than or equal to`\n                        : `smaller than`} ${new Date(Number(issue.maximum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.custom:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_intersection_types:\n            message = `Intersection results could not be merged`;\n            break;\n        case ZodIssueCode.not_multiple_of:\n            message = `Number must be a multiple of ${issue.multipleOf}`;\n            break;\n        case ZodIssueCode.not_finite:\n            message = \"Number must be finite\";\n            break;\n        default:\n            message = _ctx.defaultError;\n            util.assertNever(issue);\n    }\n    return { message };\n};\n\nlet overrideErrorMap = errorMap;\nfunction setErrorMap(map) {\n    overrideErrorMap = map;\n}\nfunction getErrorMap() {\n    return overrideErrorMap;\n}\n\nconst makeIssue = (params) => {\n    const { data, path, errorMaps, issueData } = params;\n    const fullPath = [...path, ...(issueData.path || [])];\n    const fullIssue = {\n        ...issueData,\n        path: fullPath,\n    };\n    if (issueData.message !== undefined) {\n        return {\n            ...issueData,\n            path: fullPath,\n            message: issueData.message,\n        };\n    }\n    let errorMessage = \"\";\n    const maps = errorMaps\n        .filter((m) => !!m)\n        .slice()\n        .reverse();\n    for (const map of maps) {\n        errorMessage = map(fullIssue, { data, defaultError: errorMessage }).message;\n    }\n    return {\n        ...issueData,\n        path: fullPath,\n        message: errorMessage,\n    };\n};\nconst EMPTY_PATH = [];\nfunction addIssueToContext(ctx, issueData) {\n    const overrideMap = getErrorMap();\n    const issue = makeIssue({\n        issueData: issueData,\n        data: ctx.data,\n        path: ctx.path,\n        errorMaps: [\n            ctx.common.contextualErrorMap, // contextual error map is first priority\n            ctx.schemaErrorMap, // then schema-bound map if available\n            overrideMap, // then global override map\n            overrideMap === errorMap ? undefined : errorMap, // then global default map\n        ].filter((x) => !!x),\n    });\n    ctx.common.issues.push(issue);\n}\nclass ParseStatus {\n    constructor() {\n        this.value = \"valid\";\n    }\n    dirty() {\n        if (this.value === \"valid\")\n            this.value = \"dirty\";\n    }\n    abort() {\n        if (this.value !== \"aborted\")\n            this.value = \"aborted\";\n    }\n    static mergeArray(status, results) {\n        const arrayValue = [];\n        for (const s of results) {\n            if (s.status === \"aborted\")\n                return INVALID;\n            if (s.status === \"dirty\")\n                status.dirty();\n            arrayValue.push(s.value);\n        }\n        return { status: status.value, value: arrayValue };\n    }\n    static async mergeObjectAsync(status, pairs) {\n        const syncPairs = [];\n        for (const pair of pairs) {\n            const key = await pair.key;\n            const value = await pair.value;\n            syncPairs.push({\n                key,\n                value,\n            });\n        }\n        return ParseStatus.mergeObjectSync(status, syncPairs);\n    }\n    static mergeObjectSync(status, pairs) {\n        const finalObject = {};\n        for (const pair of pairs) {\n            const { key, value } = pair;\n            if (key.status === \"aborted\")\n                return INVALID;\n            if (value.status === \"aborted\")\n                return INVALID;\n            if (key.status === \"dirty\")\n                status.dirty();\n            if (value.status === \"dirty\")\n                status.dirty();\n            if (key.value !== \"__proto__\" &&\n                (typeof value.value !== \"undefined\" || pair.alwaysSet)) {\n                finalObject[key.value] = value.value;\n            }\n        }\n        return { status: status.value, value: finalObject };\n    }\n}\nconst INVALID = Object.freeze({\n    status: \"aborted\",\n});\nconst DIRTY = (value) => ({ status: \"dirty\", value });\nconst OK = (value) => ({ status: \"valid\", value });\nconst isAborted = (x) => x.status === \"aborted\";\nconst isDirty = (x) => x.status === \"dirty\";\nconst isValid = (x) => x.status === \"valid\";\nconst isAsync = (x) => typeof Promise !== \"undefined\" && x instanceof Promise;\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\nvar errorUtil;\n(function (errorUtil) {\n    errorUtil.errToObj = (message) => typeof message === \"string\" ? { message } : message || {};\n    errorUtil.toString = (message) => typeof message === \"string\" ? message : message === null || message === void 0 ? void 0 : message.message;\n})(errorUtil || (errorUtil = {}));\n\nvar _ZodEnum_cache, _ZodNativeEnum_cache;\nclass ParseInputLazyPath {\n    constructor(parent, value, path, key) {\n        this._cachedPath = [];\n        this.parent = parent;\n        this.data = value;\n        this._path = path;\n        this._key = key;\n    }\n    get path() {\n        if (!this._cachedPath.length) {\n            if (this._key instanceof Array) {\n                this._cachedPath.push(...this._path, ...this._key);\n            }\n            else {\n                this._cachedPath.push(...this._path, this._key);\n            }\n        }\n        return this._cachedPath;\n    }\n}\nconst handleResult = (ctx, result) => {\n    if (isValid(result)) {\n        return { success: true, data: result.value };\n    }\n    else {\n        if (!ctx.common.issues.length) {\n            throw new Error(\"Validation failed but no issues detected.\");\n        }\n        return {\n            success: false,\n            get error() {\n                if (this._error)\n                    return this._error;\n                const error = new ZodError(ctx.common.issues);\n                this._error = error;\n                return this._error;\n            },\n        };\n    }\n};\nfunction processCreateParams(params) {\n    if (!params)\n        return {};\n    const { errorMap, invalid_type_error, required_error, description } = params;\n    if (errorMap && (invalid_type_error || required_error)) {\n        throw new Error(`Can't use \"invalid_type_error\" or \"required_error\" in conjunction with custom error map.`);\n    }\n    if (errorMap)\n        return { errorMap: errorMap, description };\n    const customMap = (iss, ctx) => {\n        var _a, _b;\n        const { message } = params;\n        if (iss.code === \"invalid_enum_value\") {\n            return { message: message !== null && message !== void 0 ? message : ctx.defaultError };\n        }\n        if (typeof ctx.data === \"undefined\") {\n            return { message: (_a = message !== null && message !== void 0 ? message : required_error) !== null && _a !== void 0 ? _a : ctx.defaultError };\n        }\n        if (iss.code !== \"invalid_type\")\n            return { message: ctx.defaultError };\n        return { message: (_b = message !== null && message !== void 0 ? message : invalid_type_error) !== null && _b !== void 0 ? _b : ctx.defaultError };\n    };\n    return { errorMap: customMap, description };\n}\nclass ZodType {\n    get description() {\n        return this._def.description;\n    }\n    _getType(input) {\n        return getParsedType(input.data);\n    }\n    _getOrReturnCtx(input, ctx) {\n        return (ctx || {\n            common: input.parent.common,\n            data: input.data,\n            parsedType: getParsedType(input.data),\n            schemaErrorMap: this._def.errorMap,\n            path: input.path,\n            parent: input.parent,\n        });\n    }\n    _processInputParams(input) {\n        return {\n            status: new ParseStatus(),\n            ctx: {\n                common: input.parent.common,\n                data: input.data,\n                parsedType: getParsedType(input.data),\n                schemaErrorMap: this._def.errorMap,\n                path: input.path,\n                parent: input.parent,\n            },\n        };\n    }\n    _parseSync(input) {\n        const result = this._parse(input);\n        if (isAsync(result)) {\n            throw new Error(\"Synchronous parse encountered promise.\");\n        }\n        return result;\n    }\n    _parseAsync(input) {\n        const result = this._parse(input);\n        return Promise.resolve(result);\n    }\n    parse(data, params) {\n        const result = this.safeParse(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    safeParse(data, params) {\n        var _a;\n        const ctx = {\n            common: {\n                issues: [],\n                async: (_a = params === null || params === void 0 ? void 0 : params.async) !== null && _a !== void 0 ? _a : false,\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const result = this._parseSync({ data, path: ctx.path, parent: ctx });\n        return handleResult(ctx, result);\n    }\n    \"~validate\"(data) {\n        var _a, _b;\n        const ctx = {\n            common: {\n                issues: [],\n                async: !!this[\"~standard\"].async,\n            },\n            path: [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        if (!this[\"~standard\"].async) {\n            try {\n                const result = this._parseSync({ data, path: [], parent: ctx });\n                return isValid(result)\n                    ? {\n                        value: result.value,\n                    }\n                    : {\n                        issues: ctx.common.issues,\n                    };\n            }\n            catch (err) {\n                if ((_b = (_a = err === null || err === void 0 ? void 0 : err.message) === null || _a === void 0 ? void 0 : _a.toLowerCase()) === null || _b === void 0 ? void 0 : _b.includes(\"encountered\")) {\n                    this[\"~standard\"].async = true;\n                }\n                ctx.common = {\n                    issues: [],\n                    async: true,\n                };\n            }\n        }\n        return this._parseAsync({ data, path: [], parent: ctx }).then((result) => isValid(result)\n            ? {\n                value: result.value,\n            }\n            : {\n                issues: ctx.common.issues,\n            });\n    }\n    async parseAsync(data, params) {\n        const result = await this.safeParseAsync(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    async safeParseAsync(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n                async: true,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const maybeAsyncResult = this._parse({ data, path: ctx.path, parent: ctx });\n        const result = await (isAsync(maybeAsyncResult)\n            ? maybeAsyncResult\n            : Promise.resolve(maybeAsyncResult));\n        return handleResult(ctx, result);\n    }\n    refine(check, message) {\n        const getIssueProperties = (val) => {\n            if (typeof message === \"string\" || typeof message === \"undefined\") {\n                return { message };\n            }\n            else if (typeof message === \"function\") {\n                return message(val);\n            }\n            else {\n                return message;\n            }\n        };\n        return this._refinement((val, ctx) => {\n            const result = check(val);\n            const setError = () => ctx.addIssue({\n                code: ZodIssueCode.custom,\n                ...getIssueProperties(val),\n            });\n            if (typeof Promise !== \"undefined\" && result instanceof Promise) {\n                return result.then((data) => {\n                    if (!data) {\n                        setError();\n                        return false;\n                    }\n                    else {\n                        return true;\n                    }\n                });\n            }\n            if (!result) {\n                setError();\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    refinement(check, refinementData) {\n        return this._refinement((val, ctx) => {\n            if (!check(val)) {\n                ctx.addIssue(typeof refinementData === \"function\"\n                    ? refinementData(val, ctx)\n                    : refinementData);\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    _refinement(refinement) {\n        return new ZodEffects({\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"refinement\", refinement },\n        });\n    }\n    superRefine(refinement) {\n        return this._refinement(refinement);\n    }\n    constructor(def) {\n        /** Alias of safeParseAsync */\n        this.spa = this.safeParseAsync;\n        this._def = def;\n        this.parse = this.parse.bind(this);\n        this.safeParse = this.safeParse.bind(this);\n        this.parseAsync = this.parseAsync.bind(this);\n        this.safeParseAsync = this.safeParseAsync.bind(this);\n        this.spa = this.spa.bind(this);\n        this.refine = this.refine.bind(this);\n        this.refinement = this.refinement.bind(this);\n        this.superRefine = this.superRefine.bind(this);\n        this.optional = this.optional.bind(this);\n        this.nullable = this.nullable.bind(this);\n        this.nullish = this.nullish.bind(this);\n        this.array = this.array.bind(this);\n        this.promise = this.promise.bind(this);\n        this.or = this.or.bind(this);\n        this.and = this.and.bind(this);\n        this.transform = this.transform.bind(this);\n        this.brand = this.brand.bind(this);\n        this.default = this.default.bind(this);\n        this.catch = this.catch.bind(this);\n        this.describe = this.describe.bind(this);\n        this.pipe = this.pipe.bind(this);\n        this.readonly = this.readonly.bind(this);\n        this.isNullable = this.isNullable.bind(this);\n        this.isOptional = this.isOptional.bind(this);\n        this[\"~standard\"] = {\n            version: 1,\n            vendor: \"zod\",\n            validate: (data) => this[\"~validate\"](data),\n        };\n    }\n    optional() {\n        return ZodOptional.create(this, this._def);\n    }\n    nullable() {\n        return ZodNullable.create(this, this._def);\n    }\n    nullish() {\n        return this.nullable().optional();\n    }\n    array() {\n        return ZodArray.create(this);\n    }\n    promise() {\n        return ZodPromise.create(this, this._def);\n    }\n    or(option) {\n        return ZodUnion.create([this, option], this._def);\n    }\n    and(incoming) {\n        return ZodIntersection.create(this, incoming, this._def);\n    }\n    transform(transform) {\n        return new ZodEffects({\n            ...processCreateParams(this._def),\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"transform\", transform },\n        });\n    }\n    default(def) {\n        const defaultValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodDefault({\n            ...processCreateParams(this._def),\n            innerType: this,\n            defaultValue: defaultValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodDefault,\n        });\n    }\n    brand() {\n        return new ZodBranded({\n            typeName: ZodFirstPartyTypeKind.ZodBranded,\n            type: this,\n            ...processCreateParams(this._def),\n        });\n    }\n    catch(def) {\n        const catchValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodCatch({\n            ...processCreateParams(this._def),\n            innerType: this,\n            catchValue: catchValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodCatch,\n        });\n    }\n    describe(description) {\n        const This = this.constructor;\n        return new This({\n            ...this._def,\n            description,\n        });\n    }\n    pipe(target) {\n        return ZodPipeline.create(this, target);\n    }\n    readonly() {\n        return ZodReadonly.create(this);\n    }\n    isOptional() {\n        return this.safeParse(undefined).success;\n    }\n    isNullable() {\n        return this.safeParse(null).success;\n    }\n}\nconst cuidRegex = /^c[^\\s-]{8,}$/i;\nconst cuid2Regex = /^[0-9a-z]+$/;\nconst ulidRegex = /^[0-9A-HJKMNP-TV-Z]{26}$/i;\n// const uuidRegex =\n//   /^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i;\nconst uuidRegex = /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/i;\nconst nanoidRegex = /^[a-z0-9_-]{21}$/i;\nconst jwtRegex = /^[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]*$/;\nconst durationRegex = /^[-+]?P(?!$)(?:(?:[-+]?\\d+Y)|(?:[-+]?\\d+[.,]\\d+Y$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:(?:[-+]?\\d+W)|(?:[-+]?\\d+[.,]\\d+W$))?(?:(?:[-+]?\\d+D)|(?:[-+]?\\d+[.,]\\d+D$))?(?:T(?=[\\d+-])(?:(?:[-+]?\\d+H)|(?:[-+]?\\d+[.,]\\d+H$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:[-+]?\\d+(?:[.,]\\d+)?S)?)??$/;\n// from https://stackoverflow.com/a/46181/1550155\n// old version: too slow, didn't support unicode\n// const emailRegex = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i;\n//old email regex\n// const emailRegex = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@((?!-)([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{1,})[^-<>()[\\].,;:\\s@\"]$/i;\n// eslint-disable-next-line\n// const emailRegex =\n//   /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\])|(\\[IPv6:(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))\\])|([A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])*(\\.[A-Za-z]{2,})+))$/;\n// const emailRegex =\n//   /^[a-zA-Z0-9\\.\\!\\#\\$\\%\\&\\'\\*\\+\\/\\=\\?\\^\\_\\`\\{\\|\\}\\~\\-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n// const emailRegex =\n//   /^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/i;\nconst emailRegex = /^(?!\\.)(?!.*\\.\\.)([A-Z0-9_'+\\-\\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\\-]*\\.)+[A-Z]{2,}$/i;\n// const emailRegex =\n//   /^[a-z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-z0-9-]+(?:\\.[a-z0-9\\-]+)*$/i;\n// from https://thekevinscott.com/emojis-in-javascript/#writing-a-regular-expression\nconst _emojiRegex = `^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$`;\nlet emojiRegex;\n// faster, simpler, safer\nconst ipv4Regex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/;\nconst ipv4CidrRegex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\/(3[0-2]|[12]?[0-9])$/;\n// const ipv6Regex =\n// /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/;\nconst ipv6Regex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$/;\nconst ipv6CidrRegex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/;\n// https://stackoverflow.com/questions/7860392/determine-if-string-is-in-base64-using-javascript\nconst base64Regex = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/;\n// https://base64.guru/standards/base64url\nconst base64urlRegex = /^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/;\n// simple\n// const dateRegexSource = `\\\\d{4}-\\\\d{2}-\\\\d{2}`;\n// no leap year validation\n// const dateRegexSource = `\\\\d{4}-((0[13578]|10|12)-31|(0[13-9]|1[0-2])-30|(0[1-9]|1[0-2])-(0[1-9]|1\\\\d|2\\\\d))`;\n// with leap year validation\nconst dateRegexSource = `((\\\\d\\\\d[2468][048]|\\\\d\\\\d[13579][26]|\\\\d\\\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\\\d|30)|(02)-(0[1-9]|1\\\\d|2[0-8])))`;\nconst dateRegex = new RegExp(`^${dateRegexSource}$`);\nfunction timeRegexSource(args) {\n    // let regex = `\\\\d{2}:\\\\d{2}:\\\\d{2}`;\n    let regex = `([01]\\\\d|2[0-3]):[0-5]\\\\d:[0-5]\\\\d`;\n    if (args.precision) {\n        regex = `${regex}\\\\.\\\\d{${args.precision}}`;\n    }\n    else if (args.precision == null) {\n        regex = `${regex}(\\\\.\\\\d+)?`;\n    }\n    return regex;\n}\nfunction timeRegex(args) {\n    return new RegExp(`^${timeRegexSource(args)}$`);\n}\n// Adapted from https://stackoverflow.com/a/3143231\nfunction datetimeRegex(args) {\n    let regex = `${dateRegexSource}T${timeRegexSource(args)}`;\n    const opts = [];\n    opts.push(args.local ? `Z?` : `Z`);\n    if (args.offset)\n        opts.push(`([+-]\\\\d{2}:?\\\\d{2})`);\n    regex = `${regex}(${opts.join(\"|\")})`;\n    return new RegExp(`^${regex}$`);\n}\nfunction isValidIP(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4Regex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6Regex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nfunction isValidJWT(jwt, alg) {\n    if (!jwtRegex.test(jwt))\n        return false;\n    try {\n        const [header] = jwt.split(\".\");\n        // Convert base64url to base64\n        const base64 = header\n            .replace(/-/g, \"+\")\n            .replace(/_/g, \"/\")\n            .padEnd(header.length + ((4 - (header.length % 4)) % 4), \"=\");\n        const decoded = JSON.parse(atob(base64));\n        if (typeof decoded !== \"object\" || decoded === null)\n            return false;\n        if (!decoded.typ || !decoded.alg)\n            return false;\n        if (alg && decoded.alg !== alg)\n            return false;\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nfunction isValidCidr(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4CidrRegex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6CidrRegex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nclass ZodString extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = String(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.string) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.string,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.length < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.length > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"length\") {\n                const tooBig = input.data.length > check.value;\n                const tooSmall = input.data.length < check.value;\n                if (tooBig || tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    if (tooBig) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_big,\n                            maximum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    else if (tooSmall) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_small,\n                            minimum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"email\") {\n                if (!emailRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"email\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"emoji\") {\n                if (!emojiRegex) {\n                    emojiRegex = new RegExp(_emojiRegex, \"u\");\n                }\n                if (!emojiRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"emoji\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"uuid\") {\n                if (!uuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"uuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"nanoid\") {\n                if (!nanoidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"nanoid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid\") {\n                if (!cuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid2\") {\n                if (!cuid2Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid2\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ulid\") {\n                if (!ulidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ulid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"url\") {\n                try {\n                    new URL(input.data);\n                }\n                catch (_a) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"regex\") {\n                check.regex.lastIndex = 0;\n                const testResult = check.regex.test(input.data);\n                if (!testResult) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"regex\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"trim\") {\n                input.data = input.data.trim();\n            }\n            else if (check.kind === \"includes\") {\n                if (!input.data.includes(check.value, check.position)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { includes: check.value, position: check.position },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"toLowerCase\") {\n                input.data = input.data.toLowerCase();\n            }\n            else if (check.kind === \"toUpperCase\") {\n                input.data = input.data.toUpperCase();\n            }\n            else if (check.kind === \"startsWith\") {\n                if (!input.data.startsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { startsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"endsWith\") {\n                if (!input.data.endsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { endsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"datetime\") {\n                const regex = datetimeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"datetime\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"date\") {\n                const regex = dateRegex;\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"date\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"time\") {\n                const regex = timeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"time\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"duration\") {\n                if (!durationRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"duration\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ip\") {\n                if (!isValidIP(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ip\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"jwt\") {\n                if (!isValidJWT(input.data, check.alg)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"jwt\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cidr\") {\n                if (!isValidCidr(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cidr\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"base64\") {\n                if (!base64Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"base64\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"base64url\") {\n                if (!base64urlRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"base64url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _regex(regex, validation, message) {\n        return this.refinement((data) => regex.test(data), {\n            validation,\n            code: ZodIssueCode.invalid_string,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    _addCheck(check) {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    email(message) {\n        return this._addCheck({ kind: \"email\", ...errorUtil.errToObj(message) });\n    }\n    url(message) {\n        return this._addCheck({ kind: \"url\", ...errorUtil.errToObj(message) });\n    }\n    emoji(message) {\n        return this._addCheck({ kind: \"emoji\", ...errorUtil.errToObj(message) });\n    }\n    uuid(message) {\n        return this._addCheck({ kind: \"uuid\", ...errorUtil.errToObj(message) });\n    }\n    nanoid(message) {\n        return this._addCheck({ kind: \"nanoid\", ...errorUtil.errToObj(message) });\n    }\n    cuid(message) {\n        return this._addCheck({ kind: \"cuid\", ...errorUtil.errToObj(message) });\n    }\n    cuid2(message) {\n        return this._addCheck({ kind: \"cuid2\", ...errorUtil.errToObj(message) });\n    }\n    ulid(message) {\n        return this._addCheck({ kind: \"ulid\", ...errorUtil.errToObj(message) });\n    }\n    base64(message) {\n        return this._addCheck({ kind: \"base64\", ...errorUtil.errToObj(message) });\n    }\n    base64url(message) {\n        // base64url encoding is a modification of base64 that can safely be used in URLs and filenames\n        return this._addCheck({\n            kind: \"base64url\",\n            ...errorUtil.errToObj(message),\n        });\n    }\n    jwt(options) {\n        return this._addCheck({ kind: \"jwt\", ...errorUtil.errToObj(options) });\n    }\n    ip(options) {\n        return this._addCheck({ kind: \"ip\", ...errorUtil.errToObj(options) });\n    }\n    cidr(options) {\n        return this._addCheck({ kind: \"cidr\", ...errorUtil.errToObj(options) });\n    }\n    datetime(options) {\n        var _a, _b;\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"datetime\",\n                precision: null,\n                offset: false,\n                local: false,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"datetime\",\n            precision: typeof (options === null || options === void 0 ? void 0 : options.precision) === \"undefined\" ? null : options === null || options === void 0 ? void 0 : options.precision,\n            offset: (_a = options === null || options === void 0 ? void 0 : options.offset) !== null && _a !== void 0 ? _a : false,\n            local: (_b = options === null || options === void 0 ? void 0 : options.local) !== null && _b !== void 0 ? _b : false,\n            ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    date(message) {\n        return this._addCheck({ kind: \"date\", message });\n    }\n    time(options) {\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"time\",\n                precision: null,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"time\",\n            precision: typeof (options === null || options === void 0 ? void 0 : options.precision) === \"undefined\" ? null : options === null || options === void 0 ? void 0 : options.precision,\n            ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    duration(message) {\n        return this._addCheck({ kind: \"duration\", ...errorUtil.errToObj(message) });\n    }\n    regex(regex, message) {\n        return this._addCheck({\n            kind: \"regex\",\n            regex: regex,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    includes(value, options) {\n        return this._addCheck({\n            kind: \"includes\",\n            value: value,\n            position: options === null || options === void 0 ? void 0 : options.position,\n            ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    startsWith(value, message) {\n        return this._addCheck({\n            kind: \"startsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    endsWith(value, message) {\n        return this._addCheck({\n            kind: \"endsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    min(minLength, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    max(maxLength, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    length(len, message) {\n        return this._addCheck({\n            kind: \"length\",\n            value: len,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    /**\n     * Equivalent to `.min(1)`\n     */\n    nonempty(message) {\n        return this.min(1, errorUtil.errToObj(message));\n    }\n    trim() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"trim\" }],\n        });\n    }\n    toLowerCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toLowerCase\" }],\n        });\n    }\n    toUpperCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toUpperCase\" }],\n        });\n    }\n    get isDatetime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"datetime\");\n    }\n    get isDate() {\n        return !!this._def.checks.find((ch) => ch.kind === \"date\");\n    }\n    get isTime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"time\");\n    }\n    get isDuration() {\n        return !!this._def.checks.find((ch) => ch.kind === \"duration\");\n    }\n    get isEmail() {\n        return !!this._def.checks.find((ch) => ch.kind === \"email\");\n    }\n    get isURL() {\n        return !!this._def.checks.find((ch) => ch.kind === \"url\");\n    }\n    get isEmoji() {\n        return !!this._def.checks.find((ch) => ch.kind === \"emoji\");\n    }\n    get isUUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"uuid\");\n    }\n    get isNANOID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"nanoid\");\n    }\n    get isCUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid\");\n    }\n    get isCUID2() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid2\");\n    }\n    get isULID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ulid\");\n    }\n    get isIP() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ip\");\n    }\n    get isCIDR() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cidr\");\n    }\n    get isBase64() {\n        return !!this._def.checks.find((ch) => ch.kind === \"base64\");\n    }\n    get isBase64url() {\n        // base64url encoding is a modification of base64 that can safely be used in URLs and filenames\n        return !!this._def.checks.find((ch) => ch.kind === \"base64url\");\n    }\n    get minLength() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxLength() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodString.create = (params) => {\n    var _a;\n    return new ZodString({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodString,\n        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\n        ...processCreateParams(params),\n    });\n};\n// https://stackoverflow.com/questions/3966484/why-does-modulus-operator-return-fractional-number-in-javascript/31711034#31711034\nfunction floatSafeRemainder(val, step) {\n    const valDecCount = (val.toString().split(\".\")[1] || \"\").length;\n    const stepDecCount = (step.toString().split(\".\")[1] || \"\").length;\n    const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;\n    const valInt = parseInt(val.toFixed(decCount).replace(\".\", \"\"));\n    const stepInt = parseInt(step.toFixed(decCount).replace(\".\", \"\"));\n    return (valInt % stepInt) / Math.pow(10, decCount);\n}\nclass ZodNumber extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n        this.step = this.multipleOf;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Number(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.number) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.number,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"int\") {\n                if (!util.isInteger(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_type,\n                        expected: \"integer\",\n                        received: \"float\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (floatSafeRemainder(input.data, check.value) !== 0) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"finite\") {\n                if (!Number.isFinite(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_finite,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    int(message) {\n        return this._addCheck({\n            kind: \"int\",\n            message: errorUtil.toString(message),\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value: value,\n            message: errorUtil.toString(message),\n        });\n    }\n    finite(message) {\n        return this._addCheck({\n            kind: \"finite\",\n            message: errorUtil.toString(message),\n        });\n    }\n    safe(message) {\n        return this._addCheck({\n            kind: \"min\",\n            inclusive: true,\n            value: Number.MIN_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        })._addCheck({\n            kind: \"max\",\n            inclusive: true,\n            value: Number.MAX_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n    get isInt() {\n        return !!this._def.checks.find((ch) => ch.kind === \"int\" ||\n            (ch.kind === \"multipleOf\" && util.isInteger(ch.value)));\n    }\n    get isFinite() {\n        let max = null, min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"finite\" ||\n                ch.kind === \"int\" ||\n                ch.kind === \"multipleOf\") {\n                return true;\n            }\n            else if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n            else if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return Number.isFinite(min) && Number.isFinite(max);\n    }\n}\nZodNumber.create = (params) => {\n    return new ZodNumber({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodNumber,\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBigInt extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            try {\n                input.data = BigInt(input.data);\n            }\n            catch (_a) {\n                return this._getInvalidInput(input);\n            }\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.bigint) {\n            return this._getInvalidInput(input);\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        type: \"bigint\",\n                        minimum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        type: \"bigint\",\n                        maximum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (input.data % check.value !== BigInt(0)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _getInvalidInput(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.bigint,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodBigInt.create = (params) => {\n    var _a;\n    return new ZodBigInt({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodBigInt,\n        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBoolean extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Boolean(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.boolean) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.boolean,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodBoolean.create = (params) => {\n    return new ZodBoolean({\n        typeName: ZodFirstPartyTypeKind.ZodBoolean,\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDate extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = new Date(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.date) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.date,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (isNaN(input.data.getTime())) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_date,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.getTime() < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        minimum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.getTime() > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        maximum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return {\n            status: status.value,\n            value: new Date(input.data.getTime()),\n        };\n    }\n    _addCheck(check) {\n        return new ZodDate({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    min(minDate, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    max(maxDate, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    get minDate() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min != null ? new Date(min) : null;\n    }\n    get maxDate() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max != null ? new Date(max) : null;\n    }\n}\nZodDate.create = (params) => {\n    return new ZodDate({\n        checks: [],\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        typeName: ZodFirstPartyTypeKind.ZodDate,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSymbol extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.symbol) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.symbol,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodSymbol.create = (params) => {\n    return new ZodSymbol({\n        typeName: ZodFirstPartyTypeKind.ZodSymbol,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUndefined extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.undefined,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodUndefined.create = (params) => {\n    return new ZodUndefined({\n        typeName: ZodFirstPartyTypeKind.ZodUndefined,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNull extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.null) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.null,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodNull.create = (params) => {\n    return new ZodNull({\n        typeName: ZodFirstPartyTypeKind.ZodNull,\n        ...processCreateParams(params),\n    });\n};\nclass ZodAny extends ZodType {\n    constructor() {\n        super(...arguments);\n        // to prevent instances of other classes from extending ZodAny. this causes issues with catchall in ZodObject.\n        this._any = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodAny.create = (params) => {\n    return new ZodAny({\n        typeName: ZodFirstPartyTypeKind.ZodAny,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnknown extends ZodType {\n    constructor() {\n        super(...arguments);\n        // required\n        this._unknown = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodUnknown.create = (params) => {\n    return new ZodUnknown({\n        typeName: ZodFirstPartyTypeKind.ZodUnknown,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNever extends ZodType {\n    _parse(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.never,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n}\nZodNever.create = (params) => {\n    return new ZodNever({\n        typeName: ZodFirstPartyTypeKind.ZodNever,\n        ...processCreateParams(params),\n    });\n};\nclass ZodVoid extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.void,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodVoid.create = (params) => {\n    return new ZodVoid({\n        typeName: ZodFirstPartyTypeKind.ZodVoid,\n        ...processCreateParams(params),\n    });\n};\nclass ZodArray extends ZodType {\n    _parse(input) {\n        const { ctx, status } = this._processInputParams(input);\n        const def = this._def;\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (def.exactLength !== null) {\n            const tooBig = ctx.data.length > def.exactLength.value;\n            const tooSmall = ctx.data.length < def.exactLength.value;\n            if (tooBig || tooSmall) {\n                addIssueToContext(ctx, {\n                    code: tooBig ? ZodIssueCode.too_big : ZodIssueCode.too_small,\n                    minimum: (tooSmall ? def.exactLength.value : undefined),\n                    maximum: (tooBig ? def.exactLength.value : undefined),\n                    type: \"array\",\n                    inclusive: true,\n                    exact: true,\n                    message: def.exactLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.minLength !== null) {\n            if (ctx.data.length < def.minLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxLength !== null) {\n            if (ctx.data.length > def.maxLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.all([...ctx.data].map((item, i) => {\n                return def.type._parseAsync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n            })).then((result) => {\n                return ParseStatus.mergeArray(status, result);\n            });\n        }\n        const result = [...ctx.data].map((item, i) => {\n            return def.type._parseSync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n        });\n        return ParseStatus.mergeArray(status, result);\n    }\n    get element() {\n        return this._def.type;\n    }\n    min(minLength, message) {\n        return new ZodArray({\n            ...this._def,\n            minLength: { value: minLength, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxLength, message) {\n        return new ZodArray({\n            ...this._def,\n            maxLength: { value: maxLength, message: errorUtil.toString(message) },\n        });\n    }\n    length(len, message) {\n        return new ZodArray({\n            ...this._def,\n            exactLength: { value: len, message: errorUtil.toString(message) },\n        });\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodArray.create = (schema, params) => {\n    return new ZodArray({\n        type: schema,\n        minLength: null,\n        maxLength: null,\n        exactLength: null,\n        typeName: ZodFirstPartyTypeKind.ZodArray,\n        ...processCreateParams(params),\n    });\n};\nfunction deepPartialify(schema) {\n    if (schema instanceof ZodObject) {\n        const newShape = {};\n        for (const key in schema.shape) {\n            const fieldSchema = schema.shape[key];\n            newShape[key] = ZodOptional.create(deepPartialify(fieldSchema));\n        }\n        return new ZodObject({\n            ...schema._def,\n            shape: () => newShape,\n        });\n    }\n    else if (schema instanceof ZodArray) {\n        return new ZodArray({\n            ...schema._def,\n            type: deepPartialify(schema.element),\n        });\n    }\n    else if (schema instanceof ZodOptional) {\n        return ZodOptional.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodNullable) {\n        return ZodNullable.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodTuple) {\n        return ZodTuple.create(schema.items.map((item) => deepPartialify(item)));\n    }\n    else {\n        return schema;\n    }\n}\nclass ZodObject extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._cached = null;\n        /**\n         * @deprecated In most cases, this is no longer needed - unknown properties are now silently stripped.\n         * If you want to pass through unknown properties, use `.passthrough()` instead.\n         */\n        this.nonstrict = this.passthrough;\n        // extend<\n        //   Augmentation extends ZodRawShape,\n        //   NewOutput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_output\"]\n        //       : k extends keyof Output\n        //       ? Output[k]\n        //       : never;\n        //   }>,\n        //   NewInput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_input\"]\n        //       : k extends keyof Input\n        //       ? Input[k]\n        //       : never;\n        //   }>\n        // >(\n        //   augmentation: Augmentation\n        // ): ZodObject<\n        //   extendShape<T, Augmentation>,\n        //   UnknownKeys,\n        //   Catchall,\n        //   NewOutput,\n        //   NewInput\n        // > {\n        //   return new ZodObject({\n        //     ...this._def,\n        //     shape: () => ({\n        //       ...this._def.shape(),\n        //       ...augmentation,\n        //     }),\n        //   }) as any;\n        // }\n        /**\n         * @deprecated Use `.extend` instead\n         *  */\n        this.augment = this.extend;\n    }\n    _getCached() {\n        if (this._cached !== null)\n            return this._cached;\n        const shape = this._def.shape();\n        const keys = util.objectKeys(shape);\n        return (this._cached = { shape, keys });\n    }\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.object) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const { status, ctx } = this._processInputParams(input);\n        const { shape, keys: shapeKeys } = this._getCached();\n        const extraKeys = [];\n        if (!(this._def.catchall instanceof ZodNever &&\n            this._def.unknownKeys === \"strip\")) {\n            for (const key in ctx.data) {\n                if (!shapeKeys.includes(key)) {\n                    extraKeys.push(key);\n                }\n            }\n        }\n        const pairs = [];\n        for (const key of shapeKeys) {\n            const keyValidator = shape[key];\n            const value = ctx.data[key];\n            pairs.push({\n                key: { status: \"valid\", value: key },\n                value: keyValidator._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (this._def.catchall instanceof ZodNever) {\n            const unknownKeys = this._def.unknownKeys;\n            if (unknownKeys === \"passthrough\") {\n                for (const key of extraKeys) {\n                    pairs.push({\n                        key: { status: \"valid\", value: key },\n                        value: { status: \"valid\", value: ctx.data[key] },\n                    });\n                }\n            }\n            else if (unknownKeys === \"strict\") {\n                if (extraKeys.length > 0) {\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.unrecognized_keys,\n                        keys: extraKeys,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (unknownKeys === \"strip\") ;\n            else {\n                throw new Error(`Internal ZodObject error: invalid unknownKeys value.`);\n            }\n        }\n        else {\n            // run catchall validation\n            const catchall = this._def.catchall;\n            for (const key of extraKeys) {\n                const value = ctx.data[key];\n                pairs.push({\n                    key: { status: \"valid\", value: key },\n                    value: catchall._parse(new ParseInputLazyPath(ctx, value, ctx.path, key) //, ctx.child(key), value, getParsedType(value)\n                    ),\n                    alwaysSet: key in ctx.data,\n                });\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.resolve()\n                .then(async () => {\n                const syncPairs = [];\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    syncPairs.push({\n                        key,\n                        value,\n                        alwaysSet: pair.alwaysSet,\n                    });\n                }\n                return syncPairs;\n            })\n                .then((syncPairs) => {\n                return ParseStatus.mergeObjectSync(status, syncPairs);\n            });\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get shape() {\n        return this._def.shape();\n    }\n    strict(message) {\n        errorUtil.errToObj;\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strict\",\n            ...(message !== undefined\n                ? {\n                    errorMap: (issue, ctx) => {\n                        var _a, _b, _c, _d;\n                        const defaultError = (_c = (_b = (_a = this._def).errorMap) === null || _b === void 0 ? void 0 : _b.call(_a, issue, ctx).message) !== null && _c !== void 0 ? _c : ctx.defaultError;\n                        if (issue.code === \"unrecognized_keys\")\n                            return {\n                                message: (_d = errorUtil.errToObj(message).message) !== null && _d !== void 0 ? _d : defaultError,\n                            };\n                        return {\n                            message: defaultError,\n                        };\n                    },\n                }\n                : {}),\n        });\n    }\n    strip() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strip\",\n        });\n    }\n    passthrough() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"passthrough\",\n        });\n    }\n    // const AugmentFactory =\n    //   <Def extends ZodObjectDef>(def: Def) =>\n    //   <Augmentation extends ZodRawShape>(\n    //     augmentation: Augmentation\n    //   ): ZodObject<\n    //     extendShape<ReturnType<Def[\"shape\"]>, Augmentation>,\n    //     Def[\"unknownKeys\"],\n    //     Def[\"catchall\"]\n    //   > => {\n    //     return new ZodObject({\n    //       ...def,\n    //       shape: () => ({\n    //         ...def.shape(),\n    //         ...augmentation,\n    //       }),\n    //     }) as any;\n    //   };\n    extend(augmentation) {\n        return new ZodObject({\n            ...this._def,\n            shape: () => ({\n                ...this._def.shape(),\n                ...augmentation,\n            }),\n        });\n    }\n    /**\n     * Prior to zod@1.0.12 there was a bug in the\n     * inferred type of merged objects. Please\n     * upgrade if you are experiencing issues.\n     */\n    merge(merging) {\n        const merged = new ZodObject({\n            unknownKeys: merging._def.unknownKeys,\n            catchall: merging._def.catchall,\n            shape: () => ({\n                ...this._def.shape(),\n                ...merging._def.shape(),\n            }),\n            typeName: ZodFirstPartyTypeKind.ZodObject,\n        });\n        return merged;\n    }\n    // merge<\n    //   Incoming extends AnyZodObject,\n    //   Augmentation extends Incoming[\"shape\"],\n    //   NewOutput extends {\n    //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_output\"]\n    //       : k extends keyof Output\n    //       ? Output[k]\n    //       : never;\n    //   },\n    //   NewInput extends {\n    //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_input\"]\n    //       : k extends keyof Input\n    //       ? Input[k]\n    //       : never;\n    //   }\n    // >(\n    //   merging: Incoming\n    // ): ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"],\n    //   NewOutput,\n    //   NewInput\n    // > {\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    setKey(key, schema) {\n        return this.augment({ [key]: schema });\n    }\n    // merge<Incoming extends AnyZodObject>(\n    //   merging: Incoming\n    // ): //ZodObject<T & Incoming[\"_shape\"], UnknownKeys, Catchall> = (merging) => {\n    // ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"]\n    // > {\n    //   // const mergedShape = objectUtil.mergeShapes(\n    //   //   this._def.shape(),\n    //   //   merging._def.shape()\n    //   // );\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    catchall(index) {\n        return new ZodObject({\n            ...this._def,\n            catchall: index,\n        });\n    }\n    pick(mask) {\n        const shape = {};\n        util.objectKeys(mask).forEach((key) => {\n            if (mask[key] && this.shape[key]) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    omit(mask) {\n        const shape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            if (!mask[key]) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    /**\n     * @deprecated\n     */\n    deepPartial() {\n        return deepPartialify(this);\n    }\n    partial(mask) {\n        const newShape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            const fieldSchema = this.shape[key];\n            if (mask && !mask[key]) {\n                newShape[key] = fieldSchema;\n            }\n            else {\n                newShape[key] = fieldSchema.optional();\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    required(mask) {\n        const newShape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            if (mask && !mask[key]) {\n                newShape[key] = this.shape[key];\n            }\n            else {\n                const fieldSchema = this.shape[key];\n                let newField = fieldSchema;\n                while (newField instanceof ZodOptional) {\n                    newField = newField._def.innerType;\n                }\n                newShape[key] = newField;\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    keyof() {\n        return createZodEnum(util.objectKeys(this.shape));\n    }\n}\nZodObject.create = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.strictCreate = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strict\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.lazycreate = (shape, params) => {\n    return new ZodObject({\n        shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const options = this._def.options;\n        function handleResults(results) {\n            // return first issue-free validation if it exists\n            for (const result of results) {\n                if (result.result.status === \"valid\") {\n                    return result.result;\n                }\n            }\n            for (const result of results) {\n                if (result.result.status === \"dirty\") {\n                    // add issues from dirty option\n                    ctx.common.issues.push(...result.ctx.common.issues);\n                    return result.result;\n                }\n            }\n            // return invalid\n            const unionErrors = results.map((result) => new ZodError(result.ctx.common.issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return Promise.all(options.map(async (option) => {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                return {\n                    result: await option._parseAsync({\n                        data: ctx.data,\n                        path: ctx.path,\n                        parent: childCtx,\n                    }),\n                    ctx: childCtx,\n                };\n            })).then(handleResults);\n        }\n        else {\n            let dirty = undefined;\n            const issues = [];\n            for (const option of options) {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                const result = option._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: childCtx,\n                });\n                if (result.status === \"valid\") {\n                    return result;\n                }\n                else if (result.status === \"dirty\" && !dirty) {\n                    dirty = { result, ctx: childCtx };\n                }\n                if (childCtx.common.issues.length) {\n                    issues.push(childCtx.common.issues);\n                }\n            }\n            if (dirty) {\n                ctx.common.issues.push(...dirty.ctx.common.issues);\n                return dirty.result;\n            }\n            const unionErrors = issues.map((issues) => new ZodError(issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n    }\n    get options() {\n        return this._def.options;\n    }\n}\nZodUnion.create = (types, params) => {\n    return new ZodUnion({\n        options: types,\n        typeName: ZodFirstPartyTypeKind.ZodUnion,\n        ...processCreateParams(params),\n    });\n};\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\n//////////                                 //////////\n//////////      ZodDiscriminatedUnion      //////////\n//////////                                 //////////\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\nconst getDiscriminator = (type) => {\n    if (type instanceof ZodLazy) {\n        return getDiscriminator(type.schema);\n    }\n    else if (type instanceof ZodEffects) {\n        return getDiscriminator(type.innerType());\n    }\n    else if (type instanceof ZodLiteral) {\n        return [type.value];\n    }\n    else if (type instanceof ZodEnum) {\n        return type.options;\n    }\n    else if (type instanceof ZodNativeEnum) {\n        // eslint-disable-next-line ban/ban\n        return util.objectValues(type.enum);\n    }\n    else if (type instanceof ZodDefault) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else if (type instanceof ZodUndefined) {\n        return [undefined];\n    }\n    else if (type instanceof ZodNull) {\n        return [null];\n    }\n    else if (type instanceof ZodOptional) {\n        return [undefined, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodNullable) {\n        return [null, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodBranded) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodReadonly) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodCatch) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else {\n        return [];\n    }\n};\nclass ZodDiscriminatedUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const discriminator = this.discriminator;\n        const discriminatorValue = ctx.data[discriminator];\n        const option = this.optionsMap.get(discriminatorValue);\n        if (!option) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union_discriminator,\n                options: Array.from(this.optionsMap.keys()),\n                path: [discriminator],\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return option._parseAsync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n        else {\n            return option._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n    }\n    get discriminator() {\n        return this._def.discriminator;\n    }\n    get options() {\n        return this._def.options;\n    }\n    get optionsMap() {\n        return this._def.optionsMap;\n    }\n    /**\n     * The constructor of the discriminated union schema. Its behaviour is very similar to that of the normal z.union() constructor.\n     * However, it only allows a union of objects, all of which need to share a discriminator property. This property must\n     * have a different value for each object in the union.\n     * @param discriminator the name of the discriminator property\n     * @param types an array of object schemas\n     * @param params\n     */\n    static create(discriminator, options, params) {\n        // Get all the valid discriminator values\n        const optionsMap = new Map();\n        // try {\n        for (const type of options) {\n            const discriminatorValues = getDiscriminator(type.shape[discriminator]);\n            if (!discriminatorValues.length) {\n                throw new Error(`A discriminator value for key \\`${discriminator}\\` could not be extracted from all schema options`);\n            }\n            for (const value of discriminatorValues) {\n                if (optionsMap.has(value)) {\n                    throw new Error(`Discriminator property ${String(discriminator)} has duplicate value ${String(value)}`);\n                }\n                optionsMap.set(value, type);\n            }\n        }\n        return new ZodDiscriminatedUnion({\n            typeName: ZodFirstPartyTypeKind.ZodDiscriminatedUnion,\n            discriminator,\n            options,\n            optionsMap,\n            ...processCreateParams(params),\n        });\n    }\n}\nfunction mergeValues(a, b) {\n    const aType = getParsedType(a);\n    const bType = getParsedType(b);\n    if (a === b) {\n        return { valid: true, data: a };\n    }\n    else if (aType === ZodParsedType.object && bType === ZodParsedType.object) {\n        const bKeys = util.objectKeys(b);\n        const sharedKeys = util\n            .objectKeys(a)\n            .filter((key) => bKeys.indexOf(key) !== -1);\n        const newObj = { ...a, ...b };\n        for (const key of sharedKeys) {\n            const sharedValue = mergeValues(a[key], b[key]);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newObj[key] = sharedValue.data;\n        }\n        return { valid: true, data: newObj };\n    }\n    else if (aType === ZodParsedType.array && bType === ZodParsedType.array) {\n        if (a.length !== b.length) {\n            return { valid: false };\n        }\n        const newArray = [];\n        for (let index = 0; index < a.length; index++) {\n            const itemA = a[index];\n            const itemB = b[index];\n            const sharedValue = mergeValues(itemA, itemB);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newArray.push(sharedValue.data);\n        }\n        return { valid: true, data: newArray };\n    }\n    else if (aType === ZodParsedType.date &&\n        bType === ZodParsedType.date &&\n        +a === +b) {\n        return { valid: true, data: a };\n    }\n    else {\n        return { valid: false };\n    }\n}\nclass ZodIntersection extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const handleParsed = (parsedLeft, parsedRight) => {\n            if (isAborted(parsedLeft) || isAborted(parsedRight)) {\n                return INVALID;\n            }\n            const merged = mergeValues(parsedLeft.value, parsedRight.value);\n            if (!merged.valid) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.invalid_intersection_types,\n                });\n                return INVALID;\n            }\n            if (isDirty(parsedLeft) || isDirty(parsedRight)) {\n                status.dirty();\n            }\n            return { status: status.value, value: merged.data };\n        };\n        if (ctx.common.async) {\n            return Promise.all([\n                this._def.left._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n                this._def.right._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n            ]).then(([left, right]) => handleParsed(left, right));\n        }\n        else {\n            return handleParsed(this._def.left._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }), this._def.right._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }));\n        }\n    }\n}\nZodIntersection.create = (left, right, params) => {\n    return new ZodIntersection({\n        left: left,\n        right: right,\n        typeName: ZodFirstPartyTypeKind.ZodIntersection,\n        ...processCreateParams(params),\n    });\n};\nclass ZodTuple extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (ctx.data.length < this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_small,\n                minimum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            return INVALID;\n        }\n        const rest = this._def.rest;\n        if (!rest && ctx.data.length > this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_big,\n                maximum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            status.dirty();\n        }\n        const items = [...ctx.data]\n            .map((item, itemIndex) => {\n            const schema = this._def.items[itemIndex] || this._def.rest;\n            if (!schema)\n                return null;\n            return schema._parse(new ParseInputLazyPath(ctx, item, ctx.path, itemIndex));\n        })\n            .filter((x) => !!x); // filter nulls\n        if (ctx.common.async) {\n            return Promise.all(items).then((results) => {\n                return ParseStatus.mergeArray(status, results);\n            });\n        }\n        else {\n            return ParseStatus.mergeArray(status, items);\n        }\n    }\n    get items() {\n        return this._def.items;\n    }\n    rest(rest) {\n        return new ZodTuple({\n            ...this._def,\n            rest,\n        });\n    }\n}\nZodTuple.create = (schemas, params) => {\n    if (!Array.isArray(schemas)) {\n        throw new Error(\"You must pass an array of schemas to z.tuple([ ... ])\");\n    }\n    return new ZodTuple({\n        items: schemas,\n        typeName: ZodFirstPartyTypeKind.ZodTuple,\n        rest: null,\n        ...processCreateParams(params),\n    });\n};\nclass ZodRecord extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const pairs = [];\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        for (const key in ctx.data) {\n            pairs.push({\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, key)),\n                value: valueType._parse(new ParseInputLazyPath(ctx, ctx.data[key], ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (ctx.common.async) {\n            return ParseStatus.mergeObjectAsync(status, pairs);\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get element() {\n        return this._def.valueType;\n    }\n    static create(first, second, third) {\n        if (second instanceof ZodType) {\n            return new ZodRecord({\n                keyType: first,\n                valueType: second,\n                typeName: ZodFirstPartyTypeKind.ZodRecord,\n                ...processCreateParams(third),\n            });\n        }\n        return new ZodRecord({\n            keyType: ZodString.create(),\n            valueType: first,\n            typeName: ZodFirstPartyTypeKind.ZodRecord,\n            ...processCreateParams(second),\n        });\n    }\n}\nclass ZodMap extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.map) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.map,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        const pairs = [...ctx.data.entries()].map(([key, value], index) => {\n            return {\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, [index, \"key\"])),\n                value: valueType._parse(new ParseInputLazyPath(ctx, value, ctx.path, [index, \"value\"])),\n            };\n        });\n        if (ctx.common.async) {\n            const finalMap = new Map();\n            return Promise.resolve().then(async () => {\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    if (key.status === \"aborted\" || value.status === \"aborted\") {\n                        return INVALID;\n                    }\n                    if (key.status === \"dirty\" || value.status === \"dirty\") {\n                        status.dirty();\n                    }\n                    finalMap.set(key.value, value.value);\n                }\n                return { status: status.value, value: finalMap };\n            });\n        }\n        else {\n            const finalMap = new Map();\n            for (const pair of pairs) {\n                const key = pair.key;\n                const value = pair.value;\n                if (key.status === \"aborted\" || value.status === \"aborted\") {\n                    return INVALID;\n                }\n                if (key.status === \"dirty\" || value.status === \"dirty\") {\n                    status.dirty();\n                }\n                finalMap.set(key.value, value.value);\n            }\n            return { status: status.value, value: finalMap };\n        }\n    }\n}\nZodMap.create = (keyType, valueType, params) => {\n    return new ZodMap({\n        valueType,\n        keyType,\n        typeName: ZodFirstPartyTypeKind.ZodMap,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSet extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.set) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.set,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const def = this._def;\n        if (def.minSize !== null) {\n            if (ctx.data.size < def.minSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minSize.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxSize !== null) {\n            if (ctx.data.size > def.maxSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxSize.message,\n                });\n                status.dirty();\n            }\n        }\n        const valueType = this._def.valueType;\n        function finalizeSet(elements) {\n            const parsedSet = new Set();\n            for (const element of elements) {\n                if (element.status === \"aborted\")\n                    return INVALID;\n                if (element.status === \"dirty\")\n                    status.dirty();\n                parsedSet.add(element.value);\n            }\n            return { status: status.value, value: parsedSet };\n        }\n        const elements = [...ctx.data.values()].map((item, i) => valueType._parse(new ParseInputLazyPath(ctx, item, ctx.path, i)));\n        if (ctx.common.async) {\n            return Promise.all(elements).then((elements) => finalizeSet(elements));\n        }\n        else {\n            return finalizeSet(elements);\n        }\n    }\n    min(minSize, message) {\n        return new ZodSet({\n            ...this._def,\n            minSize: { value: minSize, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxSize, message) {\n        return new ZodSet({\n            ...this._def,\n            maxSize: { value: maxSize, message: errorUtil.toString(message) },\n        });\n    }\n    size(size, message) {\n        return this.min(size, message).max(size, message);\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodSet.create = (valueType, params) => {\n    return new ZodSet({\n        valueType,\n        minSize: null,\n        maxSize: null,\n        typeName: ZodFirstPartyTypeKind.ZodSet,\n        ...processCreateParams(params),\n    });\n};\nclass ZodFunction extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.validate = this.implement;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.function) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.function,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        function makeArgsIssue(args, error) {\n            return makeIssue({\n                data: args,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    getErrorMap(),\n                    errorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_arguments,\n                    argumentsError: error,\n                },\n            });\n        }\n        function makeReturnsIssue(returns, error) {\n            return makeIssue({\n                data: returns,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    getErrorMap(),\n                    errorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_return_type,\n                    returnTypeError: error,\n                },\n            });\n        }\n        const params = { errorMap: ctx.common.contextualErrorMap };\n        const fn = ctx.data;\n        if (this._def.returns instanceof ZodPromise) {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(async function (...args) {\n                const error = new ZodError([]);\n                const parsedArgs = await me._def.args\n                    .parseAsync(args, params)\n                    .catch((e) => {\n                    error.addIssue(makeArgsIssue(args, e));\n                    throw error;\n                });\n                const result = await Reflect.apply(fn, this, parsedArgs);\n                const parsedReturns = await me._def.returns._def.type\n                    .parseAsync(result, params)\n                    .catch((e) => {\n                    error.addIssue(makeReturnsIssue(result, e));\n                    throw error;\n                });\n                return parsedReturns;\n            });\n        }\n        else {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(function (...args) {\n                const parsedArgs = me._def.args.safeParse(args, params);\n                if (!parsedArgs.success) {\n                    throw new ZodError([makeArgsIssue(args, parsedArgs.error)]);\n                }\n                const result = Reflect.apply(fn, this, parsedArgs.data);\n                const parsedReturns = me._def.returns.safeParse(result, params);\n                if (!parsedReturns.success) {\n                    throw new ZodError([makeReturnsIssue(result, parsedReturns.error)]);\n                }\n                return parsedReturns.data;\n            });\n        }\n    }\n    parameters() {\n        return this._def.args;\n    }\n    returnType() {\n        return this._def.returns;\n    }\n    args(...items) {\n        return new ZodFunction({\n            ...this._def,\n            args: ZodTuple.create(items).rest(ZodUnknown.create()),\n        });\n    }\n    returns(returnType) {\n        return new ZodFunction({\n            ...this._def,\n            returns: returnType,\n        });\n    }\n    implement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    strictImplement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    static create(args, returns, params) {\n        return new ZodFunction({\n            args: (args\n                ? args\n                : ZodTuple.create([]).rest(ZodUnknown.create())),\n            returns: returns || ZodUnknown.create(),\n            typeName: ZodFirstPartyTypeKind.ZodFunction,\n            ...processCreateParams(params),\n        });\n    }\n}\nclass ZodLazy extends ZodType {\n    get schema() {\n        return this._def.getter();\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const lazySchema = this._def.getter();\n        return lazySchema._parse({ data: ctx.data, path: ctx.path, parent: ctx });\n    }\n}\nZodLazy.create = (getter, params) => {\n    return new ZodLazy({\n        getter: getter,\n        typeName: ZodFirstPartyTypeKind.ZodLazy,\n        ...processCreateParams(params),\n    });\n};\nclass ZodLiteral extends ZodType {\n    _parse(input) {\n        if (input.data !== this._def.value) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_literal,\n                expected: this._def.value,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n    get value() {\n        return this._def.value;\n    }\n}\nZodLiteral.create = (value, params) => {\n    return new ZodLiteral({\n        value: value,\n        typeName: ZodFirstPartyTypeKind.ZodLiteral,\n        ...processCreateParams(params),\n    });\n};\nfunction createZodEnum(values, params) {\n    return new ZodEnum({\n        values,\n        typeName: ZodFirstPartyTypeKind.ZodEnum,\n        ...processCreateParams(params),\n    });\n}\nclass ZodEnum extends ZodType {\n    constructor() {\n        super(...arguments);\n        _ZodEnum_cache.set(this, void 0);\n    }\n    _parse(input) {\n        if (typeof input.data !== \"string\") {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (!__classPrivateFieldGet(this, _ZodEnum_cache, \"f\")) {\n            __classPrivateFieldSet(this, _ZodEnum_cache, new Set(this._def.values), \"f\");\n        }\n        if (!__classPrivateFieldGet(this, _ZodEnum_cache, \"f\").has(input.data)) {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get options() {\n        return this._def.values;\n    }\n    get enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Values() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    extract(values, newDef = this._def) {\n        return ZodEnum.create(values, {\n            ...this._def,\n            ...newDef,\n        });\n    }\n    exclude(values, newDef = this._def) {\n        return ZodEnum.create(this.options.filter((opt) => !values.includes(opt)), {\n            ...this._def,\n            ...newDef,\n        });\n    }\n}\n_ZodEnum_cache = new WeakMap();\nZodEnum.create = createZodEnum;\nclass ZodNativeEnum extends ZodType {\n    constructor() {\n        super(...arguments);\n        _ZodNativeEnum_cache.set(this, void 0);\n    }\n    _parse(input) {\n        const nativeEnumValues = util.getValidEnumValues(this._def.values);\n        const ctx = this._getOrReturnCtx(input);\n        if (ctx.parsedType !== ZodParsedType.string &&\n            ctx.parsedType !== ZodParsedType.number) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (!__classPrivateFieldGet(this, _ZodNativeEnum_cache, \"f\")) {\n            __classPrivateFieldSet(this, _ZodNativeEnum_cache, new Set(util.getValidEnumValues(this._def.values)), \"f\");\n        }\n        if (!__classPrivateFieldGet(this, _ZodNativeEnum_cache, \"f\").has(input.data)) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get enum() {\n        return this._def.values;\n    }\n}\n_ZodNativeEnum_cache = new WeakMap();\nZodNativeEnum.create = (values, params) => {\n    return new ZodNativeEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodNativeEnum,\n        ...processCreateParams(params),\n    });\n};\nclass ZodPromise extends ZodType {\n    unwrap() {\n        return this._def.type;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.promise &&\n            ctx.common.async === false) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.promise,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const promisified = ctx.parsedType === ZodParsedType.promise\n            ? ctx.data\n            : Promise.resolve(ctx.data);\n        return OK(promisified.then((data) => {\n            return this._def.type.parseAsync(data, {\n                path: ctx.path,\n                errorMap: ctx.common.contextualErrorMap,\n            });\n        }));\n    }\n}\nZodPromise.create = (schema, params) => {\n    return new ZodPromise({\n        type: schema,\n        typeName: ZodFirstPartyTypeKind.ZodPromise,\n        ...processCreateParams(params),\n    });\n};\nclass ZodEffects extends ZodType {\n    innerType() {\n        return this._def.schema;\n    }\n    sourceType() {\n        return this._def.schema._def.typeName === ZodFirstPartyTypeKind.ZodEffects\n            ? this._def.schema.sourceType()\n            : this._def.schema;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const effect = this._def.effect || null;\n        const checkCtx = {\n            addIssue: (arg) => {\n                addIssueToContext(ctx, arg);\n                if (arg.fatal) {\n                    status.abort();\n                }\n                else {\n                    status.dirty();\n                }\n            },\n            get path() {\n                return ctx.path;\n            },\n        };\n        checkCtx.addIssue = checkCtx.addIssue.bind(checkCtx);\n        if (effect.type === \"preprocess\") {\n            const processed = effect.transform(ctx.data, checkCtx);\n            if (ctx.common.async) {\n                return Promise.resolve(processed).then(async (processed) => {\n                    if (status.value === \"aborted\")\n                        return INVALID;\n                    const result = await this._def.schema._parseAsync({\n                        data: processed,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                    if (result.status === \"aborted\")\n                        return INVALID;\n                    if (result.status === \"dirty\")\n                        return DIRTY(result.value);\n                    if (status.value === \"dirty\")\n                        return DIRTY(result.value);\n                    return result;\n                });\n            }\n            else {\n                if (status.value === \"aborted\")\n                    return INVALID;\n                const result = this._def.schema._parseSync({\n                    data: processed,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (result.status === \"aborted\")\n                    return INVALID;\n                if (result.status === \"dirty\")\n                    return DIRTY(result.value);\n                if (status.value === \"dirty\")\n                    return DIRTY(result.value);\n                return result;\n            }\n        }\n        if (effect.type === \"refinement\") {\n            const executeRefinement = (acc) => {\n                const result = effect.refinement(acc, checkCtx);\n                if (ctx.common.async) {\n                    return Promise.resolve(result);\n                }\n                if (result instanceof Promise) {\n                    throw new Error(\"Async refinement encountered during synchronous parse operation. Use .parseAsync instead.\");\n                }\n                return acc;\n            };\n            if (ctx.common.async === false) {\n                const inner = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inner.status === \"aborted\")\n                    return INVALID;\n                if (inner.status === \"dirty\")\n                    status.dirty();\n                // return value is ignored\n                executeRefinement(inner.value);\n                return { status: status.value, value: inner.value };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((inner) => {\n                    if (inner.status === \"aborted\")\n                        return INVALID;\n                    if (inner.status === \"dirty\")\n                        status.dirty();\n                    return executeRefinement(inner.value).then(() => {\n                        return { status: status.value, value: inner.value };\n                    });\n                });\n            }\n        }\n        if (effect.type === \"transform\") {\n            if (ctx.common.async === false) {\n                const base = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (!isValid(base))\n                    return base;\n                const result = effect.transform(base.value, checkCtx);\n                if (result instanceof Promise) {\n                    throw new Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`);\n                }\n                return { status: status.value, value: result };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((base) => {\n                    if (!isValid(base))\n                        return base;\n                    return Promise.resolve(effect.transform(base.value, checkCtx)).then((result) => ({ status: status.value, value: result }));\n                });\n            }\n        }\n        util.assertNever(effect);\n    }\n}\nZodEffects.create = (schema, effect, params) => {\n    return new ZodEffects({\n        schema,\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        effect,\n        ...processCreateParams(params),\n    });\n};\nZodEffects.createWithPreprocess = (preprocess, schema, params) => {\n    return new ZodEffects({\n        schema,\n        effect: { type: \"preprocess\", transform: preprocess },\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        ...processCreateParams(params),\n    });\n};\nclass ZodOptional extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.undefined) {\n            return OK(undefined);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodOptional.create = (type, params) => {\n    return new ZodOptional({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodOptional,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNullable extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.null) {\n            return OK(null);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodNullable.create = (type, params) => {\n    return new ZodNullable({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodNullable,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDefault extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        let data = ctx.data;\n        if (ctx.parsedType === ZodParsedType.undefined) {\n            data = this._def.defaultValue();\n        }\n        return this._def.innerType._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    removeDefault() {\n        return this._def.innerType;\n    }\n}\nZodDefault.create = (type, params) => {\n    return new ZodDefault({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodDefault,\n        defaultValue: typeof params.default === \"function\"\n            ? params.default\n            : () => params.default,\n        ...processCreateParams(params),\n    });\n};\nclass ZodCatch extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        // newCtx is used to not collect issues from inner types in ctx\n        const newCtx = {\n            ...ctx,\n            common: {\n                ...ctx.common,\n                issues: [],\n            },\n        };\n        const result = this._def.innerType._parse({\n            data: newCtx.data,\n            path: newCtx.path,\n            parent: {\n                ...newCtx,\n            },\n        });\n        if (isAsync(result)) {\n            return result.then((result) => {\n                return {\n                    status: \"valid\",\n                    value: result.status === \"valid\"\n                        ? result.value\n                        : this._def.catchValue({\n                            get error() {\n                                return new ZodError(newCtx.common.issues);\n                            },\n                            input: newCtx.data,\n                        }),\n                };\n            });\n        }\n        else {\n            return {\n                status: \"valid\",\n                value: result.status === \"valid\"\n                    ? result.value\n                    : this._def.catchValue({\n                        get error() {\n                            return new ZodError(newCtx.common.issues);\n                        },\n                        input: newCtx.data,\n                    }),\n            };\n        }\n    }\n    removeCatch() {\n        return this._def.innerType;\n    }\n}\nZodCatch.create = (type, params) => {\n    return new ZodCatch({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodCatch,\n        catchValue: typeof params.catch === \"function\" ? params.catch : () => params.catch,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNaN extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.nan) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.nan,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n}\nZodNaN.create = (params) => {\n    return new ZodNaN({\n        typeName: ZodFirstPartyTypeKind.ZodNaN,\n        ...processCreateParams(params),\n    });\n};\nconst BRAND = Symbol(\"zod_brand\");\nclass ZodBranded extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const data = ctx.data;\n        return this._def.type._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    unwrap() {\n        return this._def.type;\n    }\n}\nclass ZodPipeline extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.common.async) {\n            const handleAsync = async () => {\n                const inResult = await this._def.in._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inResult.status === \"aborted\")\n                    return INVALID;\n                if (inResult.status === \"dirty\") {\n                    status.dirty();\n                    return DIRTY(inResult.value);\n                }\n                else {\n                    return this._def.out._parseAsync({\n                        data: inResult.value,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                }\n            };\n            return handleAsync();\n        }\n        else {\n            const inResult = this._def.in._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n            if (inResult.status === \"aborted\")\n                return INVALID;\n            if (inResult.status === \"dirty\") {\n                status.dirty();\n                return {\n                    status: \"dirty\",\n                    value: inResult.value,\n                };\n            }\n            else {\n                return this._def.out._parseSync({\n                    data: inResult.value,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n    }\n    static create(a, b) {\n        return new ZodPipeline({\n            in: a,\n            out: b,\n            typeName: ZodFirstPartyTypeKind.ZodPipeline,\n        });\n    }\n}\nclass ZodReadonly extends ZodType {\n    _parse(input) {\n        const result = this._def.innerType._parse(input);\n        const freeze = (data) => {\n            if (isValid(data)) {\n                data.value = Object.freeze(data.value);\n            }\n            return data;\n        };\n        return isAsync(result)\n            ? result.then((data) => freeze(data))\n            : freeze(result);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodReadonly.create = (type, params) => {\n    return new ZodReadonly({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodReadonly,\n        ...processCreateParams(params),\n    });\n};\n////////////////////////////////////////\n////////////////////////////////////////\n//////////                    //////////\n//////////      z.custom      //////////\n//////////                    //////////\n////////////////////////////////////////\n////////////////////////////////////////\nfunction cleanParams(params, data) {\n    const p = typeof params === \"function\"\n        ? params(data)\n        : typeof params === \"string\"\n            ? { message: params }\n            : params;\n    const p2 = typeof p === \"string\" ? { message: p } : p;\n    return p2;\n}\nfunction custom(check, _params = {}, \n/**\n * @deprecated\n *\n * Pass `fatal` into the params object instead:\n *\n * ```ts\n * z.string().custom((val) => val.length > 5, { fatal: false })\n * ```\n *\n */\nfatal) {\n    if (check)\n        return ZodAny.create().superRefine((data, ctx) => {\n            var _a, _b;\n            const r = check(data);\n            if (r instanceof Promise) {\n                return r.then((r) => {\n                    var _a, _b;\n                    if (!r) {\n                        const params = cleanParams(_params, data);\n                        const _fatal = (_b = (_a = params.fatal) !== null && _a !== void 0 ? _a : fatal) !== null && _b !== void 0 ? _b : true;\n                        ctx.addIssue({ code: \"custom\", ...params, fatal: _fatal });\n                    }\n                });\n            }\n            if (!r) {\n                const params = cleanParams(_params, data);\n                const _fatal = (_b = (_a = params.fatal) !== null && _a !== void 0 ? _a : fatal) !== null && _b !== void 0 ? _b : true;\n                ctx.addIssue({ code: \"custom\", ...params, fatal: _fatal });\n            }\n            return;\n        });\n    return ZodAny.create();\n}\nconst late = {\n    object: ZodObject.lazycreate,\n};\nvar ZodFirstPartyTypeKind;\n(function (ZodFirstPartyTypeKind) {\n    ZodFirstPartyTypeKind[\"ZodString\"] = \"ZodString\";\n    ZodFirstPartyTypeKind[\"ZodNumber\"] = \"ZodNumber\";\n    ZodFirstPartyTypeKind[\"ZodNaN\"] = \"ZodNaN\";\n    ZodFirstPartyTypeKind[\"ZodBigInt\"] = \"ZodBigInt\";\n    ZodFirstPartyTypeKind[\"ZodBoolean\"] = \"ZodBoolean\";\n    ZodFirstPartyTypeKind[\"ZodDate\"] = \"ZodDate\";\n    ZodFirstPartyTypeKind[\"ZodSymbol\"] = \"ZodSymbol\";\n    ZodFirstPartyTypeKind[\"ZodUndefined\"] = \"ZodUndefined\";\n    ZodFirstPartyTypeKind[\"ZodNull\"] = \"ZodNull\";\n    ZodFirstPartyTypeKind[\"ZodAny\"] = \"ZodAny\";\n    ZodFirstPartyTypeKind[\"ZodUnknown\"] = \"ZodUnknown\";\n    ZodFirstPartyTypeKind[\"ZodNever\"] = \"ZodNever\";\n    ZodFirstPartyTypeKind[\"ZodVoid\"] = \"ZodVoid\";\n    ZodFirstPartyTypeKind[\"ZodArray\"] = \"ZodArray\";\n    ZodFirstPartyTypeKind[\"ZodObject\"] = \"ZodObject\";\n    ZodFirstPartyTypeKind[\"ZodUnion\"] = \"ZodUnion\";\n    ZodFirstPartyTypeKind[\"ZodDiscriminatedUnion\"] = \"ZodDiscriminatedUnion\";\n    ZodFirstPartyTypeKind[\"ZodIntersection\"] = \"ZodIntersection\";\n    ZodFirstPartyTypeKind[\"ZodTuple\"] = \"ZodTuple\";\n    ZodFirstPartyTypeKind[\"ZodRecord\"] = \"ZodRecord\";\n    ZodFirstPartyTypeKind[\"ZodMap\"] = \"ZodMap\";\n    ZodFirstPartyTypeKind[\"ZodSet\"] = \"ZodSet\";\n    ZodFirstPartyTypeKind[\"ZodFunction\"] = \"ZodFunction\";\n    ZodFirstPartyTypeKind[\"ZodLazy\"] = \"ZodLazy\";\n    ZodFirstPartyTypeKind[\"ZodLiteral\"] = \"ZodLiteral\";\n    ZodFirstPartyTypeKind[\"ZodEnum\"] = \"ZodEnum\";\n    ZodFirstPartyTypeKind[\"ZodEffects\"] = \"ZodEffects\";\n    ZodFirstPartyTypeKind[\"ZodNativeEnum\"] = \"ZodNativeEnum\";\n    ZodFirstPartyTypeKind[\"ZodOptional\"] = \"ZodOptional\";\n    ZodFirstPartyTypeKind[\"ZodNullable\"] = \"ZodNullable\";\n    ZodFirstPartyTypeKind[\"ZodDefault\"] = \"ZodDefault\";\n    ZodFirstPartyTypeKind[\"ZodCatch\"] = \"ZodCatch\";\n    ZodFirstPartyTypeKind[\"ZodPromise\"] = \"ZodPromise\";\n    ZodFirstPartyTypeKind[\"ZodBranded\"] = \"ZodBranded\";\n    ZodFirstPartyTypeKind[\"ZodPipeline\"] = \"ZodPipeline\";\n    ZodFirstPartyTypeKind[\"ZodReadonly\"] = \"ZodReadonly\";\n})(ZodFirstPartyTypeKind || (ZodFirstPartyTypeKind = {}));\nconst instanceOfType = (\n// const instanceOfType = <T extends new (...args: any[]) => any>(\ncls, params = {\n    message: `Input not instance of ${cls.name}`,\n}) => custom((data) => data instanceof cls, params);\nconst stringType = ZodString.create;\nconst numberType = ZodNumber.create;\nconst nanType = ZodNaN.create;\nconst bigIntType = ZodBigInt.create;\nconst booleanType = ZodBoolean.create;\nconst dateType = ZodDate.create;\nconst symbolType = ZodSymbol.create;\nconst undefinedType = ZodUndefined.create;\nconst nullType = ZodNull.create;\nconst anyType = ZodAny.create;\nconst unknownType = ZodUnknown.create;\nconst neverType = ZodNever.create;\nconst voidType = ZodVoid.create;\nconst arrayType = ZodArray.create;\nconst objectType = ZodObject.create;\nconst strictObjectType = ZodObject.strictCreate;\nconst unionType = ZodUnion.create;\nconst discriminatedUnionType = ZodDiscriminatedUnion.create;\nconst intersectionType = ZodIntersection.create;\nconst tupleType = ZodTuple.create;\nconst recordType = ZodRecord.create;\nconst mapType = ZodMap.create;\nconst setType = ZodSet.create;\nconst functionType = ZodFunction.create;\nconst lazyType = ZodLazy.create;\nconst literalType = ZodLiteral.create;\nconst enumType = ZodEnum.create;\nconst nativeEnumType = ZodNativeEnum.create;\nconst promiseType = ZodPromise.create;\nconst effectsType = ZodEffects.create;\nconst optionalType = ZodOptional.create;\nconst nullableType = ZodNullable.create;\nconst preprocessType = ZodEffects.createWithPreprocess;\nconst pipelineType = ZodPipeline.create;\nconst ostring = () => stringType().optional();\nconst onumber = () => numberType().optional();\nconst oboolean = () => booleanType().optional();\nconst coerce = {\n    string: ((arg) => ZodString.create({ ...arg, coerce: true })),\n    number: ((arg) => ZodNumber.create({ ...arg, coerce: true })),\n    boolean: ((arg) => ZodBoolean.create({\n        ...arg,\n        coerce: true,\n    })),\n    bigint: ((arg) => ZodBigInt.create({ ...arg, coerce: true })),\n    date: ((arg) => ZodDate.create({ ...arg, coerce: true })),\n};\nconst NEVER = INVALID;\n\nvar z = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    defaultErrorMap: errorMap,\n    setErrorMap: setErrorMap,\n    getErrorMap: getErrorMap,\n    makeIssue: makeIssue,\n    EMPTY_PATH: EMPTY_PATH,\n    addIssueToContext: addIssueToContext,\n    ParseStatus: ParseStatus,\n    INVALID: INVALID,\n    DIRTY: DIRTY,\n    OK: OK,\n    isAborted: isAborted,\n    isDirty: isDirty,\n    isValid: isValid,\n    isAsync: isAsync,\n    get util () { return util; },\n    get objectUtil () { return objectUtil; },\n    ZodParsedType: ZodParsedType,\n    getParsedType: getParsedType,\n    ZodType: ZodType,\n    datetimeRegex: datetimeRegex,\n    ZodString: ZodString,\n    ZodNumber: ZodNumber,\n    ZodBigInt: ZodBigInt,\n    ZodBoolean: ZodBoolean,\n    ZodDate: ZodDate,\n    ZodSymbol: ZodSymbol,\n    ZodUndefined: ZodUndefined,\n    ZodNull: ZodNull,\n    ZodAny: ZodAny,\n    ZodUnknown: ZodUnknown,\n    ZodNever: ZodNever,\n    ZodVoid: ZodVoid,\n    ZodArray: ZodArray,\n    ZodObject: ZodObject,\n    ZodUnion: ZodUnion,\n    ZodDiscriminatedUnion: ZodDiscriminatedUnion,\n    ZodIntersection: ZodIntersection,\n    ZodTuple: ZodTuple,\n    ZodRecord: ZodRecord,\n    ZodMap: ZodMap,\n    ZodSet: ZodSet,\n    ZodFunction: ZodFunction,\n    ZodLazy: ZodLazy,\n    ZodLiteral: ZodLiteral,\n    ZodEnum: ZodEnum,\n    ZodNativeEnum: ZodNativeEnum,\n    ZodPromise: ZodPromise,\n    ZodEffects: ZodEffects,\n    ZodTransformer: ZodEffects,\n    ZodOptional: ZodOptional,\n    ZodNullable: ZodNullable,\n    ZodDefault: ZodDefault,\n    ZodCatch: ZodCatch,\n    ZodNaN: ZodNaN,\n    BRAND: BRAND,\n    ZodBranded: ZodBranded,\n    ZodPipeline: ZodPipeline,\n    ZodReadonly: ZodReadonly,\n    custom: custom,\n    Schema: ZodType,\n    ZodSchema: ZodType,\n    late: late,\n    get ZodFirstPartyTypeKind () { return ZodFirstPartyTypeKind; },\n    coerce: coerce,\n    any: anyType,\n    array: arrayType,\n    bigint: bigIntType,\n    boolean: booleanType,\n    date: dateType,\n    discriminatedUnion: discriminatedUnionType,\n    effect: effectsType,\n    'enum': enumType,\n    'function': functionType,\n    'instanceof': instanceOfType,\n    intersection: intersectionType,\n    lazy: lazyType,\n    literal: literalType,\n    map: mapType,\n    nan: nanType,\n    nativeEnum: nativeEnumType,\n    never: neverType,\n    'null': nullType,\n    nullable: nullableType,\n    number: numberType,\n    object: objectType,\n    oboolean: oboolean,\n    onumber: onumber,\n    optional: optionalType,\n    ostring: ostring,\n    pipeline: pipelineType,\n    preprocess: preprocessType,\n    promise: promiseType,\n    record: recordType,\n    set: setType,\n    strictObject: strictObjectType,\n    string: stringType,\n    symbol: symbolType,\n    transformer: effectsType,\n    tuple: tupleType,\n    'undefined': undefinedType,\n    union: unionType,\n    unknown: unknownType,\n    'void': voidType,\n    NEVER: NEVER,\n    ZodIssueCode: ZodIssueCode,\n    quotelessJson: quotelessJson,\n    ZodError: ZodError\n});\n\nexport { BRAND, DIRTY, EMPTY_PATH, INVALID, NEVER, OK, ParseStatus, ZodType as Schema, ZodAny, ZodArray, ZodBigInt, ZodBoolean, ZodBranded, ZodCatch, ZodDate, ZodDefault, ZodDiscriminatedUnion, ZodEffects, ZodEnum, ZodError, ZodFirstPartyTypeKind, ZodFunction, ZodIntersection, ZodIssueCode, ZodLazy, ZodLiteral, ZodMap, ZodNaN, ZodNativeEnum, ZodNever, ZodNull, ZodNullable, ZodNumber, ZodObject, ZodOptional, ZodParsedType, ZodPipeline, ZodPromise, ZodReadonly, ZodRecord, ZodType as ZodSchema, ZodSet, ZodString, ZodSymbol, ZodEffects as ZodTransformer, ZodTuple, ZodType, ZodUndefined, ZodUnion, ZodUnknown, ZodVoid, addIssueToContext, anyType as any, arrayType as array, bigIntType as bigint, booleanType as boolean, coerce, custom, dateType as date, datetimeRegex, z as default, errorMap as defaultErrorMap, discriminatedUnionType as discriminatedUnion, effectsType as effect, enumType as enum, functionType as function, getErrorMap, getParsedType, instanceOfType as instanceof, intersectionType as intersection, isAborted, isAsync, isDirty, isValid, late, lazyType as lazy, literalType as literal, makeIssue, mapType as map, nanType as nan, nativeEnumType as nativeEnum, neverType as never, nullType as null, nullableType as nullable, numberType as number, objectType as object, objectUtil, oboolean, onumber, optionalType as optional, ostring, pipelineType as pipeline, preprocessType as preprocess, promiseType as promise, quotelessJson, recordType as record, setType as set, setErrorMap, strictObjectType as strictObject, stringType as string, symbolType as symbol, effectsType as transformer, tupleType as tuple, undefinedType as undefined, unionType as union, unknownType as unknown, util, voidType as void, z };\n","import snakeCase from \"decamelize\";\nimport camelCase from \"camelcase\";\nexport function keyToJson(key, map) {\n    return map?.[key] || snakeCase(key);\n}\nexport function keyFromJson(key, map) {\n    return map?.[key] || camelCase(key);\n}\nexport function mapKeys(fields, mapper, map) {\n    const mapped = {};\n    for (const key in fields) {\n        if (Object.hasOwn(fields, key)) {\n            mapped[mapper(key, map)] = fields[key];\n        }\n    }\n    return mapped;\n}\n","import { keyToJson, mapKeys } from \"./map_keys.js\";\nfunction shallowCopy(obj) {\n    return Array.isArray(obj) ? [...obj] : { ...obj };\n}\nfunction replaceSecrets(root, secretsMap) {\n    const result = shallowCopy(root);\n    for (const [path, secretId] of Object.entries(secretsMap)) {\n        const [last, ...partsReverse] = path.split(\".\").reverse();\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let current = result;\n        for (const part of partsReverse.reverse()) {\n            if (current[part] === undefined) {\n                break;\n            }\n            current[part] = shallowCopy(current[part]);\n            current = current[part];\n        }\n        if (current[last] !== undefined) {\n            current[last] = {\n                lc: 1,\n                type: \"secret\",\n                id: [secretId],\n            };\n        }\n    }\n    return result;\n}\n/**\n * Get a unique name for the module, rather than parent class implementations.\n * Should not be subclassed, subclass lc_name above instead.\n */\nexport function get_lc_unique_name(\n// eslint-disable-next-line @typescript-eslint/no-use-before-define\nserializableClass) {\n    // \"super\" here would refer to the parent class of Serializable,\n    // when we want the parent class of the module actually calling this method.\n    const parentClass = Object.getPrototypeOf(serializableClass);\n    const lcNameIsSubclassed = typeof serializableClass.lc_name === \"function\" &&\n        (typeof parentClass.lc_name !== \"function\" ||\n            serializableClass.lc_name() !== parentClass.lc_name());\n    if (lcNameIsSubclassed) {\n        return serializableClass.lc_name();\n    }\n    else {\n        return serializableClass.name;\n    }\n}\nexport class Serializable {\n    /**\n     * The name of the serializable. Override to provide an alias or\n     * to preserve the serialized module name in minified environments.\n     *\n     * Implemented as a static method to support loading logic.\n     */\n    static lc_name() {\n        return this.name;\n    }\n    /**\n     * The final serialized identifier for the module.\n     */\n    get lc_id() {\n        return [\n            ...this.lc_namespace,\n            get_lc_unique_name(this.constructor),\n        ];\n    }\n    /**\n     * A map of secrets, which will be omitted from serialization.\n     * Keys are paths to the secret in constructor args, e.g. \"foo.bar.baz\".\n     * Values are the secret ids, which will be used when deserializing.\n     */\n    get lc_secrets() {\n        return undefined;\n    }\n    /**\n     * A map of additional attributes to merge with constructor args.\n     * Keys are the attribute names, e.g. \"foo\".\n     * Values are the attribute values, which will be serialized.\n     * These attributes need to be accepted by the constructor as arguments.\n     */\n    get lc_attributes() {\n        return undefined;\n    }\n    /**\n     * A map of aliases for constructor args.\n     * Keys are the attribute names, e.g. \"foo\".\n     * Values are the alias that will replace the key in serialization.\n     * This is used to eg. make argument names match Python.\n     */\n    get lc_aliases() {\n        return undefined;\n    }\n    /**\n     * A manual list of keys that should be serialized.\n     * If not overridden, all fields passed into the constructor will be serialized.\n     */\n    get lc_serializable_keys() {\n        return undefined;\n    }\n    constructor(kwargs, ..._args) {\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"lc_kwargs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        if (this.lc_serializable_keys !== undefined) {\n            this.lc_kwargs = Object.fromEntries(Object.entries(kwargs || {}).filter(([key]) => this.lc_serializable_keys?.includes(key)));\n        }\n        else {\n            this.lc_kwargs = kwargs ?? {};\n        }\n    }\n    toJSON() {\n        if (!this.lc_serializable) {\n            return this.toJSONNotImplemented();\n        }\n        if (\n        // eslint-disable-next-line no-instanceof/no-instanceof\n        this.lc_kwargs instanceof Serializable ||\n            typeof this.lc_kwargs !== \"object\" ||\n            Array.isArray(this.lc_kwargs)) {\n            // We do not support serialization of classes with arg not a POJO\n            // I'm aware the check above isn't as strict as it could be\n            return this.toJSONNotImplemented();\n        }\n        const aliases = {};\n        const secrets = {};\n        const kwargs = Object.keys(this.lc_kwargs).reduce((acc, key) => {\n            acc[key] = key in this ? this[key] : this.lc_kwargs[key];\n            return acc;\n        }, {});\n        // get secrets, attributes and aliases from all superclasses\n        for (\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        let current = Object.getPrototypeOf(this); current; current = Object.getPrototypeOf(current)) {\n            Object.assign(aliases, Reflect.get(current, \"lc_aliases\", this));\n            Object.assign(secrets, Reflect.get(current, \"lc_secrets\", this));\n            Object.assign(kwargs, Reflect.get(current, \"lc_attributes\", this));\n        }\n        // include all secrets used, even if not in kwargs,\n        // will be replaced with sentinel value in replaceSecrets\n        Object.keys(secrets).forEach((keyPath) => {\n            // eslint-disable-next-line @typescript-eslint/no-this-alias, @typescript-eslint/no-explicit-any\n            let read = this;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            let write = kwargs;\n            const [last, ...partsReverse] = keyPath.split(\".\").reverse();\n            for (const key of partsReverse.reverse()) {\n                if (!(key in read) || read[key] === undefined)\n                    return;\n                if (!(key in write) || write[key] === undefined) {\n                    if (typeof read[key] === \"object\" && read[key] != null) {\n                        write[key] = {};\n                    }\n                    else if (Array.isArray(read[key])) {\n                        write[key] = [];\n                    }\n                }\n                read = read[key];\n                write = write[key];\n            }\n            if (last in read && read[last] !== undefined) {\n                write[last] = write[last] || read[last];\n            }\n        });\n        return {\n            lc: 1,\n            type: \"constructor\",\n            id: this.lc_id,\n            kwargs: mapKeys(Object.keys(secrets).length ? replaceSecrets(kwargs, secrets) : kwargs, keyToJson, aliases),\n        };\n    }\n    toJSONNotImplemented() {\n        return {\n            lc: 1,\n            type: \"not_implemented\",\n            id: this.lc_id,\n        };\n    }\n}\n","export function isDataContentBlock(content_block) {\n    return (typeof content_block === \"object\" &&\n        content_block !== null &&\n        \"type\" in content_block &&\n        typeof content_block.type === \"string\" &&\n        \"source_type\" in content_block &&\n        (content_block.source_type === \"url\" ||\n            content_block.source_type === \"base64\" ||\n            content_block.source_type === \"text\" ||\n            content_block.source_type === \"id\"));\n}\nexport function isURLContentBlock(content_block) {\n    return (isDataContentBlock(content_block) &&\n        content_block.source_type === \"url\" &&\n        \"url\" in content_block &&\n        typeof content_block.url === \"string\");\n}\nexport function isBase64ContentBlock(content_block) {\n    return (isDataContentBlock(content_block) &&\n        content_block.source_type === \"base64\" &&\n        \"data\" in content_block &&\n        typeof content_block.data === \"string\");\n}\nexport function isPlainTextContentBlock(content_block) {\n    return (isDataContentBlock(content_block) &&\n        content_block.source_type === \"text\" &&\n        \"text\" in content_block &&\n        typeof content_block.text === \"string\");\n}\nexport function isIDContentBlock(content_block) {\n    return (isDataContentBlock(content_block) &&\n        content_block.source_type === \"id\" &&\n        \"id\" in content_block &&\n        typeof content_block.id === \"string\");\n}\nexport function convertToOpenAIImageBlock(content_block) {\n    if (isDataContentBlock(content_block)) {\n        if (content_block.source_type === \"url\") {\n            return {\n                type: \"image_url\",\n                image_url: {\n                    url: content_block.url,\n                },\n            };\n        }\n        if (content_block.source_type === \"base64\") {\n            if (!content_block.mime_type) {\n                throw new Error(\"mime_type key is required for base64 data.\");\n            }\n            const mime_type = content_block.mime_type;\n            return {\n                type: \"image_url\",\n                image_url: {\n                    url: `data:${mime_type};base64,${content_block.data}`,\n                },\n            };\n        }\n    }\n    throw new Error(\"Unsupported source type. Only 'url' and 'base64' are supported.\");\n}\n/**\n * Utility function for ChatModelProviders. Parses a mime type into a type, subtype, and parameters.\n *\n * @param mime_type - The mime type to parse.\n * @returns An object containing the type, subtype, and parameters.\n */\nexport function parseMimeType(mime_type) {\n    const parts = mime_type.split(\";\")[0].split(\"/\");\n    if (parts.length !== 2) {\n        throw new Error(`Invalid mime type: \"${mime_type}\" - does not match type/subtype format.`);\n    }\n    const type = parts[0].trim();\n    const subtype = parts[1].trim();\n    if (type === \"\" || subtype === \"\") {\n        throw new Error(`Invalid mime type: \"${mime_type}\" - type or subtype is empty.`);\n    }\n    const parameters = {};\n    for (const parameterKvp of mime_type.split(\";\").slice(1)) {\n        const parameterParts = parameterKvp.split(\"=\");\n        if (parameterParts.length !== 2) {\n            throw new Error(`Invalid parameter syntax in mime type: \"${mime_type}\".`);\n        }\n        const key = parameterParts[0].trim();\n        const value = parameterParts[1].trim();\n        if (key === \"\") {\n            throw new Error(`Invalid parameter syntax in mime type: \"${mime_type}\".`);\n        }\n        parameters[key] = value;\n    }\n    return {\n        type,\n        subtype,\n        parameters,\n    };\n}\n/**\n * Utility function for ChatModelProviders. Parses a base64 data URL into a typed array or string.\n *\n * @param dataUrl - The base64 data URL to parse.\n * @param asTypedArray - Whether to return the data as a typed array.\n * @returns The parsed data and mime type, or undefined if the data URL is invalid.\n */\nexport function parseBase64DataUrl({ dataUrl: data_url, asTypedArray = false, }) {\n    const formatMatch = data_url.match(/^data:(\\w+\\/\\w+);base64,([A-Za-z0-9+/]+=*)$/);\n    let mime_type;\n    if (formatMatch) {\n        mime_type = formatMatch[1].toLowerCase();\n        const data = asTypedArray\n            ? Uint8Array.from(atob(formatMatch[2]), (c) => c.charCodeAt(0))\n            : formatMatch[2];\n        return {\n            mime_type,\n            data,\n        };\n    }\n    return undefined;\n}\n/**\n * Convert from a standard data content block to a provider's proprietary data content block format.\n *\n * Don't override this method. Instead, override the more specific conversion methods and use this\n * method unmodified.\n *\n * @param block - The standard data content block to convert.\n * @returns The provider data content block.\n * @throws An error if the standard data content block type is not supported.\n */\nexport function convertToProviderContentBlock(block, converter) {\n    if (block.type === \"text\") {\n        if (!converter.fromStandardTextBlock) {\n            throw new Error(`Converter for ${converter.providerName} does not implement \\`fromStandardTextBlock\\` method.`);\n        }\n        return converter.fromStandardTextBlock(block);\n    }\n    if (block.type === \"image\") {\n        if (!converter.fromStandardImageBlock) {\n            throw new Error(`Converter for ${converter.providerName} does not implement \\`fromStandardImageBlock\\` method.`);\n        }\n        return converter.fromStandardImageBlock(block);\n    }\n    if (block.type === \"audio\") {\n        if (!converter.fromStandardAudioBlock) {\n            throw new Error(`Converter for ${converter.providerName} does not implement \\`fromStandardAudioBlock\\` method.`);\n        }\n        return converter.fromStandardAudioBlock(block);\n    }\n    if (block.type === \"file\") {\n        if (!converter.fromStandardFileBlock) {\n            throw new Error(`Converter for ${converter.providerName} does not implement \\`fromStandardFileBlock\\` method.`);\n        }\n        return converter.fromStandardFileBlock(block);\n    }\n    throw new Error(`Unable to convert content block type '${block.type}' to provider-specific format: not recognized.`);\n}\n","import { Serializable } from \"../load/serializable.js\";\nimport { isDataContentBlock, } from \"./content_blocks.js\";\nexport function mergeContent(firstContent, secondContent) {\n    // If first content is a string\n    if (typeof firstContent === \"string\") {\n        if (firstContent === \"\") {\n            return secondContent;\n        }\n        if (typeof secondContent === \"string\") {\n            return firstContent + secondContent;\n        }\n        else if (Array.isArray(secondContent) &&\n            secondContent.some((c) => isDataContentBlock(c))) {\n            return [\n                {\n                    type: \"text\",\n                    source_type: \"text\",\n                    text: firstContent,\n                },\n                ...secondContent,\n            ];\n        }\n        else {\n            return [{ type: \"text\", text: firstContent }, ...secondContent];\n        }\n        // If both are arrays\n    }\n    else if (Array.isArray(secondContent)) {\n        return (_mergeLists(firstContent, secondContent) ?? [\n            ...firstContent,\n            ...secondContent,\n        ]);\n    }\n    else {\n        if (secondContent === \"\") {\n            return firstContent;\n        }\n        else if (Array.isArray(firstContent) &&\n            firstContent.some((c) => isDataContentBlock(c))) {\n            return [\n                ...firstContent,\n                {\n                    type: \"file\",\n                    source_type: \"text\",\n                    text: secondContent,\n                },\n            ];\n        }\n        else {\n            return [...firstContent, { type: \"text\", text: secondContent }];\n        }\n    }\n}\n/**\n * 'Merge' two statuses. If either value passed is 'error', it will return 'error'. Else\n * it will return 'success'.\n *\n * @param {\"success\" | \"error\" | undefined} left The existing value to 'merge' with the new value.\n * @param {\"success\" | \"error\" | undefined} right The new value to 'merge' with the existing value\n * @returns {\"success\" | \"error\"} The 'merged' value.\n */\nexport function _mergeStatus(left, right) {\n    if (left === \"error\" || right === \"error\") {\n        return \"error\";\n    }\n    return \"success\";\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction stringifyWithDepthLimit(obj, depthLimit) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    function helper(obj, currentDepth) {\n        if (typeof obj !== \"object\" || obj === null || obj === undefined) {\n            return obj;\n        }\n        if (currentDepth >= depthLimit) {\n            if (Array.isArray(obj)) {\n                return \"[Array]\";\n            }\n            return \"[Object]\";\n        }\n        if (Array.isArray(obj)) {\n            return obj.map((item) => helper(item, currentDepth + 1));\n        }\n        const result = {};\n        for (const key of Object.keys(obj)) {\n            result[key] = helper(obj[key], currentDepth + 1);\n        }\n        return result;\n    }\n    return JSON.stringify(helper(obj, 0), null, 2);\n}\n/**\n * Base class for all types of messages in a conversation. It includes\n * properties like `content`, `name`, and `additional_kwargs`. It also\n * includes methods like `toDict()` and `_getType()`.\n */\nexport class BaseMessage extends Serializable {\n    get lc_aliases() {\n        // exclude snake case conversion to pascal case\n        return {\n            additional_kwargs: \"additional_kwargs\",\n            response_metadata: \"response_metadata\",\n        };\n    }\n    /**\n     * Get text content of the message.\n     */\n    get text() {\n        if (typeof this.content === \"string\") {\n            return this.content;\n        }\n        if (!Array.isArray(this.content))\n            return \"\";\n        return this.content\n            .map((c) => {\n            if (typeof c === \"string\")\n                return c;\n            if (c.type === \"text\")\n                return c.text;\n            return \"\";\n        })\n            .join(\"\");\n    }\n    /** The type of the message. */\n    getType() {\n        return this._getType();\n    }\n    constructor(fields, \n    /** @deprecated */\n    kwargs) {\n        if (typeof fields === \"string\") {\n            // eslint-disable-next-line no-param-reassign\n            fields = {\n                content: fields,\n                additional_kwargs: kwargs,\n                response_metadata: {},\n            };\n        }\n        // Make sure the default value for additional_kwargs is passed into super() for serialization\n        if (!fields.additional_kwargs) {\n            // eslint-disable-next-line no-param-reassign\n            fields.additional_kwargs = {};\n        }\n        if (!fields.response_metadata) {\n            // eslint-disable-next-line no-param-reassign\n            fields.response_metadata = {};\n        }\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"messages\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        /** The content of the message. */\n        Object.defineProperty(this, \"content\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /** The name of the message sender in a multi-user chat. */\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /** Additional keyword arguments */\n        Object.defineProperty(this, \"additional_kwargs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /** Response metadata. For example: response headers, logprobs, token counts. */\n        Object.defineProperty(this, \"response_metadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /**\n         * An optional unique identifier for the message. This should ideally be\n         * provided by the provider/model which created the message.\n         */\n        Object.defineProperty(this, \"id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.name = fields.name;\n        this.content = fields.content;\n        this.additional_kwargs = fields.additional_kwargs;\n        this.response_metadata = fields.response_metadata;\n        this.id = fields.id;\n    }\n    toDict() {\n        return {\n            type: this._getType(),\n            data: this.toJSON()\n                .kwargs,\n        };\n    }\n    static lc_name() {\n        return \"BaseMessage\";\n    }\n    // Can't be protected for silly reasons\n    get _printableFields() {\n        return {\n            id: this.id,\n            content: this.content,\n            name: this.name,\n            additional_kwargs: this.additional_kwargs,\n            response_metadata: this.response_metadata,\n        };\n    }\n    // this private method is used to update the ID for the runtime\n    // value as well as in lc_kwargs for serialisation\n    _updateId(value) {\n        this.id = value;\n        // lc_attributes wouldn't work here, because jest compares the\n        // whole object\n        this.lc_kwargs.id = value;\n    }\n    get [Symbol.toStringTag]() {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return this.constructor.lc_name();\n    }\n    // Override the default behavior of console.log\n    [Symbol.for(\"nodejs.util.inspect.custom\")](depth) {\n        if (depth === null) {\n            return this;\n        }\n        const printable = stringifyWithDepthLimit(this._printableFields, Math.max(4, depth));\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return `${this.constructor.lc_name()} ${printable}`;\n    }\n}\nexport function isOpenAIToolCallArray(value) {\n    return (Array.isArray(value) &&\n        value.every((v) => typeof v.index === \"number\"));\n}\nexport function _mergeDicts(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nleft, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nright\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n) {\n    const merged = { ...left };\n    for (const [key, value] of Object.entries(right)) {\n        if (merged[key] == null) {\n            merged[key] = value;\n        }\n        else if (value == null) {\n            continue;\n        }\n        else if (typeof merged[key] !== typeof value ||\n            Array.isArray(merged[key]) !== Array.isArray(value)) {\n            throw new Error(`field[${key}] already exists in the message chunk, but with a different type.`);\n        }\n        else if (typeof merged[key] === \"string\") {\n            if (key === \"type\") {\n                // Do not merge 'type' fields\n                continue;\n            }\n            merged[key] += value;\n        }\n        else if (typeof merged[key] === \"object\" && !Array.isArray(merged[key])) {\n            merged[key] = _mergeDicts(merged[key], value);\n        }\n        else if (Array.isArray(merged[key])) {\n            merged[key] = _mergeLists(merged[key], value);\n        }\n        else if (merged[key] === value) {\n            continue;\n        }\n        else {\n            console.warn(`field[${key}] already exists in this message chunk and value has unsupported type.`);\n        }\n    }\n    return merged;\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function _mergeLists(left, right) {\n    if (left === undefined && right === undefined) {\n        return undefined;\n    }\n    else if (left === undefined || right === undefined) {\n        return left || right;\n    }\n    else {\n        const merged = [...left];\n        for (const item of right) {\n            if (typeof item === \"object\" &&\n                \"index\" in item &&\n                typeof item.index === \"number\") {\n                const toMerge = merged.findIndex((leftItem) => leftItem.index === item.index);\n                if (toMerge !== -1) {\n                    merged[toMerge] = _mergeDicts(merged[toMerge], item);\n                }\n                else {\n                    merged.push(item);\n                }\n            }\n            else if (typeof item === \"object\" &&\n                \"text\" in item &&\n                item.text === \"\") {\n                // No-op - skip empty text blocks\n                continue;\n            }\n            else {\n                merged.push(item);\n            }\n        }\n        return merged;\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function _mergeObj(left, right) {\n    if (!left && !right) {\n        throw new Error(\"Cannot merge two undefined objects.\");\n    }\n    if (!left || !right) {\n        return left || right;\n    }\n    else if (typeof left !== typeof right) {\n        throw new Error(`Cannot merge objects of different types.\\nLeft ${typeof left}\\nRight ${typeof right}`);\n    }\n    else if (typeof left === \"string\" && typeof right === \"string\") {\n        return (left + right);\n    }\n    else if (Array.isArray(left) && Array.isArray(right)) {\n        return _mergeLists(left, right);\n    }\n    else if (typeof left === \"object\" && typeof right === \"object\") {\n        return _mergeDicts(left, right);\n    }\n    else if (left === right) {\n        return left;\n    }\n    else {\n        throw new Error(`Can not merge objects of different types.\\nLeft ${left}\\nRight ${right}`);\n    }\n}\n/**\n * Represents a chunk of a message, which can be concatenated with other\n * message chunks. It includes a method `_merge_kwargs_dict()` for merging\n * additional keyword arguments from another `BaseMessageChunk` into this\n * one. It also overrides the `__add__()` method to support concatenation\n * of `BaseMessageChunk` instances.\n */\nexport class BaseMessageChunk extends BaseMessage {\n}\nexport function _isMessageFieldWithRole(x) {\n    return typeof x.role === \"string\";\n}\nexport function isBaseMessage(messageLike) {\n    return typeof messageLike?._getType === \"function\";\n}\nexport function isBaseMessageChunk(messageLike) {\n    return (isBaseMessage(messageLike) &&\n        typeof messageLike.concat === \"function\");\n}\n","import { BaseMessage, BaseMessageChunk, mergeContent, _mergeDicts, _mergeObj, _mergeStatus, } from \"./base.js\";\nexport function isDirectToolOutput(x) {\n    return (x != null &&\n        typeof x === \"object\" &&\n        \"lc_direct_tool_output\" in x &&\n        x.lc_direct_tool_output === true);\n}\n/**\n * Represents a tool message in a conversation.\n */\nexport class ToolMessage extends BaseMessage {\n    static lc_name() {\n        return \"ToolMessage\";\n    }\n    get lc_aliases() {\n        // exclude snake case conversion to pascal case\n        return { tool_call_id: \"tool_call_id\" };\n    }\n    constructor(fields, tool_call_id, name) {\n        if (typeof fields === \"string\") {\n            // eslint-disable-next-line no-param-reassign, @typescript-eslint/no-non-null-assertion\n            fields = { content: fields, name, tool_call_id: tool_call_id };\n        }\n        super(fields);\n        Object.defineProperty(this, \"lc_direct_tool_output\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        /**\n         * Status of the tool invocation.\n         * @version 0.2.19\n         */\n        Object.defineProperty(this, \"status\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"tool_call_id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /**\n         * Artifact of the Tool execution which is not meant to be sent to the model.\n         *\n         * Should only be specified if it is different from the message content, e.g. if only\n         * a subset of the full tool output is being passed as message content but the full\n         * output is needed in other parts of the code.\n         */\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Object.defineProperty(this, \"artifact\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.tool_call_id = fields.tool_call_id;\n        this.artifact = fields.artifact;\n        this.status = fields.status;\n    }\n    _getType() {\n        return \"tool\";\n    }\n    static isInstance(message) {\n        return message._getType() === \"tool\";\n    }\n    get _printableFields() {\n        return {\n            ...super._printableFields,\n            tool_call_id: this.tool_call_id,\n            artifact: this.artifact,\n        };\n    }\n}\n/**\n * Represents a chunk of a tool message, which can be concatenated\n * with other tool message chunks.\n */\nexport class ToolMessageChunk extends BaseMessageChunk {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"tool_call_id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /**\n         * Status of the tool invocation.\n         * @version 0.2.19\n         */\n        Object.defineProperty(this, \"status\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /**\n         * Artifact of the Tool execution which is not meant to be sent to the model.\n         *\n         * Should only be specified if it is different from the message content, e.g. if only\n         * a subset of the full tool output is being passed as message content but the full\n         * output is needed in other parts of the code.\n         */\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Object.defineProperty(this, \"artifact\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.tool_call_id = fields.tool_call_id;\n        this.artifact = fields.artifact;\n        this.status = fields.status;\n    }\n    static lc_name() {\n        return \"ToolMessageChunk\";\n    }\n    _getType() {\n        return \"tool\";\n    }\n    concat(chunk) {\n        return new ToolMessageChunk({\n            content: mergeContent(this.content, chunk.content),\n            additional_kwargs: _mergeDicts(this.additional_kwargs, chunk.additional_kwargs),\n            response_metadata: _mergeDicts(this.response_metadata, chunk.response_metadata),\n            artifact: _mergeObj(this.artifact, chunk.artifact),\n            tool_call_id: this.tool_call_id,\n            id: this.id ?? chunk.id,\n            status: _mergeStatus(this.status, chunk.status),\n        });\n    }\n    get _printableFields() {\n        return {\n            ...super._printableFields,\n            tool_call_id: this.tool_call_id,\n            artifact: this.artifact,\n        };\n    }\n}\nexport function defaultToolCallParser(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nrawToolCalls) {\n    const toolCalls = [];\n    const invalidToolCalls = [];\n    for (const toolCall of rawToolCalls) {\n        if (!toolCall.function) {\n            continue;\n        }\n        else {\n            const functionName = toolCall.function.name;\n            try {\n                const functionArgs = JSON.parse(toolCall.function.arguments);\n                const parsed = {\n                    name: functionName || \"\",\n                    args: functionArgs || {},\n                    id: toolCall.id,\n                };\n                toolCalls.push(parsed);\n            }\n            catch (error) {\n                invalidToolCalls.push({\n                    name: functionName,\n                    args: toolCall.function.arguments,\n                    id: toolCall.id,\n                    error: \"Malformed args.\",\n                });\n            }\n        }\n    }\n    return [toolCalls, invalidToolCalls];\n}\nexport function isToolMessage(x) {\n    return x._getType() === \"tool\";\n}\nexport function isToolMessageChunk(x) {\n    return x._getType() === \"tool\";\n}\n","import { parsePartialJson } from \"../utils/json.js\";\nimport { BaseMessage, BaseMessageChunk, mergeContent, _mergeDicts, _mergeLists, } from \"./base.js\";\nimport { defaultToolCallParser, } from \"./tool.js\";\n/**\n * Represents an AI message in a conversation.\n */\nexport class AIMessage extends BaseMessage {\n    get lc_aliases() {\n        // exclude snake case conversion to pascal case\n        return {\n            ...super.lc_aliases,\n            tool_calls: \"tool_calls\",\n            invalid_tool_calls: \"invalid_tool_calls\",\n        };\n    }\n    constructor(fields, \n    /** @deprecated */\n    kwargs) {\n        let initParams;\n        if (typeof fields === \"string\") {\n            initParams = {\n                content: fields,\n                tool_calls: [],\n                invalid_tool_calls: [],\n                additional_kwargs: kwargs ?? {},\n            };\n        }\n        else {\n            initParams = fields;\n            const rawToolCalls = initParams.additional_kwargs?.tool_calls;\n            const toolCalls = initParams.tool_calls;\n            if (!(rawToolCalls == null) &&\n                rawToolCalls.length > 0 &&\n                (toolCalls === undefined || toolCalls.length === 0)) {\n                console.warn([\n                    \"New LangChain packages are available that more efficiently handle\",\n                    \"tool calling.\\n\\nPlease upgrade your packages to versions that set\",\n                    \"message tool calls. e.g., `yarn add @langchain/anthropic`,\",\n                    \"yarn add @langchain/openai`, etc.\",\n                ].join(\" \"));\n            }\n            try {\n                if (!(rawToolCalls == null) && toolCalls === undefined) {\n                    const [toolCalls, invalidToolCalls] = defaultToolCallParser(rawToolCalls);\n                    initParams.tool_calls = toolCalls ?? [];\n                    initParams.invalid_tool_calls = invalidToolCalls ?? [];\n                }\n                else {\n                    initParams.tool_calls = initParams.tool_calls ?? [];\n                    initParams.invalid_tool_calls = initParams.invalid_tool_calls ?? [];\n                }\n            }\n            catch (e) {\n                // Do nothing if parsing fails\n                initParams.tool_calls = [];\n                initParams.invalid_tool_calls = [];\n            }\n        }\n        // Sadly, TypeScript only allows super() calls at root if the class has\n        // properties with initializers, so we have to check types twice.\n        super(initParams);\n        // These are typed as optional to avoid breaking changes and allow for casting\n        // from BaseMessage.\n        Object.defineProperty(this, \"tool_calls\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"invalid_tool_calls\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        /**\n         * If provided, token usage information associated with the message.\n         */\n        Object.defineProperty(this, \"usage_metadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        if (typeof initParams !== \"string\") {\n            this.tool_calls = initParams.tool_calls ?? this.tool_calls;\n            this.invalid_tool_calls =\n                initParams.invalid_tool_calls ?? this.invalid_tool_calls;\n        }\n        this.usage_metadata = initParams.usage_metadata;\n    }\n    static lc_name() {\n        return \"AIMessage\";\n    }\n    _getType() {\n        return \"ai\";\n    }\n    get _printableFields() {\n        return {\n            ...super._printableFields,\n            tool_calls: this.tool_calls,\n            invalid_tool_calls: this.invalid_tool_calls,\n            usage_metadata: this.usage_metadata,\n        };\n    }\n}\nexport function isAIMessage(x) {\n    return x._getType() === \"ai\";\n}\nexport function isAIMessageChunk(x) {\n    return x._getType() === \"ai\";\n}\n/**\n * Represents a chunk of an AI message, which can be concatenated with\n * other AI message chunks.\n */\nexport class AIMessageChunk extends BaseMessageChunk {\n    constructor(fields) {\n        let initParams;\n        if (typeof fields === \"string\") {\n            initParams = {\n                content: fields,\n                tool_calls: [],\n                invalid_tool_calls: [],\n                tool_call_chunks: [],\n            };\n        }\n        else if (fields.tool_call_chunks === undefined) {\n            initParams = {\n                ...fields,\n                tool_calls: fields.tool_calls ?? [],\n                invalid_tool_calls: [],\n                tool_call_chunks: [],\n                usage_metadata: fields.usage_metadata !== undefined\n                    ? fields.usage_metadata\n                    : undefined,\n            };\n        }\n        else {\n            const toolCalls = [];\n            const invalidToolCalls = [];\n            for (const toolCallChunk of fields.tool_call_chunks) {\n                let parsedArgs = {};\n                try {\n                    parsedArgs = parsePartialJson(toolCallChunk.args || \"{}\");\n                    if (parsedArgs === null ||\n                        typeof parsedArgs !== \"object\" ||\n                        Array.isArray(parsedArgs)) {\n                        throw new Error(\"Malformed tool call chunk args.\");\n                    }\n                    toolCalls.push({\n                        name: toolCallChunk.name ?? \"\",\n                        args: parsedArgs,\n                        id: toolCallChunk.id,\n                        type: \"tool_call\",\n                    });\n                }\n                catch (e) {\n                    invalidToolCalls.push({\n                        name: toolCallChunk.name,\n                        args: toolCallChunk.args,\n                        id: toolCallChunk.id,\n                        error: \"Malformed args.\",\n                        type: \"invalid_tool_call\",\n                    });\n                }\n            }\n            initParams = {\n                ...fields,\n                tool_calls: toolCalls,\n                invalid_tool_calls: invalidToolCalls,\n                usage_metadata: fields.usage_metadata !== undefined\n                    ? fields.usage_metadata\n                    : undefined,\n            };\n        }\n        // Sadly, TypeScript only allows super() calls at root if the class has\n        // properties with initializers, so we have to check types twice.\n        super(initParams);\n        // Must redeclare tool call fields since there is no multiple inheritance in JS.\n        // These are typed as optional to avoid breaking changes and allow for casting\n        // from BaseMessage.\n        Object.defineProperty(this, \"tool_calls\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"invalid_tool_calls\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"tool_call_chunks\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        /**\n         * If provided, token usage information associated with the message.\n         */\n        Object.defineProperty(this, \"usage_metadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.tool_call_chunks =\n            initParams.tool_call_chunks ?? this.tool_call_chunks;\n        this.tool_calls = initParams.tool_calls ?? this.tool_calls;\n        this.invalid_tool_calls =\n            initParams.invalid_tool_calls ?? this.invalid_tool_calls;\n        this.usage_metadata = initParams.usage_metadata;\n    }\n    get lc_aliases() {\n        // exclude snake case conversion to pascal case\n        return {\n            ...super.lc_aliases,\n            tool_calls: \"tool_calls\",\n            invalid_tool_calls: \"invalid_tool_calls\",\n            tool_call_chunks: \"tool_call_chunks\",\n        };\n    }\n    static lc_name() {\n        return \"AIMessageChunk\";\n    }\n    _getType() {\n        return \"ai\";\n    }\n    get _printableFields() {\n        return {\n            ...super._printableFields,\n            tool_calls: this.tool_calls,\n            tool_call_chunks: this.tool_call_chunks,\n            invalid_tool_calls: this.invalid_tool_calls,\n            usage_metadata: this.usage_metadata,\n        };\n    }\n    concat(chunk) {\n        const combinedFields = {\n            content: mergeContent(this.content, chunk.content),\n            additional_kwargs: _mergeDicts(this.additional_kwargs, chunk.additional_kwargs),\n            response_metadata: _mergeDicts(this.response_metadata, chunk.response_metadata),\n            tool_call_chunks: [],\n            id: this.id ?? chunk.id,\n        };\n        if (this.tool_call_chunks !== undefined ||\n            chunk.tool_call_chunks !== undefined) {\n            const rawToolCalls = _mergeLists(this.tool_call_chunks, chunk.tool_call_chunks);\n            if (rawToolCalls !== undefined && rawToolCalls.length > 0) {\n                combinedFields.tool_call_chunks = rawToolCalls;\n            }\n        }\n        if (this.usage_metadata !== undefined ||\n            chunk.usage_metadata !== undefined) {\n            const inputTokenDetails = {\n                ...((this.usage_metadata?.input_token_details?.audio !== undefined ||\n                    chunk.usage_metadata?.input_token_details?.audio !== undefined) && {\n                    audio: (this.usage_metadata?.input_token_details?.audio ?? 0) +\n                        (chunk.usage_metadata?.input_token_details?.audio ?? 0),\n                }),\n                ...((this.usage_metadata?.input_token_details?.cache_read !==\n                    undefined ||\n                    chunk.usage_metadata?.input_token_details?.cache_read !==\n                        undefined) && {\n                    cache_read: (this.usage_metadata?.input_token_details?.cache_read ?? 0) +\n                        (chunk.usage_metadata?.input_token_details?.cache_read ?? 0),\n                }),\n                ...((this.usage_metadata?.input_token_details?.cache_creation !==\n                    undefined ||\n                    chunk.usage_metadata?.input_token_details?.cache_creation !==\n                        undefined) && {\n                    cache_creation: (this.usage_metadata?.input_token_details?.cache_creation ?? 0) +\n                        (chunk.usage_metadata?.input_token_details?.cache_creation ?? 0),\n                }),\n            };\n            const outputTokenDetails = {\n                ...((this.usage_metadata?.output_token_details?.audio !== undefined ||\n                    chunk.usage_metadata?.output_token_details?.audio !== undefined) && {\n                    audio: (this.usage_metadata?.output_token_details?.audio ?? 0) +\n                        (chunk.usage_metadata?.output_token_details?.audio ?? 0),\n                }),\n                ...((this.usage_metadata?.output_token_details?.reasoning !==\n                    undefined ||\n                    chunk.usage_metadata?.output_token_details?.reasoning !==\n                        undefined) && {\n                    reasoning: (this.usage_metadata?.output_token_details?.reasoning ?? 0) +\n                        (chunk.usage_metadata?.output_token_details?.reasoning ?? 0),\n                }),\n            };\n            const left = this.usage_metadata ?? {\n                input_tokens: 0,\n                output_tokens: 0,\n                total_tokens: 0,\n            };\n            const right = chunk.usage_metadata ?? {\n                input_tokens: 0,\n                output_tokens: 0,\n                total_tokens: 0,\n            };\n            const usage_metadata = {\n                input_tokens: left.input_tokens + right.input_tokens,\n                output_tokens: left.output_tokens + right.output_tokens,\n                total_tokens: left.total_tokens + right.total_tokens,\n                // Do not include `input_token_details` / `output_token_details` keys in combined fields\n                // unless their values are defined.\n                ...(Object.keys(inputTokenDetails).length > 0 && {\n                    input_token_details: inputTokenDetails,\n                }),\n                ...(Object.keys(outputTokenDetails).length > 0 && {\n                    output_token_details: outputTokenDetails,\n                }),\n            };\n            combinedFields.usage_metadata = usage_metadata;\n        }\n        return new AIMessageChunk(combinedFields);\n    }\n}\n","import { BaseMessage, BaseMessageChunk, mergeContent, _mergeDicts, } from \"./base.js\";\n/**\n * Represents a chat message in a conversation.\n */\nexport class ChatMessage extends BaseMessage {\n    static lc_name() {\n        return \"ChatMessage\";\n    }\n    static _chatMessageClass() {\n        return ChatMessage;\n    }\n    constructor(fields, role) {\n        if (typeof fields === \"string\") {\n            // eslint-disable-next-line no-param-reassign, @typescript-eslint/no-non-null-assertion\n            fields = { content: fields, role: role };\n        }\n        super(fields);\n        Object.defineProperty(this, \"role\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.role = fields.role;\n    }\n    _getType() {\n        return \"generic\";\n    }\n    static isInstance(message) {\n        return message._getType() === \"generic\";\n    }\n    get _printableFields() {\n        return {\n            ...super._printableFields,\n            role: this.role,\n        };\n    }\n}\n/**\n * Represents a chunk of a chat message, which can be concatenated with\n * other chat message chunks.\n */\nexport class ChatMessageChunk extends BaseMessageChunk {\n    static lc_name() {\n        return \"ChatMessageChunk\";\n    }\n    constructor(fields, role) {\n        if (typeof fields === \"string\") {\n            // eslint-disable-next-line no-param-reassign, @typescript-eslint/no-non-null-assertion\n            fields = { content: fields, role: role };\n        }\n        super(fields);\n        Object.defineProperty(this, \"role\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.role = fields.role;\n    }\n    _getType() {\n        return \"generic\";\n    }\n    concat(chunk) {\n        return new ChatMessageChunk({\n            content: mergeContent(this.content, chunk.content),\n            additional_kwargs: _mergeDicts(this.additional_kwargs, chunk.additional_kwargs),\n            response_metadata: _mergeDicts(this.response_metadata, chunk.response_metadata),\n            role: this.role,\n            id: this.id ?? chunk.id,\n        });\n    }\n    get _printableFields() {\n        return {\n            ...super._printableFields,\n            role: this.role,\n        };\n    }\n}\nexport function isChatMessage(x) {\n    return x._getType() === \"generic\";\n}\nexport function isChatMessageChunk(x) {\n    return x._getType() === \"generic\";\n}\n","import { BaseMessage, BaseMessageChunk, mergeContent, _mergeDicts, } from \"./base.js\";\n/**\n * Represents a function message in a conversation.\n */\nexport class FunctionMessage extends BaseMessage {\n    static lc_name() {\n        return \"FunctionMessage\";\n    }\n    constructor(fields, \n    /** @deprecated */\n    name) {\n        if (typeof fields === \"string\") {\n            // eslint-disable-next-line no-param-reassign, @typescript-eslint/no-non-null-assertion\n            fields = { content: fields, name: name };\n        }\n        super(fields);\n    }\n    _getType() {\n        return \"function\";\n    }\n}\n/**\n * Represents a chunk of a function message, which can be concatenated\n * with other function message chunks.\n */\nexport class FunctionMessageChunk extends BaseMessageChunk {\n    static lc_name() {\n        return \"FunctionMessageChunk\";\n    }\n    _getType() {\n        return \"function\";\n    }\n    concat(chunk) {\n        return new FunctionMessageChunk({\n            content: mergeContent(this.content, chunk.content),\n            additional_kwargs: _mergeDicts(this.additional_kwargs, chunk.additional_kwargs),\n            response_metadata: _mergeDicts(this.response_metadata, chunk.response_metadata),\n            name: this.name ?? \"\",\n            id: this.id ?? chunk.id,\n        });\n    }\n}\nexport function isFunctionMessage(x) {\n    return x._getType() === \"function\";\n}\nexport function isFunctionMessageChunk(x) {\n    return x._getType() === \"function\";\n}\n","import { BaseMessage, BaseMessageChunk, mergeContent, _mergeDicts, } from \"./base.js\";\n/**\n * Represents a human message in a conversation.\n */\nexport class HumanMessage extends BaseMessage {\n    static lc_name() {\n        return \"HumanMessage\";\n    }\n    _getType() {\n        return \"human\";\n    }\n    constructor(fields, \n    /** @deprecated */\n    kwargs) {\n        super(fields, kwargs);\n    }\n}\n/**\n * Represents a chunk of a human message, which can be concatenated with\n * other human message chunks.\n */\nexport class HumanMessageChunk extends BaseMessageChunk {\n    static lc_name() {\n        return \"HumanMessageChunk\";\n    }\n    _getType() {\n        return \"human\";\n    }\n    constructor(fields, \n    /** @deprecated */\n    kwargs) {\n        super(fields, kwargs);\n    }\n    concat(chunk) {\n        return new HumanMessageChunk({\n            content: mergeContent(this.content, chunk.content),\n            additional_kwargs: _mergeDicts(this.additional_kwargs, chunk.additional_kwargs),\n            response_metadata: _mergeDicts(this.response_metadata, chunk.response_metadata),\n            id: this.id ?? chunk.id,\n        });\n    }\n}\nexport function isHumanMessage(x) {\n    return x.getType() === \"human\";\n}\nexport function isHumanMessageChunk(x) {\n    return x.getType() === \"human\";\n}\n","import { BaseMessage, BaseMessageChunk, mergeContent, _mergeDicts, } from \"./base.js\";\n/**\n * Represents a system message in a conversation.\n */\nexport class SystemMessage extends BaseMessage {\n    static lc_name() {\n        return \"SystemMessage\";\n    }\n    _getType() {\n        return \"system\";\n    }\n    constructor(fields, \n    /** @deprecated */\n    kwargs) {\n        super(fields, kwargs);\n    }\n}\n/**\n * Represents a chunk of a system message, which can be concatenated with\n * other system message chunks.\n */\nexport class SystemMessageChunk extends BaseMessageChunk {\n    static lc_name() {\n        return \"SystemMessageChunk\";\n    }\n    _getType() {\n        return \"system\";\n    }\n    constructor(fields, \n    /** @deprecated */\n    kwargs) {\n        super(fields, kwargs);\n    }\n    concat(chunk) {\n        return new SystemMessageChunk({\n            content: mergeContent(this.content, chunk.content),\n            additional_kwargs: _mergeDicts(this.additional_kwargs, chunk.additional_kwargs),\n            response_metadata: _mergeDicts(this.response_metadata, chunk.response_metadata),\n            id: this.id ?? chunk.id,\n        });\n    }\n}\nexport function isSystemMessage(x) {\n    return x._getType() === \"system\";\n}\nexport function isSystemMessageChunk(x) {\n    return x._getType() === \"system\";\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable no-param-reassign */\nexport function addLangChainErrorFields(error, lc_error_code) {\n    error.lc_error_code = lc_error_code;\n    error.message = `${error.message}\\n\\nTroubleshooting URL: https://js.langchain.com/docs/troubleshooting/errors/${lc_error_code}/\\n`;\n    return error;\n}\n","export function _isToolCall(toolCall) {\n    return !!(toolCall &&\n        typeof toolCall === \"object\" &&\n        \"type\" in toolCall &&\n        toolCall.type === \"tool_call\");\n}\n/**\n * Custom error class used to handle exceptions related to tool input parsing.\n * It extends the built-in `Error` class and adds an optional `output`\n * property that can hold the output that caused the exception.\n */\nexport class ToolInputParsingException extends Error {\n    constructor(message, output) {\n        super(message);\n        Object.defineProperty(this, \"output\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.output = output;\n    }\n}\n","import { addLangChainErrorFields } from \"../errors/index.js\";\nimport { _isToolCall } from \"../tools/utils.js\";\nimport { AIMessage, AIMessageChunk } from \"./ai.js\";\nimport { isBaseMessage, _isMessageFieldWithRole, } from \"./base.js\";\nimport { ChatMessage, ChatMessageChunk, } from \"./chat.js\";\nimport { FunctionMessage, FunctionMessageChunk, } from \"./function.js\";\nimport { HumanMessage, HumanMessageChunk } from \"./human.js\";\nimport { SystemMessage, SystemMessageChunk } from \"./system.js\";\nimport { ToolMessage, } from \"./tool.js\";\nfunction _coerceToolCall(toolCall) {\n    if (_isToolCall(toolCall)) {\n        return toolCall;\n    }\n    else if (typeof toolCall.id === \"string\" &&\n        toolCall.type === \"function\" &&\n        typeof toolCall.function === \"object\" &&\n        toolCall.function !== null &&\n        \"arguments\" in toolCall.function &&\n        typeof toolCall.function.arguments === \"string\" &&\n        \"name\" in toolCall.function &&\n        typeof toolCall.function.name === \"string\") {\n        // Handle OpenAI tool call format\n        return {\n            id: toolCall.id,\n            args: JSON.parse(toolCall.function.arguments),\n            name: toolCall.function.name,\n            type: \"tool_call\",\n        };\n    }\n    else {\n        // TODO: Throw an error?\n        return toolCall;\n    }\n}\nfunction isSerializedConstructor(x) {\n    return (typeof x === \"object\" &&\n        x != null &&\n        x.lc === 1 &&\n        Array.isArray(x.id) &&\n        x.kwargs != null &&\n        typeof x.kwargs === \"object\");\n}\nfunction _constructMessageFromParams(params) {\n    let type;\n    let rest;\n    // Support serialized messages\n    if (isSerializedConstructor(params)) {\n        const className = params.id.at(-1);\n        if (className === \"HumanMessage\" || className === \"HumanMessageChunk\") {\n            type = \"user\";\n        }\n        else if (className === \"AIMessage\" || className === \"AIMessageChunk\") {\n            type = \"assistant\";\n        }\n        else if (className === \"SystemMessage\" ||\n            className === \"SystemMessageChunk\") {\n            type = \"system\";\n        }\n        else if (className === \"FunctionMessage\" ||\n            className === \"FunctionMessageChunk\") {\n            type = \"function\";\n        }\n        else if (className === \"ToolMessage\" ||\n            className === \"ToolMessageChunk\") {\n            type = \"tool\";\n        }\n        else {\n            type = \"unknown\";\n        }\n        rest = params.kwargs;\n    }\n    else {\n        const { type: extractedType, ...otherParams } = params;\n        type = extractedType;\n        rest = otherParams;\n    }\n    if (type === \"human\" || type === \"user\") {\n        return new HumanMessage(rest);\n    }\n    else if (type === \"ai\" || type === \"assistant\") {\n        const { tool_calls: rawToolCalls, ...other } = rest;\n        if (!Array.isArray(rawToolCalls)) {\n            return new AIMessage(rest);\n        }\n        const tool_calls = rawToolCalls.map(_coerceToolCall);\n        return new AIMessage({ ...other, tool_calls });\n    }\n    else if (type === \"system\") {\n        return new SystemMessage(rest);\n    }\n    else if (type === \"developer\") {\n        return new SystemMessage({\n            ...rest,\n            additional_kwargs: {\n                ...rest.additional_kwargs,\n                __openai_role__: \"developer\",\n            },\n        });\n    }\n    else if (type === \"tool\" && \"tool_call_id\" in rest) {\n        return new ToolMessage({\n            ...rest,\n            content: rest.content,\n            tool_call_id: rest.tool_call_id,\n            name: rest.name,\n        });\n    }\n    else {\n        const error = addLangChainErrorFields(new Error(`Unable to coerce message from array: only human, AI, system, developer, or tool message coercion is currently supported.\\n\\nReceived: ${JSON.stringify(params, null, 2)}`), \"MESSAGE_COERCION_FAILURE\");\n        throw error;\n    }\n}\nexport function coerceMessageLikeToMessage(messageLike) {\n    if (typeof messageLike === \"string\") {\n        return new HumanMessage(messageLike);\n    }\n    else if (isBaseMessage(messageLike)) {\n        return messageLike;\n    }\n    if (Array.isArray(messageLike)) {\n        const [type, content] = messageLike;\n        return _constructMessageFromParams({ type, content });\n    }\n    else if (_isMessageFieldWithRole(messageLike)) {\n        const { role: type, ...rest } = messageLike;\n        return _constructMessageFromParams({ ...rest, type });\n    }\n    else {\n        return _constructMessageFromParams(messageLike);\n    }\n}\n/**\n * This function is used by memory classes to get a string representation\n * of the chat message history, based on the message content and role.\n */\nexport function getBufferString(messages, humanPrefix = \"Human\", aiPrefix = \"AI\") {\n    const string_messages = [];\n    for (const m of messages) {\n        let role;\n        if (m._getType() === \"human\") {\n            role = humanPrefix;\n        }\n        else if (m._getType() === \"ai\") {\n            role = aiPrefix;\n        }\n        else if (m._getType() === \"system\") {\n            role = \"System\";\n        }\n        else if (m._getType() === \"function\") {\n            role = \"Function\";\n        }\n        else if (m._getType() === \"tool\") {\n            role = \"Tool\";\n        }\n        else if (m._getType() === \"generic\") {\n            role = m.role;\n        }\n        else {\n            throw new Error(`Got unsupported message type: ${m._getType()}`);\n        }\n        const nameStr = m.name ? `${m.name}, ` : \"\";\n        const readableContent = typeof m.content === \"string\"\n            ? m.content\n            : JSON.stringify(m.content, null, 2);\n        string_messages.push(`${role}: ${nameStr}${readableContent}`);\n    }\n    return string_messages.join(\"\\n\");\n}\n/**\n * Maps messages from an older format (V1) to the current `StoredMessage`\n * format. If the message is already in the `StoredMessage` format, it is\n * returned as is. Otherwise, it transforms the V1 message into a\n * `StoredMessage`. This function is important for maintaining\n * compatibility with older message formats.\n */\nfunction mapV1MessageToStoredMessage(message) {\n    // TODO: Remove this mapper when we deprecate the old message format.\n    if (message.data !== undefined) {\n        return message;\n    }\n    else {\n        const v1Message = message;\n        return {\n            type: v1Message.type,\n            data: {\n                content: v1Message.text,\n                role: v1Message.role,\n                name: undefined,\n                tool_call_id: undefined,\n            },\n        };\n    }\n}\nexport function mapStoredMessageToChatMessage(message) {\n    const storedMessage = mapV1MessageToStoredMessage(message);\n    switch (storedMessage.type) {\n        case \"human\":\n            return new HumanMessage(storedMessage.data);\n        case \"ai\":\n            return new AIMessage(storedMessage.data);\n        case \"system\":\n            return new SystemMessage(storedMessage.data);\n        case \"function\":\n            if (storedMessage.data.name === undefined) {\n                throw new Error(\"Name must be defined for function messages\");\n            }\n            return new FunctionMessage(storedMessage.data);\n        case \"tool\":\n            if (storedMessage.data.tool_call_id === undefined) {\n                throw new Error(\"Tool call ID must be defined for tool messages\");\n            }\n            return new ToolMessage(storedMessage.data);\n        case \"generic\": {\n            if (storedMessage.data.role === undefined) {\n                throw new Error(\"Role must be defined for chat messages\");\n            }\n            return new ChatMessage(storedMessage.data);\n        }\n        default:\n            throw new Error(`Got unexpected type: ${storedMessage.type}`);\n    }\n}\n/**\n * Transforms an array of `StoredMessage` instances into an array of\n * `BaseMessage` instances. It uses the `mapV1MessageToStoredMessage`\n * function to ensure all messages are in the `StoredMessage` format, then\n * creates new instances of the appropriate `BaseMessage` subclass based\n * on the type of each message. This function is used to prepare stored\n * messages for use in a chat context.\n */\nexport function mapStoredMessagesToChatMessages(messages) {\n    return messages.map(mapStoredMessageToChatMessage);\n}\n/**\n * Transforms an array of `BaseMessage` instances into an array of\n * `StoredMessage` instances. It does this by calling the `toDict` method\n * on each `BaseMessage`, which returns a `StoredMessage`. This function\n * is used to prepare chat messages for storage.\n */\nexport function mapChatMessagesToStoredMessages(messages) {\n    return messages.map((message) => message.toDict());\n}\nexport function convertToChunk(message) {\n    const type = message._getType();\n    if (type === \"human\") {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new HumanMessageChunk({ ...message });\n    }\n    else if (type === \"ai\") {\n        let aiChunkFields = {\n            ...message,\n        };\n        if (\"tool_calls\" in aiChunkFields) {\n            aiChunkFields = {\n                ...aiChunkFields,\n                tool_call_chunks: aiChunkFields.tool_calls?.map((tc) => ({\n                    ...tc,\n                    type: \"tool_call_chunk\",\n                    index: undefined,\n                    args: JSON.stringify(tc.args),\n                })),\n            };\n        }\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new AIMessageChunk({ ...aiChunkFields });\n    }\n    else if (type === \"system\") {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new SystemMessageChunk({ ...message });\n    }\n    else if (type === \"function\") {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new FunctionMessageChunk({ ...message });\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    }\n    else if (ChatMessage.isInstance(message)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new ChatMessageChunk({ ...message });\n    }\n    else {\n        throw new Error(\"Unknown message type.\");\n    }\n}\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\n\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n  return getRandomValues(rnds8);\n}","var randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","import validate from './validate.js';\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  //\n  // Note to future-self: No, you can't remove the `toLowerCase()` call.\n  // REF: https://github.com/uuidjs/uuid/pull/677#issuecomment-1757351351\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n  var uuid = unsafeStringify(arr, offset);\n  // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n  return uuid;\n}\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    offset = offset || 0;\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n    return buf;\n  }\n  return unsafeStringify(rnds);\n}\nexport default v4;","import { getLangSmithEnvironmentVariable } from \"../utils/env.js\";\n// Wrap the default fetch call due to issues with illegal invocations\n// in some environments:\n// https://stackoverflow.com/questions/69876859/why-does-bind-fix-failed-to-execute-fetch-on-window-illegal-invocation-err\n// @ts-expect-error Broad typing to support a range of fetch implementations\nconst DEFAULT_FETCH_IMPLEMENTATION = (...args) => fetch(...args);\nconst LANGSMITH_FETCH_IMPLEMENTATION_KEY = Symbol.for(\"ls:fetch_implementation\");\n/**\n * Overrides the fetch implementation used for LangSmith calls.\n * You should use this if you need to use an implementation of fetch\n * other than the default global (e.g. for dealing with proxies).\n * @param fetch The new fetch functino to use.\n */\nexport const overrideFetchImplementation = (fetch) => {\n    globalThis[LANGSMITH_FETCH_IMPLEMENTATION_KEY] = fetch;\n};\n/**\n * @internal\n */\nexport const _getFetchImplementation = (debug) => {\n    return async (...args) => {\n        if (debug || getLangSmithEnvironmentVariable(\"DEBUG\") === \"true\") {\n            const [url, options] = args;\n            console.log(`→ ${options?.method || \"GET\"} ${url}`);\n        }\n        const res = await (globalThis[LANGSMITH_FETCH_IMPLEMENTATION_KEY] ??\n            DEFAULT_FETCH_IMPLEMENTATION)(...args);\n        if (debug || getLangSmithEnvironmentVariable(\"DEBUG\") === \"true\") {\n            console.log(`← ${res.status} ${res.statusText} ${res.url}`);\n        }\n        return res;\n    };\n};\n","import pRetry from \"p-retry\";\nimport PQueueMod from \"p-queue\";\nimport { _getFetchImplementation } from \"../singletons/fetch.js\";\nconst STATUS_NO_RETRY = [\n    400, // Bad Request\n    401, // Unauthorized\n    403, // Forbidden\n    404, // Not Found\n    405, // Method Not Allowed\n    406, // Not Acceptable\n    407, // Proxy Authentication Required\n    408, // Request Timeout\n];\nconst STATUS_IGNORE = [\n    409, // Conflict\n];\n/**\n * A class that can be used to make async calls with concurrency and retry logic.\n *\n * This is useful for making calls to any kind of \"expensive\" external resource,\n * be it because it's rate-limited, subject to network issues, etc.\n *\n * Concurrent calls are limited by the `maxConcurrency` parameter, which defaults\n * to `Infinity`. This means that by default, all calls will be made in parallel.\n *\n * Retries are limited by the `maxRetries` parameter, which defaults to 6. This\n * means that by default, each call will be retried up to 6 times, with an\n * exponential backoff between each attempt.\n */\nexport class AsyncCaller {\n    constructor(params) {\n        Object.defineProperty(this, \"maxConcurrency\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"maxRetries\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"queue\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"onFailedResponseHook\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"debug\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.maxConcurrency = params.maxConcurrency ?? Infinity;\n        this.maxRetries = params.maxRetries ?? 6;\n        this.debug = params.debug;\n        if (\"default\" in PQueueMod) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.queue = new PQueueMod.default({\n                concurrency: this.maxConcurrency,\n            });\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.queue = new PQueueMod({ concurrency: this.maxConcurrency });\n        }\n        this.onFailedResponseHook = params?.onFailedResponseHook;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    call(callable, ...args) {\n        const onFailedResponseHook = this.onFailedResponseHook;\n        return this.queue.add(() => pRetry(() => callable(...args).catch((error) => {\n            // eslint-disable-next-line no-instanceof/no-instanceof\n            if (error instanceof Error) {\n                throw error;\n            }\n            else {\n                throw new Error(error);\n            }\n        }), {\n            async onFailedAttempt(error) {\n                if (error.message.startsWith(\"Cancel\") ||\n                    error.message.startsWith(\"TimeoutError\") ||\n                    error.message.startsWith(\"AbortError\")) {\n                    throw error;\n                }\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                if (error?.code === \"ECONNABORTED\") {\n                    throw error;\n                }\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                const response = error?.response;\n                const status = response?.status;\n                if (status) {\n                    if (STATUS_NO_RETRY.includes(+status)) {\n                        throw error;\n                    }\n                    else if (STATUS_IGNORE.includes(+status)) {\n                        return;\n                    }\n                    if (onFailedResponseHook) {\n                        await onFailedResponseHook(response);\n                    }\n                }\n            },\n            // If needed we can change some of the defaults here,\n            // but they're quite sensible.\n            retries: this.maxRetries,\n            randomize: true,\n        }), { throwOnTimeout: true });\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    callWithOptions(options, callable, ...args) {\n        // Note this doesn't cancel the underlying request,\n        // when available prefer to use the signal option of the underlying call\n        if (options.signal) {\n            return Promise.race([\n                this.call(callable, ...args),\n                new Promise((_, reject) => {\n                    options.signal?.addEventListener(\"abort\", () => {\n                        reject(new Error(\"AbortError\"));\n                    });\n                }),\n            ]);\n        }\n        return this.call(callable, ...args);\n    }\n    fetch(...args) {\n        return this.call(() => _getFetchImplementation(this.debug)(...args).then((res) => res.ok ? res : Promise.reject(res)));\n    }\n}\n","export function isLangChainMessage(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nmessage) {\n    return typeof message?._getType === \"function\";\n}\nexport function convertLangChainMessageToExample(message) {\n    const converted = {\n        type: message._getType(),\n        data: { content: message.content },\n    };\n    // Check for presence of keys in additional_kwargs\n    if (message?.additional_kwargs &&\n        Object.keys(message.additional_kwargs).length > 0) {\n        converted.data.additional_kwargs = { ...message.additional_kwargs };\n    }\n    return converted;\n}\n","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-8][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$/i;","import REGEX from './regex.js';\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\nexport default validate;","import * as uuid from \"uuid\";\nexport function assertUuid(str, which) {\n    if (!uuid.validate(str)) {\n        const msg = which !== undefined\n            ? `Invalid UUID for ${which}: ${str}`\n            : `Invalid UUID: ${str}`;\n        throw new Error(msg);\n    }\n    return str;\n}\n","const warnedMessages = {};\nexport function warnOnce(message) {\n    if (!warnedMessages[message]) {\n        console.warn(message);\n        warnedMessages[message] = true;\n    }\n}\n","import { parse as parseVersion } from \"semver\";\nexport function isVersionGreaterOrEqual(current_version, target_version) {\n    const current = parseVersion(current_version);\n    const target = parseVersion(target_version);\n    if (!current || !target) {\n        throw new Error(\"Invalid version format.\");\n    }\n    return current.compare(target) >= 0;\n}\nexport function parsePromptIdentifier(identifier) {\n    if (!identifier ||\n        identifier.split(\"/\").length > 2 ||\n        identifier.startsWith(\"/\") ||\n        identifier.endsWith(\"/\") ||\n        identifier.split(\":\").length > 2) {\n        throw new Error(`Invalid identifier format: ${identifier}`);\n    }\n    const [ownerNamePart, commitPart] = identifier.split(\":\");\n    const commit = commitPart || \"latest\";\n    if (ownerNamePart.includes(\"/\")) {\n        const [owner, name] = ownerNamePart.split(\"/\", 2);\n        if (!owner || !name) {\n            throw new Error(`Invalid identifier format: ${identifier}`);\n        }\n        return [owner, name, commit];\n    }\n    else {\n        if (!ownerNamePart) {\n            throw new Error(`Invalid identifier format: ${identifier}`);\n        }\n        return [\"-\", ownerNamePart, commit];\n    }\n}\n","function getErrorStackTrace(e) {\n    if (typeof e !== \"object\" || e == null)\n        return undefined;\n    if (!(\"stack\" in e) || typeof e.stack !== \"string\")\n        return undefined;\n    let stack = e.stack;\n    const prevLine = `${e}`;\n    if (stack.startsWith(prevLine)) {\n        stack = stack.slice(prevLine.length);\n    }\n    if (stack.startsWith(\"\\n\")) {\n        stack = stack.slice(1);\n    }\n    return stack;\n}\nexport function printErrorStackTrace(e) {\n    const stack = getErrorStackTrace(e);\n    if (stack == null)\n        return;\n    console.error(stack);\n}\n/**\n * LangSmithConflictError\n *\n * Represents an error that occurs when there's a conflict during an operation,\n * typically corresponding to HTTP 409 status code responses.\n *\n * This error is thrown when an attempt to create or modify a resource conflicts\n * with the current state of the resource on the server. Common scenarios include:\n * - Attempting to create a resource that already exists\n * - Trying to update a resource that has been modified by another process\n * - Violating a uniqueness constraint in the data\n *\n * @extends Error\n *\n * @example\n * try {\n *   await createProject(\"existingProject\");\n * } catch (error) {\n *   if (error instanceof ConflictError) {\n *     console.log(\"A conflict occurred:\", error.message);\n *     // Handle the conflict, e.g., by suggesting a different project name\n *   } else {\n *     // Handle other types of errors\n *   }\n * }\n *\n * @property {string} name - Always set to 'ConflictError' for easy identification\n * @property {string} message - Detailed error message including server response\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/409\n */\nexport class LangSmithConflictError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = \"LangSmithConflictError\";\n    }\n}\n/**\n * Throws an appropriate error based on the response status and body.\n *\n * @param response - The fetch Response object\n * @param context - Additional context to include in the error message (e.g., operation being performed)\n * @throws {LangSmithConflictError} When the response status is 409\n * @throws {Error} For all other non-ok responses\n */\nexport async function raiseForStatus(response, context, consume) {\n    // consume the response body to release the connection\n    // https://undici.nodejs.org/#/?id=garbage-collection\n    let errorBody;\n    if (response.ok) {\n        if (consume) {\n            errorBody = await response.text();\n        }\n        return;\n    }\n    errorBody = await response.text();\n    const fullMessage = `Failed to ${context}. Received status [${response.status}]: ${response.statusText}. Server response: ${errorBody}`;\n    if (response.status === 409) {\n        throw new LangSmithConflictError(fullMessage);\n    }\n    throw new Error(fullMessage);\n}\n","/* eslint-disable */\n// @ts-nocheck\nvar LIMIT_REPLACE_NODE = \"[...]\";\nvar CIRCULAR_REPLACE_NODE = { result: \"[Circular]\" };\nvar arr = [];\nvar replacerStack = [];\nconst encoder = new TextEncoder();\nfunction defaultOptions() {\n    return {\n        depthLimit: Number.MAX_SAFE_INTEGER,\n        edgesLimit: Number.MAX_SAFE_INTEGER,\n    };\n}\nfunction encodeString(str) {\n    return encoder.encode(str);\n}\n// Regular stringify\nexport function serialize(obj, replacer, spacer, options) {\n    try {\n        const str = JSON.stringify(obj, replacer, spacer);\n        return encodeString(str);\n    }\n    catch (e) {\n        // Fall back to more complex stringify if circular reference\n        if (!e.message?.includes(\"Converting circular structure to JSON\")) {\n            console.warn(\"[WARNING]: LangSmith received unserializable value.\");\n            return encodeString(\"[Unserializable]\");\n        }\n        console.warn(\"[WARNING]: LangSmith received circular JSON. This will decrease tracer performance.\");\n        if (typeof options === \"undefined\") {\n            options = defaultOptions();\n        }\n        decirc(obj, \"\", 0, [], undefined, 0, options);\n        let res;\n        try {\n            if (replacerStack.length === 0) {\n                res = JSON.stringify(obj, replacer, spacer);\n            }\n            else {\n                res = JSON.stringify(obj, replaceGetterValues(replacer), spacer);\n            }\n        }\n        catch (_) {\n            return encodeString(\"[unable to serialize, circular reference is too complex to analyze]\");\n        }\n        finally {\n            while (arr.length !== 0) {\n                const part = arr.pop();\n                if (part.length === 4) {\n                    Object.defineProperty(part[0], part[1], part[3]);\n                }\n                else {\n                    part[0][part[1]] = part[2];\n                }\n            }\n        }\n        return encodeString(res);\n    }\n}\nfunction setReplace(replace, val, k, parent) {\n    var propertyDescriptor = Object.getOwnPropertyDescriptor(parent, k);\n    if (propertyDescriptor.get !== undefined) {\n        if (propertyDescriptor.configurable) {\n            Object.defineProperty(parent, k, { value: replace });\n            arr.push([parent, k, val, propertyDescriptor]);\n        }\n        else {\n            replacerStack.push([val, k, replace]);\n        }\n    }\n    else {\n        parent[k] = replace;\n        arr.push([parent, k, val]);\n    }\n}\nfunction decirc(val, k, edgeIndex, stack, parent, depth, options) {\n    depth += 1;\n    var i;\n    if (typeof val === \"object\" && val !== null) {\n        for (i = 0; i < stack.length; i++) {\n            if (stack[i] === val) {\n                setReplace(CIRCULAR_REPLACE_NODE, val, k, parent);\n                return;\n            }\n        }\n        if (typeof options.depthLimit !== \"undefined\" &&\n            depth > options.depthLimit) {\n            setReplace(LIMIT_REPLACE_NODE, val, k, parent);\n            return;\n        }\n        if (typeof options.edgesLimit !== \"undefined\" &&\n            edgeIndex + 1 > options.edgesLimit) {\n            setReplace(LIMIT_REPLACE_NODE, val, k, parent);\n            return;\n        }\n        stack.push(val);\n        // Optimize for Arrays. Big arrays could kill the performance otherwise!\n        if (Array.isArray(val)) {\n            for (i = 0; i < val.length; i++) {\n                decirc(val[i], i, i, stack, val, depth, options);\n            }\n        }\n        else {\n            var keys = Object.keys(val);\n            for (i = 0; i < keys.length; i++) {\n                var key = keys[i];\n                decirc(val[key], key, i, stack, val, depth, options);\n            }\n        }\n        stack.pop();\n    }\n}\n// Stable-stringify\nfunction compareFunction(a, b) {\n    if (a < b) {\n        return -1;\n    }\n    if (a > b) {\n        return 1;\n    }\n    return 0;\n}\nfunction deterministicStringify(obj, replacer, spacer, options) {\n    if (typeof options === \"undefined\") {\n        options = defaultOptions();\n    }\n    var tmp = deterministicDecirc(obj, \"\", 0, [], undefined, 0, options) || obj;\n    var res;\n    try {\n        if (replacerStack.length === 0) {\n            res = JSON.stringify(tmp, replacer, spacer);\n        }\n        else {\n            res = JSON.stringify(tmp, replaceGetterValues(replacer), spacer);\n        }\n    }\n    catch (_) {\n        return JSON.stringify(\"[unable to serialize, circular reference is too complex to analyze]\");\n    }\n    finally {\n        // Ensure that we restore the object as it was.\n        while (arr.length !== 0) {\n            var part = arr.pop();\n            if (part.length === 4) {\n                Object.defineProperty(part[0], part[1], part[3]);\n            }\n            else {\n                part[0][part[1]] = part[2];\n            }\n        }\n    }\n    return res;\n}\nfunction deterministicDecirc(val, k, edgeIndex, stack, parent, depth, options) {\n    depth += 1;\n    var i;\n    if (typeof val === \"object\" && val !== null) {\n        for (i = 0; i < stack.length; i++) {\n            if (stack[i] === val) {\n                setReplace(CIRCULAR_REPLACE_NODE, val, k, parent);\n                return;\n            }\n        }\n        try {\n            if (typeof val.toJSON === \"function\") {\n                return;\n            }\n        }\n        catch (_) {\n            return;\n        }\n        if (typeof options.depthLimit !== \"undefined\" &&\n            depth > options.depthLimit) {\n            setReplace(LIMIT_REPLACE_NODE, val, k, parent);\n            return;\n        }\n        if (typeof options.edgesLimit !== \"undefined\" &&\n            edgeIndex + 1 > options.edgesLimit) {\n            setReplace(LIMIT_REPLACE_NODE, val, k, parent);\n            return;\n        }\n        stack.push(val);\n        // Optimize for Arrays. Big arrays could kill the performance otherwise!\n        if (Array.isArray(val)) {\n            for (i = 0; i < val.length; i++) {\n                deterministicDecirc(val[i], i, i, stack, val, depth, options);\n            }\n        }\n        else {\n            // Create a temporary object in the required way\n            var tmp = {};\n            var keys = Object.keys(val).sort(compareFunction);\n            for (i = 0; i < keys.length; i++) {\n                var key = keys[i];\n                deterministicDecirc(val[key], key, i, stack, val, depth, options);\n                tmp[key] = val[key];\n            }\n            if (typeof parent !== \"undefined\") {\n                arr.push([parent, k, val]);\n                parent[k] = tmp;\n            }\n            else {\n                return tmp;\n            }\n        }\n        stack.pop();\n    }\n}\n// wraps replacer function to handle values we couldn't replace\n// and mark them as replaced value\nfunction replaceGetterValues(replacer) {\n    replacer =\n        typeof replacer !== \"undefined\"\n            ? replacer\n            : function (k, v) {\n                return v;\n            };\n    return function (key, val) {\n        if (replacerStack.length > 0) {\n            for (var i = 0; i < replacerStack.length; i++) {\n                var part = replacerStack[i];\n                if (part[1] === key && part[0] === val) {\n                    val = part[2];\n                    replacerStack.splice(i, 1);\n                    break;\n                }\n            }\n        }\n        return replacer.call(this, key, val);\n    };\n}\n","import * as uuid from \"uuid\";\nimport { AsyncCaller } from \"./utils/async_caller.js\";\nimport { convertLangChainMessageToExample, isLangChainMessage, } from \"./utils/messages.js\";\nimport { getEnvironmentVariable, getLangChainEnvVarsMetadata, getLangSmithEnvironmentVariable, getRuntimeEnvironment, } from \"./utils/env.js\";\nimport { __version__ } from \"./index.js\";\nimport { assertUuid } from \"./utils/_uuid.js\";\nimport { warnOnce } from \"./utils/warn.js\";\nimport { parsePromptIdentifier } from \"./utils/prompts.js\";\nimport { raiseForStatus } from \"./utils/error.js\";\nimport { _getFetchImplementation } from \"./singletons/fetch.js\";\nimport { serialize as serializePayloadForTracing } from \"./utils/fast-safe-stringify/index.js\";\nexport function mergeRuntimeEnvIntoRunCreate(run) {\n    const runtimeEnv = getRuntimeEnvironment();\n    const envVars = getLangChainEnvVarsMetadata();\n    const extra = run.extra ?? {};\n    const metadata = extra.metadata;\n    run.extra = {\n        ...extra,\n        runtime: {\n            ...runtimeEnv,\n            ...extra?.runtime,\n        },\n        metadata: {\n            ...envVars,\n            ...(envVars.revision_id || run.revision_id\n                ? { revision_id: run.revision_id ?? envVars.revision_id }\n                : {}),\n            ...metadata,\n        },\n    };\n    return run;\n}\nconst getTracingSamplingRate = (configRate) => {\n    const samplingRateStr = configRate?.toString() ??\n        getLangSmithEnvironmentVariable(\"TRACING_SAMPLING_RATE\");\n    if (samplingRateStr === undefined) {\n        return undefined;\n    }\n    const samplingRate = parseFloat(samplingRateStr);\n    if (samplingRate < 0 || samplingRate > 1) {\n        throw new Error(`LANGSMITH_TRACING_SAMPLING_RATE must be between 0 and 1 if set. Got: ${samplingRate}`);\n    }\n    return samplingRate;\n};\n// utility functions\nconst isLocalhost = (url) => {\n    const strippedUrl = url.replace(\"http://\", \"\").replace(\"https://\", \"\");\n    const hostname = strippedUrl.split(\"/\")[0].split(\":\")[0];\n    return (hostname === \"localhost\" || hostname === \"127.0.0.1\" || hostname === \"::1\");\n};\nasync function toArray(iterable) {\n    const result = [];\n    for await (const item of iterable) {\n        result.push(item);\n    }\n    return result;\n}\nfunction trimQuotes(str) {\n    if (str === undefined) {\n        return undefined;\n    }\n    return str\n        .trim()\n        .replace(/^\"(.*)\"$/, \"$1\")\n        .replace(/^'(.*)'$/, \"$1\");\n}\nconst handle429 = async (response) => {\n    if (response?.status === 429) {\n        const retryAfter = parseInt(response.headers.get(\"retry-after\") ?? \"30\", 10) * 1000;\n        if (retryAfter > 0) {\n            await new Promise((resolve) => setTimeout(resolve, retryAfter));\n            // Return directly after calling this check\n            return true;\n        }\n    }\n    // Fall back to existing status checks\n    return false;\n};\nfunction _formatFeedbackScore(score) {\n    if (typeof score === \"number\") {\n        // Truncate at 4 decimal places\n        return Number(score.toFixed(4));\n    }\n    return score;\n}\nexport class AutoBatchQueue {\n    constructor() {\n        Object.defineProperty(this, \"items\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"sizeBytes\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n    }\n    peek() {\n        return this.items[0];\n    }\n    push(item) {\n        let itemPromiseResolve;\n        const itemPromise = new Promise((resolve) => {\n            // Setting itemPromiseResolve is synchronous with promise creation:\n            // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/Promise\n            itemPromiseResolve = resolve;\n        });\n        const size = serializePayloadForTracing(item.item).length;\n        this.items.push({\n            action: item.action,\n            payload: item.item,\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            itemPromiseResolve: itemPromiseResolve,\n            itemPromise,\n            size,\n        });\n        this.sizeBytes += size;\n        return itemPromise;\n    }\n    pop(upToSizeBytes) {\n        if (upToSizeBytes < 1) {\n            throw new Error(\"Number of bytes to pop off may not be less than 1.\");\n        }\n        const popped = [];\n        let poppedSizeBytes = 0;\n        // Pop items until we reach or exceed the size limit\n        while (poppedSizeBytes + (this.peek()?.size ?? 0) < upToSizeBytes &&\n            this.items.length > 0) {\n            const item = this.items.shift();\n            if (item) {\n                popped.push(item);\n                poppedSizeBytes += item.size;\n                this.sizeBytes -= item.size;\n            }\n        }\n        // If there is an item on the queue we were unable to pop,\n        // just return it as a single batch.\n        if (popped.length === 0 && this.items.length > 0) {\n            const item = this.items.shift();\n            popped.push(item);\n            poppedSizeBytes += item.size;\n            this.sizeBytes -= item.size;\n        }\n        return [\n            popped.map((it) => ({ action: it.action, item: it.payload })),\n            () => popped.forEach((it) => it.itemPromiseResolve()),\n        ];\n    }\n}\n// 20 MB\nexport const DEFAULT_BATCH_SIZE_LIMIT_BYTES = 20_971_520;\nconst SERVER_INFO_REQUEST_TIMEOUT = 2500;\nexport class Client {\n    constructor(config = {}) {\n        Object.defineProperty(this, \"apiKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"apiUrl\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"webUrl\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"caller\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"batchIngestCaller\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"timeout_ms\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_tenantId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: null\n        });\n        Object.defineProperty(this, \"hideInputs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"hideOutputs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"tracingSampleRate\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"filteredPostUuids\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new Set()\n        });\n        Object.defineProperty(this, \"autoBatchTracing\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"autoBatchQueue\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new AutoBatchQueue()\n        });\n        Object.defineProperty(this, \"autoBatchTimeout\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"autoBatchAggregationDelayMs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 250\n        });\n        Object.defineProperty(this, \"batchSizeBytesLimit\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"fetchOptions\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"settings\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"blockOnRootRunFinalization\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: getEnvironmentVariable(\"LANGSMITH_TRACING_BACKGROUND\") === \"false\"\n        });\n        Object.defineProperty(this, \"traceBatchConcurrency\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 5\n        });\n        Object.defineProperty(this, \"_serverInfo\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Object.defineProperty(this, \"_getServerInfoPromise\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"manualFlushMode\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"debug\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: getEnvironmentVariable(\"LANGSMITH_DEBUG\") === \"true\"\n        });\n        const defaultConfig = Client.getDefaultClientConfig();\n        this.tracingSampleRate = getTracingSamplingRate(config.tracingSamplingRate);\n        this.apiUrl = trimQuotes(config.apiUrl ?? defaultConfig.apiUrl) ?? \"\";\n        if (this.apiUrl.endsWith(\"/\")) {\n            this.apiUrl = this.apiUrl.slice(0, -1);\n        }\n        this.apiKey = trimQuotes(config.apiKey ?? defaultConfig.apiKey);\n        this.webUrl = trimQuotes(config.webUrl ?? defaultConfig.webUrl);\n        if (this.webUrl?.endsWith(\"/\")) {\n            this.webUrl = this.webUrl.slice(0, -1);\n        }\n        this.timeout_ms = config.timeout_ms ?? 90_000;\n        this.caller = new AsyncCaller({\n            ...(config.callerOptions ?? {}),\n            debug: config.debug ?? this.debug,\n        });\n        this.traceBatchConcurrency =\n            config.traceBatchConcurrency ?? this.traceBatchConcurrency;\n        if (this.traceBatchConcurrency < 1) {\n            throw new Error(\"Trace batch concurrency must be positive.\");\n        }\n        this.debug = config.debug ?? this.debug;\n        this.batchIngestCaller = new AsyncCaller({\n            maxRetries: 2,\n            maxConcurrency: this.traceBatchConcurrency,\n            ...(config.callerOptions ?? {}),\n            onFailedResponseHook: handle429,\n            debug: config.debug ?? this.debug,\n        });\n        this.hideInputs =\n            config.hideInputs ?? config.anonymizer ?? defaultConfig.hideInputs;\n        this.hideOutputs =\n            config.hideOutputs ?? config.anonymizer ?? defaultConfig.hideOutputs;\n        this.autoBatchTracing = config.autoBatchTracing ?? this.autoBatchTracing;\n        this.blockOnRootRunFinalization =\n            config.blockOnRootRunFinalization ?? this.blockOnRootRunFinalization;\n        this.batchSizeBytesLimit = config.batchSizeBytesLimit;\n        this.fetchOptions = config.fetchOptions || {};\n        this.manualFlushMode = config.manualFlushMode ?? this.manualFlushMode;\n    }\n    static getDefaultClientConfig() {\n        const apiKey = getLangSmithEnvironmentVariable(\"API_KEY\");\n        const apiUrl = getLangSmithEnvironmentVariable(\"ENDPOINT\") ??\n            \"https://api.smith.langchain.com\";\n        const hideInputs = getLangSmithEnvironmentVariable(\"HIDE_INPUTS\") === \"true\";\n        const hideOutputs = getLangSmithEnvironmentVariable(\"HIDE_OUTPUTS\") === \"true\";\n        return {\n            apiUrl: apiUrl,\n            apiKey: apiKey,\n            webUrl: undefined,\n            hideInputs: hideInputs,\n            hideOutputs: hideOutputs,\n        };\n    }\n    getHostUrl() {\n        if (this.webUrl) {\n            return this.webUrl;\n        }\n        else if (isLocalhost(this.apiUrl)) {\n            this.webUrl = \"http://localhost:3000\";\n            return this.webUrl;\n        }\n        else if (this.apiUrl.endsWith(\"/api/v1\")) {\n            this.webUrl = this.apiUrl.replace(\"/api/v1\", \"\");\n            return this.webUrl;\n        }\n        else if (this.apiUrl.includes(\"/api\") &&\n            !this.apiUrl.split(\".\", 1)[0].endsWith(\"api\")) {\n            this.webUrl = this.apiUrl.replace(\"/api\", \"\");\n            return this.webUrl;\n        }\n        else if (this.apiUrl.split(\".\", 1)[0].includes(\"dev\")) {\n            this.webUrl = \"https://dev.smith.langchain.com\";\n            return this.webUrl;\n        }\n        else if (this.apiUrl.split(\".\", 1)[0].includes(\"eu\")) {\n            this.webUrl = \"https://eu.smith.langchain.com\";\n            return this.webUrl;\n        }\n        else if (this.apiUrl.split(\".\", 1)[0].includes(\"beta\")) {\n            this.webUrl = \"https://beta.smith.langchain.com\";\n            return this.webUrl;\n        }\n        else {\n            this.webUrl = \"https://smith.langchain.com\";\n            return this.webUrl;\n        }\n    }\n    get headers() {\n        const headers = {\n            \"User-Agent\": `langsmith-js/${__version__}`,\n        };\n        if (this.apiKey) {\n            headers[\"x-api-key\"] = `${this.apiKey}`;\n        }\n        return headers;\n    }\n    async processInputs(inputs) {\n        if (this.hideInputs === false) {\n            return inputs;\n        }\n        if (this.hideInputs === true) {\n            return {};\n        }\n        if (typeof this.hideInputs === \"function\") {\n            return this.hideInputs(inputs);\n        }\n        return inputs;\n    }\n    async processOutputs(outputs) {\n        if (this.hideOutputs === false) {\n            return outputs;\n        }\n        if (this.hideOutputs === true) {\n            return {};\n        }\n        if (typeof this.hideOutputs === \"function\") {\n            return this.hideOutputs(outputs);\n        }\n        return outputs;\n    }\n    async prepareRunCreateOrUpdateInputs(run) {\n        const runParams = { ...run };\n        if (runParams.inputs !== undefined) {\n            runParams.inputs = await this.processInputs(runParams.inputs);\n        }\n        if (runParams.outputs !== undefined) {\n            runParams.outputs = await this.processOutputs(runParams.outputs);\n        }\n        return runParams;\n    }\n    async _getResponse(path, queryParams) {\n        const paramsString = queryParams?.toString() ?? \"\";\n        const url = `${this.apiUrl}${path}?${paramsString}`;\n        const response = await this.caller.call(_getFetchImplementation(this.debug), url, {\n            method: \"GET\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, `Failed to fetch ${path}`);\n        return response;\n    }\n    async _get(path, queryParams) {\n        const response = await this._getResponse(path, queryParams);\n        return response.json();\n    }\n    async *_getPaginated(path, queryParams = new URLSearchParams(), transform) {\n        let offset = Number(queryParams.get(\"offset\")) || 0;\n        const limit = Number(queryParams.get(\"limit\")) || 100;\n        while (true) {\n            queryParams.set(\"offset\", String(offset));\n            queryParams.set(\"limit\", String(limit));\n            const url = `${this.apiUrl}${path}?${queryParams}`;\n            const response = await this.caller.call(_getFetchImplementation(this.debug), url, {\n                method: \"GET\",\n                headers: this.headers,\n                signal: AbortSignal.timeout(this.timeout_ms),\n                ...this.fetchOptions,\n            });\n            await raiseForStatus(response, `Failed to fetch ${path}`);\n            const items = transform\n                ? transform(await response.json())\n                : await response.json();\n            if (items.length === 0) {\n                break;\n            }\n            yield items;\n            if (items.length < limit) {\n                break;\n            }\n            offset += items.length;\n        }\n    }\n    async *_getCursorPaginatedList(path, body = null, requestMethod = \"POST\", dataKey = \"runs\") {\n        const bodyParams = body ? { ...body } : {};\n        while (true) {\n            const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}${path}`, {\n                method: requestMethod,\n                headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n                signal: AbortSignal.timeout(this.timeout_ms),\n                ...this.fetchOptions,\n                body: JSON.stringify(bodyParams),\n            });\n            const responseBody = await response.json();\n            if (!responseBody) {\n                break;\n            }\n            if (!responseBody[dataKey]) {\n                break;\n            }\n            yield responseBody[dataKey];\n            const cursors = responseBody.cursors;\n            if (!cursors) {\n                break;\n            }\n            if (!cursors.next) {\n                break;\n            }\n            bodyParams.cursor = cursors.next;\n        }\n    }\n    // Allows mocking for tests\n    _shouldSample() {\n        if (this.tracingSampleRate === undefined) {\n            return true;\n        }\n        return Math.random() < this.tracingSampleRate;\n    }\n    _filterForSampling(runs, patch = false) {\n        if (this.tracingSampleRate === undefined) {\n            return runs;\n        }\n        if (patch) {\n            const sampled = [];\n            for (const run of runs) {\n                if (!this.filteredPostUuids.has(run.id)) {\n                    sampled.push(run);\n                }\n                else {\n                    this.filteredPostUuids.delete(run.id);\n                }\n            }\n            return sampled;\n        }\n        else {\n            // For new runs, sample at trace level to maintain consistency\n            const sampled = [];\n            for (const run of runs) {\n                const traceId = run.trace_id ?? run.id;\n                // If we've already made a decision about this trace, follow it\n                if (this.filteredPostUuids.has(traceId)) {\n                    continue;\n                }\n                // For new traces, apply sampling\n                if (run.id === traceId) {\n                    if (this._shouldSample()) {\n                        sampled.push(run);\n                    }\n                    else {\n                        this.filteredPostUuids.add(traceId);\n                    }\n                }\n                else {\n                    // Child runs follow their trace's sampling decision\n                    sampled.push(run);\n                }\n            }\n            return sampled;\n        }\n    }\n    async _getBatchSizeLimitBytes() {\n        const serverInfo = await this._ensureServerInfo();\n        return (this.batchSizeBytesLimit ??\n            serverInfo.batch_ingest_config?.size_limit_bytes ??\n            DEFAULT_BATCH_SIZE_LIMIT_BYTES);\n    }\n    async _getMultiPartSupport() {\n        const serverInfo = await this._ensureServerInfo();\n        return (serverInfo.instance_flags?.dataset_examples_multipart_enabled ?? false);\n    }\n    drainAutoBatchQueue(batchSizeLimit) {\n        const promises = [];\n        while (this.autoBatchQueue.items.length > 0) {\n            const [batch, done] = this.autoBatchQueue.pop(batchSizeLimit);\n            if (!batch.length) {\n                done();\n                break;\n            }\n            const batchPromise = this._processBatch(batch, done).catch(console.error);\n            promises.push(batchPromise);\n        }\n        return Promise.all(promises);\n    }\n    async _processBatch(batch, done) {\n        if (!batch.length) {\n            done();\n            return;\n        }\n        try {\n            const ingestParams = {\n                runCreates: batch\n                    .filter((item) => item.action === \"create\")\n                    .map((item) => item.item),\n                runUpdates: batch\n                    .filter((item) => item.action === \"update\")\n                    .map((item) => item.item),\n            };\n            const serverInfo = await this._ensureServerInfo();\n            if (serverInfo?.batch_ingest_config?.use_multipart_endpoint) {\n                await this.multipartIngestRuns(ingestParams);\n            }\n            else {\n                await this.batchIngestRuns(ingestParams);\n            }\n        }\n        finally {\n            done();\n        }\n    }\n    async processRunOperation(item) {\n        clearTimeout(this.autoBatchTimeout);\n        this.autoBatchTimeout = undefined;\n        if (item.action === \"create\") {\n            item.item = mergeRuntimeEnvIntoRunCreate(item.item);\n        }\n        const itemPromise = this.autoBatchQueue.push(item);\n        if (this.manualFlushMode) {\n            // Rely on manual flushing in serverless environments\n            return itemPromise;\n        }\n        const sizeLimitBytes = await this._getBatchSizeLimitBytes();\n        if (this.autoBatchQueue.sizeBytes > sizeLimitBytes) {\n            void this.drainAutoBatchQueue(sizeLimitBytes);\n        }\n        if (this.autoBatchQueue.items.length > 0) {\n            this.autoBatchTimeout = setTimeout(() => {\n                this.autoBatchTimeout = undefined;\n                void this.drainAutoBatchQueue(sizeLimitBytes);\n            }, this.autoBatchAggregationDelayMs);\n        }\n        return itemPromise;\n    }\n    async _getServerInfo() {\n        const response = await _getFetchImplementation(this.debug)(`${this.apiUrl}/info`, {\n            method: \"GET\",\n            headers: { Accept: \"application/json\" },\n            signal: AbortSignal.timeout(SERVER_INFO_REQUEST_TIMEOUT),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"get server info\");\n        const json = await response.json();\n        if (this.debug) {\n            console.log(\"\\n=== LangSmith Server Configuration ===\\n\" +\n                JSON.stringify(json, null, 2) +\n                \"\\n\");\n        }\n        return json;\n    }\n    async _ensureServerInfo() {\n        if (this._getServerInfoPromise === undefined) {\n            this._getServerInfoPromise = (async () => {\n                if (this._serverInfo === undefined) {\n                    try {\n                        this._serverInfo = await this._getServerInfo();\n                    }\n                    catch (e) {\n                        console.warn(`[WARNING]: LangSmith failed to fetch info on supported operations. Falling back to batch operations and default limits.`);\n                    }\n                }\n                return this._serverInfo ?? {};\n            })();\n        }\n        return this._getServerInfoPromise.then((serverInfo) => {\n            if (this._serverInfo === undefined) {\n                this._getServerInfoPromise = undefined;\n            }\n            return serverInfo;\n        });\n    }\n    async _getSettings() {\n        if (!this.settings) {\n            this.settings = this._get(\"/settings\");\n        }\n        return await this.settings;\n    }\n    /**\n     * Flushes current queued traces.\n     */\n    async flush() {\n        const sizeLimitBytes = await this._getBatchSizeLimitBytes();\n        await this.drainAutoBatchQueue(sizeLimitBytes);\n    }\n    async createRun(run) {\n        if (!this._filterForSampling([run]).length) {\n            return;\n        }\n        const headers = { ...this.headers, \"Content-Type\": \"application/json\" };\n        const session_name = run.project_name;\n        delete run.project_name;\n        const runCreate = await this.prepareRunCreateOrUpdateInputs({\n            session_name,\n            ...run,\n            start_time: run.start_time ?? Date.now(),\n        });\n        if (this.autoBatchTracing &&\n            runCreate.trace_id !== undefined &&\n            runCreate.dotted_order !== undefined) {\n            void this.processRunOperation({\n                action: \"create\",\n                item: runCreate,\n            }).catch(console.error);\n            return;\n        }\n        const mergedRunCreateParam = mergeRuntimeEnvIntoRunCreate(runCreate);\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/runs`, {\n            method: \"POST\",\n            headers,\n            body: serializePayloadForTracing(mergedRunCreateParam),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"create run\", true);\n    }\n    /**\n     * Batch ingest/upsert multiple runs in the Langsmith system.\n     * @param runs\n     */\n    async batchIngestRuns({ runCreates, runUpdates, }) {\n        if (runCreates === undefined && runUpdates === undefined) {\n            return;\n        }\n        let preparedCreateParams = await Promise.all(runCreates?.map((create) => this.prepareRunCreateOrUpdateInputs(create)) ?? []);\n        let preparedUpdateParams = await Promise.all(runUpdates?.map((update) => this.prepareRunCreateOrUpdateInputs(update)) ?? []);\n        if (preparedCreateParams.length > 0 && preparedUpdateParams.length > 0) {\n            const createById = preparedCreateParams.reduce((params, run) => {\n                if (!run.id) {\n                    return params;\n                }\n                params[run.id] = run;\n                return params;\n            }, {});\n            const standaloneUpdates = [];\n            for (const updateParam of preparedUpdateParams) {\n                if (updateParam.id !== undefined && createById[updateParam.id]) {\n                    createById[updateParam.id] = {\n                        ...createById[updateParam.id],\n                        ...updateParam,\n                    };\n                }\n                else {\n                    standaloneUpdates.push(updateParam);\n                }\n            }\n            preparedCreateParams = Object.values(createById);\n            preparedUpdateParams = standaloneUpdates;\n        }\n        const rawBatch = {\n            post: preparedCreateParams,\n            patch: preparedUpdateParams,\n        };\n        if (!rawBatch.post.length && !rawBatch.patch.length) {\n            return;\n        }\n        const batchChunks = {\n            post: [],\n            patch: [],\n        };\n        for (const k of [\"post\", \"patch\"]) {\n            const key = k;\n            const batchItems = rawBatch[key].reverse();\n            let batchItem = batchItems.pop();\n            while (batchItem !== undefined) {\n                // Type is wrong but this is a deprecated code path anyway\n                batchChunks[key].push(batchItem);\n                batchItem = batchItems.pop();\n            }\n        }\n        if (batchChunks.post.length > 0 || batchChunks.patch.length > 0) {\n            await this._postBatchIngestRuns(serializePayloadForTracing(batchChunks));\n        }\n    }\n    async _postBatchIngestRuns(body) {\n        const headers = {\n            ...this.headers,\n            \"Content-Type\": \"application/json\",\n            Accept: \"application/json\",\n        };\n        const response = await this.batchIngestCaller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/runs/batch`, {\n            method: \"POST\",\n            headers,\n            body: body,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"batch create run\", true);\n    }\n    /**\n     * Batch ingest/upsert multiple runs in the Langsmith system.\n     * @param runs\n     */\n    async multipartIngestRuns({ runCreates, runUpdates, }) {\n        if (runCreates === undefined && runUpdates === undefined) {\n            return;\n        }\n        // transform and convert to dicts\n        const allAttachments = {};\n        let preparedCreateParams = [];\n        for (const create of runCreates ?? []) {\n            const preparedCreate = await this.prepareRunCreateOrUpdateInputs(create);\n            if (preparedCreate.id !== undefined &&\n                preparedCreate.attachments !== undefined) {\n                allAttachments[preparedCreate.id] = preparedCreate.attachments;\n            }\n            delete preparedCreate.attachments;\n            preparedCreateParams.push(preparedCreate);\n        }\n        let preparedUpdateParams = [];\n        for (const update of runUpdates ?? []) {\n            preparedUpdateParams.push(await this.prepareRunCreateOrUpdateInputs(update));\n        }\n        // require trace_id and dotted_order\n        const invalidRunCreate = preparedCreateParams.find((runCreate) => {\n            return (runCreate.trace_id === undefined || runCreate.dotted_order === undefined);\n        });\n        if (invalidRunCreate !== undefined) {\n            throw new Error(`Multipart ingest requires \"trace_id\" and \"dotted_order\" to be set when creating a run`);\n        }\n        const invalidRunUpdate = preparedUpdateParams.find((runUpdate) => {\n            return (runUpdate.trace_id === undefined || runUpdate.dotted_order === undefined);\n        });\n        if (invalidRunUpdate !== undefined) {\n            throw new Error(`Multipart ingest requires \"trace_id\" and \"dotted_order\" to be set when updating a run`);\n        }\n        // combine post and patch dicts where possible\n        if (preparedCreateParams.length > 0 && preparedUpdateParams.length > 0) {\n            const createById = preparedCreateParams.reduce((params, run) => {\n                if (!run.id) {\n                    return params;\n                }\n                params[run.id] = run;\n                return params;\n            }, {});\n            const standaloneUpdates = [];\n            for (const updateParam of preparedUpdateParams) {\n                if (updateParam.id !== undefined && createById[updateParam.id]) {\n                    createById[updateParam.id] = {\n                        ...createById[updateParam.id],\n                        ...updateParam,\n                    };\n                }\n                else {\n                    standaloneUpdates.push(updateParam);\n                }\n            }\n            preparedCreateParams = Object.values(createById);\n            preparedUpdateParams = standaloneUpdates;\n        }\n        if (preparedCreateParams.length === 0 &&\n            preparedUpdateParams.length === 0) {\n            return;\n        }\n        // send the runs in multipart requests\n        const accumulatedContext = [];\n        const accumulatedParts = [];\n        for (const [method, payloads] of [\n            [\"post\", preparedCreateParams],\n            [\"patch\", preparedUpdateParams],\n        ]) {\n            for (const originalPayload of payloads) {\n                // collect fields to be sent as separate parts\n                const { inputs, outputs, events, attachments, ...payload } = originalPayload;\n                const fields = { inputs, outputs, events };\n                // encode the main run payload\n                const stringifiedPayload = serializePayloadForTracing(payload);\n                accumulatedParts.push({\n                    name: `${method}.${payload.id}`,\n                    payload: new Blob([stringifiedPayload], {\n                        type: `application/json; length=${stringifiedPayload.length}`, // encoding=gzip\n                    }),\n                });\n                // encode the fields we collected\n                for (const [key, value] of Object.entries(fields)) {\n                    if (value === undefined) {\n                        continue;\n                    }\n                    const stringifiedValue = serializePayloadForTracing(value);\n                    accumulatedParts.push({\n                        name: `${method}.${payload.id}.${key}`,\n                        payload: new Blob([stringifiedValue], {\n                            type: `application/json; length=${stringifiedValue.length}`,\n                        }),\n                    });\n                }\n                // encode the attachments\n                if (payload.id !== undefined) {\n                    const attachments = allAttachments[payload.id];\n                    if (attachments) {\n                        delete allAttachments[payload.id];\n                        for (const [name, attachment] of Object.entries(attachments)) {\n                            let contentType;\n                            let content;\n                            if (Array.isArray(attachment)) {\n                                [contentType, content] = attachment;\n                            }\n                            else {\n                                contentType = attachment.mimeType;\n                                content = attachment.data;\n                            }\n                            // Validate that the attachment name doesn't contain a '.'\n                            if (name.includes(\".\")) {\n                                console.warn(`Skipping attachment '${name}' for run ${payload.id}: Invalid attachment name. ` +\n                                    `Attachment names must not contain periods ('.'). Please rename the attachment and try again.`);\n                                continue;\n                            }\n                            accumulatedParts.push({\n                                name: `attachment.${payload.id}.${name}`,\n                                payload: new Blob([content], {\n                                    type: `${contentType}; length=${content.byteLength}`,\n                                }),\n                            });\n                        }\n                    }\n                }\n                // compute context\n                accumulatedContext.push(`trace=${payload.trace_id},id=${payload.id}`);\n            }\n        }\n        await this._sendMultipartRequest(accumulatedParts, accumulatedContext.join(\"; \"));\n    }\n    async _sendMultipartRequest(parts, context) {\n        try {\n            // Create multipart form data manually using Blobs\n            const boundary = \"----LangSmithFormBoundary\" + Math.random().toString(36).slice(2);\n            const chunks = [];\n            for (const part of parts) {\n                // Add field boundary\n                chunks.push(new Blob([`--${boundary}\\r\\n`]));\n                chunks.push(new Blob([\n                    `Content-Disposition: form-data; name=\"${part.name}\"\\r\\n`,\n                    `Content-Type: ${part.payload.type}\\r\\n\\r\\n`,\n                ]));\n                chunks.push(part.payload);\n                chunks.push(new Blob([\"\\r\\n\"]));\n            }\n            // Add final boundary\n            chunks.push(new Blob([`--${boundary}--\\r\\n`]));\n            // Combine all chunks into a single Blob\n            const body = new Blob(chunks);\n            // Convert Blob to ArrayBuffer for compatibility\n            const arrayBuffer = await body.arrayBuffer();\n            const res = await this.batchIngestCaller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/runs/multipart`, {\n                method: \"POST\",\n                headers: {\n                    ...this.headers,\n                    \"Content-Type\": `multipart/form-data; boundary=${boundary}`,\n                },\n                body: arrayBuffer,\n                signal: AbortSignal.timeout(this.timeout_ms),\n                ...this.fetchOptions,\n            });\n            await raiseForStatus(res, \"ingest multipart runs\", true);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        }\n        catch (e) {\n            console.warn(`${e.message.trim()}\\n\\nContext: ${context}`);\n        }\n    }\n    async updateRun(runId, run) {\n        assertUuid(runId);\n        if (run.inputs) {\n            run.inputs = await this.processInputs(run.inputs);\n        }\n        if (run.outputs) {\n            run.outputs = await this.processOutputs(run.outputs);\n        }\n        // TODO: Untangle types\n        const data = { ...run, id: runId };\n        if (!this._filterForSampling([data], true).length) {\n            return;\n        }\n        if (this.autoBatchTracing &&\n            data.trace_id !== undefined &&\n            data.dotted_order !== undefined) {\n            if (run.end_time !== undefined &&\n                data.parent_run_id === undefined &&\n                this.blockOnRootRunFinalization &&\n                !this.manualFlushMode) {\n                // Trigger batches as soon as a root trace ends and wait to ensure trace finishes\n                // in serverless environments.\n                await this.processRunOperation({ action: \"update\", item: data }).catch(console.error);\n                return;\n            }\n            else {\n                void this.processRunOperation({ action: \"update\", item: data }).catch(console.error);\n            }\n            return;\n        }\n        const headers = { ...this.headers, \"Content-Type\": \"application/json\" };\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/runs/${runId}`, {\n            method: \"PATCH\",\n            headers,\n            body: serializePayloadForTracing(run),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"update run\", true);\n    }\n    async readRun(runId, { loadChildRuns } = { loadChildRuns: false }) {\n        assertUuid(runId);\n        let run = await this._get(`/runs/${runId}`);\n        if (loadChildRuns && run.child_run_ids) {\n            run = await this._loadChildRuns(run);\n        }\n        return run;\n    }\n    async getRunUrl({ runId, run, projectOpts, }) {\n        if (run !== undefined) {\n            let sessionId;\n            if (run.session_id) {\n                sessionId = run.session_id;\n            }\n            else if (projectOpts?.projectName) {\n                sessionId = (await this.readProject({ projectName: projectOpts?.projectName })).id;\n            }\n            else if (projectOpts?.projectId) {\n                sessionId = projectOpts?.projectId;\n            }\n            else {\n                const project = await this.readProject({\n                    projectName: getLangSmithEnvironmentVariable(\"PROJECT\") || \"default\",\n                });\n                sessionId = project.id;\n            }\n            const tenantId = await this._getTenantId();\n            return `${this.getHostUrl()}/o/${tenantId}/projects/p/${sessionId}/r/${run.id}?poll=true`;\n        }\n        else if (runId !== undefined) {\n            const run_ = await this.readRun(runId);\n            if (!run_.app_path) {\n                throw new Error(`Run ${runId} has no app_path`);\n            }\n            const baseUrl = this.getHostUrl();\n            return `${baseUrl}${run_.app_path}`;\n        }\n        else {\n            throw new Error(\"Must provide either runId or run\");\n        }\n    }\n    async _loadChildRuns(run) {\n        const childRuns = await toArray(this.listRuns({ id: run.child_run_ids }));\n        const treemap = {};\n        const runs = {};\n        // TODO: make dotted order required when the migration finishes\n        childRuns.sort((a, b) => (a?.dotted_order ?? \"\").localeCompare(b?.dotted_order ?? \"\"));\n        for (const childRun of childRuns) {\n            if (childRun.parent_run_id === null ||\n                childRun.parent_run_id === undefined) {\n                throw new Error(`Child run ${childRun.id} has no parent`);\n            }\n            if (!(childRun.parent_run_id in treemap)) {\n                treemap[childRun.parent_run_id] = [];\n            }\n            treemap[childRun.parent_run_id].push(childRun);\n            runs[childRun.id] = childRun;\n        }\n        run.child_runs = treemap[run.id] || [];\n        for (const runId in treemap) {\n            if (runId !== run.id) {\n                runs[runId].child_runs = treemap[runId];\n            }\n        }\n        return run;\n    }\n    /**\n     * List runs from the LangSmith server.\n     * @param projectId - The ID of the project to filter by.\n     * @param projectName - The name of the project to filter by.\n     * @param parentRunId - The ID of the parent run to filter by.\n     * @param traceId - The ID of the trace to filter by.\n     * @param referenceExampleId - The ID of the reference example to filter by.\n     * @param startTime - The start time to filter by.\n     * @param isRoot - Indicates whether to only return root runs.\n     * @param runType - The run type to filter by.\n     * @param error - Indicates whether to filter by error runs.\n     * @param id - The ID of the run to filter by.\n     * @param query - The query string to filter by.\n     * @param filter - The filter string to apply to the run spans.\n     * @param traceFilter - The filter string to apply on the root run of the trace.\n     * @param treeFilter - The filter string to apply on other runs in the trace.\n     * @param limit - The maximum number of runs to retrieve.\n     * @returns {AsyncIterable<Run>} - The runs.\n     *\n     * @example\n     * // List all runs in a project\n     * const projectRuns = client.listRuns({ projectName: \"<your_project>\" });\n     *\n     * @example\n     * // List LLM and Chat runs in the last 24 hours\n     * const todaysLLMRuns = client.listRuns({\n     *   projectName: \"<your_project>\",\n     *   start_time: new Date(Date.now() - 24 * 60 * 60 * 1000),\n     *   run_type: \"llm\",\n     * });\n     *\n     * @example\n     * // List traces in a project\n     * const rootRuns = client.listRuns({\n     *   projectName: \"<your_project>\",\n     *   execution_order: 1,\n     * });\n     *\n     * @example\n     * // List runs without errors\n     * const correctRuns = client.listRuns({\n     *   projectName: \"<your_project>\",\n     *   error: false,\n     * });\n     *\n     * @example\n     * // List runs by run ID\n     * const runIds = [\n     *   \"a36092d2-4ad5-4fb4-9c0d-0dba9a2ed836\",\n     *   \"9398e6be-964f-4aa4-8ae9-ad78cd4b7074\",\n     * ];\n     * const selectedRuns = client.listRuns({ run_ids: runIds });\n     *\n     * @example\n     * // List all \"chain\" type runs that took more than 10 seconds and had `total_tokens` greater than 5000\n     * const chainRuns = client.listRuns({\n     *   projectName: \"<your_project>\",\n     *   filter: 'and(eq(run_type, \"chain\"), gt(latency, 10), gt(total_tokens, 5000))',\n     * });\n     *\n     * @example\n     * // List all runs called \"extractor\" whose root of the trace was assigned feedback \"user_score\" score of 1\n     * const goodExtractorRuns = client.listRuns({\n     *   projectName: \"<your_project>\",\n     *   filter: 'eq(name, \"extractor\")',\n     *   traceFilter: 'and(eq(feedback_key, \"user_score\"), eq(feedback_score, 1))',\n     * });\n     *\n     * @example\n     * // List all runs that started after a specific timestamp and either have \"error\" not equal to null or a \"Correctness\" feedback score equal to 0\n     * const complexRuns = client.listRuns({\n     *   projectName: \"<your_project>\",\n     *   filter: 'and(gt(start_time, \"2023-07-15T12:34:56Z\"), or(neq(error, null), and(eq(feedback_key, \"Correctness\"), eq(feedback_score, 0.0))))',\n     * });\n     *\n     * @example\n     * // List all runs where `tags` include \"experimental\" or \"beta\" and `latency` is greater than 2 seconds\n     * const taggedRuns = client.listRuns({\n     *   projectName: \"<your_project>\",\n     *   filter: 'and(or(has(tags, \"experimental\"), has(tags, \"beta\")), gt(latency, 2))',\n     * });\n     */\n    async *listRuns(props) {\n        const { projectId, projectName, parentRunId, traceId, referenceExampleId, startTime, executionOrder, isRoot, runType, error, id, query, filter, traceFilter, treeFilter, limit, select, } = props;\n        let projectIds = [];\n        if (projectId) {\n            projectIds = Array.isArray(projectId) ? projectId : [projectId];\n        }\n        if (projectName) {\n            const projectNames = Array.isArray(projectName)\n                ? projectName\n                : [projectName];\n            const projectIds_ = await Promise.all(projectNames.map((name) => this.readProject({ projectName: name }).then((project) => project.id)));\n            projectIds.push(...projectIds_);\n        }\n        const default_select = [\n            \"app_path\",\n            \"child_run_ids\",\n            \"completion_cost\",\n            \"completion_tokens\",\n            \"dotted_order\",\n            \"end_time\",\n            \"error\",\n            \"events\",\n            \"extra\",\n            \"feedback_stats\",\n            \"first_token_time\",\n            \"id\",\n            \"inputs\",\n            \"name\",\n            \"outputs\",\n            \"parent_run_id\",\n            \"parent_run_ids\",\n            \"prompt_cost\",\n            \"prompt_tokens\",\n            \"reference_example_id\",\n            \"run_type\",\n            \"session_id\",\n            \"start_time\",\n            \"status\",\n            \"tags\",\n            \"total_cost\",\n            \"total_tokens\",\n            \"trace_id\",\n        ];\n        const body = {\n            session: projectIds.length ? projectIds : null,\n            run_type: runType,\n            reference_example: referenceExampleId,\n            query,\n            filter,\n            trace_filter: traceFilter,\n            tree_filter: treeFilter,\n            execution_order: executionOrder,\n            parent_run: parentRunId,\n            start_time: startTime ? startTime.toISOString() : null,\n            error,\n            id,\n            limit,\n            trace: traceId,\n            select: select ? select : default_select,\n            is_root: isRoot,\n        };\n        let runsYielded = 0;\n        for await (const runs of this._getCursorPaginatedList(\"/runs/query\", body)) {\n            if (limit) {\n                if (runsYielded >= limit) {\n                    break;\n                }\n                if (runs.length + runsYielded > limit) {\n                    const newRuns = runs.slice(0, limit - runsYielded);\n                    yield* newRuns;\n                    break;\n                }\n                runsYielded += runs.length;\n                yield* runs;\n            }\n            else {\n                yield* runs;\n            }\n        }\n    }\n    async getRunStats({ id, trace, parentRun, runType, projectNames, projectIds, referenceExampleIds, startTime, endTime, error, query, filter, traceFilter, treeFilter, isRoot, dataSourceType, }) {\n        let projectIds_ = projectIds || [];\n        if (projectNames) {\n            projectIds_ = [\n                ...(projectIds || []),\n                ...(await Promise.all(projectNames.map((name) => this.readProject({ projectName: name }).then((project) => project.id)))),\n            ];\n        }\n        const payload = {\n            id,\n            trace,\n            parent_run: parentRun,\n            run_type: runType,\n            session: projectIds_,\n            reference_example: referenceExampleIds,\n            start_time: startTime,\n            end_time: endTime,\n            error,\n            query,\n            filter,\n            trace_filter: traceFilter,\n            tree_filter: treeFilter,\n            is_root: isRoot,\n            data_source_type: dataSourceType,\n        };\n        // Remove undefined values from the payload\n        const filteredPayload = Object.fromEntries(Object.entries(payload).filter(([_, value]) => value !== undefined));\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/runs/stats`, {\n            method: \"POST\",\n            headers: this.headers,\n            body: JSON.stringify(filteredPayload),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        const result = await response.json();\n        return result;\n    }\n    async shareRun(runId, { shareId } = {}) {\n        const data = {\n            run_id: runId,\n            share_token: shareId || uuid.v4(),\n        };\n        assertUuid(runId);\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/runs/${runId}/share`, {\n            method: \"PUT\",\n            headers: this.headers,\n            body: JSON.stringify(data),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        const result = await response.json();\n        if (result === null || !(\"share_token\" in result)) {\n            throw new Error(\"Invalid response from server\");\n        }\n        return `${this.getHostUrl()}/public/${result[\"share_token\"]}/r`;\n    }\n    async unshareRun(runId) {\n        assertUuid(runId);\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/runs/${runId}/share`, {\n            method: \"DELETE\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"unshare run\", true);\n    }\n    async readRunSharedLink(runId) {\n        assertUuid(runId);\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/runs/${runId}/share`, {\n            method: \"GET\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        const result = await response.json();\n        if (result === null || !(\"share_token\" in result)) {\n            return undefined;\n        }\n        return `${this.getHostUrl()}/public/${result[\"share_token\"]}/r`;\n    }\n    async listSharedRuns(shareToken, { runIds, } = {}) {\n        const queryParams = new URLSearchParams({\n            share_token: shareToken,\n        });\n        if (runIds !== undefined) {\n            for (const runId of runIds) {\n                queryParams.append(\"id\", runId);\n            }\n        }\n        assertUuid(shareToken);\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/public/${shareToken}/runs${queryParams}`, {\n            method: \"GET\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        const runs = await response.json();\n        return runs;\n    }\n    async readDatasetSharedSchema(datasetId, datasetName) {\n        if (!datasetId && !datasetName) {\n            throw new Error(\"Either datasetId or datasetName must be given\");\n        }\n        if (!datasetId) {\n            const dataset = await this.readDataset({ datasetName });\n            datasetId = dataset.id;\n        }\n        assertUuid(datasetId);\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/datasets/${datasetId}/share`, {\n            method: \"GET\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        const shareSchema = await response.json();\n        shareSchema.url = `${this.getHostUrl()}/public/${shareSchema.share_token}/d`;\n        return shareSchema;\n    }\n    async shareDataset(datasetId, datasetName) {\n        if (!datasetId && !datasetName) {\n            throw new Error(\"Either datasetId or datasetName must be given\");\n        }\n        if (!datasetId) {\n            const dataset = await this.readDataset({ datasetName });\n            datasetId = dataset.id;\n        }\n        const data = {\n            dataset_id: datasetId,\n        };\n        assertUuid(datasetId);\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/datasets/${datasetId}/share`, {\n            method: \"PUT\",\n            headers: this.headers,\n            body: JSON.stringify(data),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        const shareSchema = await response.json();\n        shareSchema.url = `${this.getHostUrl()}/public/${shareSchema.share_token}/d`;\n        return shareSchema;\n    }\n    async unshareDataset(datasetId) {\n        assertUuid(datasetId);\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/datasets/${datasetId}/share`, {\n            method: \"DELETE\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"unshare dataset\", true);\n    }\n    async readSharedDataset(shareToken) {\n        assertUuid(shareToken);\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/public/${shareToken}/datasets`, {\n            method: \"GET\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        const dataset = await response.json();\n        return dataset;\n    }\n    /**\n     * Get shared examples.\n     *\n     * @param {string} shareToken The share token to get examples for. A share token is the UUID (or LangSmith URL, including UUID) generated when explicitly marking an example as public.\n     * @param {Object} [options] Additional options for listing the examples.\n     * @param {string[] | undefined} [options.exampleIds] A list of example IDs to filter by.\n     * @returns {Promise<Example[]>} The shared examples.\n     */\n    async listSharedExamples(shareToken, options) {\n        const params = {};\n        if (options?.exampleIds) {\n            params.id = options.exampleIds;\n        }\n        const urlParams = new URLSearchParams();\n        Object.entries(params).forEach(([key, value]) => {\n            if (Array.isArray(value)) {\n                value.forEach((v) => urlParams.append(key, v));\n            }\n            else {\n                urlParams.append(key, value);\n            }\n        });\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/public/${shareToken}/examples?${urlParams.toString()}`, {\n            method: \"GET\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        const result = await response.json();\n        if (!response.ok) {\n            if (\"detail\" in result) {\n                throw new Error(`Failed to list shared examples.\\nStatus: ${response.status}\\nMessage: ${result.detail.join(\"\\n\")}`);\n            }\n            throw new Error(`Failed to list shared examples: ${response.status} ${response.statusText}`);\n        }\n        return result.map((example) => ({\n            ...example,\n            _hostUrl: this.getHostUrl(),\n        }));\n    }\n    async createProject({ projectName, description = null, metadata = null, upsert = false, projectExtra = null, referenceDatasetId = null, }) {\n        const upsert_ = upsert ? `?upsert=true` : \"\";\n        const endpoint = `${this.apiUrl}/sessions${upsert_}`;\n        const extra = projectExtra || {};\n        if (metadata) {\n            extra[\"metadata\"] = metadata;\n        }\n        const body = {\n            name: projectName,\n            extra,\n            description,\n        };\n        if (referenceDatasetId !== null) {\n            body[\"reference_dataset_id\"] = referenceDatasetId;\n        }\n        const response = await this.caller.call(_getFetchImplementation(this.debug), endpoint, {\n            method: \"POST\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(body),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"create project\");\n        const result = await response.json();\n        return result;\n    }\n    async updateProject(projectId, { name = null, description = null, metadata = null, projectExtra = null, endTime = null, }) {\n        const endpoint = `${this.apiUrl}/sessions/${projectId}`;\n        let extra = projectExtra;\n        if (metadata) {\n            extra = { ...(extra || {}), metadata };\n        }\n        const body = {\n            name,\n            extra,\n            description,\n            end_time: endTime ? new Date(endTime).toISOString() : null,\n        };\n        const response = await this.caller.call(_getFetchImplementation(this.debug), endpoint, {\n            method: \"PATCH\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(body),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"update project\");\n        const result = await response.json();\n        return result;\n    }\n    async hasProject({ projectId, projectName, }) {\n        // TODO: Add a head request\n        let path = \"/sessions\";\n        const params = new URLSearchParams();\n        if (projectId !== undefined && projectName !== undefined) {\n            throw new Error(\"Must provide either projectName or projectId, not both\");\n        }\n        else if (projectId !== undefined) {\n            assertUuid(projectId);\n            path += `/${projectId}`;\n        }\n        else if (projectName !== undefined) {\n            params.append(\"name\", projectName);\n        }\n        else {\n            throw new Error(\"Must provide projectName or projectId\");\n        }\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}${path}?${params}`, {\n            method: \"GET\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        // consume the response body to release the connection\n        // https://undici.nodejs.org/#/?id=garbage-collection\n        try {\n            const result = await response.json();\n            if (!response.ok) {\n                return false;\n            }\n            // If it's OK and we're querying by name, need to check the list is not empty\n            if (Array.isArray(result)) {\n                return result.length > 0;\n            }\n            // projectId querying\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    async readProject({ projectId, projectName, includeStats, }) {\n        let path = \"/sessions\";\n        const params = new URLSearchParams();\n        if (projectId !== undefined && projectName !== undefined) {\n            throw new Error(\"Must provide either projectName or projectId, not both\");\n        }\n        else if (projectId !== undefined) {\n            assertUuid(projectId);\n            path += `/${projectId}`;\n        }\n        else if (projectName !== undefined) {\n            params.append(\"name\", projectName);\n        }\n        else {\n            throw new Error(\"Must provide projectName or projectId\");\n        }\n        if (includeStats !== undefined) {\n            params.append(\"include_stats\", includeStats.toString());\n        }\n        const response = await this._get(path, params);\n        let result;\n        if (Array.isArray(response)) {\n            if (response.length === 0) {\n                throw new Error(`Project[id=${projectId}, name=${projectName}] not found`);\n            }\n            result = response[0];\n        }\n        else {\n            result = response;\n        }\n        return result;\n    }\n    async getProjectUrl({ projectId, projectName, }) {\n        if (projectId === undefined && projectName === undefined) {\n            throw new Error(\"Must provide either projectName or projectId\");\n        }\n        const project = await this.readProject({ projectId, projectName });\n        const tenantId = await this._getTenantId();\n        return `${this.getHostUrl()}/o/${tenantId}/projects/p/${project.id}`;\n    }\n    async getDatasetUrl({ datasetId, datasetName, }) {\n        if (datasetId === undefined && datasetName === undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId\");\n        }\n        const dataset = await this.readDataset({ datasetId, datasetName });\n        const tenantId = await this._getTenantId();\n        return `${this.getHostUrl()}/o/${tenantId}/datasets/${dataset.id}`;\n    }\n    async _getTenantId() {\n        if (this._tenantId !== null) {\n            return this._tenantId;\n        }\n        const queryParams = new URLSearchParams({ limit: \"1\" });\n        for await (const projects of this._getPaginated(\"/sessions\", queryParams)) {\n            this._tenantId = projects[0].tenant_id;\n            return projects[0].tenant_id;\n        }\n        throw new Error(\"No projects found to resolve tenant.\");\n    }\n    async *listProjects({ projectIds, name, nameContains, referenceDatasetId, referenceDatasetName, referenceFree, metadata, } = {}) {\n        const params = new URLSearchParams();\n        if (projectIds !== undefined) {\n            for (const projectId of projectIds) {\n                params.append(\"id\", projectId);\n            }\n        }\n        if (name !== undefined) {\n            params.append(\"name\", name);\n        }\n        if (nameContains !== undefined) {\n            params.append(\"name_contains\", nameContains);\n        }\n        if (referenceDatasetId !== undefined) {\n            params.append(\"reference_dataset\", referenceDatasetId);\n        }\n        else if (referenceDatasetName !== undefined) {\n            const dataset = await this.readDataset({\n                datasetName: referenceDatasetName,\n            });\n            params.append(\"reference_dataset\", dataset.id);\n        }\n        if (referenceFree !== undefined) {\n            params.append(\"reference_free\", referenceFree.toString());\n        }\n        if (metadata !== undefined) {\n            params.append(\"metadata\", JSON.stringify(metadata));\n        }\n        for await (const projects of this._getPaginated(\"/sessions\", params)) {\n            yield* projects;\n        }\n    }\n    async deleteProject({ projectId, projectName, }) {\n        let projectId_;\n        if (projectId === undefined && projectName === undefined) {\n            throw new Error(\"Must provide projectName or projectId\");\n        }\n        else if (projectId !== undefined && projectName !== undefined) {\n            throw new Error(\"Must provide either projectName or projectId, not both\");\n        }\n        else if (projectId === undefined) {\n            projectId_ = (await this.readProject({ projectName })).id;\n        }\n        else {\n            projectId_ = projectId;\n        }\n        assertUuid(projectId_);\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/sessions/${projectId_}`, {\n            method: \"DELETE\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, `delete session ${projectId_} (${projectName})`, true);\n    }\n    async uploadCsv({ csvFile, fileName, inputKeys, outputKeys, description, dataType, name, }) {\n        const url = `${this.apiUrl}/datasets/upload`;\n        const formData = new FormData();\n        formData.append(\"file\", csvFile, fileName);\n        inputKeys.forEach((key) => {\n            formData.append(\"input_keys\", key);\n        });\n        outputKeys.forEach((key) => {\n            formData.append(\"output_keys\", key);\n        });\n        if (description) {\n            formData.append(\"description\", description);\n        }\n        if (dataType) {\n            formData.append(\"data_type\", dataType);\n        }\n        if (name) {\n            formData.append(\"name\", name);\n        }\n        const response = await this.caller.call(_getFetchImplementation(this.debug), url, {\n            method: \"POST\",\n            headers: this.headers,\n            body: formData,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"upload CSV\");\n        const result = await response.json();\n        return result;\n    }\n    async createDataset(name, { description, dataType, inputsSchema, outputsSchema, metadata, } = {}) {\n        const body = {\n            name,\n            description,\n            extra: metadata ? { metadata } : undefined,\n        };\n        if (dataType) {\n            body.data_type = dataType;\n        }\n        if (inputsSchema) {\n            body.inputs_schema_definition = inputsSchema;\n        }\n        if (outputsSchema) {\n            body.outputs_schema_definition = outputsSchema;\n        }\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/datasets`, {\n            method: \"POST\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(body),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"create dataset\");\n        const result = await response.json();\n        return result;\n    }\n    async readDataset({ datasetId, datasetName, }) {\n        let path = \"/datasets\";\n        // limit to 1 result\n        const params = new URLSearchParams({ limit: \"1\" });\n        if (datasetId !== undefined && datasetName !== undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId, not both\");\n        }\n        else if (datasetId !== undefined) {\n            assertUuid(datasetId);\n            path += `/${datasetId}`;\n        }\n        else if (datasetName !== undefined) {\n            params.append(\"name\", datasetName);\n        }\n        else {\n            throw new Error(\"Must provide datasetName or datasetId\");\n        }\n        const response = await this._get(path, params);\n        let result;\n        if (Array.isArray(response)) {\n            if (response.length === 0) {\n                throw new Error(`Dataset[id=${datasetId}, name=${datasetName}] not found`);\n            }\n            result = response[0];\n        }\n        else {\n            result = response;\n        }\n        return result;\n    }\n    async hasDataset({ datasetId, datasetName, }) {\n        try {\n            await this.readDataset({ datasetId, datasetName });\n            return true;\n        }\n        catch (e) {\n            if (\n            // eslint-disable-next-line no-instanceof/no-instanceof\n            e instanceof Error &&\n                e.message.toLocaleLowerCase().includes(\"not found\")) {\n                return false;\n            }\n            throw e;\n        }\n    }\n    async diffDatasetVersions({ datasetId, datasetName, fromVersion, toVersion, }) {\n        let datasetId_ = datasetId;\n        if (datasetId_ === undefined && datasetName === undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId\");\n        }\n        else if (datasetId_ !== undefined && datasetName !== undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId, not both\");\n        }\n        else if (datasetId_ === undefined) {\n            const dataset = await this.readDataset({ datasetName });\n            datasetId_ = dataset.id;\n        }\n        const urlParams = new URLSearchParams({\n            from_version: typeof fromVersion === \"string\"\n                ? fromVersion\n                : fromVersion.toISOString(),\n            to_version: typeof toVersion === \"string\" ? toVersion : toVersion.toISOString(),\n        });\n        const response = await this._get(`/datasets/${datasetId_}/versions/diff`, urlParams);\n        return response;\n    }\n    async readDatasetOpenaiFinetuning({ datasetId, datasetName, }) {\n        const path = \"/datasets\";\n        if (datasetId !== undefined) {\n            // do nothing\n        }\n        else if (datasetName !== undefined) {\n            datasetId = (await this.readDataset({ datasetName })).id;\n        }\n        else {\n            throw new Error(\"Must provide either datasetName or datasetId\");\n        }\n        const response = await this._getResponse(`${path}/${datasetId}/openai_ft`);\n        const datasetText = await response.text();\n        const dataset = datasetText\n            .trim()\n            .split(\"\\n\")\n            .map((line) => JSON.parse(line));\n        return dataset;\n    }\n    async *listDatasets({ limit = 100, offset = 0, datasetIds, datasetName, datasetNameContains, metadata, } = {}) {\n        const path = \"/datasets\";\n        const params = new URLSearchParams({\n            limit: limit.toString(),\n            offset: offset.toString(),\n        });\n        if (datasetIds !== undefined) {\n            for (const id_ of datasetIds) {\n                params.append(\"id\", id_);\n            }\n        }\n        if (datasetName !== undefined) {\n            params.append(\"name\", datasetName);\n        }\n        if (datasetNameContains !== undefined) {\n            params.append(\"name_contains\", datasetNameContains);\n        }\n        if (metadata !== undefined) {\n            params.append(\"metadata\", JSON.stringify(metadata));\n        }\n        for await (const datasets of this._getPaginated(path, params)) {\n            yield* datasets;\n        }\n    }\n    /**\n     * Update a dataset\n     * @param props The dataset details to update\n     * @returns The updated dataset\n     */\n    async updateDataset(props) {\n        const { datasetId, datasetName, ...update } = props;\n        if (!datasetId && !datasetName) {\n            throw new Error(\"Must provide either datasetName or datasetId\");\n        }\n        const _datasetId = datasetId ?? (await this.readDataset({ datasetName })).id;\n        assertUuid(_datasetId);\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/datasets/${_datasetId}`, {\n            method: \"PATCH\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(update),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"update dataset\");\n        return (await response.json());\n    }\n    /**\n     * Updates a tag on a dataset.\n     *\n     * If the tag is already assigned to a different version of this dataset,\n     * the tag will be moved to the new version. The as_of parameter is used to\n     * determine which version of the dataset to apply the new tags to.\n     *\n     * It must be an exact version of the dataset to succeed. You can\n     * use the \"readDatasetVersion\" method to find the exact version\n     * to apply the tags to.\n     * @param params.datasetId The ID of the dataset to update. Must be provided if \"datasetName\" is not provided.\n     * @param params.datasetName The name of the dataset to update. Must be provided if \"datasetId\" is not provided.\n     * @param params.asOf The timestamp of the dataset to apply the new tags to.\n     * @param params.tag The new tag to apply to the dataset.\n     */\n    async updateDatasetTag(props) {\n        const { datasetId, datasetName, asOf, tag } = props;\n        if (!datasetId && !datasetName) {\n            throw new Error(\"Must provide either datasetName or datasetId\");\n        }\n        const _datasetId = datasetId ?? (await this.readDataset({ datasetName })).id;\n        assertUuid(_datasetId);\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/datasets/${_datasetId}/tags`, {\n            method: \"PUT\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n                as_of: typeof asOf === \"string\" ? asOf : asOf.toISOString(),\n                tag,\n            }),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"update dataset tags\");\n    }\n    async deleteDataset({ datasetId, datasetName, }) {\n        let path = \"/datasets\";\n        let datasetId_ = datasetId;\n        if (datasetId !== undefined && datasetName !== undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId, not both\");\n        }\n        else if (datasetName !== undefined) {\n            const dataset = await this.readDataset({ datasetName });\n            datasetId_ = dataset.id;\n        }\n        if (datasetId_ !== undefined) {\n            assertUuid(datasetId_);\n            path += `/${datasetId_}`;\n        }\n        else {\n            throw new Error(\"Must provide datasetName or datasetId\");\n        }\n        const response = await this.caller.call(_getFetchImplementation(this.debug), this.apiUrl + path, {\n            method: \"DELETE\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, `delete ${path}`);\n        await response.json();\n    }\n    async indexDataset({ datasetId, datasetName, tag, }) {\n        let datasetId_ = datasetId;\n        if (!datasetId_ && !datasetName) {\n            throw new Error(\"Must provide either datasetName or datasetId\");\n        }\n        else if (datasetId_ && datasetName) {\n            throw new Error(\"Must provide either datasetName or datasetId, not both\");\n        }\n        else if (!datasetId_) {\n            const dataset = await this.readDataset({ datasetName });\n            datasetId_ = dataset.id;\n        }\n        assertUuid(datasetId_);\n        const data = {\n            tag: tag,\n        };\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/datasets/${datasetId_}/index`, {\n            method: \"POST\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(data),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"index dataset\");\n        await response.json();\n    }\n    /**\n     * Lets you run a similarity search query on a dataset.\n     *\n     * Requires the dataset to be indexed. Please see the `indexDataset` method to set up indexing.\n     *\n     * @param inputs      The input on which to run the similarity search. Must have the\n     *                    same schema as the dataset.\n     *\n     * @param datasetId   The dataset to search for similar examples.\n     *\n     * @param limit       The maximum number of examples to return. Will return the top `limit` most\n     *                    similar examples in order of most similar to least similar. If no similar\n     *                    examples are found, random examples will be returned.\n     *\n     * @param filter      A filter string to apply to the search. Only examples will be returned that\n     *                    match the filter string. Some examples of filters\n     *\n     *                    - eq(metadata.mykey, \"value\")\n     *                    - and(neq(metadata.my.nested.key, \"value\"), neq(metadata.mykey, \"value\"))\n     *                    - or(eq(metadata.mykey, \"value\"), eq(metadata.mykey, \"othervalue\"))\n     *\n     * @returns           A list of similar examples.\n     *\n     *\n     * @example\n     * dataset_id = \"123e4567-e89b-12d3-a456-426614174000\"\n     * inputs = {\"text\": \"How many people live in Berlin?\"}\n     * limit = 5\n     * examples = await client.similarExamples(inputs, dataset_id, limit)\n     */\n    async similarExamples(inputs, datasetId, limit, { filter, } = {}) {\n        const data = {\n            limit: limit,\n            inputs: inputs,\n        };\n        if (filter !== undefined) {\n            data[\"filter\"] = filter;\n        }\n        assertUuid(datasetId);\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/datasets/${datasetId}/search`, {\n            method: \"POST\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(data),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"fetch similar examples\");\n        const result = await response.json();\n        return result[\"examples\"];\n    }\n    async createExample(inputsOrUpdate, outputs, options) {\n        if (isExampleCreate(inputsOrUpdate)) {\n            if (outputs !== undefined || options !== undefined) {\n                throw new Error(\"Cannot provide outputs or options when using ExampleCreate object\");\n            }\n        }\n        let datasetId_ = outputs ? options?.datasetId : inputsOrUpdate.dataset_id;\n        const datasetName_ = outputs\n            ? options?.datasetName\n            : inputsOrUpdate.dataset_name;\n        if (datasetId_ === undefined && datasetName_ === undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId\");\n        }\n        else if (datasetId_ !== undefined && datasetName_ !== undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId, not both\");\n        }\n        else if (datasetId_ === undefined) {\n            const dataset = await this.readDataset({ datasetName: datasetName_ });\n            datasetId_ = dataset.id;\n        }\n        const createdAt_ = (outputs ? options?.createdAt : inputsOrUpdate.created_at) || new Date();\n        let data;\n        if (!isExampleCreate(inputsOrUpdate)) {\n            data = {\n                inputs: inputsOrUpdate,\n                outputs,\n                created_at: createdAt_?.toISOString(),\n                id: options?.exampleId,\n                metadata: options?.metadata,\n                split: options?.split,\n                source_run_id: options?.sourceRunId,\n                use_source_run_io: options?.useSourceRunIO,\n                use_source_run_attachments: options?.useSourceRunAttachments,\n                attachments: options?.attachments,\n            };\n        }\n        else {\n            data = inputsOrUpdate;\n        }\n        const response = await this._uploadExamplesMultipart(datasetId_, [data]);\n        const example = await this.readExample(response.example_ids?.[0] ?? uuid.v4());\n        return example;\n    }\n    async createExamples(propsOrUploads) {\n        if (Array.isArray(propsOrUploads)) {\n            if (propsOrUploads.length === 0) {\n                return [];\n            }\n            const uploads = propsOrUploads;\n            let datasetId_ = uploads[0].dataset_id;\n            const datasetName_ = uploads[0].dataset_name;\n            if (datasetId_ === undefined && datasetName_ === undefined) {\n                throw new Error(\"Must provide either datasetName or datasetId\");\n            }\n            else if (datasetId_ !== undefined && datasetName_ !== undefined) {\n                throw new Error(\"Must provide either datasetName or datasetId, not both\");\n            }\n            else if (datasetId_ === undefined) {\n                const dataset = await this.readDataset({ datasetName: datasetName_ });\n                datasetId_ = dataset.id;\n            }\n            const response = await this._uploadExamplesMultipart(datasetId_, uploads);\n            const examples = await Promise.all(response.example_ids.map((id) => this.readExample(id)));\n            return examples;\n        }\n        const { inputs, outputs, metadata, splits, sourceRunIds, useSourceRunIOs, useSourceRunAttachments, attachments, exampleIds, datasetId, datasetName, } = propsOrUploads;\n        if (inputs === undefined) {\n            throw new Error(\"Must provide inputs when using legacy parameters\");\n        }\n        let datasetId_ = datasetId;\n        const datasetName_ = datasetName;\n        if (datasetId_ === undefined && datasetName_ === undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId\");\n        }\n        else if (datasetId_ !== undefined && datasetName_ !== undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId, not both\");\n        }\n        else if (datasetId_ === undefined) {\n            const dataset = await this.readDataset({ datasetName: datasetName_ });\n            datasetId_ = dataset.id;\n        }\n        const formattedExamples = inputs.map((input, idx) => {\n            return {\n                dataset_id: datasetId_,\n                inputs: input,\n                outputs: outputs?.[idx],\n                metadata: metadata?.[idx],\n                split: splits?.[idx],\n                id: exampleIds?.[idx],\n                attachments: attachments?.[idx],\n                source_run_id: sourceRunIds?.[idx],\n                use_source_run_io: useSourceRunIOs?.[idx],\n                use_source_run_attachments: useSourceRunAttachments?.[idx],\n            };\n        });\n        const response = await this._uploadExamplesMultipart(datasetId_, formattedExamples);\n        const examples = await Promise.all(response.example_ids.map((id) => this.readExample(id)));\n        return examples;\n    }\n    async createLLMExample(input, generation, options) {\n        return this.createExample({ input }, { output: generation }, options);\n    }\n    async createChatExample(input, generations, options) {\n        const finalInput = input.map((message) => {\n            if (isLangChainMessage(message)) {\n                return convertLangChainMessageToExample(message);\n            }\n            return message;\n        });\n        const finalOutput = isLangChainMessage(generations)\n            ? convertLangChainMessageToExample(generations)\n            : generations;\n        return this.createExample({ input: finalInput }, { output: finalOutput }, options);\n    }\n    async readExample(exampleId) {\n        assertUuid(exampleId);\n        const path = `/examples/${exampleId}`;\n        const rawExample = await this._get(path);\n        const { attachment_urls, ...rest } = rawExample;\n        const example = rest;\n        if (attachment_urls) {\n            example.attachments = Object.entries(attachment_urls).reduce((acc, [key, value]) => {\n                acc[key.slice(\"attachment.\".length)] = {\n                    presigned_url: value.presigned_url,\n                    mime_type: value.mime_type,\n                };\n                return acc;\n            }, {});\n        }\n        return example;\n    }\n    async *listExamples({ datasetId, datasetName, exampleIds, asOf, splits, inlineS3Urls, metadata, limit, offset, filter, includeAttachments, } = {}) {\n        let datasetId_;\n        if (datasetId !== undefined && datasetName !== undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId, not both\");\n        }\n        else if (datasetId !== undefined) {\n            datasetId_ = datasetId;\n        }\n        else if (datasetName !== undefined) {\n            const dataset = await this.readDataset({ datasetName });\n            datasetId_ = dataset.id;\n        }\n        else {\n            throw new Error(\"Must provide a datasetName or datasetId\");\n        }\n        const params = new URLSearchParams({ dataset: datasetId_ });\n        const dataset_version = asOf\n            ? typeof asOf === \"string\"\n                ? asOf\n                : asOf?.toISOString()\n            : undefined;\n        if (dataset_version) {\n            params.append(\"as_of\", dataset_version);\n        }\n        const inlineS3Urls_ = inlineS3Urls ?? true;\n        params.append(\"inline_s3_urls\", inlineS3Urls_.toString());\n        if (exampleIds !== undefined) {\n            for (const id_ of exampleIds) {\n                params.append(\"id\", id_);\n            }\n        }\n        if (splits !== undefined) {\n            for (const split of splits) {\n                params.append(\"splits\", split);\n            }\n        }\n        if (metadata !== undefined) {\n            const serializedMetadata = JSON.stringify(metadata);\n            params.append(\"metadata\", serializedMetadata);\n        }\n        if (limit !== undefined) {\n            params.append(\"limit\", limit.toString());\n        }\n        if (offset !== undefined) {\n            params.append(\"offset\", offset.toString());\n        }\n        if (filter !== undefined) {\n            params.append(\"filter\", filter);\n        }\n        if (includeAttachments === true) {\n            [\"attachment_urls\", \"outputs\", \"metadata\"].forEach((field) => params.append(\"select\", field));\n        }\n        let i = 0;\n        for await (const rawExamples of this._getPaginated(\"/examples\", params)) {\n            for (const rawExample of rawExamples) {\n                const { attachment_urls, ...rest } = rawExample;\n                const example = rest;\n                if (attachment_urls) {\n                    example.attachments = Object.entries(attachment_urls).reduce((acc, [key, value]) => {\n                        acc[key.slice(\"attachment.\".length)] = {\n                            presigned_url: value.presigned_url,\n                            mime_type: value.mime_type || undefined,\n                        };\n                        return acc;\n                    }, {});\n                }\n                yield example;\n                i++;\n            }\n            if (limit !== undefined && i >= limit) {\n                break;\n            }\n        }\n    }\n    async deleteExample(exampleId) {\n        assertUuid(exampleId);\n        const path = `/examples/${exampleId}`;\n        const response = await this.caller.call(_getFetchImplementation(this.debug), this.apiUrl + path, {\n            method: \"DELETE\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, `delete ${path}`);\n        await response.json();\n    }\n    async updateExample(exampleIdOrUpdate, update) {\n        let exampleId;\n        if (update) {\n            exampleId = exampleIdOrUpdate;\n        }\n        else {\n            exampleId = exampleIdOrUpdate.id;\n        }\n        assertUuid(exampleId);\n        let updateToUse;\n        if (update) {\n            updateToUse = { id: exampleId, ...update };\n        }\n        else {\n            updateToUse = exampleIdOrUpdate;\n        }\n        let datasetId;\n        if (updateToUse.dataset_id !== undefined) {\n            datasetId = updateToUse.dataset_id;\n        }\n        else {\n            const example = await this.readExample(exampleId);\n            datasetId = example.dataset_id;\n        }\n        return this._updateExamplesMultipart(datasetId, [updateToUse]);\n    }\n    async updateExamples(update) {\n        // We will naively get dataset id from first example and assume it works for all\n        let datasetId;\n        if (update[0].dataset_id === undefined) {\n            const example = await this.readExample(update[0].id);\n            datasetId = example.dataset_id;\n        }\n        else {\n            datasetId = update[0].dataset_id;\n        }\n        return this._updateExamplesMultipart(datasetId, update);\n    }\n    /**\n     * Get dataset version by closest date or exact tag.\n     *\n     * Use this to resolve the nearest version to a given timestamp or for a given tag.\n     *\n     * @param options The options for getting the dataset version\n     * @param options.datasetId The ID of the dataset\n     * @param options.datasetName The name of the dataset\n     * @param options.asOf The timestamp of the dataset to retrieve\n     * @param options.tag The tag of the dataset to retrieve\n     * @returns The dataset version\n     */\n    async readDatasetVersion({ datasetId, datasetName, asOf, tag, }) {\n        let resolvedDatasetId;\n        if (!datasetId) {\n            const dataset = await this.readDataset({ datasetName });\n            resolvedDatasetId = dataset.id;\n        }\n        else {\n            resolvedDatasetId = datasetId;\n        }\n        assertUuid(resolvedDatasetId);\n        if ((asOf && tag) || (!asOf && !tag)) {\n            throw new Error(\"Exactly one of asOf and tag must be specified.\");\n        }\n        const params = new URLSearchParams();\n        if (asOf !== undefined) {\n            params.append(\"as_of\", typeof asOf === \"string\" ? asOf : asOf.toISOString());\n        }\n        if (tag !== undefined) {\n            params.append(\"tag\", tag);\n        }\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/datasets/${resolvedDatasetId}/version?${params.toString()}`, {\n            method: \"GET\",\n            headers: { ...this.headers },\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"read dataset version\");\n        return await response.json();\n    }\n    async listDatasetSplits({ datasetId, datasetName, asOf, }) {\n        let datasetId_;\n        if (datasetId === undefined && datasetName === undefined) {\n            throw new Error(\"Must provide dataset name or ID\");\n        }\n        else if (datasetId !== undefined && datasetName !== undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId, not both\");\n        }\n        else if (datasetId === undefined) {\n            const dataset = await this.readDataset({ datasetName });\n            datasetId_ = dataset.id;\n        }\n        else {\n            datasetId_ = datasetId;\n        }\n        assertUuid(datasetId_);\n        const params = new URLSearchParams();\n        const dataset_version = asOf\n            ? typeof asOf === \"string\"\n                ? asOf\n                : asOf?.toISOString()\n            : undefined;\n        if (dataset_version) {\n            params.append(\"as_of\", dataset_version);\n        }\n        const response = await this._get(`/datasets/${datasetId_}/splits`, params);\n        return response;\n    }\n    async updateDatasetSplits({ datasetId, datasetName, splitName, exampleIds, remove = false, }) {\n        let datasetId_;\n        if (datasetId === undefined && datasetName === undefined) {\n            throw new Error(\"Must provide dataset name or ID\");\n        }\n        else if (datasetId !== undefined && datasetName !== undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId, not both\");\n        }\n        else if (datasetId === undefined) {\n            const dataset = await this.readDataset({ datasetName });\n            datasetId_ = dataset.id;\n        }\n        else {\n            datasetId_ = datasetId;\n        }\n        assertUuid(datasetId_);\n        const data = {\n            split_name: splitName,\n            examples: exampleIds.map((id) => {\n                assertUuid(id);\n                return id;\n            }),\n            remove,\n        };\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/datasets/${datasetId_}/splits`, {\n            method: \"PUT\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(data),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"update dataset splits\", true);\n    }\n    /**\n     * @deprecated This method is deprecated and will be removed in future LangSmith versions, use `evaluate` from `langsmith/evaluation` instead.\n     */\n    async evaluateRun(run, evaluator, { sourceInfo, loadChildRuns, referenceExample, } = { loadChildRuns: false }) {\n        warnOnce(\"This method is deprecated and will be removed in future LangSmith versions, use `evaluate` from `langsmith/evaluation` instead.\");\n        let run_;\n        if (typeof run === \"string\") {\n            run_ = await this.readRun(run, { loadChildRuns });\n        }\n        else if (typeof run === \"object\" && \"id\" in run) {\n            run_ = run;\n        }\n        else {\n            throw new Error(`Invalid run type: ${typeof run}`);\n        }\n        if (run_.reference_example_id !== null &&\n            run_.reference_example_id !== undefined) {\n            referenceExample = await this.readExample(run_.reference_example_id);\n        }\n        const feedbackResult = await evaluator.evaluateRun(run_, referenceExample);\n        const [_, feedbacks] = await this._logEvaluationFeedback(feedbackResult, run_, sourceInfo);\n        return feedbacks[0];\n    }\n    async createFeedback(runId, key, { score, value, correction, comment, sourceInfo, feedbackSourceType = \"api\", sourceRunId, feedbackId, feedbackConfig, projectId, comparativeExperimentId, }) {\n        if (!runId && !projectId) {\n            throw new Error(\"One of runId or projectId must be provided\");\n        }\n        if (runId && projectId) {\n            throw new Error(\"Only one of runId or projectId can be provided\");\n        }\n        const feedback_source = {\n            type: feedbackSourceType ?? \"api\",\n            metadata: sourceInfo ?? {},\n        };\n        if (sourceRunId !== undefined &&\n            feedback_source?.metadata !== undefined &&\n            !feedback_source.metadata[\"__run\"]) {\n            feedback_source.metadata[\"__run\"] = { run_id: sourceRunId };\n        }\n        if (feedback_source?.metadata !== undefined &&\n            feedback_source.metadata[\"__run\"]?.run_id !== undefined) {\n            assertUuid(feedback_source.metadata[\"__run\"].run_id);\n        }\n        const feedback = {\n            id: feedbackId ?? uuid.v4(),\n            run_id: runId,\n            key,\n            score: _formatFeedbackScore(score),\n            value,\n            correction,\n            comment,\n            feedback_source: feedback_source,\n            comparative_experiment_id: comparativeExperimentId,\n            feedbackConfig,\n            session_id: projectId,\n        };\n        const url = `${this.apiUrl}/feedback`;\n        const response = await this.caller.call(_getFetchImplementation(this.debug), url, {\n            method: \"POST\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(feedback),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"create feedback\", true);\n        return feedback;\n    }\n    async updateFeedback(feedbackId, { score, value, correction, comment, }) {\n        const feedbackUpdate = {};\n        if (score !== undefined && score !== null) {\n            feedbackUpdate[\"score\"] = _formatFeedbackScore(score);\n        }\n        if (value !== undefined && value !== null) {\n            feedbackUpdate[\"value\"] = value;\n        }\n        if (correction !== undefined && correction !== null) {\n            feedbackUpdate[\"correction\"] = correction;\n        }\n        if (comment !== undefined && comment !== null) {\n            feedbackUpdate[\"comment\"] = comment;\n        }\n        assertUuid(feedbackId);\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/feedback/${feedbackId}`, {\n            method: \"PATCH\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(feedbackUpdate),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"update feedback\", true);\n    }\n    async readFeedback(feedbackId) {\n        assertUuid(feedbackId);\n        const path = `/feedback/${feedbackId}`;\n        const response = await this._get(path);\n        return response;\n    }\n    async deleteFeedback(feedbackId) {\n        assertUuid(feedbackId);\n        const path = `/feedback/${feedbackId}`;\n        const response = await this.caller.call(_getFetchImplementation(this.debug), this.apiUrl + path, {\n            method: \"DELETE\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, `delete ${path}`);\n        await response.json();\n    }\n    async *listFeedback({ runIds, feedbackKeys, feedbackSourceTypes, } = {}) {\n        const queryParams = new URLSearchParams();\n        if (runIds) {\n            queryParams.append(\"run\", runIds.join(\",\"));\n        }\n        if (feedbackKeys) {\n            for (const key of feedbackKeys) {\n                queryParams.append(\"key\", key);\n            }\n        }\n        if (feedbackSourceTypes) {\n            for (const type of feedbackSourceTypes) {\n                queryParams.append(\"source\", type);\n            }\n        }\n        for await (const feedbacks of this._getPaginated(\"/feedback\", queryParams)) {\n            yield* feedbacks;\n        }\n    }\n    /**\n     * Creates a presigned feedback token and URL.\n     *\n     * The token can be used to authorize feedback metrics without\n     * needing an API key. This is useful for giving browser-based\n     * applications the ability to submit feedback without needing\n     * to expose an API key.\n     *\n     * @param runId The ID of the run.\n     * @param feedbackKey The feedback key.\n     * @param options Additional options for the token.\n     * @param options.expiration The expiration time for the token.\n     *\n     * @returns A promise that resolves to a FeedbackIngestToken.\n     */\n    async createPresignedFeedbackToken(runId, feedbackKey, { expiration, feedbackConfig, } = {}) {\n        const body = {\n            run_id: runId,\n            feedback_key: feedbackKey,\n            feedback_config: feedbackConfig,\n        };\n        if (expiration) {\n            if (typeof expiration === \"string\") {\n                body[\"expires_at\"] = expiration;\n            }\n            else if (expiration?.hours || expiration?.minutes || expiration?.days) {\n                body[\"expires_in\"] = expiration;\n            }\n        }\n        else {\n            body[\"expires_in\"] = {\n                hours: 3,\n            };\n        }\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/feedback/tokens`, {\n            method: \"POST\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(body),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        const result = await response.json();\n        return result;\n    }\n    async createComparativeExperiment({ name, experimentIds, referenceDatasetId, createdAt, description, metadata, id, }) {\n        if (experimentIds.length === 0) {\n            throw new Error(\"At least one experiment is required\");\n        }\n        if (!referenceDatasetId) {\n            referenceDatasetId = (await this.readProject({\n                projectId: experimentIds[0],\n            })).reference_dataset_id;\n        }\n        if (!referenceDatasetId == null) {\n            throw new Error(\"A reference dataset is required\");\n        }\n        const body = {\n            id,\n            name,\n            experiment_ids: experimentIds,\n            reference_dataset_id: referenceDatasetId,\n            description,\n            created_at: (createdAt ?? new Date())?.toISOString(),\n            extra: {},\n        };\n        if (metadata)\n            body.extra[\"metadata\"] = metadata;\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/datasets/comparative`, {\n            method: \"POST\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(body),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        return await response.json();\n    }\n    /**\n     * Retrieves a list of presigned feedback tokens for a given run ID.\n     * @param runId The ID of the run.\n     * @returns An async iterable of FeedbackIngestToken objects.\n     */\n    async *listPresignedFeedbackTokens(runId) {\n        assertUuid(runId);\n        const params = new URLSearchParams({ run_id: runId });\n        for await (const tokens of this._getPaginated(\"/feedback/tokens\", params)) {\n            yield* tokens;\n        }\n    }\n    _selectEvalResults(results) {\n        let results_;\n        if (\"results\" in results) {\n            results_ = results.results;\n        }\n        else if (Array.isArray(results)) {\n            results_ = results;\n        }\n        else {\n            results_ = [results];\n        }\n        return results_;\n    }\n    async _logEvaluationFeedback(evaluatorResponse, run, sourceInfo) {\n        const evalResults = this._selectEvalResults(evaluatorResponse);\n        const feedbacks = [];\n        for (const res of evalResults) {\n            let sourceInfo_ = sourceInfo || {};\n            if (res.evaluatorInfo) {\n                sourceInfo_ = { ...res.evaluatorInfo, ...sourceInfo_ };\n            }\n            let runId_ = null;\n            if (res.targetRunId) {\n                runId_ = res.targetRunId;\n            }\n            else if (run) {\n                runId_ = run.id;\n            }\n            feedbacks.push(await this.createFeedback(runId_, res.key, {\n                score: res.score,\n                value: res.value,\n                comment: res.comment,\n                correction: res.correction,\n                sourceInfo: sourceInfo_,\n                sourceRunId: res.sourceRunId,\n                feedbackConfig: res.feedbackConfig,\n                feedbackSourceType: \"model\",\n            }));\n        }\n        return [evalResults, feedbacks];\n    }\n    async logEvaluationFeedback(evaluatorResponse, run, sourceInfo) {\n        const [results] = await this._logEvaluationFeedback(evaluatorResponse, run, sourceInfo);\n        return results;\n    }\n    /**\n     * API for managing annotation queues\n     */\n    /**\n     * List the annotation queues on the LangSmith API.\n     * @param options - The options for listing annotation queues\n     * @param options.queueIds - The IDs of the queues to filter by\n     * @param options.name - The name of the queue to filter by\n     * @param options.nameContains - The substring that the queue name should contain\n     * @param options.limit - The maximum number of queues to return\n     * @returns An iterator of AnnotationQueue objects\n     */\n    async *listAnnotationQueues(options = {}) {\n        const { queueIds, name, nameContains, limit } = options;\n        const params = new URLSearchParams();\n        if (queueIds) {\n            queueIds.forEach((id, i) => {\n                assertUuid(id, `queueIds[${i}]`);\n                params.append(\"ids\", id);\n            });\n        }\n        if (name)\n            params.append(\"name\", name);\n        if (nameContains)\n            params.append(\"name_contains\", nameContains);\n        params.append(\"limit\", (limit !== undefined ? Math.min(limit, 100) : 100).toString());\n        let count = 0;\n        for await (const queues of this._getPaginated(\"/annotation-queues\", params)) {\n            yield* queues;\n            count++;\n            if (limit !== undefined && count >= limit)\n                break;\n        }\n    }\n    /**\n     * Create an annotation queue on the LangSmith API.\n     * @param options - The options for creating an annotation queue\n     * @param options.name - The name of the annotation queue\n     * @param options.description - The description of the annotation queue\n     * @param options.queueId - The ID of the annotation queue\n     * @returns The created AnnotationQueue object\n     */\n    async createAnnotationQueue(options) {\n        const { name, description, queueId } = options;\n        const body = {\n            name,\n            description,\n            id: queueId || uuid.v4(),\n        };\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/annotation-queues`, {\n            method: \"POST\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(Object.fromEntries(Object.entries(body).filter(([_, v]) => v !== undefined))),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"create annotation queue\");\n        const data = await response.json();\n        return data;\n    }\n    /**\n     * Read an annotation queue with the specified queue ID.\n     * @param queueId - The ID of the annotation queue to read\n     * @returns The AnnotationQueue object\n     */\n    async readAnnotationQueue(queueId) {\n        // TODO: Replace when actual endpoint is added\n        const queueIteratorResult = await this.listAnnotationQueues({\n            queueIds: [queueId],\n        }).next();\n        if (queueIteratorResult.done) {\n            throw new Error(`Annotation queue with ID ${queueId} not found`);\n        }\n        return queueIteratorResult.value;\n    }\n    /**\n     * Update an annotation queue with the specified queue ID.\n     * @param queueId - The ID of the annotation queue to update\n     * @param options - The options for updating the annotation queue\n     * @param options.name - The new name for the annotation queue\n     * @param options.description - The new description for the annotation queue\n     */\n    async updateAnnotationQueue(queueId, options) {\n        const { name, description } = options;\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/annotation-queues/${assertUuid(queueId, \"queueId\")}`, {\n            method: \"PATCH\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({ name, description }),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"update annotation queue\");\n    }\n    /**\n     * Delete an annotation queue with the specified queue ID.\n     * @param queueId - The ID of the annotation queue to delete\n     */\n    async deleteAnnotationQueue(queueId) {\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/annotation-queues/${assertUuid(queueId, \"queueId\")}`, {\n            method: \"DELETE\",\n            headers: { ...this.headers, Accept: \"application/json\" },\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"delete annotation queue\");\n    }\n    /**\n     * Add runs to an annotation queue with the specified queue ID.\n     * @param queueId - The ID of the annotation queue\n     * @param runIds - The IDs of the runs to be added to the annotation queue\n     */\n    async addRunsToAnnotationQueue(queueId, runIds) {\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/annotation-queues/${assertUuid(queueId, \"queueId\")}/runs`, {\n            method: \"POST\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(runIds.map((id, i) => assertUuid(id, `runIds[${i}]`).toString())),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"add runs to annotation queue\");\n    }\n    /**\n     * Get a run from an annotation queue at the specified index.\n     * @param queueId - The ID of the annotation queue\n     * @param index - The index of the run to retrieve\n     * @returns A Promise that resolves to a RunWithAnnotationQueueInfo object\n     * @throws {Error} If the run is not found at the given index or for other API-related errors\n     */\n    async getRunFromAnnotationQueue(queueId, index) {\n        const baseUrl = `/annotation-queues/${assertUuid(queueId, \"queueId\")}/run`;\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}${baseUrl}/${index}`, {\n            method: \"GET\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"get run from annotation queue\");\n        return await response.json();\n    }\n    /**\n     * Delete a run from an an annotation queue.\n     * @param queueId - The ID of the annotation queue to delete the run from\n     * @param queueRunId - The ID of the run to delete from the annotation queue\n     */\n    async deleteRunFromAnnotationQueue(queueId, queueRunId) {\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/annotation-queues/${assertUuid(queueId, \"queueId\")}/runs/${assertUuid(queueRunId, \"queueRunId\")}`, {\n            method: \"DELETE\",\n            headers: { ...this.headers, Accept: \"application/json\" },\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"delete run from annotation queue\");\n    }\n    /**\n     * Get the size of an annotation queue.\n     * @param queueId - The ID of the annotation queue\n     */\n    async getSizeFromAnnotationQueue(queueId) {\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/annotation-queues/${assertUuid(queueId, \"queueId\")}/size`, {\n            method: \"GET\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"get size from annotation queue\");\n        return await response.json();\n    }\n    async _currentTenantIsOwner(owner) {\n        const settings = await this._getSettings();\n        return owner == \"-\" || settings.tenant_handle === owner;\n    }\n    async _ownerConflictError(action, owner) {\n        const settings = await this._getSettings();\n        return new Error(`Cannot ${action} for another tenant.\\n\n      Current tenant: ${settings.tenant_handle}\\n\n      Requested tenant: ${owner}`);\n    }\n    async _getLatestCommitHash(promptOwnerAndName) {\n        const res = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/commits/${promptOwnerAndName}/?limit=${1}&offset=${0}`, {\n            method: \"GET\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        const json = await res.json();\n        if (!res.ok) {\n            const detail = typeof json.detail === \"string\"\n                ? json.detail\n                : JSON.stringify(json.detail);\n            const error = new Error(`Error ${res.status}: ${res.statusText}\\n${detail}`);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            error.statusCode = res.status;\n            throw error;\n        }\n        if (json.commits.length === 0) {\n            return undefined;\n        }\n        return json.commits[0].commit_hash;\n    }\n    async _likeOrUnlikePrompt(promptIdentifier, like) {\n        const [owner, promptName, _] = parsePromptIdentifier(promptIdentifier);\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/likes/${owner}/${promptName}`, {\n            method: \"POST\",\n            body: JSON.stringify({ like: like }),\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, `${like ? \"like\" : \"unlike\"} prompt`);\n        return await response.json();\n    }\n    async _getPromptUrl(promptIdentifier) {\n        const [owner, promptName, commitHash] = parsePromptIdentifier(promptIdentifier);\n        if (!(await this._currentTenantIsOwner(owner))) {\n            if (commitHash !== \"latest\") {\n                return `${this.getHostUrl()}/hub/${owner}/${promptName}/${commitHash.substring(0, 8)}`;\n            }\n            else {\n                return `${this.getHostUrl()}/hub/${owner}/${promptName}`;\n            }\n        }\n        else {\n            const settings = await this._getSettings();\n            if (commitHash !== \"latest\") {\n                return `${this.getHostUrl()}/prompts/${promptName}/${commitHash.substring(0, 8)}?organizationId=${settings.id}`;\n            }\n            else {\n                return `${this.getHostUrl()}/prompts/${promptName}?organizationId=${settings.id}`;\n            }\n        }\n    }\n    async promptExists(promptIdentifier) {\n        const prompt = await this.getPrompt(promptIdentifier);\n        return !!prompt;\n    }\n    async likePrompt(promptIdentifier) {\n        return this._likeOrUnlikePrompt(promptIdentifier, true);\n    }\n    async unlikePrompt(promptIdentifier) {\n        return this._likeOrUnlikePrompt(promptIdentifier, false);\n    }\n    async *listCommits(promptOwnerAndName) {\n        for await (const commits of this._getPaginated(`/commits/${promptOwnerAndName}/`, new URLSearchParams(), (res) => res.commits)) {\n            yield* commits;\n        }\n    }\n    async *listPrompts(options) {\n        const params = new URLSearchParams();\n        params.append(\"sort_field\", options?.sortField ?? \"updated_at\");\n        params.append(\"sort_direction\", \"desc\");\n        params.append(\"is_archived\", (!!options?.isArchived).toString());\n        if (options?.isPublic !== undefined) {\n            params.append(\"is_public\", options.isPublic.toString());\n        }\n        if (options?.query) {\n            params.append(\"query\", options.query);\n        }\n        for await (const prompts of this._getPaginated(\"/repos\", params, (res) => res.repos)) {\n            yield* prompts;\n        }\n    }\n    async getPrompt(promptIdentifier) {\n        const [owner, promptName, _] = parsePromptIdentifier(promptIdentifier);\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/repos/${owner}/${promptName}`, {\n            method: \"GET\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        if (response.status === 404) {\n            return null;\n        }\n        await raiseForStatus(response, \"get prompt\");\n        const result = await response.json();\n        if (result.repo) {\n            return result.repo;\n        }\n        else {\n            return null;\n        }\n    }\n    async createPrompt(promptIdentifier, options) {\n        const settings = await this._getSettings();\n        if (options?.isPublic && !settings.tenant_handle) {\n            throw new Error(`Cannot create a public prompt without first\\n\n        creating a LangChain Hub handle. \n        You can add a handle by creating a public prompt at:\\n\n        https://smith.langchain.com/prompts`);\n        }\n        const [owner, promptName, _] = parsePromptIdentifier(promptIdentifier);\n        if (!(await this._currentTenantIsOwner(owner))) {\n            throw await this._ownerConflictError(\"create a prompt\", owner);\n        }\n        const data = {\n            repo_handle: promptName,\n            ...(options?.description && { description: options.description }),\n            ...(options?.readme && { readme: options.readme }),\n            ...(options?.tags && { tags: options.tags }),\n            is_public: !!options?.isPublic,\n        };\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/repos/`, {\n            method: \"POST\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(data),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"create prompt\");\n        const { repo } = await response.json();\n        return repo;\n    }\n    async createCommit(promptIdentifier, object, options) {\n        if (!(await this.promptExists(promptIdentifier))) {\n            throw new Error(\"Prompt does not exist, you must create it first.\");\n        }\n        const [owner, promptName, _] = parsePromptIdentifier(promptIdentifier);\n        const resolvedParentCommitHash = options?.parentCommitHash === \"latest\" || !options?.parentCommitHash\n            ? await this._getLatestCommitHash(`${owner}/${promptName}`)\n            : options?.parentCommitHash;\n        const payload = {\n            manifest: JSON.parse(JSON.stringify(object)),\n            parent_commit: resolvedParentCommitHash,\n        };\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/commits/${owner}/${promptName}`, {\n            method: \"POST\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(payload),\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"create commit\");\n        const result = await response.json();\n        return this._getPromptUrl(`${owner}/${promptName}${result.commit_hash ? `:${result.commit_hash}` : \"\"}`);\n    }\n    /**\n     * Update examples with attachments using multipart form data.\n     * @param updates List of ExampleUpdateWithAttachments objects to upsert\n     * @returns Promise with the update response\n     */\n    async updateExamplesMultipart(datasetId, updates = []) {\n        return this._updateExamplesMultipart(datasetId, updates);\n    }\n    async _updateExamplesMultipart(datasetId, updates = []) {\n        if (!(await this._getMultiPartSupport())) {\n            throw new Error(\"Your LangSmith deployment does not allow using the multipart examples endpoint, please upgrade your deployment to the latest version.\");\n        }\n        const formData = new FormData();\n        for (const example of updates) {\n            const exampleId = example.id;\n            // Prepare the main example body\n            const exampleBody = {\n                ...(example.metadata && { metadata: example.metadata }),\n                ...(example.split && { split: example.split }),\n            };\n            // Add main example data\n            const stringifiedExample = serializePayloadForTracing(exampleBody);\n            const exampleBlob = new Blob([stringifiedExample], {\n                type: \"application/json\",\n            });\n            formData.append(exampleId, exampleBlob);\n            // Add inputs if present\n            if (example.inputs) {\n                const stringifiedInputs = serializePayloadForTracing(example.inputs);\n                const inputsBlob = new Blob([stringifiedInputs], {\n                    type: \"application/json\",\n                });\n                formData.append(`${exampleId}.inputs`, inputsBlob);\n            }\n            // Add outputs if present\n            if (example.outputs) {\n                const stringifiedOutputs = serializePayloadForTracing(example.outputs);\n                const outputsBlob = new Blob([stringifiedOutputs], {\n                    type: \"application/json\",\n                });\n                formData.append(`${exampleId}.outputs`, outputsBlob);\n            }\n            // Add attachments if present\n            if (example.attachments) {\n                for (const [name, attachment] of Object.entries(example.attachments)) {\n                    let mimeType;\n                    let data;\n                    if (Array.isArray(attachment)) {\n                        [mimeType, data] = attachment;\n                    }\n                    else {\n                        mimeType = attachment.mimeType;\n                        data = attachment.data;\n                    }\n                    const attachmentBlob = new Blob([data], {\n                        type: `${mimeType}; length=${data.byteLength}`,\n                    });\n                    formData.append(`${exampleId}.attachment.${name}`, attachmentBlob);\n                }\n            }\n            if (example.attachments_operations) {\n                const stringifiedAttachmentsOperations = serializePayloadForTracing(example.attachments_operations);\n                const attachmentsOperationsBlob = new Blob([stringifiedAttachmentsOperations], {\n                    type: \"application/json\",\n                });\n                formData.append(`${exampleId}.attachments_operations`, attachmentsOperationsBlob);\n            }\n        }\n        const datasetIdToUse = datasetId ?? updates[0]?.dataset_id;\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/v1/platform/datasets/${datasetIdToUse}/examples`, {\n            method: \"PATCH\",\n            headers: this.headers,\n            body: formData,\n        });\n        const result = await response.json();\n        return result;\n    }\n    /**\n     * Upload examples with attachments using multipart form data.\n     * @param uploads List of ExampleUploadWithAttachments objects to upload\n     * @returns Promise with the upload response\n     * @deprecated This method is deprecated and will be removed in future LangSmith versions, please use `createExamples` instead\n     */\n    async uploadExamplesMultipart(datasetId, uploads = []) {\n        return this._uploadExamplesMultipart(datasetId, uploads);\n    }\n    async _uploadExamplesMultipart(datasetId, uploads = []) {\n        if (!(await this._getMultiPartSupport())) {\n            throw new Error(\"Your LangSmith deployment does not allow using the multipart examples endpoint, please upgrade your deployment to the latest version.\");\n        }\n        const formData = new FormData();\n        for (const example of uploads) {\n            const exampleId = (example.id ?? uuid.v4()).toString();\n            // Prepare the main example body\n            const exampleBody = {\n                created_at: example.created_at,\n                ...(example.metadata && { metadata: example.metadata }),\n                ...(example.split && { split: example.split }),\n                ...(example.source_run_id && { source_run_id: example.source_run_id }),\n                ...(example.use_source_run_io && {\n                    use_source_run_io: example.use_source_run_io,\n                }),\n                ...(example.use_source_run_attachments && {\n                    use_source_run_attachments: example.use_source_run_attachments,\n                }),\n            };\n            // Add main example data\n            const stringifiedExample = serializePayloadForTracing(exampleBody);\n            const exampleBlob = new Blob([stringifiedExample], {\n                type: \"application/json\",\n            });\n            formData.append(exampleId, exampleBlob);\n            // Add inputs if present\n            if (example.inputs) {\n                const stringifiedInputs = serializePayloadForTracing(example.inputs);\n                const inputsBlob = new Blob([stringifiedInputs], {\n                    type: \"application/json\",\n                });\n                formData.append(`${exampleId}.inputs`, inputsBlob);\n            }\n            // Add outputs if present\n            if (example.outputs) {\n                const stringifiedOutputs = serializePayloadForTracing(example.outputs);\n                const outputsBlob = new Blob([stringifiedOutputs], {\n                    type: \"application/json\",\n                });\n                formData.append(`${exampleId}.outputs`, outputsBlob);\n            }\n            // Add attachments if present\n            if (example.attachments) {\n                for (const [name, attachment] of Object.entries(example.attachments)) {\n                    let mimeType;\n                    let data;\n                    if (Array.isArray(attachment)) {\n                        [mimeType, data] = attachment;\n                    }\n                    else {\n                        mimeType = attachment.mimeType;\n                        data = attachment.data;\n                    }\n                    const attachmentBlob = new Blob([data], {\n                        type: `${mimeType}; length=${data.byteLength}`,\n                    });\n                    formData.append(`${exampleId}.attachment.${name}`, attachmentBlob);\n                }\n            }\n        }\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/v1/platform/datasets/${datasetId}/examples`, {\n            method: \"POST\",\n            headers: this.headers,\n            body: formData,\n        });\n        await raiseForStatus(response, \"upload examples\");\n        const result = await response.json();\n        return result;\n    }\n    async updatePrompt(promptIdentifier, options) {\n        if (!(await this.promptExists(promptIdentifier))) {\n            throw new Error(\"Prompt does not exist, you must create it first.\");\n        }\n        const [owner, promptName] = parsePromptIdentifier(promptIdentifier);\n        if (!(await this._currentTenantIsOwner(owner))) {\n            throw await this._ownerConflictError(\"update a prompt\", owner);\n        }\n        const payload = {};\n        if (options?.description !== undefined)\n            payload.description = options.description;\n        if (options?.readme !== undefined)\n            payload.readme = options.readme;\n        if (options?.tags !== undefined)\n            payload.tags = options.tags;\n        if (options?.isPublic !== undefined)\n            payload.is_public = options.isPublic;\n        if (options?.isArchived !== undefined)\n            payload.is_archived = options.isArchived;\n        // Check if payload is empty\n        if (Object.keys(payload).length === 0) {\n            throw new Error(\"No valid update options provided\");\n        }\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/repos/${owner}/${promptName}`, {\n            method: \"PATCH\",\n            body: JSON.stringify(payload),\n            headers: {\n                ...this.headers,\n                \"Content-Type\": \"application/json\",\n            },\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"update prompt\");\n        return response.json();\n    }\n    async deletePrompt(promptIdentifier) {\n        if (!(await this.promptExists(promptIdentifier))) {\n            throw new Error(\"Prompt does not exist, you must create it first.\");\n        }\n        const [owner, promptName, _] = parsePromptIdentifier(promptIdentifier);\n        if (!(await this._currentTenantIsOwner(owner))) {\n            throw await this._ownerConflictError(\"delete a prompt\", owner);\n        }\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/repos/${owner}/${promptName}`, {\n            method: \"DELETE\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        return await response.json();\n    }\n    async pullPromptCommit(promptIdentifier, options) {\n        const [owner, promptName, commitHash] = parsePromptIdentifier(promptIdentifier);\n        const response = await this.caller.call(_getFetchImplementation(this.debug), `${this.apiUrl}/commits/${owner}/${promptName}/${commitHash}${options?.includeModel ? \"?include_model=true\" : \"\"}`, {\n            method: \"GET\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n            ...this.fetchOptions,\n        });\n        await raiseForStatus(response, \"pull prompt commit\");\n        const result = await response.json();\n        return {\n            owner,\n            repo: promptName,\n            commit_hash: result.commit_hash,\n            manifest: result.manifest,\n            examples: result.examples,\n        };\n    }\n    /**\n     * This method should not be used directly, use `import { pull } from \"langchain/hub\"` instead.\n     * Using this method directly returns the JSON string of the prompt rather than a LangChain object.\n     * @private\n     */\n    async _pullPrompt(promptIdentifier, options) {\n        const promptObject = await this.pullPromptCommit(promptIdentifier, {\n            includeModel: options?.includeModel,\n        });\n        const prompt = JSON.stringify(promptObject.manifest);\n        return prompt;\n    }\n    async pushPrompt(promptIdentifier, options) {\n        // Create or update prompt metadata\n        if (await this.promptExists(promptIdentifier)) {\n            if (options && Object.keys(options).some((key) => key !== \"object\")) {\n                await this.updatePrompt(promptIdentifier, {\n                    description: options?.description,\n                    readme: options?.readme,\n                    tags: options?.tags,\n                    isPublic: options?.isPublic,\n                });\n            }\n        }\n        else {\n            await this.createPrompt(promptIdentifier, {\n                description: options?.description,\n                readme: options?.readme,\n                tags: options?.tags,\n                isPublic: options?.isPublic,\n            });\n        }\n        if (!options?.object) {\n            return await this._getPromptUrl(promptIdentifier);\n        }\n        // Create a commit with the new manifest\n        const url = await this.createCommit(promptIdentifier, options?.object, {\n            parentCommitHash: options?.parentCommitHash,\n        });\n        return url;\n    }\n    /**\n     * Clone a public dataset to your own langsmith tenant.\n     * This operation is idempotent. If you already have a dataset with the given name,\n     * this function will do nothing.\n  \n     * @param {string} tokenOrUrl The token of the public dataset to clone.\n     * @param {Object} [options] Additional options for cloning the dataset.\n     * @param {string} [options.sourceApiUrl] The URL of the langsmith server where the data is hosted. Defaults to the API URL of your current client.\n     * @param {string} [options.datasetName] The name of the dataset to create in your tenant. Defaults to the name of the public dataset.\n     * @returns {Promise<void>}\n     */\n    async clonePublicDataset(tokenOrUrl, options = {}) {\n        const { sourceApiUrl = this.apiUrl, datasetName } = options;\n        const [parsedApiUrl, tokenUuid] = this.parseTokenOrUrl(tokenOrUrl, sourceApiUrl);\n        const sourceClient = new Client({\n            apiUrl: parsedApiUrl,\n            // Placeholder API key not needed anymore in most cases, but\n            // some private deployments may have API key-based rate limiting\n            // that would cause this to fail if we provide no value.\n            apiKey: \"placeholder\",\n        });\n        const ds = await sourceClient.readSharedDataset(tokenUuid);\n        const finalDatasetName = datasetName || ds.name;\n        try {\n            if (await this.hasDataset({ datasetId: finalDatasetName })) {\n                console.log(`Dataset ${finalDatasetName} already exists in your tenant. Skipping.`);\n                return;\n            }\n        }\n        catch (_) {\n            // `.hasDataset` will throw an error if the dataset does not exist.\n            // no-op in that case\n        }\n        // Fetch examples first, then create the dataset\n        const examples = await sourceClient.listSharedExamples(tokenUuid);\n        const dataset = await this.createDataset(finalDatasetName, {\n            description: ds.description,\n            dataType: ds.data_type || \"kv\",\n            inputsSchema: ds.inputs_schema_definition ?? undefined,\n            outputsSchema: ds.outputs_schema_definition ?? undefined,\n        });\n        try {\n            await this.createExamples({\n                inputs: examples.map((e) => e.inputs),\n                outputs: examples.flatMap((e) => (e.outputs ? [e.outputs] : [])),\n                datasetId: dataset.id,\n            });\n        }\n        catch (e) {\n            console.error(`An error occurred while creating dataset ${finalDatasetName}. ` +\n                \"You should delete it manually.\");\n            throw e;\n        }\n    }\n    parseTokenOrUrl(urlOrToken, apiUrl, numParts = 2, kind = \"dataset\") {\n        // Try parsing as UUID\n        try {\n            assertUuid(urlOrToken); // Will throw if it's not a UUID.\n            return [apiUrl, urlOrToken];\n        }\n        catch (_) {\n            // no-op if it's not a uuid\n        }\n        // Parse as URL\n        try {\n            const parsedUrl = new URL(urlOrToken);\n            const pathParts = parsedUrl.pathname\n                .split(\"/\")\n                .filter((part) => part !== \"\");\n            if (pathParts.length >= numParts) {\n                const tokenUuid = pathParts[pathParts.length - numParts];\n                return [apiUrl, tokenUuid];\n            }\n            else {\n                throw new Error(`Invalid public ${kind} URL: ${urlOrToken}`);\n            }\n        }\n        catch (error) {\n            throw new Error(`Invalid public ${kind} URL or token: ${urlOrToken}`);\n        }\n    }\n    /**\n     * Awaits all pending trace batches. Useful for environments where\n     * you need to be sure that all tracing requests finish before execution ends,\n     * such as serverless environments.\n     *\n     * @example\n     * ```\n     * import { Client } from \"langsmith\";\n     *\n     * const client = new Client();\n     *\n     * try {\n     *   // Tracing happens here\n     *   ...\n     * } finally {\n     *   await client.awaitPendingTraceBatches();\n     * }\n     * ```\n     *\n     * @returns A promise that resolves once all currently pending traces have sent.\n     */\n    awaitPendingTraceBatches() {\n        if (this.manualFlushMode) {\n            console.warn(\"[WARNING]: When tracing in manual flush mode, you must call `await client.flush()` manually to submit trace batches.\");\n            return Promise.resolve();\n        }\n        return Promise.all([\n            ...this.autoBatchQueue.items.map(({ itemPromise }) => itemPromise),\n            this.batchIngestCaller.queue.onIdle(),\n        ]);\n    }\n}\nfunction isExampleCreate(input) {\n    return \"dataset_id\" in input || \"dataset_name\" in input;\n}\n","// Inlined from https://github.com/flexdinesh/browser-or-node\nimport { __version__ } from \"../index.js\";\nlet globalEnv;\nexport const isBrowser = () => typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\nexport const isWebWorker = () => typeof globalThis === \"object\" &&\n    globalThis.constructor &&\n    globalThis.constructor.name === \"DedicatedWorkerGlobalScope\";\nexport const isJsDom = () => (typeof window !== \"undefined\" && window.name === \"nodejs\") ||\n    (typeof navigator !== \"undefined\" &&\n        (navigator.userAgent.includes(\"Node.js\") ||\n            navigator.userAgent.includes(\"jsdom\")));\n// Supabase Edge Function provides a `Deno` global object\n// without `version` property\nexport const isDeno = () => typeof Deno !== \"undefined\";\n// Mark not-as-node if in Supabase Edge Function\nexport const isNode = () => typeof process !== \"undefined\" &&\n    typeof process.versions !== \"undefined\" &&\n    typeof process.versions.node !== \"undefined\" &&\n    !isDeno();\nexport const getEnv = () => {\n    if (globalEnv) {\n        return globalEnv;\n    }\n    if (isBrowser()) {\n        globalEnv = \"browser\";\n    }\n    else if (isNode()) {\n        globalEnv = \"node\";\n    }\n    else if (isWebWorker()) {\n        globalEnv = \"webworker\";\n    }\n    else if (isJsDom()) {\n        globalEnv = \"jsdom\";\n    }\n    else if (isDeno()) {\n        globalEnv = \"deno\";\n    }\n    else {\n        globalEnv = \"other\";\n    }\n    return globalEnv;\n};\nlet runtimeEnvironment;\nexport function getRuntimeEnvironment() {\n    if (runtimeEnvironment === undefined) {\n        const env = getEnv();\n        const releaseEnv = getShas();\n        runtimeEnvironment = {\n            library: \"langsmith\",\n            runtime: env,\n            sdk: \"langsmith-js\",\n            sdk_version: __version__,\n            ...releaseEnv,\n        };\n    }\n    return runtimeEnvironment;\n}\n/**\n * Retrieves the LangChain-specific environment variables from the current runtime environment.\n * Sensitive keys (containing the word \"key\", \"token\", or \"secret\") have their values redacted for security.\n *\n * @returns {Record<string, string>}\n *  - A record of LangChain-specific environment variables.\n */\nexport function getLangChainEnvVars() {\n    const allEnvVars = getEnvironmentVariables() || {};\n    const envVars = {};\n    for (const [key, value] of Object.entries(allEnvVars)) {\n        if (key.startsWith(\"LANGCHAIN_\") && typeof value === \"string\") {\n            envVars[key] = value;\n        }\n    }\n    for (const key in envVars) {\n        if ((key.toLowerCase().includes(\"key\") ||\n            key.toLowerCase().includes(\"secret\") ||\n            key.toLowerCase().includes(\"token\")) &&\n            typeof envVars[key] === \"string\") {\n            const value = envVars[key];\n            envVars[key] =\n                value.slice(0, 2) + \"*\".repeat(value.length - 4) + value.slice(-2);\n        }\n    }\n    return envVars;\n}\n/**\n * Retrieves the LangChain-specific metadata from the current runtime environment.\n *\n * @returns {Record<string, string>}\n *  - A record of LangChain-specific metadata environment variables.\n */\nexport function getLangChainEnvVarsMetadata() {\n    const allEnvVars = getEnvironmentVariables() || {};\n    const envVars = {};\n    const excluded = [\n        \"LANGCHAIN_API_KEY\",\n        \"LANGCHAIN_ENDPOINT\",\n        \"LANGCHAIN_TRACING_V2\",\n        \"LANGCHAIN_PROJECT\",\n        \"LANGCHAIN_SESSION\",\n        \"LANGSMITH_API_KEY\",\n        \"LANGSMITH_ENDPOINT\",\n        \"LANGSMITH_TRACING_V2\",\n        \"LANGSMITH_PROJECT\",\n        \"LANGSMITH_SESSION\",\n    ];\n    for (const [key, value] of Object.entries(allEnvVars)) {\n        if ((key.startsWith(\"LANGCHAIN_\") || key.startsWith(\"LANGSMITH_\")) &&\n            typeof value === \"string\" &&\n            !excluded.includes(key) &&\n            !key.toLowerCase().includes(\"key\") &&\n            !key.toLowerCase().includes(\"secret\") &&\n            !key.toLowerCase().includes(\"token\")) {\n            if (key === \"LANGCHAIN_REVISION_ID\") {\n                envVars[\"revision_id\"] = value;\n            }\n            else {\n                envVars[key] = value;\n            }\n        }\n    }\n    return envVars;\n}\n/**\n * Retrieves the environment variables from the current runtime environment.\n *\n * This function is designed to operate in a variety of JS environments,\n * including Node.js, Deno, browsers, etc.\n *\n * @returns {Record<string, string> | undefined}\n *  - A record of environment variables if available.\n *  - `undefined` if the environment does not support or allows access to environment variables.\n */\nexport function getEnvironmentVariables() {\n    try {\n        // Check for Node.js environment\n        // eslint-disable-next-line no-process-env\n        if (typeof process !== \"undefined\" && process.env) {\n            // eslint-disable-next-line no-process-env\n            return Object.entries(process.env).reduce((acc, [key, value]) => {\n                acc[key] = String(value);\n                return acc;\n            }, {});\n        }\n        // For browsers and other environments, we may not have direct access to env variables\n        // Return undefined or any other fallback as required.\n        return undefined;\n    }\n    catch (e) {\n        // Catch any errors that might occur while trying to access environment variables\n        return undefined;\n    }\n}\nexport function getEnvironmentVariable(name) {\n    // Certain Deno setups will throw an error if you try to access environment variables\n    // https://github.com/hwchase17/langchainjs/issues/1412\n    try {\n        return typeof process !== \"undefined\"\n            ? // eslint-disable-next-line no-process-env\n                process.env?.[name]\n            : undefined;\n    }\n    catch (e) {\n        return undefined;\n    }\n}\nexport function getLangSmithEnvironmentVariable(name) {\n    return (getEnvironmentVariable(`LANGSMITH_${name}`) ||\n        getEnvironmentVariable(`LANGCHAIN_${name}`));\n}\nexport function setEnvironmentVariable(name, value) {\n    if (typeof process !== \"undefined\") {\n        // eslint-disable-next-line no-process-env\n        process.env[name] = value;\n    }\n}\nlet cachedCommitSHAs;\n/**\n * Get the Git commit SHA from common environment variables\n * used by different CI/CD platforms.\n * @returns {string | undefined} The Git commit SHA or undefined if not found.\n */\nexport function getShas() {\n    if (cachedCommitSHAs !== undefined) {\n        return cachedCommitSHAs;\n    }\n    const common_release_envs = [\n        \"VERCEL_GIT_COMMIT_SHA\",\n        \"NEXT_PUBLIC_VERCEL_GIT_COMMIT_SHA\",\n        \"COMMIT_REF\",\n        \"RENDER_GIT_COMMIT\",\n        \"CI_COMMIT_SHA\",\n        \"CIRCLE_SHA1\",\n        \"CF_PAGES_COMMIT_SHA\",\n        \"REACT_APP_GIT_SHA\",\n        \"SOURCE_VERSION\",\n        \"GITHUB_SHA\",\n        \"TRAVIS_COMMIT\",\n        \"GIT_COMMIT\",\n        \"BUILD_VCS_NUMBER\",\n        \"bamboo_planRepository_revision\",\n        \"Build.SourceVersion\",\n        \"BITBUCKET_COMMIT\",\n        \"DRONE_COMMIT_SHA\",\n        \"SEMAPHORE_GIT_SHA\",\n        \"BUILDKITE_COMMIT\",\n    ];\n    const shas = {};\n    for (const env of common_release_envs) {\n        const envVar = getEnvironmentVariable(env);\n        if (envVar !== undefined) {\n            shas[env] = envVar;\n        }\n    }\n    cachedCommitSHAs = shas;\n    return shas;\n}\n","export { Client, } from \"./client.js\";\nexport { RunTree } from \"./run_trees.js\";\nexport { overrideFetchImplementation } from \"./singletons/fetch.js\";\n// Update using yarn bump-version\nexport const __version__ = \"0.3.21\";\n","import { getLangSmithEnvironmentVariable } from \"./utils/env.js\";\nexport const isTracingEnabled = (tracingEnabled) => {\n    if (tracingEnabled !== undefined) {\n        return tracingEnabled;\n    }\n    const envVars = [\"TRACING_V2\", \"TRACING\"];\n    return !!envVars.find((envVar) => getLangSmithEnvironmentVariable(envVar) === \"true\");\n};\n","export const _LC_CONTEXT_VARIABLES_KEY = Symbol.for(\"lc:context_variables\");\n","import * as uuid from \"uuid\";\nimport { getEnvironmentVariable, getLangSmithEnvironmentVariable, getRuntimeEnvironment, } from \"./utils/env.js\";\nimport { Client } from \"./client.js\";\nimport { isTracingEnabled } from \"./env.js\";\nimport { warnOnce } from \"./utils/warn.js\";\nimport { _LC_CONTEXT_VARIABLES_KEY } from \"./singletons/constants.js\";\nfunction stripNonAlphanumeric(input) {\n    return input.replace(/[-:.]/g, \"\");\n}\nexport function convertToDottedOrderFormat(epoch, runId, executionOrder = 1) {\n    // Date only has millisecond precision, so we use the microseconds to break\n    // possible ties, avoiding incorrect run order\n    const paddedOrder = executionOrder.toFixed(0).slice(0, 3).padStart(3, \"0\");\n    return (stripNonAlphanumeric(`${new Date(epoch).toISOString().slice(0, -1)}${paddedOrder}Z`) + runId);\n}\n/**\n * Baggage header information\n */\nclass Baggage {\n    constructor(metadata, tags, project_name) {\n        Object.defineProperty(this, \"metadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"tags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"project_name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.metadata = metadata;\n        this.tags = tags;\n        this.project_name = project_name;\n    }\n    static fromHeader(value) {\n        const items = value.split(\",\");\n        let metadata = {};\n        let tags = [];\n        let project_name;\n        for (const item of items) {\n            const [key, uriValue] = item.split(\"=\");\n            const value = decodeURIComponent(uriValue);\n            if (key === \"langsmith-metadata\") {\n                metadata = JSON.parse(value);\n            }\n            else if (key === \"langsmith-tags\") {\n                tags = value.split(\",\");\n            }\n            else if (key === \"langsmith-project\") {\n                project_name = value;\n            }\n        }\n        return new Baggage(metadata, tags, project_name);\n    }\n    toHeader() {\n        const items = [];\n        if (this.metadata && Object.keys(this.metadata).length > 0) {\n            items.push(`langsmith-metadata=${encodeURIComponent(JSON.stringify(this.metadata))}`);\n        }\n        if (this.tags && this.tags.length > 0) {\n            items.push(`langsmith-tags=${encodeURIComponent(this.tags.join(\",\"))}`);\n        }\n        if (this.project_name) {\n            items.push(`langsmith-project=${encodeURIComponent(this.project_name)}`);\n        }\n        return items.join(\",\");\n    }\n}\nexport class RunTree {\n    constructor(originalConfig) {\n        Object.defineProperty(this, \"id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"run_type\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"project_name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"parent_run\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"child_runs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"start_time\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"end_time\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"extra\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"tags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"error\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"serialized\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"inputs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"outputs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"reference_example_id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"events\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"trace_id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"dotted_order\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"tracingEnabled\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"execution_order\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"child_execution_order\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /**\n         * Attachments associated with the run.\n         * Each entry is a tuple of [mime_type, bytes]\n         */\n        Object.defineProperty(this, \"attachments\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // If you pass in a run tree directly, return a shallow clone\n        if (isRunTree(originalConfig)) {\n            Object.assign(this, { ...originalConfig });\n            return;\n        }\n        const defaultConfig = RunTree.getDefaultConfig();\n        const { metadata, ...config } = originalConfig;\n        const client = config.client ?? RunTree.getSharedClient();\n        const dedupedMetadata = {\n            ...metadata,\n            ...config?.extra?.metadata,\n        };\n        config.extra = { ...config.extra, metadata: dedupedMetadata };\n        Object.assign(this, { ...defaultConfig, ...config, client });\n        if (!this.trace_id) {\n            if (this.parent_run) {\n                this.trace_id = this.parent_run.trace_id ?? this.id;\n            }\n            else {\n                this.trace_id = this.id;\n            }\n        }\n        this.execution_order ??= 1;\n        this.child_execution_order ??= 1;\n        if (!this.dotted_order) {\n            const currentDottedOrder = convertToDottedOrderFormat(this.start_time, this.id, this.execution_order);\n            if (this.parent_run) {\n                this.dotted_order =\n                    this.parent_run.dotted_order + \".\" + currentDottedOrder;\n            }\n            else {\n                this.dotted_order = currentDottedOrder;\n            }\n        }\n    }\n    static getDefaultConfig() {\n        return {\n            id: uuid.v4(),\n            run_type: \"chain\",\n            project_name: getLangSmithEnvironmentVariable(\"PROJECT\") ??\n                getEnvironmentVariable(\"LANGCHAIN_SESSION\") ?? // TODO: Deprecate\n                \"default\",\n            child_runs: [],\n            api_url: getEnvironmentVariable(\"LANGCHAIN_ENDPOINT\") ?? \"http://localhost:1984\",\n            api_key: getEnvironmentVariable(\"LANGCHAIN_API_KEY\"),\n            caller_options: {},\n            start_time: Date.now(),\n            serialized: {},\n            inputs: {},\n            extra: {},\n        };\n    }\n    static getSharedClient() {\n        if (!RunTree.sharedClient) {\n            RunTree.sharedClient = new Client();\n        }\n        return RunTree.sharedClient;\n    }\n    createChild(config) {\n        const child_execution_order = this.child_execution_order + 1;\n        const child = new RunTree({\n            ...config,\n            parent_run: this,\n            project_name: this.project_name,\n            client: this.client,\n            tracingEnabled: this.tracingEnabled,\n            execution_order: child_execution_order,\n            child_execution_order: child_execution_order,\n        });\n        // Copy context vars over into the new run tree.\n        if (_LC_CONTEXT_VARIABLES_KEY in this) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            child[_LC_CONTEXT_VARIABLES_KEY] =\n                this[_LC_CONTEXT_VARIABLES_KEY];\n        }\n        const LC_CHILD = Symbol.for(\"lc:child_config\");\n        const presentConfig = config.extra?.[LC_CHILD] ??\n            this.extra[LC_CHILD];\n        // tracing for LangChain is defined by the _parentRunId and runMap of the tracer\n        if (isRunnableConfigLike(presentConfig)) {\n            const newConfig = { ...presentConfig };\n            const callbacks = isCallbackManagerLike(newConfig.callbacks)\n                ? newConfig.callbacks.copy?.()\n                : undefined;\n            if (callbacks) {\n                // update the parent run id\n                Object.assign(callbacks, { _parentRunId: child.id });\n                // only populate if we're in a newer LC.JS version\n                callbacks.handlers\n                    ?.find(isLangChainTracerLike)\n                    ?.updateFromRunTree?.(child);\n                newConfig.callbacks = callbacks;\n            }\n            child.extra[LC_CHILD] = newConfig;\n        }\n        // propagate child_execution_order upwards\n        const visited = new Set();\n        let current = this;\n        while (current != null && !visited.has(current.id)) {\n            visited.add(current.id);\n            current.child_execution_order = Math.max(current.child_execution_order, child_execution_order);\n            current = current.parent_run;\n        }\n        this.child_runs.push(child);\n        return child;\n    }\n    async end(outputs, error, endTime = Date.now(), metadata) {\n        this.outputs = this.outputs ?? outputs;\n        this.error = this.error ?? error;\n        this.end_time = this.end_time ?? endTime;\n        if (metadata && Object.keys(metadata).length > 0) {\n            this.extra = this.extra\n                ? { ...this.extra, metadata: { ...this.extra.metadata, ...metadata } }\n                : { metadata };\n        }\n    }\n    _convertToCreate(run, runtimeEnv, excludeChildRuns = true) {\n        const runExtra = run.extra ?? {};\n        if (!runExtra.runtime) {\n            runExtra.runtime = {};\n        }\n        if (runtimeEnv) {\n            for (const [k, v] of Object.entries(runtimeEnv)) {\n                if (!runExtra.runtime[k]) {\n                    runExtra.runtime[k] = v;\n                }\n            }\n        }\n        let child_runs;\n        let parent_run_id;\n        if (!excludeChildRuns) {\n            child_runs = run.child_runs.map((child_run) => this._convertToCreate(child_run, runtimeEnv, excludeChildRuns));\n            parent_run_id = undefined;\n        }\n        else {\n            parent_run_id = run.parent_run?.id;\n            child_runs = [];\n        }\n        const persistedRun = {\n            id: run.id,\n            name: run.name,\n            start_time: run.start_time,\n            end_time: run.end_time,\n            run_type: run.run_type,\n            reference_example_id: run.reference_example_id,\n            extra: runExtra,\n            serialized: run.serialized,\n            error: run.error,\n            inputs: run.inputs,\n            outputs: run.outputs,\n            session_name: run.project_name,\n            child_runs: child_runs,\n            parent_run_id: parent_run_id,\n            trace_id: run.trace_id,\n            dotted_order: run.dotted_order,\n            tags: run.tags,\n            attachments: run.attachments,\n        };\n        return persistedRun;\n    }\n    async postRun(excludeChildRuns = true) {\n        try {\n            const runtimeEnv = getRuntimeEnvironment();\n            const runCreate = await this._convertToCreate(this, runtimeEnv, true);\n            await this.client.createRun(runCreate);\n            if (!excludeChildRuns) {\n                warnOnce(\"Posting with excludeChildRuns=false is deprecated and will be removed in a future version.\");\n                for (const childRun of this.child_runs) {\n                    await childRun.postRun(false);\n                }\n            }\n        }\n        catch (error) {\n            console.error(`Error in postRun for run ${this.id}:`, error);\n        }\n    }\n    async patchRun() {\n        try {\n            const runUpdate = {\n                end_time: this.end_time,\n                error: this.error,\n                inputs: this.inputs,\n                outputs: this.outputs,\n                parent_run_id: this.parent_run?.id,\n                reference_example_id: this.reference_example_id,\n                extra: this.extra,\n                events: this.events,\n                dotted_order: this.dotted_order,\n                trace_id: this.trace_id,\n                tags: this.tags,\n                attachments: this.attachments,\n                session_name: this.project_name,\n            };\n            await this.client.updateRun(this.id, runUpdate);\n        }\n        catch (error) {\n            console.error(`Error in patchRun for run ${this.id}`, error);\n        }\n    }\n    toJSON() {\n        return this._convertToCreate(this, undefined, false);\n    }\n    /**\n     * Add an event to the run tree.\n     * @param event - A single event or string to add\n     */\n    addEvent(event) {\n        if (!this.events) {\n            this.events = [];\n        }\n        if (typeof event === \"string\") {\n            this.events.push({\n                name: \"event\",\n                time: new Date().toISOString(),\n                message: event,\n            });\n        }\n        else {\n            this.events.push({\n                ...event,\n                time: event.time ?? new Date().toISOString(),\n            });\n        }\n    }\n    static fromRunnableConfig(parentConfig, props) {\n        // We only handle the callback manager case for now\n        const callbackManager = parentConfig?.callbacks;\n        let parentRun;\n        let projectName;\n        let client;\n        let tracingEnabled = isTracingEnabled();\n        if (callbackManager) {\n            const parentRunId = callbackManager?.getParentRunId?.() ?? \"\";\n            const langChainTracer = callbackManager?.handlers?.find((handler) => handler?.name == \"langchain_tracer\");\n            parentRun = langChainTracer?.getRun?.(parentRunId);\n            projectName = langChainTracer?.projectName;\n            client = langChainTracer?.client;\n            tracingEnabled = tracingEnabled || !!langChainTracer;\n        }\n        if (!parentRun) {\n            return new RunTree({\n                ...props,\n                client,\n                tracingEnabled,\n                project_name: projectName,\n            });\n        }\n        const parentRunTree = new RunTree({\n            name: parentRun.name,\n            id: parentRun.id,\n            trace_id: parentRun.trace_id,\n            dotted_order: parentRun.dotted_order,\n            client,\n            tracingEnabled,\n            project_name: projectName,\n            tags: [\n                ...new Set((parentRun?.tags ?? []).concat(parentConfig?.tags ?? [])),\n            ],\n            extra: {\n                metadata: {\n                    ...parentRun?.extra?.metadata,\n                    ...parentConfig?.metadata,\n                },\n            },\n        });\n        return parentRunTree.createChild(props);\n    }\n    static fromDottedOrder(dottedOrder) {\n        return this.fromHeaders({ \"langsmith-trace\": dottedOrder });\n    }\n    static fromHeaders(headers, inheritArgs) {\n        const rawHeaders = \"get\" in headers && typeof headers.get === \"function\"\n            ? {\n                \"langsmith-trace\": headers.get(\"langsmith-trace\"),\n                baggage: headers.get(\"baggage\"),\n            }\n            : headers;\n        const headerTrace = rawHeaders[\"langsmith-trace\"];\n        if (!headerTrace || typeof headerTrace !== \"string\")\n            return undefined;\n        const parentDottedOrder = headerTrace.trim();\n        const parsedDottedOrder = parentDottedOrder.split(\".\").map((part) => {\n            const [strTime, uuid] = part.split(\"Z\");\n            return { strTime, time: Date.parse(strTime + \"Z\"), uuid };\n        });\n        const traceId = parsedDottedOrder[0].uuid;\n        const config = {\n            ...inheritArgs,\n            name: inheritArgs?.[\"name\"] ?? \"parent\",\n            run_type: inheritArgs?.[\"run_type\"] ?? \"chain\",\n            start_time: inheritArgs?.[\"start_time\"] ?? Date.now(),\n            id: parsedDottedOrder.at(-1)?.uuid,\n            trace_id: traceId,\n            dotted_order: parentDottedOrder,\n        };\n        if (rawHeaders[\"baggage\"] && typeof rawHeaders[\"baggage\"] === \"string\") {\n            const baggage = Baggage.fromHeader(rawHeaders[\"baggage\"]);\n            config.metadata = baggage.metadata;\n            config.tags = baggage.tags;\n            config.project_name = baggage.project_name;\n        }\n        return new RunTree(config);\n    }\n    toHeaders(headers) {\n        const result = {\n            \"langsmith-trace\": this.dotted_order,\n            baggage: new Baggage(this.extra?.metadata, this.tags, this.project_name).toHeader(),\n        };\n        if (headers) {\n            for (const [key, value] of Object.entries(result)) {\n                headers.set(key, value);\n            }\n        }\n        return result;\n    }\n}\nObject.defineProperty(RunTree, \"sharedClient\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: null\n});\nexport function isRunTree(x) {\n    return (x !== undefined &&\n        typeof x.createChild === \"function\" &&\n        typeof x.postRun === \"function\");\n}\nfunction isLangChainTracerLike(x) {\n    return (typeof x === \"object\" &&\n        x != null &&\n        typeof x.name === \"string\" &&\n        x.name === \"langchain_tracer\");\n}\nfunction containsLangChainTracerLike(x) {\n    return (Array.isArray(x) && x.some((callback) => isLangChainTracerLike(callback)));\n}\nfunction isCallbackManagerLike(x) {\n    return (typeof x === \"object\" &&\n        x != null &&\n        Array.isArray(x.handlers));\n}\nexport function isRunnableConfigLike(x) {\n    // Check that it's an object with a callbacks arg\n    // that has either a CallbackManagerLike object with a langchain tracer within it\n    // or an array with a LangChainTracerLike object within it\n    return (x !== undefined &&\n        typeof x.callbacks === \"object\" &&\n        // Callback manager with a langchain tracer\n        (containsLangChainTracerLike(x.callbacks?.handlers) ||\n            // Or it's an array with a LangChainTracerLike object within it\n            containsLangChainTracerLike(x.callbacks)));\n}\n","import { isRunTree } from \"../run_trees.js\";\nclass MockAsyncLocalStorage {\n    getStore() {\n        return undefined;\n    }\n    run(_, callback) {\n        return callback();\n    }\n}\nconst TRACING_ALS_KEY = Symbol.for(\"ls:tracing_async_local_storage\");\nconst mockAsyncLocalStorage = new MockAsyncLocalStorage();\nclass AsyncLocalStorageProvider {\n    getInstance() {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return globalThis[TRACING_ALS_KEY] ?? mockAsyncLocalStorage;\n    }\n    initializeGlobalInstance(instance) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if (globalThis[TRACING_ALS_KEY] === undefined) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            globalThis[TRACING_ALS_KEY] = instance;\n        }\n    }\n}\nexport const AsyncLocalStorageProviderSingleton = new AsyncLocalStorageProvider();\n/**\n * Return the current run tree from within a traceable-wrapped function.\n * Will throw an error if called outside of a traceable function.\n *\n * @returns The run tree for the given context.\n */\nexport const getCurrentRunTree = () => {\n    const runTree = AsyncLocalStorageProviderSingleton.getInstance().getStore();\n    if (!isRunTree(runTree)) {\n        throw new Error([\n            \"Could not get the current run tree.\",\n            \"\",\n            \"Please make sure you are calling this method within a traceable function and that tracing is enabled.\",\n        ].join(\"\\n\"));\n    }\n    return runTree;\n};\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function withRunTree(runTree, fn) {\n    const storage = AsyncLocalStorageProviderSingleton.getInstance();\n    return new Promise((resolve, reject) => {\n        storage.run(runTree, () => void Promise.resolve(fn()).then(resolve).catch(reject));\n    });\n}\nexport const ROOT = Symbol.for(\"langsmith:traceable:root\");\nexport function isTraceableFunction(x\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n) {\n    return typeof x === \"function\" && \"langsmith:traceable\" in x;\n}\n","// @ts-nocheck\n// Inlined because of ESM import issues\n/*!\n * https://github.com/Starcounter-Jack/JSON-Patch\n * (c) 2017-2022 Joachim Wester\n * MIT licensed\n */\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\nexport function hasOwnProperty(obj, key) {\n    return _hasOwnProperty.call(obj, key);\n}\nexport function _objectKeys(obj) {\n    if (Array.isArray(obj)) {\n        const keys = new Array(obj.length);\n        for (let k = 0; k < keys.length; k++) {\n            keys[k] = \"\" + k;\n        }\n        return keys;\n    }\n    if (Object.keys) {\n        return Object.keys(obj);\n    }\n    let keys = [];\n    for (let i in obj) {\n        if (hasOwnProperty(obj, i)) {\n            keys.push(i);\n        }\n    }\n    return keys;\n}\n/**\n * Deeply clone the object.\n * https://jsperf.com/deep-copy-vs-json-stringify-json-parse/25 (recursiveDeepCopy)\n * @param  {any} obj value to clone\n * @return {any} cloned obj\n */\nexport function _deepClone(obj) {\n    switch (typeof obj) {\n        case \"object\":\n            return JSON.parse(JSON.stringify(obj)); //Faster than ES5 clone - http://jsperf.com/deep-cloning-of-objects/5\n        case \"undefined\":\n            return null; //this is how JSON.stringify behaves for array items\n        default:\n            return obj; //no need to clone primitives\n    }\n}\n//3x faster than cached /^\\d+$/.test(str)\nexport function isInteger(str) {\n    let i = 0;\n    const len = str.length;\n    let charCode;\n    while (i < len) {\n        charCode = str.charCodeAt(i);\n        if (charCode >= 48 && charCode <= 57) {\n            i++;\n            continue;\n        }\n        return false;\n    }\n    return true;\n}\n/**\n * Escapes a json pointer path\n * @param path The raw pointer\n * @return the Escaped path\n */\nexport function escapePathComponent(path) {\n    if (path.indexOf(\"/\") === -1 && path.indexOf(\"~\") === -1)\n        return path;\n    return path.replace(/~/g, \"~0\").replace(/\\//g, \"~1\");\n}\n/**\n * Unescapes a json pointer path\n * @param path The escaped pointer\n * @return The unescaped path\n */\nexport function unescapePathComponent(path) {\n    return path.replace(/~1/g, \"/\").replace(/~0/g, \"~\");\n}\nexport function _getPathRecursive(root, obj) {\n    let found;\n    for (let key in root) {\n        if (hasOwnProperty(root, key)) {\n            if (root[key] === obj) {\n                return escapePathComponent(key) + \"/\";\n            }\n            else if (typeof root[key] === \"object\") {\n                found = _getPathRecursive(root[key], obj);\n                if (found != \"\") {\n                    return escapePathComponent(key) + \"/\" + found;\n                }\n            }\n        }\n    }\n    return \"\";\n}\nexport function getPath(root, obj) {\n    if (root === obj) {\n        return \"/\";\n    }\n    const path = _getPathRecursive(root, obj);\n    if (path === \"\") {\n        throw new Error(\"Object not found in root\");\n    }\n    return `/${path}`;\n}\n/**\n * Recursively checks whether an object has any undefined values inside.\n */\nexport function hasUndefined(obj) {\n    if (obj === undefined) {\n        return true;\n    }\n    if (obj) {\n        if (Array.isArray(obj)) {\n            for (let i = 0, len = obj.length; i < len; i++) {\n                if (hasUndefined(obj[i])) {\n                    return true;\n                }\n            }\n        }\n        else if (typeof obj === \"object\") {\n            const objKeys = _objectKeys(obj);\n            const objKeysLength = objKeys.length;\n            for (var i = 0; i < objKeysLength; i++) {\n                if (hasUndefined(obj[objKeys[i]])) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}\nfunction patchErrorMessageFormatter(message, args) {\n    const messageParts = [message];\n    for (const key in args) {\n        const value = typeof args[key] === \"object\"\n            ? JSON.stringify(args[key], null, 2)\n            : args[key]; // pretty print\n        if (typeof value !== \"undefined\") {\n            messageParts.push(`${key}: ${value}`);\n        }\n    }\n    return messageParts.join(\"\\n\");\n}\nexport class PatchError extends Error {\n    constructor(message, name, index, operation, tree) {\n        super(patchErrorMessageFormatter(message, { name, index, operation, tree }));\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: name\n        });\n        Object.defineProperty(this, \"index\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: index\n        });\n        Object.defineProperty(this, \"operation\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: operation\n        });\n        Object.defineProperty(this, \"tree\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: tree\n        });\n        Object.setPrototypeOf(this, new.target.prototype); // restore prototype chain, see https://stackoverflow.com/a/48342359\n        this.message = patchErrorMessageFormatter(message, {\n            name,\n            index,\n            operation,\n            tree,\n        });\n    }\n}\n","// @ts-nocheck\nimport { PatchError, _deepClone, isInteger, unescapePathComponent, hasUndefined, } from \"./helpers.js\";\nexport const JsonPatchError = PatchError;\nexport const deepClone = _deepClone;\n/* We use a Javascript hash to store each\n function. Each hash entry (property) uses\n the operation identifiers specified in rfc6902.\n In this way, we can map each patch operation\n to its dedicated function in efficient way.\n */\n/* The operations applicable to an object */\nconst objOps = {\n    add: function (obj, key, document) {\n        obj[key] = this.value;\n        return { newDocument: document };\n    },\n    remove: function (obj, key, document) {\n        var removed = obj[key];\n        delete obj[key];\n        return { newDocument: document, removed };\n    },\n    replace: function (obj, key, document) {\n        var removed = obj[key];\n        obj[key] = this.value;\n        return { newDocument: document, removed };\n    },\n    move: function (obj, key, document) {\n        /* in case move target overwrites an existing value,\n        return the removed value, this can be taxing performance-wise,\n        and is potentially unneeded */\n        let removed = getValueByPointer(document, this.path);\n        if (removed) {\n            removed = _deepClone(removed);\n        }\n        const originalValue = applyOperation(document, {\n            op: \"remove\",\n            path: this.from,\n        }).removed;\n        applyOperation(document, {\n            op: \"add\",\n            path: this.path,\n            value: originalValue,\n        });\n        return { newDocument: document, removed };\n    },\n    copy: function (obj, key, document) {\n        const valueToCopy = getValueByPointer(document, this.from);\n        // enforce copy by value so further operations don't affect source (see issue #177)\n        applyOperation(document, {\n            op: \"add\",\n            path: this.path,\n            value: _deepClone(valueToCopy),\n        });\n        return { newDocument: document };\n    },\n    test: function (obj, key, document) {\n        return { newDocument: document, test: _areEquals(obj[key], this.value) };\n    },\n    _get: function (obj, key, document) {\n        this.value = obj[key];\n        return { newDocument: document };\n    },\n};\n/* The operations applicable to an array. Many are the same as for the object */\nvar arrOps = {\n    add: function (arr, i, document) {\n        if (isInteger(i)) {\n            arr.splice(i, 0, this.value);\n        }\n        else {\n            // array props\n            arr[i] = this.value;\n        }\n        // this may be needed when using '-' in an array\n        return { newDocument: document, index: i };\n    },\n    remove: function (arr, i, document) {\n        var removedList = arr.splice(i, 1);\n        return { newDocument: document, removed: removedList[0] };\n    },\n    replace: function (arr, i, document) {\n        var removed = arr[i];\n        arr[i] = this.value;\n        return { newDocument: document, removed };\n    },\n    move: objOps.move,\n    copy: objOps.copy,\n    test: objOps.test,\n    _get: objOps._get,\n};\n/**\n * Retrieves a value from a JSON document by a JSON pointer.\n * Returns the value.\n *\n * @param document The document to get the value from\n * @param pointer an escaped JSON pointer\n * @return The retrieved value\n */\nexport function getValueByPointer(document, pointer) {\n    if (pointer == \"\") {\n        return document;\n    }\n    var getOriginalDestination = { op: \"_get\", path: pointer };\n    applyOperation(document, getOriginalDestination);\n    return getOriginalDestination.value;\n}\n/**\n * Apply a single JSON Patch Operation on a JSON document.\n * Returns the {newDocument, result} of the operation.\n * It modifies the `document` and `operation` objects - it gets the values by reference.\n * If you would like to avoid touching your values, clone them:\n * `jsonpatch.applyOperation(document, jsonpatch._deepClone(operation))`.\n *\n * @param document The document to patch\n * @param operation The operation to apply\n * @param validateOperation `false` is without validation, `true` to use default jsonpatch's validation, or you can pass a `validateOperation` callback to be used for validation.\n * @param mutateDocument Whether to mutate the original document or clone it before applying\n * @param banPrototypeModifications Whether to ban modifications to `__proto__`, defaults to `true`.\n * @return `{newDocument, result}` after the operation\n */\nexport function applyOperation(document, operation, validateOperation = false, mutateDocument = true, banPrototypeModifications = true, index = 0) {\n    if (validateOperation) {\n        if (typeof validateOperation == \"function\") {\n            validateOperation(operation, 0, document, operation.path);\n        }\n        else {\n            validator(operation, 0);\n        }\n    }\n    /* ROOT OPERATIONS */\n    if (operation.path === \"\") {\n        let returnValue = { newDocument: document };\n        if (operation.op === \"add\") {\n            returnValue.newDocument = operation.value;\n            return returnValue;\n        }\n        else if (operation.op === \"replace\") {\n            returnValue.newDocument = operation.value;\n            returnValue.removed = document; //document we removed\n            return returnValue;\n        }\n        else if (operation.op === \"move\" || operation.op === \"copy\") {\n            // it's a move or copy to root\n            returnValue.newDocument = getValueByPointer(document, operation.from); // get the value by json-pointer in `from` field\n            if (operation.op === \"move\") {\n                // report removed item\n                returnValue.removed = document;\n            }\n            return returnValue;\n        }\n        else if (operation.op === \"test\") {\n            returnValue.test = _areEquals(document, operation.value);\n            if (returnValue.test === false) {\n                throw new JsonPatchError(\"Test operation failed\", \"TEST_OPERATION_FAILED\", index, operation, document);\n            }\n            returnValue.newDocument = document;\n            return returnValue;\n        }\n        else if (operation.op === \"remove\") {\n            // a remove on root\n            returnValue.removed = document;\n            returnValue.newDocument = null;\n            return returnValue;\n        }\n        else if (operation.op === \"_get\") {\n            operation.value = document;\n            return returnValue;\n        }\n        else {\n            /* bad operation */\n            if (validateOperation) {\n                throw new JsonPatchError(\"Operation `op` property is not one of operations defined in RFC-6902\", \"OPERATION_OP_INVALID\", index, operation, document);\n            }\n            else {\n                return returnValue;\n            }\n        }\n    } /* END ROOT OPERATIONS */\n    else {\n        if (!mutateDocument) {\n            document = _deepClone(document);\n        }\n        const path = operation.path || \"\";\n        const keys = path.split(\"/\");\n        let obj = document;\n        let t = 1; //skip empty element - http://jsperf.com/to-shift-or-not-to-shift\n        let len = keys.length;\n        let existingPathFragment = undefined;\n        let key;\n        let validateFunction;\n        if (typeof validateOperation == \"function\") {\n            validateFunction = validateOperation;\n        }\n        else {\n            validateFunction = validator;\n        }\n        while (true) {\n            key = keys[t];\n            if (key && key.indexOf(\"~\") != -1) {\n                key = unescapePathComponent(key);\n            }\n            if (banPrototypeModifications &&\n                (key == \"__proto__\" ||\n                    (key == \"prototype\" && t > 0 && keys[t - 1] == \"constructor\"))) {\n                throw new TypeError(\"JSON-Patch: modifying `__proto__` or `constructor/prototype` prop is banned for security reasons, if this was on purpose, please set `banPrototypeModifications` flag false and pass it to this function. More info in fast-json-patch README\");\n            }\n            if (validateOperation) {\n                if (existingPathFragment === undefined) {\n                    if (obj[key] === undefined) {\n                        existingPathFragment = keys.slice(0, t).join(\"/\");\n                    }\n                    else if (t == len - 1) {\n                        existingPathFragment = operation.path;\n                    }\n                    if (existingPathFragment !== undefined) {\n                        validateFunction(operation, 0, document, existingPathFragment);\n                    }\n                }\n            }\n            t++;\n            if (Array.isArray(obj)) {\n                if (key === \"-\") {\n                    key = obj.length;\n                }\n                else {\n                    if (validateOperation && !isInteger(key)) {\n                        throw new JsonPatchError(\"Expected an unsigned base-10 integer value, making the new referenced value the array element with the zero-based index\", \"OPERATION_PATH_ILLEGAL_ARRAY_INDEX\", index, operation, document);\n                    } // only parse key when it's an integer for `arr.prop` to work\n                    else if (isInteger(key)) {\n                        key = ~~key;\n                    }\n                }\n                if (t >= len) {\n                    if (validateOperation && operation.op === \"add\" && key > obj.length) {\n                        throw new JsonPatchError(\"The specified index MUST NOT be greater than the number of elements in the array\", \"OPERATION_VALUE_OUT_OF_BOUNDS\", index, operation, document);\n                    }\n                    const returnValue = arrOps[operation.op].call(operation, obj, key, document); // Apply patch\n                    if (returnValue.test === false) {\n                        throw new JsonPatchError(\"Test operation failed\", \"TEST_OPERATION_FAILED\", index, operation, document);\n                    }\n                    return returnValue;\n                }\n            }\n            else {\n                if (t >= len) {\n                    const returnValue = objOps[operation.op].call(operation, obj, key, document); // Apply patch\n                    if (returnValue.test === false) {\n                        throw new JsonPatchError(\"Test operation failed\", \"TEST_OPERATION_FAILED\", index, operation, document);\n                    }\n                    return returnValue;\n                }\n            }\n            obj = obj[key];\n            // If we have more keys in the path, but the next value isn't a non-null object,\n            // throw an OPERATION_PATH_UNRESOLVABLE error instead of iterating again.\n            if (validateOperation && t < len && (!obj || typeof obj !== \"object\")) {\n                throw new JsonPatchError(\"Cannot perform operation at the desired path\", \"OPERATION_PATH_UNRESOLVABLE\", index, operation, document);\n            }\n        }\n    }\n}\n/**\n * Apply a full JSON Patch array on a JSON document.\n * Returns the {newDocument, result} of the patch.\n * It modifies the `document` object and `patch` - it gets the values by reference.\n * If you would like to avoid touching your values, clone them:\n * `jsonpatch.applyPatch(document, jsonpatch._deepClone(patch))`.\n *\n * @param document The document to patch\n * @param patch The patch to apply\n * @param validateOperation `false` is without validation, `true` to use default jsonpatch's validation, or you can pass a `validateOperation` callback to be used for validation.\n * @param mutateDocument Whether to mutate the original document or clone it before applying\n * @param banPrototypeModifications Whether to ban modifications to `__proto__`, defaults to `true`.\n * @return An array of `{newDocument, result}` after the patch\n */\nexport function applyPatch(document, patch, validateOperation, mutateDocument = true, banPrototypeModifications = true) {\n    if (validateOperation) {\n        if (!Array.isArray(patch)) {\n            throw new JsonPatchError(\"Patch sequence must be an array\", \"SEQUENCE_NOT_AN_ARRAY\");\n        }\n    }\n    if (!mutateDocument) {\n        document = _deepClone(document);\n    }\n    const results = new Array(patch.length);\n    for (let i = 0, length = patch.length; i < length; i++) {\n        // we don't need to pass mutateDocument argument because if it was true, we already deep cloned the object, we'll just pass `true`\n        results[i] = applyOperation(document, patch[i], validateOperation, true, banPrototypeModifications, i);\n        document = results[i].newDocument; // in case root was replaced\n    }\n    results.newDocument = document;\n    return results;\n}\n/**\n * Apply a single JSON Patch Operation on a JSON document.\n * Returns the updated document.\n * Suitable as a reducer.\n *\n * @param document The document to patch\n * @param operation The operation to apply\n * @return The updated document\n */\nexport function applyReducer(document, operation, index) {\n    const operationResult = applyOperation(document, operation);\n    if (operationResult.test === false) {\n        // failed test\n        throw new JsonPatchError(\"Test operation failed\", \"TEST_OPERATION_FAILED\", index, operation, document);\n    }\n    return operationResult.newDocument;\n}\n/**\n * Validates a single operation. Called from `jsonpatch.validate`. Throws `JsonPatchError` in case of an error.\n * @param {object} operation - operation object (patch)\n * @param {number} index - index of operation in the sequence\n * @param {object} [document] - object where the operation is supposed to be applied\n * @param {string} [existingPathFragment] - comes along with `document`\n */\nexport function validator(operation, index, document, existingPathFragment) {\n    if (typeof operation !== \"object\" ||\n        operation === null ||\n        Array.isArray(operation)) {\n        throw new JsonPatchError(\"Operation is not an object\", \"OPERATION_NOT_AN_OBJECT\", index, operation, document);\n    }\n    else if (!objOps[operation.op]) {\n        throw new JsonPatchError(\"Operation `op` property is not one of operations defined in RFC-6902\", \"OPERATION_OP_INVALID\", index, operation, document);\n    }\n    else if (typeof operation.path !== \"string\") {\n        throw new JsonPatchError(\"Operation `path` property is not a string\", \"OPERATION_PATH_INVALID\", index, operation, document);\n    }\n    else if (operation.path.indexOf(\"/\") !== 0 && operation.path.length > 0) {\n        // paths that aren't empty string should start with \"/\"\n        throw new JsonPatchError('Operation `path` property must start with \"/\"', \"OPERATION_PATH_INVALID\", index, operation, document);\n    }\n    else if ((operation.op === \"move\" || operation.op === \"copy\") &&\n        typeof operation.from !== \"string\") {\n        throw new JsonPatchError(\"Operation `from` property is not present (applicable in `move` and `copy` operations)\", \"OPERATION_FROM_REQUIRED\", index, operation, document);\n    }\n    else if ((operation.op === \"add\" ||\n        operation.op === \"replace\" ||\n        operation.op === \"test\") &&\n        operation.value === undefined) {\n        throw new JsonPatchError(\"Operation `value` property is not present (applicable in `add`, `replace` and `test` operations)\", \"OPERATION_VALUE_REQUIRED\", index, operation, document);\n    }\n    else if ((operation.op === \"add\" ||\n        operation.op === \"replace\" ||\n        operation.op === \"test\") &&\n        hasUndefined(operation.value)) {\n        throw new JsonPatchError(\"Operation `value` property is not present (applicable in `add`, `replace` and `test` operations)\", \"OPERATION_VALUE_CANNOT_CONTAIN_UNDEFINED\", index, operation, document);\n    }\n    else if (document) {\n        if (operation.op == \"add\") {\n            var pathLen = operation.path.split(\"/\").length;\n            var existingPathLen = existingPathFragment.split(\"/\").length;\n            if (pathLen !== existingPathLen + 1 && pathLen !== existingPathLen) {\n                throw new JsonPatchError(\"Cannot perform an `add` operation at the desired path\", \"OPERATION_PATH_CANNOT_ADD\", index, operation, document);\n            }\n        }\n        else if (operation.op === \"replace\" ||\n            operation.op === \"remove\" ||\n            operation.op === \"_get\") {\n            if (operation.path !== existingPathFragment) {\n                throw new JsonPatchError(\"Cannot perform the operation at a path that does not exist\", \"OPERATION_PATH_UNRESOLVABLE\", index, operation, document);\n            }\n        }\n        else if (operation.op === \"move\" || operation.op === \"copy\") {\n            var existingValue = {\n                op: \"_get\",\n                path: operation.from,\n                value: undefined,\n            };\n            var error = validate([existingValue], document);\n            if (error && error.name === \"OPERATION_PATH_UNRESOLVABLE\") {\n                throw new JsonPatchError(\"Cannot perform the operation from a path that does not exist\", \"OPERATION_FROM_UNRESOLVABLE\", index, operation, document);\n            }\n        }\n    }\n}\n/**\n * Validates a sequence of operations. If `document` parameter is provided, the sequence is additionally validated against the object document.\n * If error is encountered, returns a JsonPatchError object\n * @param sequence\n * @param document\n * @returns {JsonPatchError|undefined}\n */\nexport function validate(sequence, document, externalValidator) {\n    try {\n        if (!Array.isArray(sequence)) {\n            throw new JsonPatchError(\"Patch sequence must be an array\", \"SEQUENCE_NOT_AN_ARRAY\");\n        }\n        if (document) {\n            //clone document and sequence so that we can safely try applying operations\n            applyPatch(_deepClone(document), _deepClone(sequence), externalValidator || true);\n        }\n        else {\n            externalValidator = externalValidator || validator;\n            for (var i = 0; i < sequence.length; i++) {\n                externalValidator(sequence[i], i, document, undefined);\n            }\n        }\n    }\n    catch (e) {\n        if (e instanceof JsonPatchError) {\n            return e;\n        }\n        else {\n            throw e;\n        }\n    }\n}\n// based on https://github.com/epoberezkin/fast-deep-equal\n// MIT License\n// Copyright (c) 2017 Evgeny Poberezkin\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nexport function _areEquals(a, b) {\n    if (a === b)\n        return true;\n    if (a && b && typeof a == \"object\" && typeof b == \"object\") {\n        var arrA = Array.isArray(a), arrB = Array.isArray(b), i, length, key;\n        if (arrA && arrB) {\n            length = a.length;\n            if (length != b.length)\n                return false;\n            for (i = length; i-- !== 0;)\n                if (!_areEquals(a[i], b[i]))\n                    return false;\n            return true;\n        }\n        if (arrA != arrB)\n            return false;\n        var keys = Object.keys(a);\n        length = keys.length;\n        if (length !== Object.keys(b).length)\n            return false;\n        for (i = length; i-- !== 0;)\n            if (!b.hasOwnProperty(keys[i]))\n                return false;\n        for (i = length; i-- !== 0;) {\n            key = keys[i];\n            if (!_areEquals(a[key], b[key]))\n                return false;\n        }\n        return true;\n    }\n    return a !== a && b !== b;\n}\n","// @ts-nocheck\n// Inlined because of ESM import issues\n/*!\n * https://github.com/Starcounter-Jack/JSON-Patch\n * (c) 2013-2021 Joachim Wester\n * MIT license\n */\nimport { _deepClone, _objectKeys, escapePathComponent, hasOwnProperty, } from \"./helpers.js\";\nimport { applyPatch } from \"./core.js\";\nvar beforeDict = new WeakMap();\nclass Mirror {\n    constructor(obj) {\n        Object.defineProperty(this, \"obj\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"observers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new Map()\n        });\n        Object.defineProperty(this, \"value\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.obj = obj;\n    }\n}\nclass ObserverInfo {\n    constructor(callback, observer) {\n        Object.defineProperty(this, \"callback\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"observer\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.callback = callback;\n        this.observer = observer;\n    }\n}\nfunction getMirror(obj) {\n    return beforeDict.get(obj);\n}\nfunction getObserverFromMirror(mirror, callback) {\n    return mirror.observers.get(callback);\n}\nfunction removeObserverFromMirror(mirror, observer) {\n    mirror.observers.delete(observer.callback);\n}\n/**\n * Detach an observer from an object\n */\nexport function unobserve(root, observer) {\n    observer.unobserve();\n}\n/**\n * Observes changes made to an object, which can then be retrieved using generate\n */\nexport function observe(obj, callback) {\n    var patches = [];\n    var observer;\n    var mirror = getMirror(obj);\n    if (!mirror) {\n        mirror = new Mirror(obj);\n        beforeDict.set(obj, mirror);\n    }\n    else {\n        const observerInfo = getObserverFromMirror(mirror, callback);\n        observer = observerInfo && observerInfo.observer;\n    }\n    if (observer) {\n        return observer;\n    }\n    observer = {};\n    mirror.value = _deepClone(obj);\n    if (callback) {\n        observer.callback = callback;\n        observer.next = null;\n        var dirtyCheck = () => {\n            generate(observer);\n        };\n        var fastCheck = () => {\n            clearTimeout(observer.next);\n            observer.next = setTimeout(dirtyCheck);\n        };\n        if (typeof window !== \"undefined\") {\n            //not Node\n            window.addEventListener(\"mouseup\", fastCheck);\n            window.addEventListener(\"keyup\", fastCheck);\n            window.addEventListener(\"mousedown\", fastCheck);\n            window.addEventListener(\"keydown\", fastCheck);\n            window.addEventListener(\"change\", fastCheck);\n        }\n    }\n    observer.patches = patches;\n    observer.object = obj;\n    observer.unobserve = () => {\n        generate(observer);\n        clearTimeout(observer.next);\n        removeObserverFromMirror(mirror, observer);\n        if (typeof window !== \"undefined\") {\n            window.removeEventListener(\"mouseup\", fastCheck);\n            window.removeEventListener(\"keyup\", fastCheck);\n            window.removeEventListener(\"mousedown\", fastCheck);\n            window.removeEventListener(\"keydown\", fastCheck);\n            window.removeEventListener(\"change\", fastCheck);\n        }\n    };\n    mirror.observers.set(callback, new ObserverInfo(callback, observer));\n    return observer;\n}\n/**\n * Generate an array of patches from an observer\n */\nexport function generate(observer, invertible = false) {\n    var mirror = beforeDict.get(observer.object);\n    _generate(mirror.value, observer.object, observer.patches, \"\", invertible);\n    if (observer.patches.length) {\n        applyPatch(mirror.value, observer.patches);\n    }\n    var temp = observer.patches;\n    if (temp.length > 0) {\n        observer.patches = [];\n        if (observer.callback) {\n            observer.callback(temp);\n        }\n    }\n    return temp;\n}\n// Dirty check if obj is different from mirror, generate patches and update mirror\nfunction _generate(mirror, obj, patches, path, invertible) {\n    if (obj === mirror) {\n        return;\n    }\n    if (typeof obj.toJSON === \"function\") {\n        obj = obj.toJSON();\n    }\n    var newKeys = _objectKeys(obj);\n    var oldKeys = _objectKeys(mirror);\n    var changed = false;\n    var deleted = false;\n    //if ever \"move\" operation is implemented here, make sure this test runs OK: \"should not generate the same patch twice (move)\"\n    for (var t = oldKeys.length - 1; t >= 0; t--) {\n        var key = oldKeys[t];\n        var oldVal = mirror[key];\n        if (hasOwnProperty(obj, key) &&\n            !(obj[key] === undefined &&\n                oldVal !== undefined &&\n                Array.isArray(obj) === false)) {\n            var newVal = obj[key];\n            if (typeof oldVal == \"object\" &&\n                oldVal != null &&\n                typeof newVal == \"object\" &&\n                newVal != null &&\n                Array.isArray(oldVal) === Array.isArray(newVal)) {\n                _generate(oldVal, newVal, patches, path + \"/\" + escapePathComponent(key), invertible);\n            }\n            else {\n                if (oldVal !== newVal) {\n                    changed = true;\n                    if (invertible) {\n                        patches.push({\n                            op: \"test\",\n                            path: path + \"/\" + escapePathComponent(key),\n                            value: _deepClone(oldVal),\n                        });\n                    }\n                    patches.push({\n                        op: \"replace\",\n                        path: path + \"/\" + escapePathComponent(key),\n                        value: _deepClone(newVal),\n                    });\n                }\n            }\n        }\n        else if (Array.isArray(mirror) === Array.isArray(obj)) {\n            if (invertible) {\n                patches.push({\n                    op: \"test\",\n                    path: path + \"/\" + escapePathComponent(key),\n                    value: _deepClone(oldVal),\n                });\n            }\n            patches.push({\n                op: \"remove\",\n                path: path + \"/\" + escapePathComponent(key),\n            });\n            deleted = true; // property has been deleted\n        }\n        else {\n            if (invertible) {\n                patches.push({ op: \"test\", path, value: mirror });\n            }\n            patches.push({ op: \"replace\", path, value: obj });\n            changed = true;\n        }\n    }\n    if (!deleted && newKeys.length == oldKeys.length) {\n        return;\n    }\n    for (var t = 0; t < newKeys.length; t++) {\n        var key = newKeys[t];\n        if (!hasOwnProperty(mirror, key) && obj[key] !== undefined) {\n            patches.push({\n                op: \"add\",\n                path: path + \"/\" + escapePathComponent(key),\n                value: _deepClone(obj[key]),\n            });\n        }\n    }\n}\n/**\n * Create an array of patches from the differences in two objects\n */\nexport function compare(tree1, tree2, invertible = false) {\n    var patches = [];\n    _generate(tree1, tree2, patches, \"\", invertible);\n    return patches;\n}\n","export const isBrowser = () => typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\nexport const isWebWorker = () => typeof globalThis === \"object\" &&\n    globalThis.constructor &&\n    globalThis.constructor.name === \"DedicatedWorkerGlobalScope\";\nexport const isJsDom = () => (typeof window !== \"undefined\" && window.name === \"nodejs\") ||\n    (typeof navigator !== \"undefined\" &&\n        (navigator.userAgent.includes(\"Node.js\") ||\n            navigator.userAgent.includes(\"jsdom\")));\n// Supabase Edge Function provides a `Deno` global object\n// without `version` property\nexport const isDeno = () => typeof Deno !== \"undefined\";\n// Mark not-as-node if in Supabase Edge Function\nexport const isNode = () => typeof process !== \"undefined\" &&\n    typeof process.versions !== \"undefined\" &&\n    typeof process.versions.node !== \"undefined\" &&\n    !isDeno();\nexport const getEnv = () => {\n    let env;\n    if (isBrowser()) {\n        env = \"browser\";\n    }\n    else if (isNode()) {\n        env = \"node\";\n    }\n    else if (isWebWorker()) {\n        env = \"webworker\";\n    }\n    else if (isJsDom()) {\n        env = \"jsdom\";\n    }\n    else if (isDeno()) {\n        env = \"deno\";\n    }\n    else {\n        env = \"other\";\n    }\n    return env;\n};\nlet runtimeEnvironment;\nexport async function getRuntimeEnvironment() {\n    if (runtimeEnvironment === undefined) {\n        const env = getEnv();\n        runtimeEnvironment = {\n            library: \"langchain-js\",\n            runtime: env,\n        };\n    }\n    return runtimeEnvironment;\n}\nexport function getEnvironmentVariable(name) {\n    // Certain Deno setups will throw an error if you try to access environment variables\n    // https://github.com/langchain-ai/langchainjs/issues/1412\n    try {\n        if (typeof process !== \"undefined\") {\n            // eslint-disable-next-line no-process-env\n            return process.env?.[name];\n        }\n        else if (isDeno()) {\n            return Deno?.env.get(name);\n        }\n        else {\n            return undefined;\n        }\n    }\n    catch (e) {\n        return undefined;\n    }\n}\n","import * as uuid from \"uuid\";\nimport { Serializable, get_lc_unique_name, } from \"../load/serializable.js\";\nimport { getEnvironmentVariable } from \"../utils/env.js\";\n/**\n * Abstract class that provides a set of optional methods that can be\n * overridden in derived classes to handle various events during the\n * execution of a LangChain application.\n */\nclass BaseCallbackHandlerMethodsClass {\n}\nexport function callbackHandlerPrefersStreaming(x) {\n    return \"lc_prefer_streaming\" in x && x.lc_prefer_streaming;\n}\n/**\n * Abstract base class for creating callback handlers in the LangChain\n * framework. It provides a set of optional methods that can be overridden\n * in derived classes to handle various events during the execution of a\n * LangChain application.\n */\nexport class BaseCallbackHandler extends BaseCallbackHandlerMethodsClass {\n    get lc_namespace() {\n        return [\"langchain_core\", \"callbacks\", this.name];\n    }\n    get lc_secrets() {\n        return undefined;\n    }\n    get lc_attributes() {\n        return undefined;\n    }\n    get lc_aliases() {\n        return undefined;\n    }\n    get lc_serializable_keys() {\n        return undefined;\n    }\n    /**\n     * The name of the serializable. Override to provide an alias or\n     * to preserve the serialized module name in minified environments.\n     *\n     * Implemented as a static method to support loading logic.\n     */\n    static lc_name() {\n        return this.name;\n    }\n    /**\n     * The final serialized identifier for the module.\n     */\n    get lc_id() {\n        return [\n            ...this.lc_namespace,\n            get_lc_unique_name(this.constructor),\n        ];\n    }\n    constructor(input) {\n        super();\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"lc_kwargs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"ignoreLLM\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"ignoreChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"ignoreAgent\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"ignoreRetriever\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"ignoreCustomEvent\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"raiseError\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"awaitHandlers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: getEnvironmentVariable(\"LANGCHAIN_CALLBACKS_BACKGROUND\") === \"false\"\n        });\n        this.lc_kwargs = input || {};\n        if (input) {\n            this.ignoreLLM = input.ignoreLLM ?? this.ignoreLLM;\n            this.ignoreChain = input.ignoreChain ?? this.ignoreChain;\n            this.ignoreAgent = input.ignoreAgent ?? this.ignoreAgent;\n            this.ignoreRetriever = input.ignoreRetriever ?? this.ignoreRetriever;\n            this.ignoreCustomEvent =\n                input.ignoreCustomEvent ?? this.ignoreCustomEvent;\n            this.raiseError = input.raiseError ?? this.raiseError;\n            this.awaitHandlers =\n                this.raiseError || (input._awaitHandler ?? this.awaitHandlers);\n        }\n    }\n    copy() {\n        return new this.constructor(this);\n    }\n    toJSON() {\n        return Serializable.prototype.toJSON.call(this);\n    }\n    toJSONNotImplemented() {\n        return Serializable.prototype.toJSONNotImplemented.call(this);\n    }\n    static fromMethods(methods) {\n        class Handler extends BaseCallbackHandler {\n            constructor() {\n                super();\n                Object.defineProperty(this, \"name\", {\n                    enumerable: true,\n                    configurable: true,\n                    writable: true,\n                    value: uuid.v4()\n                });\n                Object.assign(this, methods);\n            }\n        }\n        return new Handler();\n    }\n}\nexport const isBaseCallbackHandler = (x) => {\n    const callbackHandler = x;\n    return (callbackHandler !== undefined &&\n        typeof callbackHandler.copy === \"function\" &&\n        typeof callbackHandler.name === \"string\" &&\n        typeof callbackHandler.awaitHandlers === \"boolean\");\n};\n","import { BaseCallbackHandler, } from \"../callbacks/base.js\";\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _coerceToDict(value, defaultKey) {\n    return value && !Array.isArray(value) && typeof value === \"object\"\n        ? value\n        : { [defaultKey]: value };\n}\nfunction stripNonAlphanumeric(input) {\n    return input.replace(/[-:.]/g, \"\");\n}\nfunction convertToDottedOrderFormat(epoch, runId, executionOrder) {\n    const paddedOrder = executionOrder.toFixed(0).slice(0, 3).padStart(3, \"0\");\n    return (stripNonAlphanumeric(`${new Date(epoch).toISOString().slice(0, -1)}${paddedOrder}Z`) + runId);\n}\nexport function isBaseTracer(x) {\n    return typeof x._addRunToRunMap === \"function\";\n}\nexport class BaseTracer extends BaseCallbackHandler {\n    constructor(_fields) {\n        super(...arguments);\n        Object.defineProperty(this, \"runMap\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new Map()\n        });\n    }\n    copy() {\n        return this;\n    }\n    stringifyError(error) {\n        // eslint-disable-next-line no-instanceof/no-instanceof\n        if (error instanceof Error) {\n            return error.message + (error?.stack ? `\\n\\n${error.stack}` : \"\");\n        }\n        if (typeof error === \"string\") {\n            return error;\n        }\n        return `${error}`;\n    }\n    _addChildRun(parentRun, childRun) {\n        parentRun.child_runs.push(childRun);\n    }\n    _addRunToRunMap(run) {\n        const currentDottedOrder = convertToDottedOrderFormat(run.start_time, run.id, run.execution_order);\n        const storedRun = { ...run };\n        if (storedRun.parent_run_id !== undefined) {\n            const parentRun = this.runMap.get(storedRun.parent_run_id);\n            if (parentRun) {\n                this._addChildRun(parentRun, storedRun);\n                parentRun.child_execution_order = Math.max(parentRun.child_execution_order, storedRun.child_execution_order);\n                storedRun.trace_id = parentRun.trace_id;\n                if (parentRun.dotted_order !== undefined) {\n                    storedRun.dotted_order = [\n                        parentRun.dotted_order,\n                        currentDottedOrder,\n                    ].join(\".\");\n                }\n                else {\n                    // This can happen naturally for callbacks added within a run\n                    // console.debug(`Parent run with UUID ${storedRun.parent_run_id} has no dotted order.`);\n                }\n            }\n            else {\n                // This can happen naturally for callbacks added within a run\n                // console.debug(\n                //   `Parent run with UUID ${storedRun.parent_run_id} not found.`\n                // );\n            }\n        }\n        else {\n            storedRun.trace_id = storedRun.id;\n            storedRun.dotted_order = currentDottedOrder;\n        }\n        this.runMap.set(storedRun.id, storedRun);\n        return storedRun;\n    }\n    async _endTrace(run) {\n        const parentRun = run.parent_run_id !== undefined && this.runMap.get(run.parent_run_id);\n        if (parentRun) {\n            parentRun.child_execution_order = Math.max(parentRun.child_execution_order, run.child_execution_order);\n        }\n        else {\n            await this.persistRun(run);\n        }\n        this.runMap.delete(run.id);\n        await this.onRunUpdate?.(run);\n    }\n    _getExecutionOrder(parentRunId) {\n        const parentRun = parentRunId !== undefined && this.runMap.get(parentRunId);\n        // If a run has no parent then execution order is 1\n        if (!parentRun) {\n            return 1;\n        }\n        return parentRun.child_execution_order + 1;\n    }\n    /**\n     * Create and add a run to the run map for LLM start events.\n     * This must sometimes be done synchronously to avoid race conditions\n     * when callbacks are backgrounded, so we expose it as a separate method here.\n     */\n    _createRunForLLMStart(llm, prompts, runId, parentRunId, extraParams, tags, metadata, name) {\n        const execution_order = this._getExecutionOrder(parentRunId);\n        const start_time = Date.now();\n        const finalExtraParams = metadata\n            ? { ...extraParams, metadata }\n            : extraParams;\n        const run = {\n            id: runId,\n            name: name ?? llm.id[llm.id.length - 1],\n            parent_run_id: parentRunId,\n            start_time,\n            serialized: llm,\n            events: [\n                {\n                    name: \"start\",\n                    time: new Date(start_time).toISOString(),\n                },\n            ],\n            inputs: { prompts },\n            execution_order,\n            child_runs: [],\n            child_execution_order: execution_order,\n            run_type: \"llm\",\n            extra: finalExtraParams ?? {},\n            tags: tags || [],\n        };\n        return this._addRunToRunMap(run);\n    }\n    async handleLLMStart(llm, prompts, runId, parentRunId, extraParams, tags, metadata, name) {\n        const run = this.runMap.get(runId) ??\n            this._createRunForLLMStart(llm, prompts, runId, parentRunId, extraParams, tags, metadata, name);\n        await this.onRunCreate?.(run);\n        await this.onLLMStart?.(run);\n        return run;\n    }\n    /**\n     * Create and add a run to the run map for chat model start events.\n     * This must sometimes be done synchronously to avoid race conditions\n     * when callbacks are backgrounded, so we expose it as a separate method here.\n     */\n    _createRunForChatModelStart(llm, messages, runId, parentRunId, extraParams, tags, metadata, name) {\n        const execution_order = this._getExecutionOrder(parentRunId);\n        const start_time = Date.now();\n        const finalExtraParams = metadata\n            ? { ...extraParams, metadata }\n            : extraParams;\n        const run = {\n            id: runId,\n            name: name ?? llm.id[llm.id.length - 1],\n            parent_run_id: parentRunId,\n            start_time,\n            serialized: llm,\n            events: [\n                {\n                    name: \"start\",\n                    time: new Date(start_time).toISOString(),\n                },\n            ],\n            inputs: { messages },\n            execution_order,\n            child_runs: [],\n            child_execution_order: execution_order,\n            run_type: \"llm\",\n            extra: finalExtraParams ?? {},\n            tags: tags || [],\n        };\n        return this._addRunToRunMap(run);\n    }\n    async handleChatModelStart(llm, messages, runId, parentRunId, extraParams, tags, metadata, name) {\n        const run = this.runMap.get(runId) ??\n            this._createRunForChatModelStart(llm, messages, runId, parentRunId, extraParams, tags, metadata, name);\n        await this.onRunCreate?.(run);\n        await this.onLLMStart?.(run);\n        return run;\n    }\n    async handleLLMEnd(output, runId, _parentRunId, _tags, extraParams) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"llm\") {\n            throw new Error(\"No LLM run to end.\");\n        }\n        run.end_time = Date.now();\n        run.outputs = output;\n        run.events.push({\n            name: \"end\",\n            time: new Date(run.end_time).toISOString(),\n        });\n        run.extra = { ...run.extra, ...extraParams };\n        await this.onLLMEnd?.(run);\n        await this._endTrace(run);\n        return run;\n    }\n    async handleLLMError(error, runId, _parentRunId, _tags, extraParams) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"llm\") {\n            throw new Error(\"No LLM run to end.\");\n        }\n        run.end_time = Date.now();\n        run.error = this.stringifyError(error);\n        run.events.push({\n            name: \"error\",\n            time: new Date(run.end_time).toISOString(),\n        });\n        run.extra = { ...run.extra, ...extraParams };\n        await this.onLLMError?.(run);\n        await this._endTrace(run);\n        return run;\n    }\n    /**\n     * Create and add a run to the run map for chain start events.\n     * This must sometimes be done synchronously to avoid race conditions\n     * when callbacks are backgrounded, so we expose it as a separate method here.\n     */\n    _createRunForChainStart(chain, inputs, runId, parentRunId, tags, metadata, runType, name) {\n        const execution_order = this._getExecutionOrder(parentRunId);\n        const start_time = Date.now();\n        const run = {\n            id: runId,\n            name: name ?? chain.id[chain.id.length - 1],\n            parent_run_id: parentRunId,\n            start_time,\n            serialized: chain,\n            events: [\n                {\n                    name: \"start\",\n                    time: new Date(start_time).toISOString(),\n                },\n            ],\n            inputs,\n            execution_order,\n            child_execution_order: execution_order,\n            run_type: runType ?? \"chain\",\n            child_runs: [],\n            extra: metadata ? { metadata } : {},\n            tags: tags || [],\n        };\n        return this._addRunToRunMap(run);\n    }\n    async handleChainStart(chain, inputs, runId, parentRunId, tags, metadata, runType, name) {\n        const run = this.runMap.get(runId) ??\n            this._createRunForChainStart(chain, inputs, runId, parentRunId, tags, metadata, runType, name);\n        await this.onRunCreate?.(run);\n        await this.onChainStart?.(run);\n        return run;\n    }\n    async handleChainEnd(outputs, runId, _parentRunId, _tags, kwargs) {\n        const run = this.runMap.get(runId);\n        if (!run) {\n            throw new Error(\"No chain run to end.\");\n        }\n        run.end_time = Date.now();\n        run.outputs = _coerceToDict(outputs, \"output\");\n        run.events.push({\n            name: \"end\",\n            time: new Date(run.end_time).toISOString(),\n        });\n        if (kwargs?.inputs !== undefined) {\n            run.inputs = _coerceToDict(kwargs.inputs, \"input\");\n        }\n        await this.onChainEnd?.(run);\n        await this._endTrace(run);\n        return run;\n    }\n    async handleChainError(error, runId, _parentRunId, _tags, kwargs) {\n        const run = this.runMap.get(runId);\n        if (!run) {\n            throw new Error(\"No chain run to end.\");\n        }\n        run.end_time = Date.now();\n        run.error = this.stringifyError(error);\n        run.events.push({\n            name: \"error\",\n            time: new Date(run.end_time).toISOString(),\n        });\n        if (kwargs?.inputs !== undefined) {\n            run.inputs = _coerceToDict(kwargs.inputs, \"input\");\n        }\n        await this.onChainError?.(run);\n        await this._endTrace(run);\n        return run;\n    }\n    /**\n     * Create and add a run to the run map for tool start events.\n     * This must sometimes be done synchronously to avoid race conditions\n     * when callbacks are backgrounded, so we expose it as a separate method here.\n     */\n    _createRunForToolStart(tool, input, runId, parentRunId, tags, metadata, name) {\n        const execution_order = this._getExecutionOrder(parentRunId);\n        const start_time = Date.now();\n        const run = {\n            id: runId,\n            name: name ?? tool.id[tool.id.length - 1],\n            parent_run_id: parentRunId,\n            start_time,\n            serialized: tool,\n            events: [\n                {\n                    name: \"start\",\n                    time: new Date(start_time).toISOString(),\n                },\n            ],\n            inputs: { input },\n            execution_order,\n            child_execution_order: execution_order,\n            run_type: \"tool\",\n            child_runs: [],\n            extra: metadata ? { metadata } : {},\n            tags: tags || [],\n        };\n        return this._addRunToRunMap(run);\n    }\n    async handleToolStart(tool, input, runId, parentRunId, tags, metadata, name) {\n        const run = this.runMap.get(runId) ??\n            this._createRunForToolStart(tool, input, runId, parentRunId, tags, metadata, name);\n        await this.onRunCreate?.(run);\n        await this.onToolStart?.(run);\n        return run;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    async handleToolEnd(output, runId) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"tool\") {\n            throw new Error(\"No tool run to end\");\n        }\n        run.end_time = Date.now();\n        run.outputs = { output };\n        run.events.push({\n            name: \"end\",\n            time: new Date(run.end_time).toISOString(),\n        });\n        await this.onToolEnd?.(run);\n        await this._endTrace(run);\n        return run;\n    }\n    async handleToolError(error, runId) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"tool\") {\n            throw new Error(\"No tool run to end\");\n        }\n        run.end_time = Date.now();\n        run.error = this.stringifyError(error);\n        run.events.push({\n            name: \"error\",\n            time: new Date(run.end_time).toISOString(),\n        });\n        await this.onToolError?.(run);\n        await this._endTrace(run);\n        return run;\n    }\n    async handleAgentAction(action, runId) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"chain\") {\n            return;\n        }\n        const agentRun = run;\n        agentRun.actions = agentRun.actions || [];\n        agentRun.actions.push(action);\n        agentRun.events.push({\n            name: \"agent_action\",\n            time: new Date().toISOString(),\n            kwargs: { action },\n        });\n        await this.onAgentAction?.(run);\n    }\n    async handleAgentEnd(action, runId) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"chain\") {\n            return;\n        }\n        run.events.push({\n            name: \"agent_end\",\n            time: new Date().toISOString(),\n            kwargs: { action },\n        });\n        await this.onAgentEnd?.(run);\n    }\n    /**\n     * Create and add a run to the run map for retriever start events.\n     * This must sometimes be done synchronously to avoid race conditions\n     * when callbacks are backgrounded, so we expose it as a separate method here.\n     */\n    _createRunForRetrieverStart(retriever, query, runId, parentRunId, tags, metadata, name) {\n        const execution_order = this._getExecutionOrder(parentRunId);\n        const start_time = Date.now();\n        const run = {\n            id: runId,\n            name: name ?? retriever.id[retriever.id.length - 1],\n            parent_run_id: parentRunId,\n            start_time,\n            serialized: retriever,\n            events: [\n                {\n                    name: \"start\",\n                    time: new Date(start_time).toISOString(),\n                },\n            ],\n            inputs: { query },\n            execution_order,\n            child_execution_order: execution_order,\n            run_type: \"retriever\",\n            child_runs: [],\n            extra: metadata ? { metadata } : {},\n            tags: tags || [],\n        };\n        return this._addRunToRunMap(run);\n    }\n    async handleRetrieverStart(retriever, query, runId, parentRunId, tags, metadata, name) {\n        const run = this.runMap.get(runId) ??\n            this._createRunForRetrieverStart(retriever, query, runId, parentRunId, tags, metadata, name);\n        await this.onRunCreate?.(run);\n        await this.onRetrieverStart?.(run);\n        return run;\n    }\n    async handleRetrieverEnd(documents, runId) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"retriever\") {\n            throw new Error(\"No retriever run to end\");\n        }\n        run.end_time = Date.now();\n        run.outputs = { documents };\n        run.events.push({\n            name: \"end\",\n            time: new Date(run.end_time).toISOString(),\n        });\n        await this.onRetrieverEnd?.(run);\n        await this._endTrace(run);\n        return run;\n    }\n    async handleRetrieverError(error, runId) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"retriever\") {\n            throw new Error(\"No retriever run to end\");\n        }\n        run.end_time = Date.now();\n        run.error = this.stringifyError(error);\n        run.events.push({\n            name: \"error\",\n            time: new Date(run.end_time).toISOString(),\n        });\n        await this.onRetrieverError?.(run);\n        await this._endTrace(run);\n        return run;\n    }\n    async handleText(text, runId) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"chain\") {\n            return;\n        }\n        run.events.push({\n            name: \"text\",\n            time: new Date().toISOString(),\n            kwargs: { text },\n        });\n        await this.onText?.(run);\n    }\n    async handleLLMNewToken(token, idx, runId, _parentRunId, _tags, fields) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"llm\") {\n            throw new Error(`Invalid \"runId\" provided to \"handleLLMNewToken\" callback.`);\n        }\n        run.events.push({\n            name: \"new_token\",\n            time: new Date().toISOString(),\n            kwargs: { token, idx, chunk: fields?.chunk },\n        });\n        await this.onLLMNewToken?.(run, token, { chunk: fields?.chunk });\n        return run;\n    }\n}\n","import styles from \"ansi-styles\";\nimport { BaseTracer } from \"./base.js\";\nfunction wrap(style, text) {\n    return `${style.open}${text}${style.close}`;\n}\nfunction tryJsonStringify(obj, fallback) {\n    try {\n        return JSON.stringify(obj, null, 2);\n    }\n    catch (err) {\n        return fallback;\n    }\n}\nfunction formatKVMapItem(value) {\n    if (typeof value === \"string\") {\n        return value.trim();\n    }\n    if (value === null || value === undefined) {\n        return value;\n    }\n    return tryJsonStringify(value, value.toString());\n}\nfunction elapsed(run) {\n    if (!run.end_time)\n        return \"\";\n    const elapsed = run.end_time - run.start_time;\n    if (elapsed < 1000) {\n        return `${elapsed}ms`;\n    }\n    return `${(elapsed / 1000).toFixed(2)}s`;\n}\nconst { color } = styles;\n/**\n * A tracer that logs all events to the console. It extends from the\n * `BaseTracer` class and overrides its methods to provide custom logging\n * functionality.\n * @example\n * ```typescript\n *\n * const llm = new ChatAnthropic({\n *   temperature: 0,\n *   tags: [\"example\", \"callbacks\", \"constructor\"],\n *   callbacks: [new ConsoleCallbackHandler()],\n * });\n *\n * ```\n */\nexport class ConsoleCallbackHandler extends BaseTracer {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"console_callback_handler\"\n        });\n    }\n    /**\n     * Method used to persist the run. In this case, it simply returns a\n     * resolved promise as there's no persistence logic.\n     * @param _run The run to persist.\n     * @returns A resolved promise.\n     */\n    persistRun(_run) {\n        return Promise.resolve();\n    }\n    // utility methods\n    /**\n     * Method used to get all the parent runs of a given run.\n     * @param run The run whose parents are to be retrieved.\n     * @returns An array of parent runs.\n     */\n    getParents(run) {\n        const parents = [];\n        let currentRun = run;\n        while (currentRun.parent_run_id) {\n            const parent = this.runMap.get(currentRun.parent_run_id);\n            if (parent) {\n                parents.push(parent);\n                currentRun = parent;\n            }\n            else {\n                break;\n            }\n        }\n        return parents;\n    }\n    /**\n     * Method used to get a string representation of the run's lineage, which\n     * is used in logging.\n     * @param run The run whose lineage is to be retrieved.\n     * @returns A string representation of the run's lineage.\n     */\n    getBreadcrumbs(run) {\n        const parents = this.getParents(run).reverse();\n        const string = [...parents, run]\n            .map((parent, i, arr) => {\n            const name = `${parent.execution_order}:${parent.run_type}:${parent.name}`;\n            return i === arr.length - 1 ? wrap(styles.bold, name) : name;\n        })\n            .join(\" > \");\n        return wrap(color.grey, string);\n    }\n    // logging methods\n    /**\n     * Method used to log the start of a chain run.\n     * @param run The chain run that has started.\n     * @returns void\n     */\n    onChainStart(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.green, \"[chain/start]\")} [${crumbs}] Entering Chain run with input: ${tryJsonStringify(run.inputs, \"[inputs]\")}`);\n    }\n    /**\n     * Method used to log the end of a chain run.\n     * @param run The chain run that has ended.\n     * @returns void\n     */\n    onChainEnd(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.cyan, \"[chain/end]\")} [${crumbs}] [${elapsed(run)}] Exiting Chain run with output: ${tryJsonStringify(run.outputs, \"[outputs]\")}`);\n    }\n    /**\n     * Method used to log any errors of a chain run.\n     * @param run The chain run that has errored.\n     * @returns void\n     */\n    onChainError(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.red, \"[chain/error]\")} [${crumbs}] [${elapsed(run)}] Chain run errored with error: ${tryJsonStringify(run.error, \"[error]\")}`);\n    }\n    /**\n     * Method used to log the start of an LLM run.\n     * @param run The LLM run that has started.\n     * @returns void\n     */\n    onLLMStart(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        const inputs = \"prompts\" in run.inputs\n            ? { prompts: run.inputs.prompts.map((p) => p.trim()) }\n            : run.inputs;\n        console.log(`${wrap(color.green, \"[llm/start]\")} [${crumbs}] Entering LLM run with input: ${tryJsonStringify(inputs, \"[inputs]\")}`);\n    }\n    /**\n     * Method used to log the end of an LLM run.\n     * @param run The LLM run that has ended.\n     * @returns void\n     */\n    onLLMEnd(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.cyan, \"[llm/end]\")} [${crumbs}] [${elapsed(run)}] Exiting LLM run with output: ${tryJsonStringify(run.outputs, \"[response]\")}`);\n    }\n    /**\n     * Method used to log any errors of an LLM run.\n     * @param run The LLM run that has errored.\n     * @returns void\n     */\n    onLLMError(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.red, \"[llm/error]\")} [${crumbs}] [${elapsed(run)}] LLM run errored with error: ${tryJsonStringify(run.error, \"[error]\")}`);\n    }\n    /**\n     * Method used to log the start of a tool run.\n     * @param run The tool run that has started.\n     * @returns void\n     */\n    onToolStart(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.green, \"[tool/start]\")} [${crumbs}] Entering Tool run with input: \"${formatKVMapItem(run.inputs.input)}\"`);\n    }\n    /**\n     * Method used to log the end of a tool run.\n     * @param run The tool run that has ended.\n     * @returns void\n     */\n    onToolEnd(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.cyan, \"[tool/end]\")} [${crumbs}] [${elapsed(run)}] Exiting Tool run with output: \"${formatKVMapItem(run.outputs?.output)}\"`);\n    }\n    /**\n     * Method used to log any errors of a tool run.\n     * @param run The tool run that has errored.\n     * @returns void\n     */\n    onToolError(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.red, \"[tool/error]\")} [${crumbs}] [${elapsed(run)}] Tool run errored with error: ${tryJsonStringify(run.error, \"[error]\")}`);\n    }\n    /**\n     * Method used to log the start of a retriever run.\n     * @param run The retriever run that has started.\n     * @returns void\n     */\n    onRetrieverStart(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.green, \"[retriever/start]\")} [${crumbs}] Entering Retriever run with input: ${tryJsonStringify(run.inputs, \"[inputs]\")}`);\n    }\n    /**\n     * Method used to log the end of a retriever run.\n     * @param run The retriever run that has ended.\n     * @returns void\n     */\n    onRetrieverEnd(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.cyan, \"[retriever/end]\")} [${crumbs}] [${elapsed(run)}] Exiting Retriever run with output: ${tryJsonStringify(run.outputs, \"[outputs]\")}`);\n    }\n    /**\n     * Method used to log any errors of a retriever run.\n     * @param run The retriever run that has errored.\n     * @returns void\n     */\n    onRetrieverError(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.red, \"[retriever/error]\")} [${crumbs}] [${elapsed(run)}] Retriever run errored with error: ${tryJsonStringify(run.error, \"[error]\")}`);\n    }\n    /**\n     * Method used to log the action selected by the agent.\n     * @param run The run in which the agent action occurred.\n     * @returns void\n     */\n    onAgentAction(run) {\n        const agentRun = run;\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.blue, \"[agent/action]\")} [${crumbs}] Agent selected action: ${tryJsonStringify(agentRun.actions[agentRun.actions.length - 1], \"[action]\")}`);\n    }\n}\n","import { Client } from \"langsmith\";\nimport { getEnvironmentVariable } from \"../utils/env.js\";\nlet client;\nexport const getDefaultLangChainClientSingleton = () => {\n    if (client === undefined) {\n        const clientParams = getEnvironmentVariable(\"LANGCHAIN_CALLBACKS_BACKGROUND\") === \"false\"\n            ? {\n                // LangSmith has its own backgrounding system\n                blockOnRootRunFinalization: true,\n            }\n            : {};\n        client = new Client(clientParams);\n    }\n    return client;\n};\nexport const setDefaultLangChainClientSingleton = (newClient) => {\n    client = newClient;\n};\n","import { RunTree } from \"langsmith/run_trees\";\nimport { getCurrentRunTree } from \"langsmith/singletons/traceable\";\nimport { getEnvironmentVariable, getRuntimeEnvironment } from \"../utils/env.js\";\nimport { BaseTracer } from \"./base.js\";\nimport { getDefaultLangChainClientSingleton } from \"../singletons/tracer.js\";\nexport class LangChainTracer extends BaseTracer {\n    constructor(fields = {}) {\n        super(fields);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"langchain_tracer\"\n        });\n        Object.defineProperty(this, \"projectName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"exampleId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        const { exampleId, projectName, client } = fields;\n        this.projectName =\n            projectName ??\n                getEnvironmentVariable(\"LANGCHAIN_PROJECT\") ??\n                getEnvironmentVariable(\"LANGCHAIN_SESSION\");\n        this.exampleId = exampleId;\n        this.client = client ?? getDefaultLangChainClientSingleton();\n        const traceableTree = LangChainTracer.getTraceableRunTree();\n        if (traceableTree) {\n            this.updateFromRunTree(traceableTree);\n        }\n    }\n    async _convertToCreate(run, example_id = undefined) {\n        return {\n            ...run,\n            extra: {\n                ...run.extra,\n                runtime: await getRuntimeEnvironment(),\n            },\n            child_runs: undefined,\n            session_name: this.projectName,\n            reference_example_id: run.parent_run_id ? undefined : example_id,\n        };\n    }\n    async persistRun(_run) { }\n    async onRunCreate(run) {\n        const persistedRun = await this._convertToCreate(run, this.exampleId);\n        await this.client.createRun(persistedRun);\n    }\n    async onRunUpdate(run) {\n        const runUpdate = {\n            end_time: run.end_time,\n            error: run.error,\n            outputs: run.outputs,\n            events: run.events,\n            inputs: run.inputs,\n            trace_id: run.trace_id,\n            dotted_order: run.dotted_order,\n            parent_run_id: run.parent_run_id,\n            extra: run.extra,\n            session_name: this.projectName,\n        };\n        await this.client.updateRun(run.id, runUpdate);\n    }\n    getRun(id) {\n        return this.runMap.get(id);\n    }\n    updateFromRunTree(runTree) {\n        let rootRun = runTree;\n        const visited = new Set();\n        while (rootRun.parent_run) {\n            if (visited.has(rootRun.id))\n                break;\n            visited.add(rootRun.id);\n            if (!rootRun.parent_run)\n                break;\n            rootRun = rootRun.parent_run;\n        }\n        visited.clear();\n        const queue = [rootRun];\n        while (queue.length > 0) {\n            const current = queue.shift();\n            if (!current || visited.has(current.id))\n                continue;\n            visited.add(current.id);\n            // @ts-expect-error Types of property 'events' are incompatible.\n            this.runMap.set(current.id, current);\n            if (current.child_runs) {\n                queue.push(...current.child_runs);\n            }\n        }\n        this.client = runTree.client ?? this.client;\n        this.projectName = runTree.project_name ?? this.projectName;\n        this.exampleId = runTree.reference_example_id ?? this.exampleId;\n    }\n    convertToRunTree(id) {\n        const runTreeMap = {};\n        const runTreeList = [];\n        for (const [id, run] of this.runMap) {\n            // by converting the run map to a run tree, we are doing a copy\n            // thus, any mutation performed on the run tree will not be reflected\n            // back in the run map\n            // TODO: Stop using `this.runMap` in favour of LangSmith's `RunTree`\n            const runTree = new RunTree({\n                ...run,\n                child_runs: [],\n                parent_run: undefined,\n                // inherited properties\n                client: this.client,\n                project_name: this.projectName,\n                reference_example_id: this.exampleId,\n                tracingEnabled: true,\n            });\n            runTreeMap[id] = runTree;\n            runTreeList.push([id, run.dotted_order]);\n        }\n        runTreeList.sort((a, b) => {\n            if (!a[1] || !b[1])\n                return 0;\n            return a[1].localeCompare(b[1]);\n        });\n        for (const [id] of runTreeList) {\n            const run = this.runMap.get(id);\n            const runTree = runTreeMap[id];\n            if (!run || !runTree)\n                continue;\n            if (run.parent_run_id) {\n                const parentRunTree = runTreeMap[run.parent_run_id];\n                if (parentRunTree) {\n                    parentRunTree.child_runs.push(runTree);\n                    runTree.parent_run = parentRunTree;\n                }\n            }\n        }\n        return runTreeMap[id];\n    }\n    static getTraceableRunTree() {\n        try {\n            return getCurrentRunTree();\n        }\n        catch {\n            return undefined;\n        }\n    }\n}\n","export const TRACING_ALS_KEY = Symbol.for(\"ls:tracing_async_local_storage\");\nexport const _CONTEXT_VARIABLES_KEY = Symbol.for(\"lc:context_variables\");\nexport const setGlobalAsyncLocalStorageInstance = (instance) => {\n    globalThis[TRACING_ALS_KEY] = instance;\n};\nexport const getGlobalAsyncLocalStorageInstance = () => {\n    return globalThis[TRACING_ALS_KEY];\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport PQueueMod from \"p-queue\";\nimport { getGlobalAsyncLocalStorageInstance } from \"./async_local_storage/globals.js\";\nlet queue;\n/**\n * Creates a queue using the p-queue library. The queue is configured to\n * auto-start and has a concurrency of 1, meaning it will process tasks\n * one at a time.\n */\nfunction createQueue() {\n    const PQueue = \"default\" in PQueueMod ? PQueueMod.default : PQueueMod;\n    return new PQueue({\n        autoStart: true,\n        concurrency: 1,\n    });\n}\nexport function getQueue() {\n    if (typeof queue === \"undefined\") {\n        queue = createQueue();\n    }\n    return queue;\n}\n/**\n * Consume a promise, either adding it to the queue or waiting for it to resolve\n * @param promiseFn Promise to consume\n * @param wait Whether to wait for the promise to resolve or resolve immediately\n */\nexport async function consumeCallback(promiseFn, wait) {\n    if (wait === true) {\n        // Clear config since callbacks are not part of the root run\n        // Avoid using global singleton due to circuluar dependency issues\n        const asyncLocalStorageInstance = getGlobalAsyncLocalStorageInstance();\n        if (asyncLocalStorageInstance !== undefined) {\n            await asyncLocalStorageInstance.run(undefined, async () => promiseFn());\n        }\n        else {\n            await promiseFn();\n        }\n    }\n    else {\n        queue = getQueue();\n        void queue.add(async () => {\n            const asyncLocalStorageInstance = getGlobalAsyncLocalStorageInstance();\n            if (asyncLocalStorageInstance !== undefined) {\n                await asyncLocalStorageInstance.run(undefined, async () => promiseFn());\n            }\n            else {\n                await promiseFn();\n            }\n        });\n    }\n}\n/**\n * Waits for all promises in the queue to resolve. If the queue is\n * undefined, it immediately resolves a promise.\n */\nexport function awaitAllCallbacks() {\n    return typeof queue !== \"undefined\" ? queue.onIdle() : Promise.resolve();\n}\n","import { isRunTree, RunTree } from \"langsmith/run_trees\";\nimport { _CONTEXT_VARIABLES_KEY, getGlobalAsyncLocalStorageInstance, } from \"./globals.js\";\n/**\n * Set a context variable. Context variables are scoped to any\n * child runnables called by the current runnable, or globally if set outside\n * of any runnable.\n *\n * @remarks\n * This function is only supported in environments that support AsyncLocalStorage,\n * including Node.js, Deno, and Cloudflare Workers.\n *\n * @example\n * ```ts\n * import { RunnableLambda } from \"@langchain/core/runnables\";\n * import {\n *   getContextVariable,\n *   setContextVariable\n * } from \"@langchain/core/context\";\n *\n * const nested = RunnableLambda.from(() => {\n *   // \"bar\" because it was set by a parent\n *   console.log(getContextVariable(\"foo\"));\n *\n *   // Override to \"baz\", but only for child runnables\n *   setContextVariable(\"foo\", \"baz\");\n *\n *   // Now \"baz\", but only for child runnables\n *   return getContextVariable(\"foo\");\n * });\n *\n * const runnable = RunnableLambda.from(async () => {\n *   // Set a context variable named \"foo\"\n *   setContextVariable(\"foo\", \"bar\");\n *\n *   const res = await nested.invoke({});\n *\n *   // Still \"bar\" since child changes do not affect parents\n *   console.log(getContextVariable(\"foo\"));\n *\n *   return res;\n * });\n *\n * // undefined, because context variable has not been set yet\n * console.log(getContextVariable(\"foo\"));\n *\n * // Final return value is \"baz\"\n * const result = await runnable.invoke({});\n * ```\n *\n * @param name The name of the context variable.\n * @param value The value to set.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function setContextVariable(name, value) {\n    // Avoid using global singleton due to circuluar dependency issues\n    const asyncLocalStorageInstance = getGlobalAsyncLocalStorageInstance();\n    if (asyncLocalStorageInstance === undefined) {\n        throw new Error(`Internal error: Global shared async local storage instance has not been initialized.`);\n    }\n    const runTree = asyncLocalStorageInstance.getStore();\n    const contextVars = { ...runTree?.[_CONTEXT_VARIABLES_KEY] };\n    contextVars[name] = value;\n    let newValue = {};\n    if (isRunTree(runTree)) {\n        newValue = new RunTree(runTree);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    newValue[_CONTEXT_VARIABLES_KEY] = contextVars;\n    asyncLocalStorageInstance.enterWith(newValue);\n}\n/**\n * Get the value of a previously set context variable. Context variables\n * are scoped to any child runnables called by the current runnable,\n * or globally if set outside of any runnable.\n *\n * @remarks\n * This function is only supported in environments that support AsyncLocalStorage,\n * including Node.js, Deno, and Cloudflare Workers.\n *\n * @example\n * ```ts\n * import { RunnableLambda } from \"@langchain/core/runnables\";\n * import {\n *   getContextVariable,\n *   setContextVariable\n * } from \"@langchain/core/context\";\n *\n * const nested = RunnableLambda.from(() => {\n *   // \"bar\" because it was set by a parent\n *   console.log(getContextVariable(\"foo\"));\n *\n *   // Override to \"baz\", but only for child runnables\n *   setContextVariable(\"foo\", \"baz\");\n *\n *   // Now \"baz\", but only for child runnables\n *   return getContextVariable(\"foo\");\n * });\n *\n * const runnable = RunnableLambda.from(async () => {\n *   // Set a context variable named \"foo\"\n *   setContextVariable(\"foo\", \"bar\");\n *\n *   const res = await nested.invoke({});\n *\n *   // Still \"bar\" since child changes do not affect parents\n *   console.log(getContextVariable(\"foo\"));\n *\n *   return res;\n * });\n *\n * // undefined, because context variable has not been set yet\n * console.log(getContextVariable(\"foo\"));\n *\n * // Final return value is \"baz\"\n * const result = await runnable.invoke({});\n * ```\n *\n * @param name The name of the context variable.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function getContextVariable(name) {\n    // Avoid using global singleton due to circuluar dependency issues\n    const asyncLocalStorageInstance = getGlobalAsyncLocalStorageInstance();\n    if (asyncLocalStorageInstance === undefined) {\n        return undefined;\n    }\n    const runTree = asyncLocalStorageInstance.getStore();\n    return runTree?.[_CONTEXT_VARIABLES_KEY]?.[name];\n}\nconst LC_CONFIGURE_HOOKS_KEY = Symbol(\"lc:configure_hooks\");\nexport const _getConfigureHooks = () => getContextVariable(LC_CONFIGURE_HOOKS_KEY) || [];\n/**\n * Register a callback configure hook to automatically add callback handlers to all runs.\n *\n * There are two ways to use this:\n *\n * 1. Using a context variable:\n *    - Set `contextVar` to specify the variable name\n *    - Use `setContextVariable()` to store your handler instance\n *\n * 2. Using an environment variable:\n *    - Set both `envVar` and `handlerClass`\n *    - The handler will be instantiated when the env var is set to \"true\".\n *\n * @example\n * ```typescript\n * // Method 1: Using context variable\n * import {\n *   registerConfigureHook,\n *   setContextVariable\n * } from \"@langchain/core/context\";\n *\n * const tracer = new MyCallbackHandler();\n * registerConfigureHook({\n *   contextVar: \"my_tracer\",\n * });\n * setContextVariable(\"my_tracer\", tracer);\n *\n * // ...run code here\n *\n * // Method 2: Using environment variable\n * registerConfigureHook({\n *   handlerClass: MyCallbackHandler,\n *   envVar: \"MY_TRACER_ENABLED\",\n * });\n * process.env.MY_TRACER_ENABLED = \"true\";\n *\n * // ...run code here\n * ```\n *\n * @param config Configuration object for the hook\n * @param config.contextVar Name of the context variable containing the handler instance\n * @param config.inheritable Whether child runs should inherit this handler\n * @param config.handlerClass Optional callback handler class (required if using envVar)\n * @param config.envVar Optional environment variable name to control handler activation\n */\nexport const registerConfigureHook = (config) => {\n    if (config.envVar && !config.handlerClass) {\n        throw new Error(\"If envVar is set, handlerClass must also be set to a non-None value.\");\n    }\n    setContextVariable(LC_CONFIGURE_HOOKS_KEY, [..._getConfigureHooks(), config]);\n};\n","import { v4 as uuidv4 } from \"uuid\";\nimport { BaseCallbackHandler, isBaseCallbackHandler, } from \"./base.js\";\nimport { ConsoleCallbackHandler } from \"../tracers/console.js\";\nimport { getBufferString } from \"../messages/utils.js\";\nimport { getEnvironmentVariable } from \"../utils/env.js\";\nimport { LangChainTracer, } from \"../tracers/tracer_langchain.js\";\nimport { consumeCallback } from \"./promises.js\";\nimport { isTracingEnabled } from \"../utils/callbacks.js\";\nimport { isBaseTracer } from \"../tracers/base.js\";\nimport { getContextVariable, _getConfigureHooks, } from \"../singletons/async_local_storage/context.js\";\nexport function parseCallbackConfigArg(arg) {\n    if (!arg) {\n        return {};\n    }\n    else if (Array.isArray(arg) || \"name\" in arg) {\n        return { callbacks: arg };\n    }\n    else {\n        return arg;\n    }\n}\n/**\n * Manage callbacks from different components of LangChain.\n */\nexport class BaseCallbackManager {\n    setHandler(handler) {\n        return this.setHandlers([handler]);\n    }\n}\n/**\n * Base class for run manager in LangChain.\n */\nexport class BaseRunManager {\n    constructor(runId, handlers, inheritableHandlers, tags, inheritableTags, metadata, inheritableMetadata, _parentRunId) {\n        Object.defineProperty(this, \"runId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: runId\n        });\n        Object.defineProperty(this, \"handlers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: handlers\n        });\n        Object.defineProperty(this, \"inheritableHandlers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: inheritableHandlers\n        });\n        Object.defineProperty(this, \"tags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: tags\n        });\n        Object.defineProperty(this, \"inheritableTags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: inheritableTags\n        });\n        Object.defineProperty(this, \"metadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: metadata\n        });\n        Object.defineProperty(this, \"inheritableMetadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: inheritableMetadata\n        });\n        Object.defineProperty(this, \"_parentRunId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _parentRunId\n        });\n    }\n    get parentRunId() {\n        return this._parentRunId;\n    }\n    async handleText(text) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            try {\n                await handler.handleText?.(text, this.runId, this._parentRunId, this.tags);\n            }\n            catch (err) {\n                const logFunction = handler.raiseError\n                    ? console.error\n                    : console.warn;\n                logFunction(`Error in handler ${handler.constructor.name}, handleText: ${err}`);\n                if (handler.raiseError) {\n                    throw err;\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleCustomEvent(eventName, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    data, _runId, _tags, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    _metadata) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            try {\n                await handler.handleCustomEvent?.(eventName, data, this.runId, this.tags, this.metadata);\n            }\n            catch (err) {\n                const logFunction = handler.raiseError\n                    ? console.error\n                    : console.warn;\n                logFunction(`Error in handler ${handler.constructor.name}, handleCustomEvent: ${err}`);\n                if (handler.raiseError) {\n                    throw err;\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n}\n/**\n * Manages callbacks for retriever runs.\n */\nexport class CallbackManagerForRetrieverRun extends BaseRunManager {\n    getChild(tag) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        const manager = new CallbackManager(this.runId);\n        manager.setHandlers(this.inheritableHandlers);\n        manager.addTags(this.inheritableTags);\n        manager.addMetadata(this.inheritableMetadata);\n        if (tag) {\n            manager.addTags([tag], false);\n        }\n        return manager;\n    }\n    async handleRetrieverEnd(documents) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreRetriever) {\n                try {\n                    await handler.handleRetrieverEnd?.(documents, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleRetriever`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleRetrieverError(err) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreRetriever) {\n                try {\n                    await handler.handleRetrieverError?.(err, this.runId, this._parentRunId, this.tags);\n                }\n                catch (error) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleRetrieverError: ${error}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n}\nexport class CallbackManagerForLLMRun extends BaseRunManager {\n    async handleLLMNewToken(token, idx, _runId, _parentRunId, _tags, fields) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreLLM) {\n                try {\n                    await handler.handleLLMNewToken?.(token, idx ?? { prompt: 0, completion: 0 }, this.runId, this._parentRunId, this.tags, fields);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleLLMNewToken: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleLLMError(err, _runId, _parentRunId, _tags, extraParams) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreLLM) {\n                try {\n                    await handler.handleLLMError?.(err, this.runId, this._parentRunId, this.tags, extraParams);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleLLMError: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleLLMEnd(output, _runId, _parentRunId, _tags, extraParams) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreLLM) {\n                try {\n                    await handler.handleLLMEnd?.(output, this.runId, this._parentRunId, this.tags, extraParams);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleLLMEnd: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n}\nexport class CallbackManagerForChainRun extends BaseRunManager {\n    getChild(tag) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        const manager = new CallbackManager(this.runId);\n        manager.setHandlers(this.inheritableHandlers);\n        manager.addTags(this.inheritableTags);\n        manager.addMetadata(this.inheritableMetadata);\n        if (tag) {\n            manager.addTags([tag], false);\n        }\n        return manager;\n    }\n    async handleChainError(err, _runId, _parentRunId, _tags, kwargs) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreChain) {\n                try {\n                    await handler.handleChainError?.(err, this.runId, this._parentRunId, this.tags, kwargs);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleChainError: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleChainEnd(output, _runId, _parentRunId, _tags, kwargs) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreChain) {\n                try {\n                    await handler.handleChainEnd?.(output, this.runId, this._parentRunId, this.tags, kwargs);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleChainEnd: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleAgentAction(action) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreAgent) {\n                try {\n                    await handler.handleAgentAction?.(action, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleAgentAction: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleAgentEnd(action) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreAgent) {\n                try {\n                    await handler.handleAgentEnd?.(action, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleAgentEnd: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n}\nexport class CallbackManagerForToolRun extends BaseRunManager {\n    getChild(tag) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        const manager = new CallbackManager(this.runId);\n        manager.setHandlers(this.inheritableHandlers);\n        manager.addTags(this.inheritableTags);\n        manager.addMetadata(this.inheritableMetadata);\n        if (tag) {\n            manager.addTags([tag], false);\n        }\n        return manager;\n    }\n    async handleToolError(err) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreAgent) {\n                try {\n                    await handler.handleToolError?.(err, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleToolError: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    async handleToolEnd(output) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreAgent) {\n                try {\n                    await handler.handleToolEnd?.(output, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleToolEnd: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n}\n/**\n * @example\n * ```typescript\n * const prompt = PromptTemplate.fromTemplate(\"What is the answer to {question}?\");\n *\n * // Example of using LLMChain with OpenAI and a simple prompt\n * const chain = new LLMChain({\n *   llm: new ChatOpenAI({ temperature: 0.9 }),\n *   prompt,\n * });\n *\n * // Running the chain with a single question\n * const result = await chain.call({\n *   question: \"What is the airspeed velocity of an unladen swallow?\",\n * });\n * console.log(\"The answer is:\", result);\n * ```\n */\nexport class CallbackManager extends BaseCallbackManager {\n    constructor(parentRunId, options) {\n        super();\n        Object.defineProperty(this, \"handlers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"inheritableHandlers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"tags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"inheritableTags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"metadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"inheritableMetadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"callback_manager\"\n        });\n        Object.defineProperty(this, \"_parentRunId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.handlers = options?.handlers ?? this.handlers;\n        this.inheritableHandlers =\n            options?.inheritableHandlers ?? this.inheritableHandlers;\n        this.tags = options?.tags ?? this.tags;\n        this.inheritableTags = options?.inheritableTags ?? this.inheritableTags;\n        this.metadata = options?.metadata ?? this.metadata;\n        this.inheritableMetadata =\n            options?.inheritableMetadata ?? this.inheritableMetadata;\n        this._parentRunId = parentRunId;\n    }\n    /**\n     * Gets the parent run ID, if any.\n     *\n     * @returns The parent run ID.\n     */\n    getParentRunId() {\n        return this._parentRunId;\n    }\n    async handleLLMStart(llm, prompts, runId = undefined, _parentRunId = undefined, extraParams = undefined, _tags = undefined, _metadata = undefined, runName = undefined) {\n        return Promise.all(prompts.map(async (prompt, idx) => {\n            // Can't have duplicate runs with the same run ID (if provided)\n            const runId_ = idx === 0 && runId ? runId : uuidv4();\n            await Promise.all(this.handlers.map((handler) => {\n                if (handler.ignoreLLM) {\n                    return;\n                }\n                if (isBaseTracer(handler)) {\n                    // Create and add run to the run map.\n                    // We do this synchronously to avoid race conditions\n                    // when callbacks are backgrounded.\n                    handler._createRunForLLMStart(llm, [prompt], runId_, this._parentRunId, extraParams, this.tags, this.metadata, runName);\n                }\n                return consumeCallback(async () => {\n                    try {\n                        await handler.handleLLMStart?.(llm, [prompt], runId_, this._parentRunId, extraParams, this.tags, this.metadata, runName);\n                    }\n                    catch (err) {\n                        const logFunction = handler.raiseError\n                            ? console.error\n                            : console.warn;\n                        logFunction(`Error in handler ${handler.constructor.name}, handleLLMStart: ${err}`);\n                        if (handler.raiseError) {\n                            throw err;\n                        }\n                    }\n                }, handler.awaitHandlers);\n            }));\n            return new CallbackManagerForLLMRun(runId_, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\n        }));\n    }\n    async handleChatModelStart(llm, messages, runId = undefined, _parentRunId = undefined, extraParams = undefined, _tags = undefined, _metadata = undefined, runName = undefined) {\n        return Promise.all(messages.map(async (messageGroup, idx) => {\n            // Can't have duplicate runs with the same run ID (if provided)\n            const runId_ = idx === 0 && runId ? runId : uuidv4();\n            await Promise.all(this.handlers.map((handler) => {\n                if (handler.ignoreLLM) {\n                    return;\n                }\n                if (isBaseTracer(handler)) {\n                    // Create and add run to the run map.\n                    // We do this synchronously to avoid race conditions\n                    // when callbacks are backgrounded.\n                    handler._createRunForChatModelStart(llm, [messageGroup], runId_, this._parentRunId, extraParams, this.tags, this.metadata, runName);\n                }\n                return consumeCallback(async () => {\n                    try {\n                        if (handler.handleChatModelStart) {\n                            await handler.handleChatModelStart?.(llm, [messageGroup], runId_, this._parentRunId, extraParams, this.tags, this.metadata, runName);\n                        }\n                        else if (handler.handleLLMStart) {\n                            const messageString = getBufferString(messageGroup);\n                            await handler.handleLLMStart?.(llm, [messageString], runId_, this._parentRunId, extraParams, this.tags, this.metadata, runName);\n                        }\n                    }\n                    catch (err) {\n                        const logFunction = handler.raiseError\n                            ? console.error\n                            : console.warn;\n                        logFunction(`Error in handler ${handler.constructor.name}, handleLLMStart: ${err}`);\n                        if (handler.raiseError) {\n                            throw err;\n                        }\n                    }\n                }, handler.awaitHandlers);\n            }));\n            return new CallbackManagerForLLMRun(runId_, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\n        }));\n    }\n    async handleChainStart(chain, inputs, runId = uuidv4(), runType = undefined, _tags = undefined, _metadata = undefined, runName = undefined) {\n        await Promise.all(this.handlers.map((handler) => {\n            if (handler.ignoreChain) {\n                return;\n            }\n            if (isBaseTracer(handler)) {\n                // Create and add run to the run map.\n                // We do this synchronously to avoid race conditions\n                // when callbacks are backgrounded.\n                handler._createRunForChainStart(chain, inputs, runId, this._parentRunId, this.tags, this.metadata, runType, runName);\n            }\n            return consumeCallback(async () => {\n                try {\n                    await handler.handleChainStart?.(chain, inputs, runId, this._parentRunId, this.tags, this.metadata, runType, runName);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleChainStart: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }, handler.awaitHandlers);\n        }));\n        return new CallbackManagerForChainRun(runId, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\n    }\n    async handleToolStart(tool, input, runId = uuidv4(), _parentRunId = undefined, _tags = undefined, _metadata = undefined, runName = undefined) {\n        await Promise.all(this.handlers.map((handler) => {\n            if (handler.ignoreAgent) {\n                return;\n            }\n            if (isBaseTracer(handler)) {\n                // Create and add run to the run map.\n                // We do this synchronously to avoid race conditions\n                // when callbacks are backgrounded.\n                handler._createRunForToolStart(tool, input, runId, this._parentRunId, this.tags, this.metadata, runName);\n            }\n            return consumeCallback(async () => {\n                try {\n                    await handler.handleToolStart?.(tool, input, runId, this._parentRunId, this.tags, this.metadata, runName);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleToolStart: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }, handler.awaitHandlers);\n        }));\n        return new CallbackManagerForToolRun(runId, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\n    }\n    async handleRetrieverStart(retriever, query, runId = uuidv4(), _parentRunId = undefined, _tags = undefined, _metadata = undefined, runName = undefined) {\n        await Promise.all(this.handlers.map((handler) => {\n            if (handler.ignoreRetriever) {\n                return;\n            }\n            if (isBaseTracer(handler)) {\n                // Create and add run to the run map.\n                // We do this synchronously to avoid race conditions\n                // when callbacks are backgrounded.\n                handler._createRunForRetrieverStart(retriever, query, runId, this._parentRunId, this.tags, this.metadata, runName);\n            }\n            return consumeCallback(async () => {\n                try {\n                    await handler.handleRetrieverStart?.(retriever, query, runId, this._parentRunId, this.tags, this.metadata, runName);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleRetrieverStart: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }, handler.awaitHandlers);\n        }));\n        return new CallbackManagerForRetrieverRun(runId, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\n    }\n    async handleCustomEvent(eventName, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    data, runId, _tags, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    _metadata) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreCustomEvent) {\n                try {\n                    await handler.handleCustomEvent?.(eventName, data, runId, this.tags, this.metadata);\n                }\n                catch (err) {\n                    const logFunction = handler.raiseError\n                        ? console.error\n                        : console.warn;\n                    logFunction(`Error in handler ${handler.constructor.name}, handleCustomEvent: ${err}`);\n                    if (handler.raiseError) {\n                        throw err;\n                    }\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    addHandler(handler, inherit = true) {\n        this.handlers.push(handler);\n        if (inherit) {\n            this.inheritableHandlers.push(handler);\n        }\n    }\n    removeHandler(handler) {\n        this.handlers = this.handlers.filter((_handler) => _handler !== handler);\n        this.inheritableHandlers = this.inheritableHandlers.filter((_handler) => _handler !== handler);\n    }\n    setHandlers(handlers, inherit = true) {\n        this.handlers = [];\n        this.inheritableHandlers = [];\n        for (const handler of handlers) {\n            this.addHandler(handler, inherit);\n        }\n    }\n    addTags(tags, inherit = true) {\n        this.removeTags(tags); // Remove duplicates\n        this.tags.push(...tags);\n        if (inherit) {\n            this.inheritableTags.push(...tags);\n        }\n    }\n    removeTags(tags) {\n        this.tags = this.tags.filter((tag) => !tags.includes(tag));\n        this.inheritableTags = this.inheritableTags.filter((tag) => !tags.includes(tag));\n    }\n    addMetadata(metadata, inherit = true) {\n        this.metadata = { ...this.metadata, ...metadata };\n        if (inherit) {\n            this.inheritableMetadata = { ...this.inheritableMetadata, ...metadata };\n        }\n    }\n    removeMetadata(metadata) {\n        for (const key of Object.keys(metadata)) {\n            delete this.metadata[key];\n            delete this.inheritableMetadata[key];\n        }\n    }\n    copy(additionalHandlers = [], inherit = true) {\n        const manager = new CallbackManager(this._parentRunId);\n        for (const handler of this.handlers) {\n            const inheritable = this.inheritableHandlers.includes(handler);\n            manager.addHandler(handler, inheritable);\n        }\n        for (const tag of this.tags) {\n            const inheritable = this.inheritableTags.includes(tag);\n            manager.addTags([tag], inheritable);\n        }\n        for (const key of Object.keys(this.metadata)) {\n            const inheritable = Object.keys(this.inheritableMetadata).includes(key);\n            manager.addMetadata({ [key]: this.metadata[key] }, inheritable);\n        }\n        for (const handler of additionalHandlers) {\n            if (\n            // Prevent multiple copies of console_callback_handler\n            manager.handlers\n                .filter((h) => h.name === \"console_callback_handler\")\n                .some((h) => h.name === handler.name)) {\n                continue;\n            }\n            manager.addHandler(handler, inherit);\n        }\n        return manager;\n    }\n    static fromHandlers(handlers) {\n        class Handler extends BaseCallbackHandler {\n            constructor() {\n                super();\n                Object.defineProperty(this, \"name\", {\n                    enumerable: true,\n                    configurable: true,\n                    writable: true,\n                    value: uuidv4()\n                });\n                Object.assign(this, handlers);\n            }\n        }\n        const manager = new this();\n        manager.addHandler(new Handler());\n        return manager;\n    }\n    static configure(inheritableHandlers, localHandlers, inheritableTags, localTags, inheritableMetadata, localMetadata, options) {\n        return this._configureSync(inheritableHandlers, localHandlers, inheritableTags, localTags, inheritableMetadata, localMetadata, options);\n    }\n    // TODO: Deprecate async method in favor of this one.\n    static _configureSync(inheritableHandlers, localHandlers, inheritableTags, localTags, inheritableMetadata, localMetadata, options) {\n        let callbackManager;\n        if (inheritableHandlers || localHandlers) {\n            if (Array.isArray(inheritableHandlers) || !inheritableHandlers) {\n                callbackManager = new CallbackManager();\n                callbackManager.setHandlers(inheritableHandlers?.map(ensureHandler) ?? [], true);\n            }\n            else {\n                callbackManager = inheritableHandlers;\n            }\n            callbackManager = callbackManager.copy(Array.isArray(localHandlers)\n                ? localHandlers.map(ensureHandler)\n                : localHandlers?.handlers, false);\n        }\n        const verboseEnabled = getEnvironmentVariable(\"LANGCHAIN_VERBOSE\") === \"true\" ||\n            options?.verbose;\n        const tracingV2Enabled = LangChainTracer.getTraceableRunTree()?.tracingEnabled ||\n            isTracingEnabled();\n        const tracingEnabled = tracingV2Enabled ||\n            (getEnvironmentVariable(\"LANGCHAIN_TRACING\") ?? false);\n        if (verboseEnabled || tracingEnabled) {\n            if (!callbackManager) {\n                callbackManager = new CallbackManager();\n            }\n            if (verboseEnabled &&\n                !callbackManager.handlers.some((handler) => handler.name === ConsoleCallbackHandler.prototype.name)) {\n                const consoleHandler = new ConsoleCallbackHandler();\n                callbackManager.addHandler(consoleHandler, true);\n            }\n            if (tracingEnabled &&\n                !callbackManager.handlers.some((handler) => handler.name === \"langchain_tracer\")) {\n                if (tracingV2Enabled) {\n                    const tracerV2 = new LangChainTracer();\n                    callbackManager.addHandler(tracerV2, true);\n                    // handoff between langchain and langsmith/traceable\n                    // override the parent run ID\n                    callbackManager._parentRunId =\n                        LangChainTracer.getTraceableRunTree()?.id ??\n                            callbackManager._parentRunId;\n                }\n            }\n        }\n        for (const { contextVar, inheritable = true, handlerClass, envVar, } of _getConfigureHooks()) {\n            const createIfNotInContext = envVar && getEnvironmentVariable(envVar) === \"true\" && handlerClass;\n            let handler;\n            const contextVarValue = contextVar !== undefined ? getContextVariable(contextVar) : undefined;\n            if (contextVarValue && isBaseCallbackHandler(contextVarValue)) {\n                handler = contextVarValue;\n            }\n            else if (createIfNotInContext) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                handler = new handlerClass({});\n            }\n            if (handler !== undefined) {\n                if (!callbackManager) {\n                    callbackManager = new CallbackManager();\n                }\n                if (!callbackManager.handlers.some((h) => h.name === handler.name)) {\n                    callbackManager.addHandler(handler, inheritable);\n                }\n            }\n        }\n        if (inheritableTags || localTags) {\n            if (callbackManager) {\n                callbackManager.addTags(inheritableTags ?? []);\n                callbackManager.addTags(localTags ?? [], false);\n            }\n        }\n        if (inheritableMetadata || localMetadata) {\n            if (callbackManager) {\n                callbackManager.addMetadata(inheritableMetadata ?? {});\n                callbackManager.addMetadata(localMetadata ?? {}, false);\n            }\n        }\n        return callbackManager;\n    }\n}\nexport function ensureHandler(handler) {\n    if (\"name\" in handler) {\n        return handler;\n    }\n    return BaseCallbackHandler.fromMethods(handler);\n}\n/**\n * @deprecated Use [`traceable`](https://docs.smith.langchain.com/observability/how_to_guides/tracing/annotate_code)\n * from \"langsmith\" instead.\n */\nexport class TraceGroup {\n    constructor(groupName, options) {\n        Object.defineProperty(this, \"groupName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: groupName\n        });\n        Object.defineProperty(this, \"options\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: options\n        });\n        Object.defineProperty(this, \"runManager\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    async getTraceGroupCallbackManager(group_name, inputs, options) {\n        const cb = new LangChainTracer(options);\n        const cm = await CallbackManager.configure([cb]);\n        const runManager = await cm?.handleChainStart({\n            lc: 1,\n            type: \"not_implemented\",\n            id: [\"langchain\", \"callbacks\", \"groups\", group_name],\n        }, inputs ?? {});\n        if (!runManager) {\n            throw new Error(\"Failed to create run group callback manager.\");\n        }\n        return runManager;\n    }\n    async start(inputs) {\n        if (!this.runManager) {\n            this.runManager = await this.getTraceGroupCallbackManager(this.groupName, inputs, this.options);\n        }\n        return this.runManager.getChild();\n    }\n    async error(err) {\n        if (this.runManager) {\n            await this.runManager.handleChainError(err);\n            this.runManager = undefined;\n        }\n    }\n    async end(output) {\n        if (this.runManager) {\n            await this.runManager.handleChainEnd(output ?? {});\n            this.runManager = undefined;\n        }\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _coerceToDict(value, defaultKey) {\n    return value && !Array.isArray(value) && typeof value === \"object\"\n        ? value\n        : { [defaultKey]: value };\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport async function traceAsGroup(groupOptions, enclosedCode, ...args) {\n    const traceGroup = new TraceGroup(groupOptions.name, groupOptions);\n    const callbackManager = await traceGroup.start({ ...args });\n    try {\n        const result = await enclosedCode(callbackManager, ...args);\n        await traceGroup.end(_coerceToDict(result, \"output\"));\n        return result;\n    }\n    catch (err) {\n        await traceGroup.error(err);\n        throw err;\n    }\n}\n","import { getEnvironmentVariable } from \"./env.js\";\nexport const isTracingEnabled = (tracingEnabled) => {\n    if (tracingEnabled !== undefined) {\n        return tracingEnabled;\n    }\n    const envVars = [\n        \"LANGSMITH_TRACING_V2\",\n        \"LANGCHAIN_TRACING_V2\",\n        \"LANGSMITH_TRACING\",\n        \"LANGCHAIN_TRACING\",\n    ];\n    return !!envVars.find((envVar) => getEnvironmentVariable(envVar) === \"true\");\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { RunTree } from \"langsmith\";\nimport { getGlobalAsyncLocalStorageInstance, setGlobalAsyncLocalStorageInstance, _CONTEXT_VARIABLES_KEY, } from \"./globals.js\";\nimport { CallbackManager } from \"../../callbacks/manager.js\";\nexport class MockAsyncLocalStorage {\n    getStore() {\n        return undefined;\n    }\n    run(_store, callback) {\n        return callback();\n    }\n    enterWith(_store) {\n        return undefined;\n    }\n}\nconst mockAsyncLocalStorage = new MockAsyncLocalStorage();\nconst LC_CHILD_KEY = Symbol.for(\"lc:child_config\");\nclass AsyncLocalStorageProvider {\n    getInstance() {\n        return getGlobalAsyncLocalStorageInstance() ?? mockAsyncLocalStorage;\n    }\n    getRunnableConfig() {\n        const storage = this.getInstance();\n        // this has the runnable config\n        // which means that we should also have an instance of a LangChainTracer\n        // with the run map prepopulated\n        return storage.getStore()?.extra?.[LC_CHILD_KEY];\n    }\n    runWithConfig(config, callback, avoidCreatingRootRunTree) {\n        const callbackManager = CallbackManager._configureSync(config?.callbacks, undefined, config?.tags, undefined, config?.metadata);\n        const storage = this.getInstance();\n        const previousValue = storage.getStore();\n        const parentRunId = callbackManager?.getParentRunId();\n        const langChainTracer = callbackManager?.handlers?.find((handler) => handler?.name === \"langchain_tracer\");\n        let runTree;\n        if (langChainTracer && parentRunId) {\n            runTree = langChainTracer.convertToRunTree(parentRunId);\n        }\n        else if (!avoidCreatingRootRunTree) {\n            runTree = new RunTree({\n                name: \"<runnable_lambda>\",\n                tracingEnabled: false,\n            });\n        }\n        if (runTree) {\n            runTree.extra = { ...runTree.extra, [LC_CHILD_KEY]: config };\n        }\n        if (previousValue !== undefined &&\n            previousValue[_CONTEXT_VARIABLES_KEY] !== undefined) {\n            if (runTree === undefined) {\n                runTree = {};\n            }\n            runTree[_CONTEXT_VARIABLES_KEY] =\n                previousValue[_CONTEXT_VARIABLES_KEY];\n        }\n        return storage.run(runTree, callback);\n    }\n    initializeGlobalInstance(instance) {\n        if (getGlobalAsyncLocalStorageInstance() === undefined) {\n            setGlobalAsyncLocalStorageInstance(instance);\n        }\n    }\n}\nconst AsyncLocalStorageProviderSingleton = new AsyncLocalStorageProvider();\nexport { AsyncLocalStorageProviderSingleton };\n","import { CallbackManager, ensureHandler } from \"../callbacks/manager.js\";\nimport { AsyncLocalStorageProviderSingleton } from \"../singletons/index.js\";\nexport const DEFAULT_RECURSION_LIMIT = 25;\nexport async function getCallbackManagerForConfig(config) {\n    return CallbackManager._configureSync(config?.callbacks, undefined, config?.tags, undefined, config?.metadata);\n}\nexport function mergeConfigs(...configs) {\n    // We do not want to call ensureConfig on the empty state here as this may cause\n    // double loading of callbacks if async local storage is being used.\n    const copy = {};\n    for (const options of configs.filter((c) => !!c)) {\n        for (const key of Object.keys(options)) {\n            if (key === \"metadata\") {\n                copy[key] = { ...copy[key], ...options[key] };\n            }\n            else if (key === \"tags\") {\n                const baseKeys = copy[key] ?? [];\n                copy[key] = [...new Set(baseKeys.concat(options[key] ?? []))];\n            }\n            else if (key === \"configurable\") {\n                copy[key] = { ...copy[key], ...options[key] };\n            }\n            else if (key === \"timeout\") {\n                if (copy.timeout === undefined) {\n                    copy.timeout = options.timeout;\n                }\n                else if (options.timeout !== undefined) {\n                    copy.timeout = Math.min(copy.timeout, options.timeout);\n                }\n            }\n            else if (key === \"signal\") {\n                if (copy.signal === undefined) {\n                    copy.signal = options.signal;\n                }\n                else if (options.signal !== undefined) {\n                    if (\"any\" in AbortSignal) {\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        copy.signal = AbortSignal.any([\n                            copy.signal,\n                            options.signal,\n                        ]);\n                    }\n                    else {\n                        copy.signal = options.signal;\n                    }\n                }\n            }\n            else if (key === \"callbacks\") {\n                const baseCallbacks = copy.callbacks;\n                const providedCallbacks = options.callbacks;\n                // callbacks can be either undefined, Array<handler> or manager\n                // so merging two callbacks values has 6 cases\n                if (Array.isArray(providedCallbacks)) {\n                    if (!baseCallbacks) {\n                        copy.callbacks = providedCallbacks;\n                    }\n                    else if (Array.isArray(baseCallbacks)) {\n                        copy.callbacks = baseCallbacks.concat(providedCallbacks);\n                    }\n                    else {\n                        // baseCallbacks is a manager\n                        const manager = baseCallbacks.copy();\n                        for (const callback of providedCallbacks) {\n                            manager.addHandler(ensureHandler(callback), true);\n                        }\n                        copy.callbacks = manager;\n                    }\n                }\n                else if (providedCallbacks) {\n                    // providedCallbacks is a manager\n                    if (!baseCallbacks) {\n                        copy.callbacks = providedCallbacks;\n                    }\n                    else if (Array.isArray(baseCallbacks)) {\n                        const manager = providedCallbacks.copy();\n                        for (const callback of baseCallbacks) {\n                            manager.addHandler(ensureHandler(callback), true);\n                        }\n                        copy.callbacks = manager;\n                    }\n                    else {\n                        // baseCallbacks is also a manager\n                        copy.callbacks = new CallbackManager(providedCallbacks._parentRunId, {\n                            handlers: baseCallbacks.handlers.concat(providedCallbacks.handlers),\n                            inheritableHandlers: baseCallbacks.inheritableHandlers.concat(providedCallbacks.inheritableHandlers),\n                            tags: Array.from(new Set(baseCallbacks.tags.concat(providedCallbacks.tags))),\n                            inheritableTags: Array.from(new Set(baseCallbacks.inheritableTags.concat(providedCallbacks.inheritableTags))),\n                            metadata: {\n                                ...baseCallbacks.metadata,\n                                ...providedCallbacks.metadata,\n                            },\n                        });\n                    }\n                }\n            }\n            else {\n                const typedKey = key;\n                copy[typedKey] = options[typedKey] ?? copy[typedKey];\n            }\n        }\n    }\n    return copy;\n}\nconst PRIMITIVES = new Set([\"string\", \"number\", \"boolean\"]);\n/**\n * Ensure that a passed config is an object with all required keys present.\n */\nexport function ensureConfig(config) {\n    const implicitConfig = AsyncLocalStorageProviderSingleton.getRunnableConfig();\n    let empty = {\n        tags: [],\n        metadata: {},\n        recursionLimit: 25,\n        runId: undefined,\n    };\n    if (implicitConfig) {\n        // Don't allow runId and runName to be loaded implicitly, as this can cause\n        // child runs to improperly inherit their parents' run ids.\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { runId, runName, ...rest } = implicitConfig;\n        empty = Object.entries(rest).reduce(\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (currentConfig, [key, value]) => {\n            if (value !== undefined) {\n                // eslint-disable-next-line no-param-reassign\n                currentConfig[key] = value;\n            }\n            return currentConfig;\n        }, empty);\n    }\n    if (config) {\n        empty = Object.entries(config).reduce(\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (currentConfig, [key, value]) => {\n            if (value !== undefined) {\n                // eslint-disable-next-line no-param-reassign\n                currentConfig[key] = value;\n            }\n            return currentConfig;\n        }, empty);\n    }\n    if (empty?.configurable) {\n        for (const key of Object.keys(empty.configurable)) {\n            if (PRIMITIVES.has(typeof empty.configurable[key]) &&\n                !empty.metadata?.[key]) {\n                if (!empty.metadata) {\n                    empty.metadata = {};\n                }\n                empty.metadata[key] = empty.configurable[key];\n            }\n        }\n    }\n    if (empty.timeout !== undefined) {\n        if (empty.timeout <= 0) {\n            throw new Error(\"Timeout must be a positive number\");\n        }\n        const timeoutSignal = AbortSignal.timeout(empty.timeout);\n        if (empty.signal !== undefined) {\n            if (\"any\" in AbortSignal) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                empty.signal = AbortSignal.any([empty.signal, timeoutSignal]);\n            }\n        }\n        else {\n            empty.signal = timeoutSignal;\n        }\n        delete empty.timeout;\n    }\n    return empty;\n}\n/**\n * Helper function that patches runnable configs with updated properties.\n */\nexport function patchConfig(config = {}, { callbacks, maxConcurrency, recursionLimit, runName, configurable, runId, } = {}) {\n    const newConfig = ensureConfig(config);\n    if (callbacks !== undefined) {\n        /**\n         * If we're replacing callbacks we need to unset runName\n         * since that should apply only to the same run as the original callbacks\n         */\n        delete newConfig.runName;\n        newConfig.callbacks = callbacks;\n    }\n    if (recursionLimit !== undefined) {\n        newConfig.recursionLimit = recursionLimit;\n    }\n    if (maxConcurrency !== undefined) {\n        newConfig.maxConcurrency = maxConcurrency;\n    }\n    if (runName !== undefined) {\n        newConfig.runName = runName;\n    }\n    if (configurable !== undefined) {\n        newConfig.configurable = { ...newConfig.configurable, ...configurable };\n    }\n    if (runId !== undefined) {\n        delete newConfig.runId;\n    }\n    return newConfig;\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function pickRunnableConfigKeys(config) {\n    return config\n        ? {\n            configurable: config.configurable,\n            recursionLimit: config.recursionLimit,\n            callbacks: config.callbacks,\n            tags: config.tags,\n            metadata: config.metadata,\n            maxConcurrency: config.maxConcurrency,\n            timeout: config.timeout,\n            signal: config.signal,\n        }\n        : undefined;\n}\n","export async function raceWithSignal(promise, signal) {\n    if (signal === undefined) {\n        return promise;\n    }\n    let listener;\n    return Promise.race([\n        promise.catch((err) => {\n            if (!signal?.aborted) {\n                throw err;\n            }\n            else {\n                return undefined;\n            }\n        }),\n        new Promise((_, reject) => {\n            listener = () => {\n                reject(new Error(\"Aborted\"));\n            };\n            signal.addEventListener(\"abort\", listener);\n            // Must be here inside the promise to avoid a race condition\n            if (signal.aborted) {\n                reject(new Error(\"Aborted\"));\n            }\n        }),\n    ]).finally(() => signal.removeEventListener(\"abort\", listener));\n}\n","import { pickRunnableConfigKeys } from \"../runnables/config.js\";\nimport { AsyncLocalStorageProviderSingleton } from \"../singletons/index.js\";\nimport { raceWithSignal } from \"./signal.js\";\n/*\n * Support async iterator syntax for ReadableStreams in all environments.\n * Source: https://github.com/MattiasBuelens/web-streams-polyfill/pull/122#issuecomment-1627354490\n */\nexport class IterableReadableStream extends ReadableStream {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"reader\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    ensureReader() {\n        if (!this.reader) {\n            this.reader = this.getReader();\n        }\n    }\n    async next() {\n        this.ensureReader();\n        try {\n            const result = await this.reader.read();\n            if (result.done) {\n                this.reader.releaseLock(); // release lock when stream becomes closed\n                return {\n                    done: true,\n                    value: undefined,\n                };\n            }\n            else {\n                return {\n                    done: false,\n                    value: result.value,\n                };\n            }\n        }\n        catch (e) {\n            this.reader.releaseLock(); // release lock when stream becomes errored\n            throw e;\n        }\n    }\n    async return() {\n        this.ensureReader();\n        // If wrapped in a Node stream, cancel is already called.\n        if (this.locked) {\n            const cancelPromise = this.reader.cancel(); // cancel first, but don't await yet\n            this.reader.releaseLock(); // release lock first\n            await cancelPromise; // now await it\n        }\n        return { done: true, value: undefined };\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    async throw(e) {\n        this.ensureReader();\n        if (this.locked) {\n            const cancelPromise = this.reader.cancel(); // cancel first, but don't await yet\n            this.reader.releaseLock(); // release lock first\n            await cancelPromise; // now await it\n        }\n        throw e;\n    }\n    [Symbol.asyncIterator]() {\n        return this;\n    }\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore Not present in Node 18 types, required in latest Node 22\n    async [Symbol.asyncDispose]() {\n        await this.return();\n    }\n    static fromReadableStream(stream) {\n        // From https://developer.mozilla.org/en-US/docs/Web/API/Streams_API/Using_readable_streams#reading_the_stream\n        const reader = stream.getReader();\n        return new IterableReadableStream({\n            start(controller) {\n                return pump();\n                function pump() {\n                    return reader.read().then(({ done, value }) => {\n                        // When no more data needs to be consumed, close the stream\n                        if (done) {\n                            controller.close();\n                            return;\n                        }\n                        // Enqueue the next data chunk into our target stream\n                        controller.enqueue(value);\n                        return pump();\n                    });\n                }\n            },\n            cancel() {\n                reader.releaseLock();\n            },\n        });\n    }\n    static fromAsyncGenerator(generator) {\n        return new IterableReadableStream({\n            async pull(controller) {\n                const { value, done } = await generator.next();\n                // When no more data needs to be consumed, close the stream\n                if (done) {\n                    controller.close();\n                }\n                // Fix: `else if (value)` will hang the streaming when nullish value (e.g. empty string) is pulled\n                controller.enqueue(value);\n            },\n            async cancel(reason) {\n                await generator.return(reason);\n            },\n        });\n    }\n}\nexport function atee(iter, length = 2) {\n    const buffers = Array.from({ length }, () => []);\n    return buffers.map(async function* makeIter(buffer) {\n        while (true) {\n            if (buffer.length === 0) {\n                const result = await iter.next();\n                for (const buffer of buffers) {\n                    buffer.push(result);\n                }\n            }\n            else if (buffer[0].done) {\n                return;\n            }\n            else {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                yield buffer.shift().value;\n            }\n        }\n    });\n}\nexport function concat(first, second) {\n    if (Array.isArray(first) && Array.isArray(second)) {\n        return first.concat(second);\n    }\n    else if (typeof first === \"string\" && typeof second === \"string\") {\n        return (first + second);\n    }\n    else if (typeof first === \"number\" && typeof second === \"number\") {\n        return (first + second);\n    }\n    else if (\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    \"concat\" in first &&\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        typeof first.concat === \"function\") {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return first.concat(second);\n    }\n    else if (typeof first === \"object\" && typeof second === \"object\") {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const chunk = { ...first };\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        for (const [key, value] of Object.entries(second)) {\n            if (key in chunk && !Array.isArray(chunk[key])) {\n                chunk[key] = concat(chunk[key], value);\n            }\n            else {\n                chunk[key] = value;\n            }\n        }\n        return chunk;\n    }\n    else {\n        throw new Error(`Cannot concat ${typeof first} and ${typeof second}`);\n    }\n}\nexport class AsyncGeneratorWithSetup {\n    constructor(params) {\n        Object.defineProperty(this, \"generator\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"setup\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"config\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"signal\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"firstResult\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"firstResultUsed\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        this.generator = params.generator;\n        this.config = params.config;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.signal = params.signal ?? this.config?.signal;\n        // setup is a promise that resolves only after the first iterator value\n        // is available. this is useful when setup of several piped generators\n        // needs to happen in logical order, ie. in the order in which input to\n        // to each generator is available.\n        this.setup = new Promise((resolve, reject) => {\n            void AsyncLocalStorageProviderSingleton.runWithConfig(pickRunnableConfigKeys(params.config), async () => {\n                this.firstResult = params.generator.next();\n                if (params.startSetup) {\n                    this.firstResult.then(params.startSetup).then(resolve, reject);\n                }\n                else {\n                    this.firstResult.then((_result) => resolve(undefined), reject);\n                }\n            }, true);\n        });\n    }\n    async next(...args) {\n        this.signal?.throwIfAborted();\n        if (!this.firstResultUsed) {\n            this.firstResultUsed = true;\n            return this.firstResult;\n        }\n        return AsyncLocalStorageProviderSingleton.runWithConfig(pickRunnableConfigKeys(this.config), this.signal\n            ? async () => {\n                return raceWithSignal(this.generator.next(...args), this.signal);\n            }\n            : async () => {\n                return this.generator.next(...args);\n            }, true);\n    }\n    async return(value) {\n        return this.generator.return(value);\n    }\n    async throw(e) {\n        return this.generator.throw(e);\n    }\n    [Symbol.asyncIterator]() {\n        return this;\n    }\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore Not present in Node 18 types, required in latest Node 22\n    async [Symbol.asyncDispose]() {\n        await this.return();\n    }\n}\nexport async function pipeGeneratorWithSetup(to, generator, startSetup, signal, ...args) {\n    const gen = new AsyncGeneratorWithSetup({\n        generator,\n        startSetup,\n        signal,\n    });\n    const setup = await gen.setup;\n    return { output: to(gen, setup, ...args), setup };\n}\n","import { applyPatch, } from \"../utils/fast-json-patch/index.js\";\nimport { BaseTracer } from \"./base.js\";\nimport { IterableReadableStream } from \"../utils/stream.js\";\nimport { AIMessageChunk } from \"../messages/ai.js\";\n/**\n * List of jsonpatch JSONPatchOperations, which describe how to create the run state\n * from an empty dict. This is the minimal representation of the log, designed to\n * be serialized as JSON and sent over the wire to reconstruct the log on the other\n * side. Reconstruction of the state can be done with any jsonpatch-compliant library,\n * see https://jsonpatch.com for more information.\n */\nexport class RunLogPatch {\n    constructor(fields) {\n        Object.defineProperty(this, \"ops\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.ops = fields.ops ?? [];\n    }\n    concat(other) {\n        const ops = this.ops.concat(other.ops);\n        const states = applyPatch({}, ops);\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunLog({\n            ops,\n            state: states[states.length - 1].newDocument,\n        });\n    }\n}\nexport class RunLog extends RunLogPatch {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"state\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.state = fields.state;\n    }\n    concat(other) {\n        const ops = this.ops.concat(other.ops);\n        const states = applyPatch(this.state, other.ops);\n        return new RunLog({ ops, state: states[states.length - 1].newDocument });\n    }\n    static fromRunLogPatch(patch) {\n        const states = applyPatch({}, patch.ops);\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunLog({\n            ops: patch.ops,\n            state: states[states.length - 1].newDocument,\n        });\n    }\n}\nexport const isLogStreamHandler = (handler) => handler.name === \"log_stream_tracer\";\n/**\n * Extract standardized inputs from a run.\n *\n * Standardizes the inputs based on the type of the runnable used.\n *\n * @param run - Run object\n * @param schemaFormat - The schema format to use.\n *\n * @returns Valid inputs are only dict. By conventions, inputs always represented\n * invocation using named arguments.\n * A null means that the input is not yet known!\n */\nasync function _getStandardizedInputs(run, schemaFormat) {\n    if (schemaFormat === \"original\") {\n        throw new Error(\"Do not assign inputs with original schema drop the key for now. \" +\n            \"When inputs are added to streamLog they should be added with \" +\n            \"standardized schema for streaming events.\");\n    }\n    const { inputs } = run;\n    if ([\"retriever\", \"llm\", \"prompt\"].includes(run.run_type)) {\n        return inputs;\n    }\n    if (Object.keys(inputs).length === 1 && inputs?.input === \"\") {\n        return undefined;\n    }\n    // new style chains\n    // These nest an additional 'input' key inside the 'inputs' to make sure\n    // the input is always a dict. We need to unpack and user the inner value.\n    // We should try to fix this in Runnables and callbacks/tracers\n    // Runnables should be using a null type here not a placeholder\n    // dict.\n    return inputs.input;\n}\nasync function _getStandardizedOutputs(run, schemaFormat) {\n    const { outputs } = run;\n    if (schemaFormat === \"original\") {\n        // Return the old schema, without standardizing anything\n        return outputs;\n    }\n    if ([\"retriever\", \"llm\", \"prompt\"].includes(run.run_type)) {\n        return outputs;\n    }\n    // TODO: Remove this hacky check\n    if (outputs !== undefined &&\n        Object.keys(outputs).length === 1 &&\n        outputs?.output !== undefined) {\n        return outputs.output;\n    }\n    return outputs;\n}\nfunction isChatGenerationChunk(x) {\n    return x !== undefined && x.message !== undefined;\n}\n/**\n * Class that extends the `BaseTracer` class from the\n * `langchain.callbacks.tracers.base` module. It represents a callback\n * handler that logs the execution of runs and emits `RunLog` instances to a\n * `RunLogStream`.\n */\nexport class LogStreamCallbackHandler extends BaseTracer {\n    constructor(fields) {\n        super({ _awaitHandler: true, ...fields });\n        Object.defineProperty(this, \"autoClose\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"includeNames\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"includeTypes\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"includeTags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"excludeNames\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"excludeTypes\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"excludeTags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_schemaFormat\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"original\"\n        });\n        Object.defineProperty(this, \"rootId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"keyMapByRunId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"counterMapByRunName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"transformStream\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"writer\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"receiveStream\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"log_stream_tracer\"\n        });\n        Object.defineProperty(this, \"lc_prefer_streaming\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        this.autoClose = fields?.autoClose ?? true;\n        this.includeNames = fields?.includeNames;\n        this.includeTypes = fields?.includeTypes;\n        this.includeTags = fields?.includeTags;\n        this.excludeNames = fields?.excludeNames;\n        this.excludeTypes = fields?.excludeTypes;\n        this.excludeTags = fields?.excludeTags;\n        this._schemaFormat = fields?._schemaFormat ?? this._schemaFormat;\n        this.transformStream = new TransformStream();\n        this.writer = this.transformStream.writable.getWriter();\n        this.receiveStream = IterableReadableStream.fromReadableStream(this.transformStream.readable);\n    }\n    [Symbol.asyncIterator]() {\n        return this.receiveStream;\n    }\n    async persistRun(_run) {\n        // This is a legacy method only called once for an entire run tree\n        // and is therefore not useful here\n    }\n    _includeRun(run) {\n        if (run.id === this.rootId) {\n            return false;\n        }\n        const runTags = run.tags ?? [];\n        let include = this.includeNames === undefined &&\n            this.includeTags === undefined &&\n            this.includeTypes === undefined;\n        if (this.includeNames !== undefined) {\n            include = include || this.includeNames.includes(run.name);\n        }\n        if (this.includeTypes !== undefined) {\n            include = include || this.includeTypes.includes(run.run_type);\n        }\n        if (this.includeTags !== undefined) {\n            include =\n                include ||\n                    runTags.find((tag) => this.includeTags?.includes(tag)) !== undefined;\n        }\n        if (this.excludeNames !== undefined) {\n            include = include && !this.excludeNames.includes(run.name);\n        }\n        if (this.excludeTypes !== undefined) {\n            include = include && !this.excludeTypes.includes(run.run_type);\n        }\n        if (this.excludeTags !== undefined) {\n            include =\n                include && runTags.every((tag) => !this.excludeTags?.includes(tag));\n        }\n        return include;\n    }\n    async *tapOutputIterable(runId, output) {\n        // Tap an output async iterator to stream its values to the log.\n        for await (const chunk of output) {\n            // root run is handled in .streamLog()\n            if (runId !== this.rootId) {\n                // if we can't find the run silently ignore\n                // eg. because this run wasn't included in the log\n                const key = this.keyMapByRunId[runId];\n                if (key) {\n                    await this.writer.write(new RunLogPatch({\n                        ops: [\n                            {\n                                op: \"add\",\n                                path: `/logs/${key}/streamed_output/-`,\n                                value: chunk,\n                            },\n                        ],\n                    }));\n                }\n            }\n            yield chunk;\n        }\n    }\n    async onRunCreate(run) {\n        if (this.rootId === undefined) {\n            this.rootId = run.id;\n            await this.writer.write(new RunLogPatch({\n                ops: [\n                    {\n                        op: \"replace\",\n                        path: \"\",\n                        value: {\n                            id: run.id,\n                            name: run.name,\n                            type: run.run_type,\n                            streamed_output: [],\n                            final_output: undefined,\n                            logs: {},\n                        },\n                    },\n                ],\n            }));\n        }\n        if (!this._includeRun(run)) {\n            return;\n        }\n        if (this.counterMapByRunName[run.name] === undefined) {\n            this.counterMapByRunName[run.name] = 0;\n        }\n        this.counterMapByRunName[run.name] += 1;\n        const count = this.counterMapByRunName[run.name];\n        this.keyMapByRunId[run.id] =\n            count === 1 ? run.name : `${run.name}:${count}`;\n        const logEntry = {\n            id: run.id,\n            name: run.name,\n            type: run.run_type,\n            tags: run.tags ?? [],\n            metadata: run.extra?.metadata ?? {},\n            start_time: new Date(run.start_time).toISOString(),\n            streamed_output: [],\n            streamed_output_str: [],\n            final_output: undefined,\n            end_time: undefined,\n        };\n        if (this._schemaFormat === \"streaming_events\") {\n            logEntry.inputs = await _getStandardizedInputs(run, this._schemaFormat);\n        }\n        await this.writer.write(new RunLogPatch({\n            ops: [\n                {\n                    op: \"add\",\n                    path: `/logs/${this.keyMapByRunId[run.id]}`,\n                    value: logEntry,\n                },\n            ],\n        }));\n    }\n    async onRunUpdate(run) {\n        try {\n            const runName = this.keyMapByRunId[run.id];\n            if (runName === undefined) {\n                return;\n            }\n            const ops = [];\n            if (this._schemaFormat === \"streaming_events\") {\n                ops.push({\n                    op: \"replace\",\n                    path: `/logs/${runName}/inputs`,\n                    value: await _getStandardizedInputs(run, this._schemaFormat),\n                });\n            }\n            ops.push({\n                op: \"add\",\n                path: `/logs/${runName}/final_output`,\n                value: await _getStandardizedOutputs(run, this._schemaFormat),\n            });\n            if (run.end_time !== undefined) {\n                ops.push({\n                    op: \"add\",\n                    path: `/logs/${runName}/end_time`,\n                    value: new Date(run.end_time).toISOString(),\n                });\n            }\n            const patch = new RunLogPatch({ ops });\n            await this.writer.write(patch);\n        }\n        finally {\n            if (run.id === this.rootId) {\n                const patch = new RunLogPatch({\n                    ops: [\n                        {\n                            op: \"replace\",\n                            path: \"/final_output\",\n                            value: await _getStandardizedOutputs(run, this._schemaFormat),\n                        },\n                    ],\n                });\n                await this.writer.write(patch);\n                if (this.autoClose) {\n                    await this.writer.close();\n                }\n            }\n        }\n    }\n    async onLLMNewToken(run, token, kwargs) {\n        const runName = this.keyMapByRunId[run.id];\n        if (runName === undefined) {\n            return;\n        }\n        // TODO: Remove hack\n        const isChatModel = run.inputs.messages !== undefined;\n        let streamedOutputValue;\n        if (isChatModel) {\n            if (isChatGenerationChunk(kwargs?.chunk)) {\n                streamedOutputValue = kwargs?.chunk;\n            }\n            else {\n                streamedOutputValue = new AIMessageChunk({\n                    id: `run-${run.id}`,\n                    content: token,\n                });\n            }\n        }\n        else {\n            streamedOutputValue = token;\n        }\n        const patch = new RunLogPatch({\n            ops: [\n                {\n                    op: \"add\",\n                    path: `/logs/${runName}/streamed_output_str/-`,\n                    value: token,\n                },\n                {\n                    op: \"add\",\n                    path: `/logs/${runName}/streamed_output/-`,\n                    value: streamedOutputValue,\n                },\n            ],\n        });\n        await this.writer.write(patch);\n    }\n}\n","export const RUN_KEY = \"__run\";\n/**\n * Chunk of a single generation. Used for streaming.\n */\nexport class GenerationChunk {\n    constructor(fields) {\n        Object.defineProperty(this, \"text\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Object.defineProperty(this, \"generationInfo\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.text = fields.text;\n        this.generationInfo = fields.generationInfo;\n    }\n    concat(chunk) {\n        return new GenerationChunk({\n            text: this.text + chunk.text,\n            generationInfo: {\n                ...this.generationInfo,\n                ...chunk.generationInfo,\n            },\n        });\n    }\n}\nexport class ChatGenerationChunk extends GenerationChunk {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"message\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.message = fields.message;\n    }\n    concat(chunk) {\n        return new ChatGenerationChunk({\n            text: this.text + chunk.text,\n            generationInfo: {\n                ...this.generationInfo,\n                ...chunk.generationInfo,\n            },\n            message: this.message.concat(chunk.message),\n        });\n    }\n}\n","import { BaseTracer } from \"./base.js\";\nimport { IterableReadableStream } from \"../utils/stream.js\";\nimport { AIMessageChunk } from \"../messages/ai.js\";\nimport { GenerationChunk } from \"../outputs.js\";\nfunction assignName({ name, serialized, }) {\n    if (name !== undefined) {\n        return name;\n    }\n    if (serialized?.name !== undefined) {\n        return serialized.name;\n    }\n    else if (serialized?.id !== undefined && Array.isArray(serialized?.id)) {\n        return serialized.id[serialized.id.length - 1];\n    }\n    return \"Unnamed\";\n}\nexport const isStreamEventsHandler = (handler) => handler.name === \"event_stream_tracer\";\n/**\n * Class that extends the `BaseTracer` class from the\n * `langchain.callbacks.tracers.base` module. It represents a callback\n * handler that logs the execution of runs and emits `RunLog` instances to a\n * `RunLogStream`.\n */\nexport class EventStreamCallbackHandler extends BaseTracer {\n    constructor(fields) {\n        super({ _awaitHandler: true, ...fields });\n        Object.defineProperty(this, \"autoClose\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"includeNames\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"includeTypes\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"includeTags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"excludeNames\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"excludeTypes\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"excludeTags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"runInfoMap\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new Map()\n        });\n        Object.defineProperty(this, \"tappedPromises\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new Map()\n        });\n        Object.defineProperty(this, \"transformStream\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"writer\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"receiveStream\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"event_stream_tracer\"\n        });\n        Object.defineProperty(this, \"lc_prefer_streaming\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        this.autoClose = fields?.autoClose ?? true;\n        this.includeNames = fields?.includeNames;\n        this.includeTypes = fields?.includeTypes;\n        this.includeTags = fields?.includeTags;\n        this.excludeNames = fields?.excludeNames;\n        this.excludeTypes = fields?.excludeTypes;\n        this.excludeTags = fields?.excludeTags;\n        this.transformStream = new TransformStream();\n        this.writer = this.transformStream.writable.getWriter();\n        this.receiveStream = IterableReadableStream.fromReadableStream(this.transformStream.readable);\n    }\n    [Symbol.asyncIterator]() {\n        return this.receiveStream;\n    }\n    async persistRun(_run) {\n        // This is a legacy method only called once for an entire run tree\n        // and is therefore not useful here\n    }\n    _includeRun(run) {\n        const runTags = run.tags ?? [];\n        let include = this.includeNames === undefined &&\n            this.includeTags === undefined &&\n            this.includeTypes === undefined;\n        if (this.includeNames !== undefined) {\n            include = include || this.includeNames.includes(run.name);\n        }\n        if (this.includeTypes !== undefined) {\n            include = include || this.includeTypes.includes(run.runType);\n        }\n        if (this.includeTags !== undefined) {\n            include =\n                include ||\n                    runTags.find((tag) => this.includeTags?.includes(tag)) !== undefined;\n        }\n        if (this.excludeNames !== undefined) {\n            include = include && !this.excludeNames.includes(run.name);\n        }\n        if (this.excludeTypes !== undefined) {\n            include = include && !this.excludeTypes.includes(run.runType);\n        }\n        if (this.excludeTags !== undefined) {\n            include =\n                include && runTags.every((tag) => !this.excludeTags?.includes(tag));\n        }\n        return include;\n    }\n    async *tapOutputIterable(runId, outputStream) {\n        const firstChunk = await outputStream.next();\n        if (firstChunk.done) {\n            return;\n        }\n        const runInfo = this.runInfoMap.get(runId);\n        // Run has finished, don't issue any stream events.\n        // An example of this is for runnables that use the default\n        // implementation of .stream(), which delegates to .invoke()\n        // and calls .onChainEnd() before passing it to the iterator.\n        if (runInfo === undefined) {\n            yield firstChunk.value;\n            return;\n        }\n        // Match format from handlers below\n        function _formatOutputChunk(eventType, data) {\n            if (eventType === \"llm\" && typeof data === \"string\") {\n                return new GenerationChunk({ text: data });\n            }\n            return data;\n        }\n        let tappedPromise = this.tappedPromises.get(runId);\n        // if we are the first to tap, issue stream events\n        if (tappedPromise === undefined) {\n            let tappedPromiseResolver;\n            tappedPromise = new Promise((resolve) => {\n                tappedPromiseResolver = resolve;\n            });\n            this.tappedPromises.set(runId, tappedPromise);\n            try {\n                const event = {\n                    event: `on_${runInfo.runType}_stream`,\n                    run_id: runId,\n                    name: runInfo.name,\n                    tags: runInfo.tags,\n                    metadata: runInfo.metadata,\n                    data: {},\n                };\n                await this.send({\n                    ...event,\n                    data: {\n                        chunk: _formatOutputChunk(runInfo.runType, firstChunk.value),\n                    },\n                }, runInfo);\n                yield firstChunk.value;\n                for await (const chunk of outputStream) {\n                    // Don't yield tool and retriever stream events\n                    if (runInfo.runType !== \"tool\" && runInfo.runType !== \"retriever\") {\n                        await this.send({\n                            ...event,\n                            data: {\n                                chunk: _formatOutputChunk(runInfo.runType, chunk),\n                            },\n                        }, runInfo);\n                    }\n                    yield chunk;\n                }\n            }\n            finally {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                tappedPromiseResolver();\n                // Don't delete from the promises map to keep track of which runs have been tapped.\n            }\n        }\n        else {\n            // otherwise just pass through\n            yield firstChunk.value;\n            for await (const chunk of outputStream) {\n                yield chunk;\n            }\n        }\n    }\n    async send(payload, run) {\n        if (this._includeRun(run)) {\n            await this.writer.write(payload);\n        }\n    }\n    async sendEndEvent(payload, run) {\n        const tappedPromise = this.tappedPromises.get(payload.run_id);\n        if (tappedPromise !== undefined) {\n            void tappedPromise.then(() => {\n                void this.send(payload, run);\n            });\n        }\n        else {\n            await this.send(payload, run);\n        }\n    }\n    async onLLMStart(run) {\n        const runName = assignName(run);\n        const runType = run.inputs.messages !== undefined ? \"chat_model\" : \"llm\";\n        const runInfo = {\n            tags: run.tags ?? [],\n            metadata: run.extra?.metadata ?? {},\n            name: runName,\n            runType,\n            inputs: run.inputs,\n        };\n        this.runInfoMap.set(run.id, runInfo);\n        const eventName = `on_${runType}_start`;\n        await this.send({\n            event: eventName,\n            data: {\n                input: run.inputs,\n            },\n            name: runName,\n            tags: run.tags ?? [],\n            run_id: run.id,\n            metadata: run.extra?.metadata ?? {},\n        }, runInfo);\n    }\n    async onLLMNewToken(run, token, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    kwargs) {\n        const runInfo = this.runInfoMap.get(run.id);\n        let chunk;\n        let eventName;\n        if (runInfo === undefined) {\n            throw new Error(`onLLMNewToken: Run ID ${run.id} not found in run map.`);\n        }\n        // Top-level streaming events are covered by tapOutputIterable\n        if (this.runInfoMap.size === 1) {\n            return;\n        }\n        if (runInfo.runType === \"chat_model\") {\n            eventName = \"on_chat_model_stream\";\n            if (kwargs?.chunk === undefined) {\n                chunk = new AIMessageChunk({ content: token, id: `run-${run.id}` });\n            }\n            else {\n                chunk = kwargs.chunk.message;\n            }\n        }\n        else if (runInfo.runType === \"llm\") {\n            eventName = \"on_llm_stream\";\n            if (kwargs?.chunk === undefined) {\n                chunk = new GenerationChunk({ text: token });\n            }\n            else {\n                chunk = kwargs.chunk;\n            }\n        }\n        else {\n            throw new Error(`Unexpected run type ${runInfo.runType}`);\n        }\n        await this.send({\n            event: eventName,\n            data: {\n                chunk,\n            },\n            run_id: run.id,\n            name: runInfo.name,\n            tags: runInfo.tags,\n            metadata: runInfo.metadata,\n        }, runInfo);\n    }\n    async onLLMEnd(run) {\n        const runInfo = this.runInfoMap.get(run.id);\n        this.runInfoMap.delete(run.id);\n        let eventName;\n        if (runInfo === undefined) {\n            throw new Error(`onLLMEnd: Run ID ${run.id} not found in run map.`);\n        }\n        const generations = run.outputs?.generations;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let output;\n        if (runInfo.runType === \"chat_model\") {\n            for (const generation of generations ?? []) {\n                if (output !== undefined) {\n                    break;\n                }\n                output = generation[0]?.message;\n            }\n            eventName = \"on_chat_model_end\";\n        }\n        else if (runInfo.runType === \"llm\") {\n            output = {\n                generations: generations?.map((generation) => {\n                    return generation.map((chunk) => {\n                        return {\n                            text: chunk.text,\n                            generationInfo: chunk.generationInfo,\n                        };\n                    });\n                }),\n                llmOutput: run.outputs?.llmOutput ?? {},\n            };\n            eventName = \"on_llm_end\";\n        }\n        else {\n            throw new Error(`onLLMEnd: Unexpected run type: ${runInfo.runType}`);\n        }\n        await this.sendEndEvent({\n            event: eventName,\n            data: {\n                output,\n                input: runInfo.inputs,\n            },\n            run_id: run.id,\n            name: runInfo.name,\n            tags: runInfo.tags,\n            metadata: runInfo.metadata,\n        }, runInfo);\n    }\n    async onChainStart(run) {\n        const runName = assignName(run);\n        const runType = run.run_type ?? \"chain\";\n        const runInfo = {\n            tags: run.tags ?? [],\n            metadata: run.extra?.metadata ?? {},\n            name: runName,\n            runType: run.run_type,\n        };\n        let eventData = {};\n        // Workaround Runnable core code not sending input when transform streaming.\n        if (run.inputs.input === \"\" && Object.keys(run.inputs).length === 1) {\n            eventData = {};\n            runInfo.inputs = {};\n        }\n        else if (run.inputs.input !== undefined) {\n            eventData.input = run.inputs.input;\n            runInfo.inputs = run.inputs.input;\n        }\n        else {\n            eventData.input = run.inputs;\n            runInfo.inputs = run.inputs;\n        }\n        this.runInfoMap.set(run.id, runInfo);\n        await this.send({\n            event: `on_${runType}_start`,\n            data: eventData,\n            name: runName,\n            tags: run.tags ?? [],\n            run_id: run.id,\n            metadata: run.extra?.metadata ?? {},\n        }, runInfo);\n    }\n    async onChainEnd(run) {\n        const runInfo = this.runInfoMap.get(run.id);\n        this.runInfoMap.delete(run.id);\n        if (runInfo === undefined) {\n            throw new Error(`onChainEnd: Run ID ${run.id} not found in run map.`);\n        }\n        const eventName = `on_${run.run_type}_end`;\n        const inputs = run.inputs ?? runInfo.inputs ?? {};\n        const outputs = run.outputs?.output ?? run.outputs;\n        const data = {\n            output: outputs,\n            input: inputs,\n        };\n        if (inputs.input && Object.keys(inputs).length === 1) {\n            data.input = inputs.input;\n            runInfo.inputs = inputs.input;\n        }\n        await this.sendEndEvent({\n            event: eventName,\n            data,\n            run_id: run.id,\n            name: runInfo.name,\n            tags: runInfo.tags,\n            metadata: runInfo.metadata ?? {},\n        }, runInfo);\n    }\n    async onToolStart(run) {\n        const runName = assignName(run);\n        const runInfo = {\n            tags: run.tags ?? [],\n            metadata: run.extra?.metadata ?? {},\n            name: runName,\n            runType: \"tool\",\n            inputs: run.inputs ?? {},\n        };\n        this.runInfoMap.set(run.id, runInfo);\n        await this.send({\n            event: \"on_tool_start\",\n            data: {\n                input: run.inputs ?? {},\n            },\n            name: runName,\n            run_id: run.id,\n            tags: run.tags ?? [],\n            metadata: run.extra?.metadata ?? {},\n        }, runInfo);\n    }\n    async onToolEnd(run) {\n        const runInfo = this.runInfoMap.get(run.id);\n        this.runInfoMap.delete(run.id);\n        if (runInfo === undefined) {\n            throw new Error(`onToolEnd: Run ID ${run.id} not found in run map.`);\n        }\n        if (runInfo.inputs === undefined) {\n            throw new Error(`onToolEnd: Run ID ${run.id} is a tool call, and is expected to have traced inputs.`);\n        }\n        const output = run.outputs?.output === undefined ? run.outputs : run.outputs.output;\n        await this.sendEndEvent({\n            event: \"on_tool_end\",\n            data: {\n                output,\n                input: runInfo.inputs,\n            },\n            run_id: run.id,\n            name: runInfo.name,\n            tags: runInfo.tags,\n            metadata: runInfo.metadata,\n        }, runInfo);\n    }\n    async onRetrieverStart(run) {\n        const runName = assignName(run);\n        const runType = \"retriever\";\n        const runInfo = {\n            tags: run.tags ?? [],\n            metadata: run.extra?.metadata ?? {},\n            name: runName,\n            runType,\n            inputs: {\n                query: run.inputs.query,\n            },\n        };\n        this.runInfoMap.set(run.id, runInfo);\n        await this.send({\n            event: \"on_retriever_start\",\n            data: {\n                input: {\n                    query: run.inputs.query,\n                },\n            },\n            name: runName,\n            tags: run.tags ?? [],\n            run_id: run.id,\n            metadata: run.extra?.metadata ?? {},\n        }, runInfo);\n    }\n    async onRetrieverEnd(run) {\n        const runInfo = this.runInfoMap.get(run.id);\n        this.runInfoMap.delete(run.id);\n        if (runInfo === undefined) {\n            throw new Error(`onRetrieverEnd: Run ID ${run.id} not found in run map.`);\n        }\n        await this.sendEndEvent({\n            event: \"on_retriever_end\",\n            data: {\n                output: run.outputs?.documents ?? run.outputs,\n                input: runInfo.inputs,\n            },\n            run_id: run.id,\n            name: runInfo.name,\n            tags: runInfo.tags,\n            metadata: runInfo.metadata,\n        }, runInfo);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    async handleCustomEvent(eventName, data, runId) {\n        const runInfo = this.runInfoMap.get(runId);\n        if (runInfo === undefined) {\n            throw new Error(`handleCustomEvent: Run ID ${runId} not found in run map.`);\n        }\n        await this.send({\n            event: \"on_custom_event\",\n            run_id: runId,\n            name: eventName,\n            tags: runInfo.tags,\n            metadata: runInfo.metadata,\n            data,\n        }, runInfo);\n    }\n    async finish() {\n        const pendingPromises = [...this.tappedPromises.values()];\n        void Promise.all(pendingPromises).finally(() => {\n            void this.writer.close();\n        });\n    }\n}\n","import pRetry from \"p-retry\";\nimport PQueueMod from \"p-queue\";\nconst STATUS_NO_RETRY = [\n    400,\n    401,\n    402,\n    403,\n    404,\n    405,\n    406,\n    407,\n    409, // Conflict\n];\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst defaultFailedAttemptHandler = (error) => {\n    if (error.message.startsWith(\"Cancel\") ||\n        error.message.startsWith(\"AbortError\") ||\n        error.name === \"AbortError\") {\n        throw error;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    if (error?.code === \"ECONNABORTED\") {\n        throw error;\n    }\n    const status = \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    error?.response?.status ?? error?.status;\n    if (status && STATUS_NO_RETRY.includes(+status)) {\n        throw error;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    if (error?.error?.code === \"insufficient_quota\") {\n        const err = new Error(error?.message);\n        err.name = \"InsufficientQuotaError\";\n        throw err;\n    }\n};\n/**\n * A class that can be used to make async calls with concurrency and retry logic.\n *\n * This is useful for making calls to any kind of \"expensive\" external resource,\n * be it because it's rate-limited, subject to network issues, etc.\n *\n * Concurrent calls are limited by the `maxConcurrency` parameter, which defaults\n * to `Infinity`. This means that by default, all calls will be made in parallel.\n *\n * Retries are limited by the `maxRetries` parameter, which defaults to 6. This\n * means that by default, each call will be retried up to 6 times, with an\n * exponential backoff between each attempt.\n */\nexport class AsyncCaller {\n    constructor(params) {\n        Object.defineProperty(this, \"maxConcurrency\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"maxRetries\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"onFailedAttempt\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"queue\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.maxConcurrency = params.maxConcurrency ?? Infinity;\n        this.maxRetries = params.maxRetries ?? 6;\n        this.onFailedAttempt =\n            params.onFailedAttempt ?? defaultFailedAttemptHandler;\n        const PQueue = \"default\" in PQueueMod ? PQueueMod.default : PQueueMod;\n        this.queue = new PQueue({ concurrency: this.maxConcurrency });\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    call(callable, ...args) {\n        return this.queue.add(() => pRetry(() => callable(...args).catch((error) => {\n            // eslint-disable-next-line no-instanceof/no-instanceof\n            if (error instanceof Error) {\n                throw error;\n            }\n            else {\n                throw new Error(error);\n            }\n        }), {\n            onFailedAttempt: this.onFailedAttempt,\n            retries: this.maxRetries,\n            randomize: true,\n            // If needed we can change some of the defaults here,\n            // but they're quite sensible.\n        }), { throwOnTimeout: true });\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    callWithOptions(options, callable, ...args) {\n        // Note this doesn't cancel the underlying request,\n        // when available prefer to use the signal option of the underlying call\n        if (options.signal) {\n            return Promise.race([\n                this.call(callable, ...args),\n                new Promise((_, reject) => {\n                    options.signal?.addEventListener(\"abort\", () => {\n                        reject(new Error(\"AbortError\"));\n                    });\n                }),\n            ]);\n        }\n        return this.call(callable, ...args);\n    }\n    fetch(...args) {\n        return this.call(() => fetch(...args).then((res) => (res.ok ? res : Promise.reject(res))));\n    }\n}\n","import { BaseTracer } from \"./base.js\";\nexport class RootListenersTracer extends BaseTracer {\n    constructor({ config, onStart, onEnd, onError, }) {\n        super({ _awaitHandler: true });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"RootListenersTracer\"\n        });\n        /** The Run's ID. Type UUID */\n        Object.defineProperty(this, \"rootId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"config\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"argOnStart\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"argOnEnd\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"argOnError\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.config = config;\n        this.argOnStart = onStart;\n        this.argOnEnd = onEnd;\n        this.argOnError = onError;\n    }\n    /**\n     * This is a legacy method only called once for an entire run tree\n     * therefore not useful here\n     * @param {Run} _ Not used\n     */\n    persistRun(_) {\n        return Promise.resolve();\n    }\n    async onRunCreate(run) {\n        if (this.rootId) {\n            return;\n        }\n        this.rootId = run.id;\n        if (this.argOnStart) {\n            await this.argOnStart(run, this.config);\n        }\n    }\n    async onRunUpdate(run) {\n        if (run.id !== this.rootId) {\n            return;\n        }\n        if (!run.error) {\n            if (this.argOnEnd) {\n                await this.argOnEnd(run, this.config);\n            }\n        }\n        else if (this.argOnError) {\n            await this.argOnError(run, this.config);\n        }\n    }\n}\n","// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isRunnableInterface(thing) {\n    return thing ? thing.lc_runnable : false;\n}\n/**\n * Utility to filter the root event in the streamEvents implementation.\n * This is simply binding the arguments to the namespace to make save on\n * a bit of typing in the streamEvents implementation.\n *\n * TODO: Refactor and remove.\n */\nexport class _RootEventFilter {\n    constructor(fields) {\n        Object.defineProperty(this, \"includeNames\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"includeTypes\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"includeTags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"excludeNames\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"excludeTypes\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"excludeTags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.includeNames = fields.includeNames;\n        this.includeTypes = fields.includeTypes;\n        this.includeTags = fields.includeTags;\n        this.excludeNames = fields.excludeNames;\n        this.excludeTypes = fields.excludeTypes;\n        this.excludeTags = fields.excludeTags;\n    }\n    includeEvent(event, rootType) {\n        let include = this.includeNames === undefined &&\n            this.includeTypes === undefined &&\n            this.includeTags === undefined;\n        const eventTags = event.tags ?? [];\n        if (this.includeNames !== undefined) {\n            include = include || this.includeNames.includes(event.name);\n        }\n        if (this.includeTypes !== undefined) {\n            include = include || this.includeTypes.includes(rootType);\n        }\n        if (this.includeTags !== undefined) {\n            include =\n                include || eventTags.some((tag) => this.includeTags?.includes(tag));\n        }\n        if (this.excludeNames !== undefined) {\n            include = include && !this.excludeNames.includes(event.name);\n        }\n        if (this.excludeTypes !== undefined) {\n            include = include && !this.excludeTypes.includes(rootType);\n        }\n        if (this.excludeTags !== undefined) {\n            include =\n                include && eventTags.every((tag) => !this.excludeTags?.includes(tag));\n        }\n        return include;\n    }\n}\n","export const ignoreOverride = Symbol(\"Let zodToJsonSchema decide on which parser to use\");\nexport const jsonDescription = (jsonSchema, def) => {\n    if (def.description) {\n        try {\n            return {\n                ...jsonSchema,\n                ...JSON.parse(def.description),\n            };\n        }\n        catch { }\n    }\n    return jsonSchema;\n};\nexport const defaultOptions = {\n    name: undefined,\n    $refStrategy: \"root\",\n    basePath: [\"#\"],\n    effectStrategy: \"input\",\n    pipeStrategy: \"all\",\n    dateStrategy: \"format:date-time\",\n    mapStrategy: \"entries\",\n    removeAdditionalStrategy: \"passthrough\",\n    allowedAdditionalProperties: true,\n    rejectedAdditionalProperties: false,\n    definitionPath: \"definitions\",\n    target: \"jsonSchema7\",\n    strictUnions: false,\n    definitions: {},\n    errorMessages: false,\n    markdownDescription: false,\n    patternStrategy: \"escape\",\n    applyRegexFlags: false,\n    emailStrategy: \"format:email\",\n    base64Strategy: \"contentEncoding:base64\",\n    nameStrategy: \"ref\",\n};\nexport const getDefaultOptions = (options) => (typeof options === \"string\"\n    ? {\n        ...defaultOptions,\n        name: options,\n    }\n    : {\n        ...defaultOptions,\n        ...options,\n    });\n","export function addErrorMessage(res, key, errorMessage, refs) {\n    if (!refs?.errorMessages)\n        return;\n    if (errorMessage) {\n        res.errorMessage = {\n            ...res.errorMessage,\n            [key]: errorMessage,\n        };\n    }\n}\nexport function setResponseValueAndErrors(res, key, value, errorMessage, refs) {\n    res[key] = value;\n    addErrorMessage(res, key, errorMessage, refs);\n}\n","import { parseDef } from \"../parseDef.js\";\nexport function parseBrandedDef(_def, refs) {\n    return parseDef(_def.type._def, refs);\n}\n","import { setResponseValueAndErrors } from \"../errorMessages.js\";\nexport function parseDateDef(def, refs, overrideDateStrategy) {\n    const strategy = overrideDateStrategy ?? refs.dateStrategy;\n    if (Array.isArray(strategy)) {\n        return {\n            anyOf: strategy.map((item, i) => parseDateDef(def, refs, item)),\n        };\n    }\n    switch (strategy) {\n        case \"string\":\n        case \"format:date-time\":\n            return {\n                type: \"string\",\n                format: \"date-time\",\n            };\n        case \"format:date\":\n            return {\n                type: \"string\",\n                format: \"date\",\n            };\n        case \"integer\":\n            return integerDateParser(def, refs);\n    }\n}\nconst integerDateParser = (def, refs) => {\n    const res = {\n        type: \"integer\",\n        format: \"unix-time\",\n    };\n    if (refs.target === \"openApi3\") {\n        return res;\n    }\n    for (const check of def.checks) {\n        switch (check.kind) {\n            case \"min\":\n                setResponseValueAndErrors(res, \"minimum\", check.value, // This is in milliseconds\n                check.message, refs);\n                break;\n            case \"max\":\n                setResponseValueAndErrors(res, \"maximum\", check.value, // This is in milliseconds\n                check.message, refs);\n                break;\n        }\n    }\n    return res;\n};\n","import { setResponseValueAndErrors } from \"../errorMessages.js\";\nlet emojiRegex = undefined;\n/**\n * Generated from the regular expressions found here as of 2024-05-22:\n * https://github.com/colinhacks/zod/blob/master/src/types.ts.\n *\n * Expressions with /i flag have been changed accordingly.\n */\nexport const zodPatterns = {\n    /**\n     * `c` was changed to `[cC]` to replicate /i flag\n     */\n    cuid: /^[cC][^\\s-]{8,}$/,\n    cuid2: /^[0-9a-z]+$/,\n    ulid: /^[0-9A-HJKMNP-TV-Z]{26}$/,\n    /**\n     * `a-z` was added to replicate /i flag\n     */\n    email: /^(?!\\.)(?!.*\\.\\.)([a-zA-Z0-9_'+\\-\\.]*)[a-zA-Z0-9_+-]@([a-zA-Z0-9][a-zA-Z0-9\\-]*\\.)+[a-zA-Z]{2,}$/,\n    /**\n     * Constructed a valid Unicode RegExp\n     *\n     * Lazily instantiate since this type of regex isn't supported\n     * in all envs (e.g. React Native).\n     *\n     * See:\n     * https://github.com/colinhacks/zod/issues/2433\n     * Fix in Zod:\n     * https://github.com/colinhacks/zod/commit/9340fd51e48576a75adc919bff65dbc4a5d4c99b\n     */\n    emoji: () => {\n        if (emojiRegex === undefined) {\n            emojiRegex = RegExp(\"^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$\", \"u\");\n        }\n        return emojiRegex;\n    },\n    /**\n     * Unused\n     */\n    uuid: /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/,\n    /**\n     * Unused\n     */\n    ipv4: /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/,\n    ipv4Cidr: /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\/(3[0-2]|[12]?[0-9])$/,\n    /**\n     * Unused\n     */\n    ipv6: /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/,\n    ipv6Cidr: /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/,\n    base64: /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/,\n    base64url: /^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/,\n    nanoid: /^[a-zA-Z0-9_-]{21}$/,\n    jwt: /^[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]*$/,\n};\nexport function parseStringDef(def, refs) {\n    const res = {\n        type: \"string\",\n    };\n    if (def.checks) {\n        for (const check of def.checks) {\n            switch (check.kind) {\n                case \"min\":\n                    setResponseValueAndErrors(res, \"minLength\", typeof res.minLength === \"number\"\n                        ? Math.max(res.minLength, check.value)\n                        : check.value, check.message, refs);\n                    break;\n                case \"max\":\n                    setResponseValueAndErrors(res, \"maxLength\", typeof res.maxLength === \"number\"\n                        ? Math.min(res.maxLength, check.value)\n                        : check.value, check.message, refs);\n                    break;\n                case \"email\":\n                    switch (refs.emailStrategy) {\n                        case \"format:email\":\n                            addFormat(res, \"email\", check.message, refs);\n                            break;\n                        case \"format:idn-email\":\n                            addFormat(res, \"idn-email\", check.message, refs);\n                            break;\n                        case \"pattern:zod\":\n                            addPattern(res, zodPatterns.email, check.message, refs);\n                            break;\n                    }\n                    break;\n                case \"url\":\n                    addFormat(res, \"uri\", check.message, refs);\n                    break;\n                case \"uuid\":\n                    addFormat(res, \"uuid\", check.message, refs);\n                    break;\n                case \"regex\":\n                    addPattern(res, check.regex, check.message, refs);\n                    break;\n                case \"cuid\":\n                    addPattern(res, zodPatterns.cuid, check.message, refs);\n                    break;\n                case \"cuid2\":\n                    addPattern(res, zodPatterns.cuid2, check.message, refs);\n                    break;\n                case \"startsWith\":\n                    addPattern(res, RegExp(`^${escapeLiteralCheckValue(check.value, refs)}`), check.message, refs);\n                    break;\n                case \"endsWith\":\n                    addPattern(res, RegExp(`${escapeLiteralCheckValue(check.value, refs)}$`), check.message, refs);\n                    break;\n                case \"datetime\":\n                    addFormat(res, \"date-time\", check.message, refs);\n                    break;\n                case \"date\":\n                    addFormat(res, \"date\", check.message, refs);\n                    break;\n                case \"time\":\n                    addFormat(res, \"time\", check.message, refs);\n                    break;\n                case \"duration\":\n                    addFormat(res, \"duration\", check.message, refs);\n                    break;\n                case \"length\":\n                    setResponseValueAndErrors(res, \"minLength\", typeof res.minLength === \"number\"\n                        ? Math.max(res.minLength, check.value)\n                        : check.value, check.message, refs);\n                    setResponseValueAndErrors(res, \"maxLength\", typeof res.maxLength === \"number\"\n                        ? Math.min(res.maxLength, check.value)\n                        : check.value, check.message, refs);\n                    break;\n                case \"includes\": {\n                    addPattern(res, RegExp(escapeLiteralCheckValue(check.value, refs)), check.message, refs);\n                    break;\n                }\n                case \"ip\": {\n                    if (check.version !== \"v6\") {\n                        addFormat(res, \"ipv4\", check.message, refs);\n                    }\n                    if (check.version !== \"v4\") {\n                        addFormat(res, \"ipv6\", check.message, refs);\n                    }\n                    break;\n                }\n                case \"base64url\":\n                    addPattern(res, zodPatterns.base64url, check.message, refs);\n                    break;\n                case \"jwt\":\n                    addPattern(res, zodPatterns.jwt, check.message, refs);\n                    break;\n                case \"cidr\": {\n                    if (check.version !== \"v6\") {\n                        addPattern(res, zodPatterns.ipv4Cidr, check.message, refs);\n                    }\n                    if (check.version !== \"v4\") {\n                        addPattern(res, zodPatterns.ipv6Cidr, check.message, refs);\n                    }\n                    break;\n                }\n                case \"emoji\":\n                    addPattern(res, zodPatterns.emoji(), check.message, refs);\n                    break;\n                case \"ulid\": {\n                    addPattern(res, zodPatterns.ulid, check.message, refs);\n                    break;\n                }\n                case \"base64\": {\n                    switch (refs.base64Strategy) {\n                        case \"format:binary\": {\n                            addFormat(res, \"binary\", check.message, refs);\n                            break;\n                        }\n                        case \"contentEncoding:base64\": {\n                            setResponseValueAndErrors(res, \"contentEncoding\", \"base64\", check.message, refs);\n                            break;\n                        }\n                        case \"pattern:zod\": {\n                            addPattern(res, zodPatterns.base64, check.message, refs);\n                            break;\n                        }\n                    }\n                    break;\n                }\n                case \"nanoid\": {\n                    addPattern(res, zodPatterns.nanoid, check.message, refs);\n                }\n                case \"toLowerCase\":\n                case \"toUpperCase\":\n                case \"trim\":\n                    break;\n                default:\n                    /* c8 ignore next */\n                    ((_) => { })(check);\n            }\n        }\n    }\n    return res;\n}\nfunction escapeLiteralCheckValue(literal, refs) {\n    return refs.patternStrategy === \"escape\"\n        ? escapeNonAlphaNumeric(literal)\n        : literal;\n}\nconst ALPHA_NUMERIC = new Set(\"ABCDEFGHIJKLMNOPQRSTUVXYZabcdefghijklmnopqrstuvxyz0123456789\");\nfunction escapeNonAlphaNumeric(source) {\n    let result = \"\";\n    for (let i = 0; i < source.length; i++) {\n        if (!ALPHA_NUMERIC.has(source[i])) {\n            result += \"\\\\\";\n        }\n        result += source[i];\n    }\n    return result;\n}\n// Adds a \"format\" keyword to the schema. If a format exists, both formats will be joined in an allOf-node, along with subsequent ones.\nfunction addFormat(schema, value, message, refs) {\n    if (schema.format || schema.anyOf?.some((x) => x.format)) {\n        if (!schema.anyOf) {\n            schema.anyOf = [];\n        }\n        if (schema.format) {\n            schema.anyOf.push({\n                format: schema.format,\n                ...(schema.errorMessage &&\n                    refs.errorMessages && {\n                    errorMessage: { format: schema.errorMessage.format },\n                }),\n            });\n            delete schema.format;\n            if (schema.errorMessage) {\n                delete schema.errorMessage.format;\n                if (Object.keys(schema.errorMessage).length === 0) {\n                    delete schema.errorMessage;\n                }\n            }\n        }\n        schema.anyOf.push({\n            format: value,\n            ...(message &&\n                refs.errorMessages && { errorMessage: { format: message } }),\n        });\n    }\n    else {\n        setResponseValueAndErrors(schema, \"format\", value, message, refs);\n    }\n}\n// Adds a \"pattern\" keyword to the schema. If a pattern exists, both patterns will be joined in an allOf-node, along with subsequent ones.\nfunction addPattern(schema, regex, message, refs) {\n    if (schema.pattern || schema.allOf?.some((x) => x.pattern)) {\n        if (!schema.allOf) {\n            schema.allOf = [];\n        }\n        if (schema.pattern) {\n            schema.allOf.push({\n                pattern: schema.pattern,\n                ...(schema.errorMessage &&\n                    refs.errorMessages && {\n                    errorMessage: { pattern: schema.errorMessage.pattern },\n                }),\n            });\n            delete schema.pattern;\n            if (schema.errorMessage) {\n                delete schema.errorMessage.pattern;\n                if (Object.keys(schema.errorMessage).length === 0) {\n                    delete schema.errorMessage;\n                }\n            }\n        }\n        schema.allOf.push({\n            pattern: stringifyRegExpWithFlags(regex, refs),\n            ...(message &&\n                refs.errorMessages && { errorMessage: { pattern: message } }),\n        });\n    }\n    else {\n        setResponseValueAndErrors(schema, \"pattern\", stringifyRegExpWithFlags(regex, refs), message, refs);\n    }\n}\n// Mutate z.string.regex() in a best attempt to accommodate for regex flags when applyRegexFlags is true\nfunction stringifyRegExpWithFlags(regex, refs) {\n    if (!refs.applyRegexFlags || !regex.flags) {\n        return regex.source;\n    }\n    // Currently handled flags\n    const flags = {\n        i: regex.flags.includes(\"i\"),\n        m: regex.flags.includes(\"m\"),\n        s: regex.flags.includes(\"s\"), // `.` matches newlines\n    };\n    // The general principle here is to step through each character, one at a time, applying mutations as flags require. We keep track when the current character is escaped, and when it's inside a group /like [this]/ or (also) a range like /[a-z]/. The following is fairly brittle imperative code; edit at your peril!\n    const source = flags.i ? regex.source.toLowerCase() : regex.source;\n    let pattern = \"\";\n    let isEscaped = false;\n    let inCharGroup = false;\n    let inCharRange = false;\n    for (let i = 0; i < source.length; i++) {\n        if (isEscaped) {\n            pattern += source[i];\n            isEscaped = false;\n            continue;\n        }\n        if (flags.i) {\n            if (inCharGroup) {\n                if (source[i].match(/[a-z]/)) {\n                    if (inCharRange) {\n                        pattern += source[i];\n                        pattern += `${source[i - 2]}-${source[i]}`.toUpperCase();\n                        inCharRange = false;\n                    }\n                    else if (source[i + 1] === \"-\" && source[i + 2]?.match(/[a-z]/)) {\n                        pattern += source[i];\n                        inCharRange = true;\n                    }\n                    else {\n                        pattern += `${source[i]}${source[i].toUpperCase()}`;\n                    }\n                    continue;\n                }\n            }\n            else if (source[i].match(/[a-z]/)) {\n                pattern += `[${source[i]}${source[i].toUpperCase()}]`;\n                continue;\n            }\n        }\n        if (flags.m) {\n            if (source[i] === \"^\") {\n                pattern += `(^|(?<=[\\r\\n]))`;\n                continue;\n            }\n            else if (source[i] === \"$\") {\n                pattern += `($|(?=[\\r\\n]))`;\n                continue;\n            }\n        }\n        if (flags.s && source[i] === \".\") {\n            pattern += inCharGroup ? `${source[i]}\\r\\n` : `[${source[i]}\\r\\n]`;\n            continue;\n        }\n        pattern += source[i];\n        if (source[i] === \"\\\\\") {\n            isEscaped = true;\n        }\n        else if (inCharGroup && source[i] === \"]\") {\n            inCharGroup = false;\n        }\n        else if (!inCharGroup && source[i] === \"[\") {\n            inCharGroup = true;\n        }\n    }\n    try {\n        new RegExp(pattern);\n    }\n    catch {\n        console.warn(`Could not convert regex pattern at ${refs.currentPath.join(\"/\")} to a flag-independent form! Falling back to the flag-ignorant source`);\n        return regex.source;\n    }\n    return pattern;\n}\n","import { ZodFirstPartyTypeKind, } from \"zod\";\nimport { parseDef } from \"../parseDef.js\";\nimport { parseStringDef } from \"./string.js\";\nimport { parseBrandedDef } from \"./branded.js\";\nexport function parseRecordDef(def, refs) {\n    if (refs.target === \"openAi\") {\n        console.warn(\"Warning: OpenAI may not support records in schemas! Try an array of key-value pairs instead.\");\n    }\n    if (refs.target === \"openApi3\" &&\n        def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodEnum) {\n        return {\n            type: \"object\",\n            required: def.keyType._def.values,\n            properties: def.keyType._def.values.reduce((acc, key) => ({\n                ...acc,\n                [key]: parseDef(def.valueType._def, {\n                    ...refs,\n                    currentPath: [...refs.currentPath, \"properties\", key],\n                }) ?? {},\n            }), {}),\n            additionalProperties: refs.rejectedAdditionalProperties,\n        };\n    }\n    const schema = {\n        type: \"object\",\n        additionalProperties: parseDef(def.valueType._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"additionalProperties\"],\n        }) ?? refs.allowedAdditionalProperties,\n    };\n    if (refs.target === \"openApi3\") {\n        return schema;\n    }\n    if (def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodString &&\n        def.keyType._def.checks?.length) {\n        const { type, ...keyType } = parseStringDef(def.keyType._def, refs);\n        return {\n            ...schema,\n            propertyNames: keyType,\n        };\n    }\n    else if (def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodEnum) {\n        return {\n            ...schema,\n            propertyNames: {\n                enum: def.keyType._def.values,\n            },\n        };\n    }\n    else if (def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodBranded &&\n        def.keyType._def.type._def.typeName === ZodFirstPartyTypeKind.ZodString &&\n        def.keyType._def.type._def.checks?.length) {\n        const { type, ...keyType } = parseBrandedDef(def.keyType._def, refs);\n        return {\n            ...schema,\n            propertyNames: keyType,\n        };\n    }\n    return schema;\n}\n","import { parseDef } from \"../parseDef.js\";\nexport const primitiveMappings = {\n    ZodString: \"string\",\n    ZodNumber: \"number\",\n    ZodBigInt: \"integer\",\n    ZodBoolean: \"boolean\",\n    ZodNull: \"null\",\n};\nexport function parseUnionDef(def, refs) {\n    if (refs.target === \"openApi3\")\n        return asAnyOf(def, refs);\n    const options = def.options instanceof Map ? Array.from(def.options.values()) : def.options;\n    // This blocks tries to look ahead a bit to produce nicer looking schemas with type array instead of anyOf.\n    if (options.every((x) => x._def.typeName in primitiveMappings &&\n        (!x._def.checks || !x._def.checks.length))) {\n        // all types in union are primitive and lack checks, so might as well squash into {type: [...]}\n        const types = options.reduce((types, x) => {\n            const type = primitiveMappings[x._def.typeName]; //Can be safely casted due to row 43\n            return type && !types.includes(type) ? [...types, type] : types;\n        }, []);\n        return {\n            type: types.length > 1 ? types : types[0],\n        };\n    }\n    else if (options.every((x) => x._def.typeName === \"ZodLiteral\" && !x.description)) {\n        // all options literals\n        const types = options.reduce((acc, x) => {\n            const type = typeof x._def.value;\n            switch (type) {\n                case \"string\":\n                case \"number\":\n                case \"boolean\":\n                    return [...acc, type];\n                case \"bigint\":\n                    return [...acc, \"integer\"];\n                case \"object\":\n                    if (x._def.value === null)\n                        return [...acc, \"null\"];\n                case \"symbol\":\n                case \"undefined\":\n                case \"function\":\n                default:\n                    return acc;\n            }\n        }, []);\n        if (types.length === options.length) {\n            // all the literals are primitive, as far as null can be considered primitive\n            const uniqueTypes = types.filter((x, i, a) => a.indexOf(x) === i);\n            return {\n                type: uniqueTypes.length > 1 ? uniqueTypes : uniqueTypes[0],\n                enum: options.reduce((acc, x) => {\n                    return acc.includes(x._def.value) ? acc : [...acc, x._def.value];\n                }, []),\n            };\n        }\n    }\n    else if (options.every((x) => x._def.typeName === \"ZodEnum\")) {\n        return {\n            type: \"string\",\n            enum: options.reduce((acc, x) => [\n                ...acc,\n                ...x._def.values.filter((x) => !acc.includes(x)),\n            ], []),\n        };\n    }\n    return asAnyOf(def, refs);\n}\nconst asAnyOf = (def, refs) => {\n    const anyOf = (def.options instanceof Map\n        ? Array.from(def.options.values())\n        : def.options)\n        .map((x, i) => parseDef(x._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"anyOf\", `${i}`],\n    }))\n        .filter((x) => !!x &&\n        (!refs.strictUnions ||\n            (typeof x === \"object\" && Object.keys(x).length > 0)));\n    return anyOf.length ? { anyOf } : undefined;\n};\n","import { ZodOptional } from \"zod\";\nimport { parseDef } from \"../parseDef.js\";\nexport function parseObjectDef(def, refs) {\n    const forceOptionalIntoNullable = refs.target === \"openAi\";\n    const result = {\n        type: \"object\",\n        properties: {},\n    };\n    const required = [];\n    const shape = def.shape();\n    for (const propName in shape) {\n        let propDef = shape[propName];\n        if (propDef === undefined || propDef._def === undefined) {\n            continue;\n        }\n        let propOptional = safeIsOptional(propDef);\n        if (propOptional && forceOptionalIntoNullable) {\n            if (propDef instanceof ZodOptional) {\n                propDef = propDef._def.innerType;\n            }\n            if (!propDef.isNullable()) {\n                propDef = propDef.nullable();\n            }\n            propOptional = false;\n        }\n        const parsedDef = parseDef(propDef._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"properties\", propName],\n            propertyPath: [...refs.currentPath, \"properties\", propName],\n        });\n        if (parsedDef === undefined) {\n            continue;\n        }\n        result.properties[propName] = parsedDef;\n        if (!propOptional) {\n            required.push(propName);\n        }\n    }\n    if (required.length) {\n        result.required = required;\n    }\n    const additionalProperties = decideAdditionalProperties(def, refs);\n    if (additionalProperties !== undefined) {\n        result.additionalProperties = additionalProperties;\n    }\n    return result;\n}\nfunction decideAdditionalProperties(def, refs) {\n    if (def.catchall._def.typeName !== \"ZodNever\") {\n        return parseDef(def.catchall._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"additionalProperties\"],\n        });\n    }\n    switch (def.unknownKeys) {\n        case \"passthrough\":\n            return refs.allowedAdditionalProperties;\n        case \"strict\":\n            return refs.rejectedAdditionalProperties;\n        case \"strip\":\n            return refs.removeAdditionalStrategy === \"strict\"\n                ? refs.allowedAdditionalProperties\n                : refs.rejectedAdditionalProperties;\n    }\n}\nfunction safeIsOptional(schema) {\n    try {\n        return schema.isOptional();\n    }\n    catch {\n        return true;\n    }\n}\n","import { parseDef } from \"../parseDef.js\";\nexport const parseReadonlyDef = (def, refs) => {\n    return parseDef(def.innerType._def, refs);\n};\n","import { ZodFirstPartyTypeKind } from \"zod\";\nimport { parseAnyDef } from \"./parsers/any.js\";\nimport { parseArrayDef } from \"./parsers/array.js\";\nimport { parseBigintDef } from \"./parsers/bigint.js\";\nimport { parseBooleanDef } from \"./parsers/boolean.js\";\nimport { parseBrandedDef } from \"./parsers/branded.js\";\nimport { parseCatchDef } from \"./parsers/catch.js\";\nimport { parseDateDef } from \"./parsers/date.js\";\nimport { parseDefaultDef } from \"./parsers/default.js\";\nimport { parseEffectsDef } from \"./parsers/effects.js\";\nimport { parseEnumDef } from \"./parsers/enum.js\";\nimport { parseIntersectionDef } from \"./parsers/intersection.js\";\nimport { parseLiteralDef } from \"./parsers/literal.js\";\nimport { parseMapDef } from \"./parsers/map.js\";\nimport { parseNativeEnumDef } from \"./parsers/nativeEnum.js\";\nimport { parseNeverDef } from \"./parsers/never.js\";\nimport { parseNullDef } from \"./parsers/null.js\";\nimport { parseNullableDef } from \"./parsers/nullable.js\";\nimport { parseNumberDef } from \"./parsers/number.js\";\nimport { parseObjectDef } from \"./parsers/object.js\";\nimport { parseOptionalDef } from \"./parsers/optional.js\";\nimport { parsePipelineDef } from \"./parsers/pipeline.js\";\nimport { parsePromiseDef } from \"./parsers/promise.js\";\nimport { parseRecordDef } from \"./parsers/record.js\";\nimport { parseSetDef } from \"./parsers/set.js\";\nimport { parseStringDef } from \"./parsers/string.js\";\nimport { parseTupleDef } from \"./parsers/tuple.js\";\nimport { parseUndefinedDef } from \"./parsers/undefined.js\";\nimport { parseUnionDef } from \"./parsers/union.js\";\nimport { parseUnknownDef } from \"./parsers/unknown.js\";\nimport { parseReadonlyDef } from \"./parsers/readonly.js\";\nexport const selectParser = (def, typeName, refs) => {\n    switch (typeName) {\n        case ZodFirstPartyTypeKind.ZodString:\n            return parseStringDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodNumber:\n            return parseNumberDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodObject:\n            return parseObjectDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodBigInt:\n            return parseBigintDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodBoolean:\n            return parseBooleanDef();\n        case ZodFirstPartyTypeKind.ZodDate:\n            return parseDateDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodUndefined:\n            return parseUndefinedDef();\n        case ZodFirstPartyTypeKind.ZodNull:\n            return parseNullDef(refs);\n        case ZodFirstPartyTypeKind.ZodArray:\n            return parseArrayDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodUnion:\n        case ZodFirstPartyTypeKind.ZodDiscriminatedUnion:\n            return parseUnionDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodIntersection:\n            return parseIntersectionDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodTuple:\n            return parseTupleDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodRecord:\n            return parseRecordDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodLiteral:\n            return parseLiteralDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodEnum:\n            return parseEnumDef(def);\n        case ZodFirstPartyTypeKind.ZodNativeEnum:\n            return parseNativeEnumDef(def);\n        case ZodFirstPartyTypeKind.ZodNullable:\n            return parseNullableDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodOptional:\n            return parseOptionalDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodMap:\n            return parseMapDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodSet:\n            return parseSetDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodLazy:\n            return () => def.getter()._def;\n        case ZodFirstPartyTypeKind.ZodPromise:\n            return parsePromiseDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodNaN:\n        case ZodFirstPartyTypeKind.ZodNever:\n            return parseNeverDef();\n        case ZodFirstPartyTypeKind.ZodEffects:\n            return parseEffectsDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodAny:\n            return parseAnyDef();\n        case ZodFirstPartyTypeKind.ZodUnknown:\n            return parseUnknownDef();\n        case ZodFirstPartyTypeKind.ZodDefault:\n            return parseDefaultDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodBranded:\n            return parseBrandedDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodReadonly:\n            return parseReadonlyDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodCatch:\n            return parseCatchDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodPipeline:\n            return parsePipelineDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodFunction:\n        case ZodFirstPartyTypeKind.ZodVoid:\n        case ZodFirstPartyTypeKind.ZodSymbol:\n            return undefined;\n        default:\n            /* c8 ignore next */\n            return ((_) => undefined)(typeName);\n    }\n};\n","import { addErrorMessage, setResponseValueAndErrors, } from \"../errorMessages.js\";\nexport function parseNumberDef(def, refs) {\n    const res = {\n        type: \"number\",\n    };\n    if (!def.checks)\n        return res;\n    for (const check of def.checks) {\n        switch (check.kind) {\n            case \"int\":\n                res.type = \"integer\";\n                addErrorMessage(res, \"type\", check.message, refs);\n                break;\n            case \"min\":\n                if (refs.target === \"jsonSchema7\") {\n                    if (check.inclusive) {\n                        setResponseValueAndErrors(res, \"minimum\", check.value, check.message, refs);\n                    }\n                    else {\n                        setResponseValueAndErrors(res, \"exclusiveMinimum\", check.value, check.message, refs);\n                    }\n                }\n                else {\n                    if (!check.inclusive) {\n                        res.exclusiveMinimum = true;\n                    }\n                    setResponseValueAndErrors(res, \"minimum\", check.value, check.message, refs);\n                }\n                break;\n            case \"max\":\n                if (refs.target === \"jsonSchema7\") {\n                    if (check.inclusive) {\n                        setResponseValueAndErrors(res, \"maximum\", check.value, check.message, refs);\n                    }\n                    else {\n                        setResponseValueAndErrors(res, \"exclusiveMaximum\", check.value, check.message, refs);\n                    }\n                }\n                else {\n                    if (!check.inclusive) {\n                        res.exclusiveMaximum = true;\n                    }\n                    setResponseValueAndErrors(res, \"maximum\", check.value, check.message, refs);\n                }\n                break;\n            case \"multipleOf\":\n                setResponseValueAndErrors(res, \"multipleOf\", check.value, check.message, refs);\n                break;\n        }\n    }\n    return res;\n}\n","import { setResponseValueAndErrors } from \"../errorMessages.js\";\nexport function parseBigintDef(def, refs) {\n    const res = {\n        type: \"integer\",\n        format: \"int64\",\n    };\n    if (!def.checks)\n        return res;\n    for (const check of def.checks) {\n        switch (check.kind) {\n            case \"min\":\n                if (refs.target === \"jsonSchema7\") {\n                    if (check.inclusive) {\n                        setResponseValueAndErrors(res, \"minimum\", check.value, check.message, refs);\n                    }\n                    else {\n                        setResponseValueAndErrors(res, \"exclusiveMinimum\", check.value, check.message, refs);\n                    }\n                }\n                else {\n                    if (!check.inclusive) {\n                        res.exclusiveMinimum = true;\n                    }\n                    setResponseValueAndErrors(res, \"minimum\", check.value, check.message, refs);\n                }\n                break;\n            case \"max\":\n                if (refs.target === \"jsonSchema7\") {\n                    if (check.inclusive) {\n                        setResponseValueAndErrors(res, \"maximum\", check.value, check.message, refs);\n                    }\n                    else {\n                        setResponseValueAndErrors(res, \"exclusiveMaximum\", check.value, check.message, refs);\n                    }\n                }\n                else {\n                    if (!check.inclusive) {\n                        res.exclusiveMaximum = true;\n                    }\n                    setResponseValueAndErrors(res, \"maximum\", check.value, check.message, refs);\n                }\n                break;\n            case \"multipleOf\":\n                setResponseValueAndErrors(res, \"multipleOf\", check.value, check.message, refs);\n                break;\n        }\n    }\n    return res;\n}\n","export function parseBooleanDef() {\n    return {\n        type: \"boolean\",\n    };\n}\n","export function parseUndefinedDef() {\n    return {\n        not: {},\n    };\n}\n","export function parseNullDef(refs) {\n    return refs.target === \"openApi3\"\n        ? {\n            enum: [\"null\"],\n            nullable: true,\n        }\n        : {\n            type: \"null\",\n        };\n}\n","import { ZodFirstPartyTypeKind } from \"zod\";\nimport { setResponseValueAndErrors } from \"../errorMessages.js\";\nimport { parseDef } from \"../parseDef.js\";\nexport function parseArrayDef(def, refs) {\n    const res = {\n        type: \"array\",\n    };\n    if (def.type?._def &&\n        def.type?._def?.typeName !== ZodFirstPartyTypeKind.ZodAny) {\n        res.items = parseDef(def.type._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"items\"],\n        });\n    }\n    if (def.minLength) {\n        setResponseValueAndErrors(res, \"minItems\", def.minLength.value, def.minLength.message, refs);\n    }\n    if (def.maxLength) {\n        setResponseValueAndErrors(res, \"maxItems\", def.maxLength.value, def.maxLength.message, refs);\n    }\n    if (def.exactLength) {\n        setResponseValueAndErrors(res, \"minItems\", def.exactLength.value, def.exactLength.message, refs);\n        setResponseValueAndErrors(res, \"maxItems\", def.exactLength.value, def.exactLength.message, refs);\n    }\n    return res;\n}\n","import { parseDef } from \"../parseDef.js\";\nconst isJsonSchema7AllOfType = (type) => {\n    if (\"type\" in type && type.type === \"string\")\n        return false;\n    return \"allOf\" in type;\n};\nexport function parseIntersectionDef(def, refs) {\n    const allOf = [\n        parseDef(def.left._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"allOf\", \"0\"],\n        }),\n        parseDef(def.right._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, \"allOf\", \"1\"],\n        }),\n    ].filter((x) => !!x);\n    let unevaluatedProperties = refs.target === \"jsonSchema2019-09\"\n        ? { unevaluatedProperties: false }\n        : undefined;\n    const mergedAllOf = [];\n    // If either of the schemas is an allOf, merge them into a single allOf\n    allOf.forEach((schema) => {\n        if (isJsonSchema7AllOfType(schema)) {\n            mergedAllOf.push(...schema.allOf);\n            if (schema.unevaluatedProperties === undefined) {\n                // If one of the schemas has no unevaluatedProperties set,\n                // the merged schema should also have no unevaluatedProperties set\n                unevaluatedProperties = undefined;\n            }\n        }\n        else {\n            let nestedSchema = schema;\n            if (\"additionalProperties\" in schema &&\n                schema.additionalProperties === false) {\n                const { additionalProperties, ...rest } = schema;\n                nestedSchema = rest;\n            }\n            else {\n                // As soon as one of the schemas has additionalProperties set not to false, we allow unevaluatedProperties\n                unevaluatedProperties = undefined;\n            }\n            mergedAllOf.push(nestedSchema);\n        }\n    });\n    return mergedAllOf.length\n        ? {\n            allOf: mergedAllOf,\n            ...unevaluatedProperties,\n        }\n        : undefined;\n}\n","import { parseDef } from \"../parseDef.js\";\nexport function parseTupleDef(def, refs) {\n    if (def.rest) {\n        return {\n            type: \"array\",\n            minItems: def.items.length,\n            items: def.items\n                .map((x, i) => parseDef(x._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, \"items\", `${i}`],\n            }))\n                .reduce((acc, x) => (x === undefined ? acc : [...acc, x]), []),\n            additionalItems: parseDef(def.rest._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, \"additionalItems\"],\n            }),\n        };\n    }\n    else {\n        return {\n            type: \"array\",\n            minItems: def.items.length,\n            maxItems: def.items.length,\n            items: def.items\n                .map((x, i) => parseDef(x._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, \"items\", `${i}`],\n            }))\n                .reduce((acc, x) => (x === undefined ? acc : [...acc, x]), []),\n        };\n    }\n}\n","export function parseLiteralDef(def, refs) {\n    const parsedType = typeof def.value;\n    if (parsedType !== \"bigint\" &&\n        parsedType !== \"number\" &&\n        parsedType !== \"boolean\" &&\n        parsedType !== \"string\") {\n        return {\n            type: Array.isArray(def.value) ? \"array\" : \"object\",\n        };\n    }\n    if (refs.target === \"openApi3\") {\n        return {\n            type: parsedType === \"bigint\" ? \"integer\" : parsedType,\n            enum: [def.value],\n        };\n    }\n    return {\n        type: parsedType === \"bigint\" ? \"integer\" : parsedType,\n        const: def.value,\n    };\n}\n","export function parseEnumDef(def) {\n    return {\n        type: \"string\",\n        enum: Array.from(def.values),\n    };\n}\n","export function parseNativeEnumDef(def) {\n    const object = def.values;\n    const actualKeys = Object.keys(def.values).filter((key) => {\n        return typeof object[object[key]] !== \"number\";\n    });\n    const actualValues = actualKeys.map((key) => object[key]);\n    const parsedTypes = Array.from(new Set(actualValues.map((values) => typeof values)));\n    return {\n        type: parsedTypes.length === 1\n            ? parsedTypes[0] === \"string\"\n                ? \"string\"\n                : \"number\"\n            : [\"string\", \"number\"],\n        enum: actualValues,\n    };\n}\n","import { parseDef } from \"../parseDef.js\";\nimport { primitiveMappings } from \"./union.js\";\nexport function parseNullableDef(def, refs) {\n    if ([\"ZodString\", \"ZodNumber\", \"ZodBigInt\", \"ZodBoolean\", \"ZodNull\"].includes(def.innerType._def.typeName) &&\n        (!def.innerType._def.checks || !def.innerType._def.checks.length)) {\n        if (refs.target === \"openApi3\") {\n            return {\n                type: primitiveMappings[def.innerType._def.typeName],\n                nullable: true,\n            };\n        }\n        return {\n            type: [\n                primitiveMappings[def.innerType._def.typeName],\n                \"null\",\n            ],\n        };\n    }\n    if (refs.target === \"openApi3\") {\n        const base = parseDef(def.innerType._def, {\n            ...refs,\n            currentPath: [...refs.currentPath],\n        });\n        if (base && \"$ref\" in base)\n            return { allOf: [base], nullable: true };\n        return base && { ...base, nullable: true };\n    }\n    const base = parseDef(def.innerType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"anyOf\", \"0\"],\n    });\n    return base && { anyOf: [base, { type: \"null\" }] };\n}\n","import { parseDef } from \"../parseDef.js\";\nexport const parseOptionalDef = (def, refs) => {\n    if (refs.currentPath.toString() === refs.propertyPath?.toString()) {\n        return parseDef(def.innerType._def, refs);\n    }\n    const innerSchema = parseDef(def.innerType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"anyOf\", \"1\"],\n    });\n    return innerSchema\n        ? {\n            anyOf: [\n                {\n                    not: {},\n                },\n                innerSchema,\n            ],\n        }\n        : {};\n};\n","import { parseDef } from \"../parseDef.js\";\nimport { parseRecordDef } from \"./record.js\";\nexport function parseMapDef(def, refs) {\n    if (refs.mapStrategy === \"record\") {\n        return parseRecordDef(def, refs);\n    }\n    const keys = parseDef(def.keyType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"items\", \"items\", \"0\"],\n    }) || {};\n    const values = parseDef(def.valueType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"items\", \"items\", \"1\"],\n    }) || {};\n    return {\n        type: \"array\",\n        maxItems: 125,\n        items: {\n            type: \"array\",\n            items: [keys, values],\n            minItems: 2,\n            maxItems: 2,\n        },\n    };\n}\n","import { setResponseValueAndErrors } from \"../errorMessages.js\";\nimport { parseDef } from \"../parseDef.js\";\nexport function parseSetDef(def, refs) {\n    const items = parseDef(def.valueType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"items\"],\n    });\n    const schema = {\n        type: \"array\",\n        uniqueItems: true,\n        items,\n    };\n    if (def.minSize) {\n        setResponseValueAndErrors(schema, \"minItems\", def.minSize.value, def.minSize.message, refs);\n    }\n    if (def.maxSize) {\n        setResponseValueAndErrors(schema, \"maxItems\", def.maxSize.value, def.maxSize.message, refs);\n    }\n    return schema;\n}\n","import { parseDef } from \"../parseDef.js\";\nexport function parsePromiseDef(def, refs) {\n    return parseDef(def.type._def, refs);\n}\n","export function parseNeverDef() {\n    return {\n        not: {},\n    };\n}\n","import { parseDef } from \"../parseDef.js\";\nexport function parseEffectsDef(_def, refs) {\n    return refs.effectStrategy === \"input\"\n        ? parseDef(_def.schema._def, refs)\n        : {};\n}\n","export function parseUnknownDef() {\n    return {};\n}\n","import { parseDef } from \"../parseDef.js\";\nexport function parseDefaultDef(_def, refs) {\n    return {\n        ...parseDef(_def.innerType._def, refs),\n        default: _def.defaultValue(),\n    };\n}\n","import { parseDef } from \"../parseDef.js\";\nexport const parseCatchDef = (def, refs) => {\n    return parseDef(def.innerType._def, refs);\n};\n","import { parseDef } from \"../parseDef.js\";\nexport const parsePipelineDef = (def, refs) => {\n    if (refs.pipeStrategy === \"input\") {\n        return parseDef(def.in._def, refs);\n    }\n    else if (refs.pipeStrategy === \"output\") {\n        return parseDef(def.out._def, refs);\n    }\n    const a = parseDef(def.in._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"allOf\", \"0\"],\n    });\n    const b = parseDef(def.out._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, \"allOf\", a ? \"1\" : \"0\"],\n    });\n    return {\n        allOf: [a, b].filter((x) => x !== undefined),\n    };\n};\n","import { ignoreOverride } from \"./Options.js\";\nimport { selectParser } from \"./selectParser.js\";\nexport function parseDef(def, refs, forceResolution = false) {\n    const seenItem = refs.seen.get(def);\n    if (refs.override) {\n        const overrideResult = refs.override?.(def, refs, seenItem, forceResolution);\n        if (overrideResult !== ignoreOverride) {\n            return overrideResult;\n        }\n    }\n    if (seenItem && !forceResolution) {\n        const seenSchema = get$ref(seenItem, refs);\n        if (seenSchema !== undefined) {\n            return seenSchema;\n        }\n    }\n    const newItem = { def, path: refs.currentPath, jsonSchema: undefined };\n    refs.seen.set(def, newItem);\n    const jsonSchemaOrGetter = selectParser(def, def.typeName, refs);\n    // If the return was a function, then the inner definition needs to be extracted before a call to parseDef (recursive)\n    const jsonSchema = typeof jsonSchemaOrGetter === \"function\"\n        ? parseDef(jsonSchemaOrGetter(), refs)\n        : jsonSchemaOrGetter;\n    if (jsonSchema) {\n        addMeta(def, refs, jsonSchema);\n    }\n    if (refs.postProcess) {\n        const postProcessResult = refs.postProcess(jsonSchema, def, refs);\n        newItem.jsonSchema = jsonSchema;\n        return postProcessResult;\n    }\n    newItem.jsonSchema = jsonSchema;\n    return jsonSchema;\n}\nconst get$ref = (item, refs) => {\n    switch (refs.$refStrategy) {\n        case \"root\":\n            return { $ref: item.path.join(\"/\") };\n        case \"relative\":\n            return { $ref: getRelativePath(refs.currentPath, item.path) };\n        case \"none\":\n        case \"seen\": {\n            if (item.path.length < refs.currentPath.length &&\n                item.path.every((value, index) => refs.currentPath[index] === value)) {\n                console.warn(`Recursive reference detected at ${refs.currentPath.join(\"/\")}! Defaulting to any`);\n                return {};\n            }\n            return refs.$refStrategy === \"seen\" ? {} : undefined;\n        }\n    }\n};\nconst getRelativePath = (pathA, pathB) => {\n    let i = 0;\n    for (; i < pathA.length && i < pathB.length; i++) {\n        if (pathA[i] !== pathB[i])\n            break;\n    }\n    return [(pathA.length - i).toString(), ...pathB.slice(i)].join(\"/\");\n};\nconst addMeta = (def, refs, jsonSchema) => {\n    if (def.description) {\n        jsonSchema.description = def.description;\n        if (refs.markdownDescription) {\n            jsonSchema.markdownDescription = def.description;\n        }\n    }\n    return jsonSchema;\n};\n","import { parseDef } from \"./parseDef.js\";\nimport { getRefs } from \"./Refs.js\";\nconst zodToJsonSchema = (schema, options) => {\n    const refs = getRefs(options);\n    const definitions = typeof options === \"object\" && options.definitions\n        ? Object.entries(options.definitions).reduce((acc, [name, schema]) => ({\n            ...acc,\n            [name]: parseDef(schema._def, {\n                ...refs,\n                currentPath: [...refs.basePath, refs.definitionPath, name],\n            }, true) ?? {},\n        }), {})\n        : undefined;\n    const name = typeof options === \"string\"\n        ? options\n        : options?.nameStrategy === \"title\"\n            ? undefined\n            : options?.name;\n    const main = parseDef(schema._def, name === undefined\n        ? refs\n        : {\n            ...refs,\n            currentPath: [...refs.basePath, refs.definitionPath, name],\n        }, false) ?? {};\n    const title = typeof options === \"object\" &&\n        options.name !== undefined &&\n        options.nameStrategy === \"title\"\n        ? options.name\n        : undefined;\n    if (title !== undefined) {\n        main.title = title;\n    }\n    const combined = name === undefined\n        ? definitions\n            ? {\n                ...main,\n                [refs.definitionPath]: definitions,\n            }\n            : main\n        : {\n            $ref: [\n                ...(refs.$refStrategy === \"relative\" ? [] : refs.basePath),\n                refs.definitionPath,\n                name,\n            ].join(\"/\"),\n            [refs.definitionPath]: {\n                ...definitions,\n                [name]: main,\n            },\n        };\n    if (refs.target === \"jsonSchema7\") {\n        combined.$schema = \"http://json-schema.org/draft-07/schema#\";\n    }\n    else if (refs.target === \"jsonSchema2019-09\" || refs.target === \"openAi\") {\n        combined.$schema = \"https://json-schema.org/draft/2019-09/schema#\";\n    }\n    if (refs.target === \"openAi\" &&\n        (\"anyOf\" in combined ||\n            \"oneOf\" in combined ||\n            \"allOf\" in combined ||\n            (\"type\" in combined && Array.isArray(combined.type)))) {\n        console.warn(\"Warning: OpenAI may not support schemas with unions as roots! Try wrapping it in an object property.\");\n    }\n    return combined;\n};\nexport { zodToJsonSchema };\n","import { getDefaultOptions } from \"./Options.js\";\nexport const getRefs = (options) => {\n    const _options = getDefaultOptions(options);\n    const currentPath = _options.name !== undefined\n        ? [..._options.basePath, _options.definitionPath, _options.name]\n        : _options.basePath;\n    return {\n        ..._options,\n        currentPath: currentPath,\n        propertyPath: undefined,\n        seen: new Map(Object.entries(_options.definitions).map(([name, def]) => [\n            def._def,\n            {\n                def: def._def,\n                path: [..._options.basePath, _options.definitionPath, name],\n                // Resolution of references will be forced even though seen, so it's ok that the schema is undefined here for now.\n                jsonSchema: undefined,\n            },\n        ])),\n    };\n};\n","function _escapeNodeLabel(nodeLabel) {\n    // Escapes the node label for Mermaid syntax.\n    return nodeLabel.replace(/[^a-zA-Z-_0-9]/g, \"_\");\n}\nconst MARKDOWN_SPECIAL_CHARS = [\"*\", \"_\", \"`\"];\nfunction _generateMermaidGraphStyles(nodeColors) {\n    let styles = \"\";\n    for (const [className, color] of Object.entries(nodeColors)) {\n        styles += `\\tclassDef ${className} ${color};\\n`;\n    }\n    return styles;\n}\n/**\n * Draws a Mermaid graph using the provided graph data\n */\nexport function drawMermaid(nodes, edges, config) {\n    const { firstNode, lastNode, nodeColors, withStyles = true, curveStyle = \"linear\", wrapLabelNWords = 9, } = config ?? {};\n    // Initialize Mermaid graph configuration\n    let mermaidGraph = withStyles\n        ? `%%{init: {'flowchart': {'curve': '${curveStyle}'}}}%%\\ngraph TD;\\n`\n        : \"graph TD;\\n\";\n    if (withStyles) {\n        // Node formatting templates\n        const defaultClassLabel = \"default\";\n        const formatDict = {\n            [defaultClassLabel]: \"{0}({1})\",\n        };\n        if (firstNode !== undefined) {\n            formatDict[firstNode] = \"{0}([{1}]):::first\";\n        }\n        if (lastNode !== undefined) {\n            formatDict[lastNode] = \"{0}([{1}]):::last\";\n        }\n        // Add nodes to the graph\n        for (const [key, node] of Object.entries(nodes)) {\n            const nodeName = node.name.split(\":\").pop() ?? \"\";\n            const label = MARKDOWN_SPECIAL_CHARS.some((char) => nodeName.startsWith(char) && nodeName.endsWith(char))\n                ? `<p>${nodeName}</p>`\n                : nodeName;\n            let finalLabel = label;\n            if (Object.keys(node.metadata ?? {}).length) {\n                finalLabel += `<hr/><small><em>${Object.entries(node.metadata ?? {})\n                    .map(([k, v]) => `${k} = ${v}`)\n                    .join(\"\\n\")}</em></small>`;\n            }\n            const nodeLabel = (formatDict[key] ?? formatDict[defaultClassLabel])\n                .replace(\"{0}\", _escapeNodeLabel(key))\n                .replace(\"{1}\", finalLabel);\n            mermaidGraph += `\\t${nodeLabel}\\n`;\n        }\n    }\n    // Group edges by their common prefixes\n    const edgeGroups = {};\n    for (const edge of edges) {\n        const srcParts = edge.source.split(\":\");\n        const tgtParts = edge.target.split(\":\");\n        const commonPrefix = srcParts\n            .filter((src, i) => src === tgtParts[i])\n            .join(\":\");\n        if (!edgeGroups[commonPrefix]) {\n            edgeGroups[commonPrefix] = [];\n        }\n        edgeGroups[commonPrefix].push(edge);\n    }\n    const seenSubgraphs = new Set();\n    function addSubgraph(edges, prefix) {\n        const selfLoop = edges.length === 1 && edges[0].source === edges[0].target;\n        if (prefix && !selfLoop) {\n            const subgraph = prefix.split(\":\").pop();\n            if (seenSubgraphs.has(subgraph)) {\n                throw new Error(`Found duplicate subgraph '${subgraph}' -- this likely means that ` +\n                    \"you're reusing a subgraph node with the same name. \" +\n                    \"Please adjust your graph to have subgraph nodes with unique names.\");\n            }\n            seenSubgraphs.add(subgraph);\n            mermaidGraph += `\\tsubgraph ${subgraph}\\n`;\n        }\n        for (const edge of edges) {\n            const { source, target, data, conditional } = edge;\n            let edgeLabel = \"\";\n            if (data !== undefined) {\n                let edgeData = data;\n                const words = edgeData.split(\" \");\n                if (words.length > wrapLabelNWords) {\n                    edgeData = Array.from({ length: Math.ceil(words.length / wrapLabelNWords) }, (_, i) => words\n                        .slice(i * wrapLabelNWords, (i + 1) * wrapLabelNWords)\n                        .join(\" \")).join(\"&nbsp;<br>&nbsp;\");\n                }\n                edgeLabel = conditional\n                    ? ` -. &nbsp;${edgeData}&nbsp; .-> `\n                    : ` -- &nbsp;${edgeData}&nbsp; --> `;\n            }\n            else {\n                edgeLabel = conditional ? \" -.-> \" : \" --> \";\n            }\n            mermaidGraph += `\\t${_escapeNodeLabel(source)}${edgeLabel}${_escapeNodeLabel(target)};\\n`;\n        }\n        // Recursively add nested subgraphs\n        for (const nestedPrefix in edgeGroups) {\n            if (nestedPrefix.startsWith(`${prefix}:`) && nestedPrefix !== prefix) {\n                addSubgraph(edgeGroups[nestedPrefix], nestedPrefix);\n            }\n        }\n        if (prefix && !selfLoop) {\n            mermaidGraph += \"\\tend\\n\";\n        }\n    }\n    // Start with the top-level edges (no common prefix)\n    addSubgraph(edgeGroups[\"\"] ?? [], \"\");\n    // Add remaining subgraphs\n    for (const prefix in edgeGroups) {\n        if (!prefix.includes(\":\") && prefix !== \"\") {\n            addSubgraph(edgeGroups[prefix], prefix);\n        }\n    }\n    // Add custom styles for nodes\n    if (withStyles) {\n        mermaidGraph += _generateMermaidGraphStyles(nodeColors ?? {});\n    }\n    return mermaidGraph;\n}\n/**\n * Renders Mermaid graph using the Mermaid.INK API.\n */\nexport async function drawMermaidPng(mermaidSyntax, config) {\n    let { backgroundColor = \"white\" } = config ?? {};\n    // Use btoa for compatibility, assume ASCII\n    const mermaidSyntaxEncoded = btoa(mermaidSyntax);\n    // Check if the background color is a hexadecimal color code using regex\n    if (backgroundColor !== undefined) {\n        const hexColorPattern = /^#(?:[0-9a-fA-F]{3}){1,2}$/;\n        if (!hexColorPattern.test(backgroundColor)) {\n            backgroundColor = `!${backgroundColor}`;\n        }\n    }\n    const imageUrl = `https://mermaid.ink/img/${mermaidSyntaxEncoded}?bgColor=${backgroundColor}`;\n    const res = await fetch(imageUrl);\n    if (!res.ok) {\n        throw new Error([\n            `Failed to render the graph using the Mermaid.INK API.`,\n            `Status code: ${res.status}`,\n            `Status text: ${res.statusText}`,\n        ].join(\"\\n\"));\n    }\n    const content = await res.blob();\n    return content;\n}\n","import { zodToJsonSchema } from \"zod-to-json-schema\";\nimport { v4 as uuidv4, validate as isUuid } from \"uuid\";\nimport { isRunnableInterface } from \"./utils.js\";\nimport { drawMermaid, drawMermaidPng } from \"./graph_mermaid.js\";\nfunction nodeDataStr(id, data) {\n    if (id !== undefined && !isUuid(id)) {\n        return id;\n    }\n    else if (isRunnableInterface(data)) {\n        try {\n            let dataStr = data.getName();\n            dataStr = dataStr.startsWith(\"Runnable\")\n                ? dataStr.slice(\"Runnable\".length)\n                : dataStr;\n            return dataStr;\n        }\n        catch (error) {\n            return data.getName();\n        }\n    }\n    else {\n        return data.name ?? \"UnknownSchema\";\n    }\n}\nfunction nodeDataJson(node) {\n    // if node.data implements Runnable\n    if (isRunnableInterface(node.data)) {\n        return {\n            type: \"runnable\",\n            data: {\n                id: node.data.lc_id,\n                name: node.data.getName(),\n            },\n        };\n    }\n    else {\n        return {\n            type: \"schema\",\n            data: { ...zodToJsonSchema(node.data.schema), title: node.data.name },\n        };\n    }\n}\nexport class Graph {\n    constructor(params) {\n        Object.defineProperty(this, \"nodes\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"edges\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        this.nodes = params?.nodes ?? this.nodes;\n        this.edges = params?.edges ?? this.edges;\n    }\n    // Convert the graph to a JSON-serializable format.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    toJSON() {\n        const stableNodeIds = {};\n        Object.values(this.nodes).forEach((node, i) => {\n            stableNodeIds[node.id] = isUuid(node.id) ? i : node.id;\n        });\n        return {\n            nodes: Object.values(this.nodes).map((node) => ({\n                id: stableNodeIds[node.id],\n                ...nodeDataJson(node),\n            })),\n            edges: this.edges.map((edge) => {\n                const item = {\n                    source: stableNodeIds[edge.source],\n                    target: stableNodeIds[edge.target],\n                };\n                if (typeof edge.data !== \"undefined\") {\n                    item.data = edge.data;\n                }\n                if (typeof edge.conditional !== \"undefined\") {\n                    item.conditional = edge.conditional;\n                }\n                return item;\n            }),\n        };\n    }\n    addNode(data, id, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    metadata) {\n        if (id !== undefined && this.nodes[id] !== undefined) {\n            throw new Error(`Node with id ${id} already exists`);\n        }\n        const nodeId = id ?? uuidv4();\n        const node = {\n            id: nodeId,\n            data,\n            name: nodeDataStr(id, data),\n            metadata,\n        };\n        this.nodes[nodeId] = node;\n        return node;\n    }\n    removeNode(node) {\n        // Remove the node from the nodes map\n        delete this.nodes[node.id];\n        // Filter out edges connected to the node\n        this.edges = this.edges.filter((edge) => edge.source !== node.id && edge.target !== node.id);\n    }\n    addEdge(source, target, data, conditional) {\n        if (this.nodes[source.id] === undefined) {\n            throw new Error(`Source node ${source.id} not in graph`);\n        }\n        if (this.nodes[target.id] === undefined) {\n            throw new Error(`Target node ${target.id} not in graph`);\n        }\n        const edge = {\n            source: source.id,\n            target: target.id,\n            data,\n            conditional,\n        };\n        this.edges.push(edge);\n        return edge;\n    }\n    firstNode() {\n        return _firstNode(this);\n    }\n    lastNode() {\n        return _lastNode(this);\n    }\n    /**\n     * Add all nodes and edges from another graph.\n     * Note this doesn't check for duplicates, nor does it connect the graphs.\n     */\n    extend(graph, prefix = \"\") {\n        let finalPrefix = prefix;\n        const nodeIds = Object.values(graph.nodes).map((node) => node.id);\n        if (nodeIds.every(isUuid)) {\n            finalPrefix = \"\";\n        }\n        const prefixed = (id) => {\n            return finalPrefix ? `${finalPrefix}:${id}` : id;\n        };\n        Object.entries(graph.nodes).forEach(([key, value]) => {\n            this.nodes[prefixed(key)] = { ...value, id: prefixed(key) };\n        });\n        const newEdges = graph.edges.map((edge) => {\n            return {\n                ...edge,\n                source: prefixed(edge.source),\n                target: prefixed(edge.target),\n            };\n        });\n        // Add all edges from the other graph\n        this.edges = [...this.edges, ...newEdges];\n        const first = graph.firstNode();\n        const last = graph.lastNode();\n        return [\n            first ? { id: prefixed(first.id), data: first.data } : undefined,\n            last ? { id: prefixed(last.id), data: last.data } : undefined,\n        ];\n    }\n    trimFirstNode() {\n        const firstNode = this.firstNode();\n        if (firstNode && _firstNode(this, [firstNode.id])) {\n            this.removeNode(firstNode);\n        }\n    }\n    trimLastNode() {\n        const lastNode = this.lastNode();\n        if (lastNode && _lastNode(this, [lastNode.id])) {\n            this.removeNode(lastNode);\n        }\n    }\n    /**\n     * Return a new graph with all nodes re-identified,\n     * using their unique, readable names where possible.\n     */\n    reid() {\n        const nodeLabels = Object.fromEntries(Object.values(this.nodes).map((node) => [node.id, node.name]));\n        const nodeLabelCounts = new Map();\n        Object.values(nodeLabels).forEach((label) => {\n            nodeLabelCounts.set(label, (nodeLabelCounts.get(label) || 0) + 1);\n        });\n        const getNodeId = (nodeId) => {\n            const label = nodeLabels[nodeId];\n            if (isUuid(nodeId) && nodeLabelCounts.get(label) === 1) {\n                return label;\n            }\n            else {\n                return nodeId;\n            }\n        };\n        return new Graph({\n            nodes: Object.fromEntries(Object.entries(this.nodes).map(([id, node]) => [\n                getNodeId(id),\n                { ...node, id: getNodeId(id) },\n            ])),\n            edges: this.edges.map((edge) => ({\n                ...edge,\n                source: getNodeId(edge.source),\n                target: getNodeId(edge.target),\n            })),\n        });\n    }\n    drawMermaid(params) {\n        const { withStyles, curveStyle, nodeColors = {\n            default: \"fill:#f2f0ff,line-height:1.2\",\n            first: \"fill-opacity:0\",\n            last: \"fill:#bfb6fc\",\n        }, wrapLabelNWords, } = params ?? {};\n        const graph = this.reid();\n        const firstNode = graph.firstNode();\n        const lastNode = graph.lastNode();\n        return drawMermaid(graph.nodes, graph.edges, {\n            firstNode: firstNode?.id,\n            lastNode: lastNode?.id,\n            withStyles,\n            curveStyle,\n            nodeColors,\n            wrapLabelNWords,\n        });\n    }\n    async drawMermaidPng(params) {\n        const mermaidSyntax = this.drawMermaid(params);\n        return drawMermaidPng(mermaidSyntax, {\n            backgroundColor: params?.backgroundColor,\n        });\n    }\n}\n/**\n * Find the single node that is not a target of any edge.\n * Exclude nodes/sources with ids in the exclude list.\n * If there is no such node, or there are multiple, return undefined.\n * When drawing the graph, this node would be the origin.\n */\nfunction _firstNode(graph, exclude = []) {\n    const targets = new Set(graph.edges\n        .filter((edge) => !exclude.includes(edge.source))\n        .map((edge) => edge.target));\n    const found = [];\n    for (const node of Object.values(graph.nodes)) {\n        if (!exclude.includes(node.id) && !targets.has(node.id)) {\n            found.push(node);\n        }\n    }\n    return found.length === 1 ? found[0] : undefined;\n}\n/**\n * Find the single node that is not a source of any edge.\n * Exclude nodes/targets with ids in the exclude list.\n * If there is no such node, or there are multiple, return undefined.\n * When drawing the graph, this node would be the destination.\n */\nfunction _lastNode(graph, exclude = []) {\n    const sources = new Set(graph.edges\n        .filter((edge) => !exclude.includes(edge.target))\n        .map((edge) => edge.source));\n    const found = [];\n    for (const node of Object.values(graph.nodes)) {\n        if (!exclude.includes(node.id) && !sources.has(node.id)) {\n            found.push(node);\n        }\n    }\n    return found.length === 1 ? found[0] : undefined;\n}\n","import { AsyncLocalStorageProviderSingleton } from \"../singletons/index.js\";\nimport { pickRunnableConfigKeys } from \"./config.js\";\nexport function isIterableIterator(thing) {\n    return (typeof thing === \"object\" &&\n        thing !== null &&\n        typeof thing[Symbol.iterator] === \"function\" &&\n        // avoid detecting array/set as iterator\n        typeof thing.next === \"function\");\n}\nexport const isIterator = (x) => x != null &&\n    typeof x === \"object\" &&\n    \"next\" in x &&\n    typeof x.next === \"function\";\nexport function isAsyncIterable(thing) {\n    return (typeof thing === \"object\" &&\n        thing !== null &&\n        typeof thing[Symbol.asyncIterator] ===\n            \"function\");\n}\nexport function* consumeIteratorInContext(context, iter) {\n    while (true) {\n        const { value, done } = AsyncLocalStorageProviderSingleton.runWithConfig(pickRunnableConfigKeys(context), iter.next.bind(iter), true);\n        if (done) {\n            break;\n        }\n        else {\n            yield value;\n        }\n    }\n}\nexport async function* consumeAsyncIterableInContext(context, iter) {\n    const iterator = iter[Symbol.asyncIterator]();\n    while (true) {\n        const { value, done } = await AsyncLocalStorageProviderSingleton.runWithConfig(pickRunnableConfigKeys(context), iterator.next.bind(iter), true);\n        if (done) {\n            break;\n        }\n        else {\n            yield value;\n        }\n    }\n}\n","import { z } from \"zod\";\nimport pRetry from \"p-retry\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { isTraceableFunction, } from \"langsmith/singletons/traceable\";\nimport { LogStreamCallbackHandler, RunLog, RunLogPatch, isLogStreamHandler, } from \"../tracers/log_stream.js\";\nimport { EventStreamCallbackHandler, isStreamEventsHandler, } from \"../tracers/event_stream.js\";\nimport { Serializable } from \"../load/serializable.js\";\nimport { IterableReadableStream, concat, atee, pipeGeneratorWithSetup, AsyncGeneratorWithSetup, } from \"../utils/stream.js\";\nimport { raceWithSignal } from \"../utils/signal.js\";\nimport { DEFAULT_RECURSION_LIMIT, ensureConfig, getCallbackManagerForConfig, mergeConfigs, patchConfig, pickRunnableConfigKeys, } from \"./config.js\";\nimport { AsyncCaller } from \"../utils/async_caller.js\";\nimport { RootListenersTracer } from \"../tracers/root_listener.js\";\nimport { _RootEventFilter, isRunnableInterface } from \"./utils.js\";\nimport { AsyncLocalStorageProviderSingleton } from \"../singletons/index.js\";\nimport { Graph } from \"./graph.js\";\nimport { convertToHttpEventStream } from \"./wrappers.js\";\nimport { consumeAsyncIterableInContext, consumeIteratorInContext, isAsyncIterable, isIterableIterator, isIterator, } from \"./iter.js\";\nimport { _isToolCall, ToolInputParsingException } from \"../tools/utils.js\";\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function _coerceToDict(value, defaultKey) {\n    return value &&\n        !Array.isArray(value) &&\n        // eslint-disable-next-line no-instanceof/no-instanceof\n        !(value instanceof Date) &&\n        typeof value === \"object\"\n        ? value\n        : { [defaultKey]: value };\n}\n/**\n * A Runnable is a generic unit of work that can be invoked, batched, streamed, and/or\n * transformed.\n */\nexport class Runnable extends Serializable {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_runnable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    getName(suffix) {\n        const name = \n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.name ?? this.constructor.lc_name() ?? this.constructor.name;\n        return suffix ? `${name}${suffix}` : name;\n    }\n    /**\n     * Bind arguments to a Runnable, returning a new Runnable.\n     * @param kwargs\n     * @returns A new RunnableBinding that, when invoked, will apply the bound args.\n     */\n    bind(kwargs) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunnableBinding({ bound: this, kwargs, config: {} });\n    }\n    /**\n     * Return a new Runnable that maps a list of inputs to a list of outputs,\n     * by calling invoke() with each input.\n     */\n    map() {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunnableEach({ bound: this });\n    }\n    /**\n     * Add retry logic to an existing runnable.\n     * @param kwargs\n     * @returns A new RunnableRetry that, when invoked, will retry according to the parameters.\n     */\n    withRetry(fields) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunnableRetry({\n            bound: this,\n            kwargs: {},\n            config: {},\n            maxAttemptNumber: fields?.stopAfterAttempt,\n            ...fields,\n        });\n    }\n    /**\n     * Bind config to a Runnable, returning a new Runnable.\n     * @param config New configuration parameters to attach to the new runnable.\n     * @returns A new RunnableBinding with a config matching what's passed.\n     */\n    withConfig(config) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunnableBinding({\n            bound: this,\n            config,\n            kwargs: {},\n        });\n    }\n    /**\n     * Create a new runnable from the current one that will try invoking\n     * other passed fallback runnables if the initial invocation fails.\n     * @param fields.fallbacks Other runnables to call if the runnable errors.\n     * @returns A new RunnableWithFallbacks.\n     */\n    withFallbacks(fields) {\n        const fallbacks = Array.isArray(fields) ? fields : fields.fallbacks;\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunnableWithFallbacks({\n            runnable: this,\n            fallbacks,\n        });\n    }\n    _getOptionsList(options, length = 0) {\n        if (Array.isArray(options) && options.length !== length) {\n            throw new Error(`Passed \"options\" must be an array with the same length as the inputs, but got ${options.length} options for ${length} inputs`);\n        }\n        if (Array.isArray(options)) {\n            return options.map(ensureConfig);\n        }\n        if (length > 1 && !Array.isArray(options) && options.runId) {\n            console.warn(\"Provided runId will be used only for the first element of the batch.\");\n            const subsequent = Object.fromEntries(Object.entries(options).filter(([key]) => key !== \"runId\"));\n            return Array.from({ length }, (_, i) => ensureConfig(i === 0 ? options : subsequent));\n        }\n        return Array.from({ length }, () => ensureConfig(options));\n    }\n    async batch(inputs, options, batchOptions) {\n        const configList = this._getOptionsList(options ?? {}, inputs.length);\n        const maxConcurrency = configList[0]?.maxConcurrency ?? batchOptions?.maxConcurrency;\n        const caller = new AsyncCaller({\n            maxConcurrency,\n            onFailedAttempt: (e) => {\n                throw e;\n            },\n        });\n        const batchCalls = inputs.map((input, i) => caller.call(async () => {\n            try {\n                const result = await this.invoke(input, configList[i]);\n                return result;\n            }\n            catch (e) {\n                if (batchOptions?.returnExceptions) {\n                    return e;\n                }\n                throw e;\n            }\n        }));\n        return Promise.all(batchCalls);\n    }\n    /**\n     * Default streaming implementation.\n     * Subclasses should override this method if they support streaming output.\n     * @param input\n     * @param options\n     */\n    async *_streamIterator(input, options) {\n        yield this.invoke(input, options);\n    }\n    /**\n     * Stream output in chunks.\n     * @param input\n     * @param options\n     * @returns A readable stream that is also an iterable.\n     */\n    async stream(input, options) {\n        // Buffer the first streamed chunk to allow for initial errors\n        // to surface immediately.\n        const config = ensureConfig(options);\n        const wrappedGenerator = new AsyncGeneratorWithSetup({\n            generator: this._streamIterator(input, config),\n            config,\n        });\n        await wrappedGenerator.setup;\n        return IterableReadableStream.fromAsyncGenerator(wrappedGenerator);\n    }\n    _separateRunnableConfigFromCallOptions(options) {\n        let runnableConfig;\n        if (options === undefined) {\n            runnableConfig = ensureConfig(options);\n        }\n        else {\n            runnableConfig = ensureConfig({\n                callbacks: options.callbacks,\n                tags: options.tags,\n                metadata: options.metadata,\n                runName: options.runName,\n                configurable: options.configurable,\n                recursionLimit: options.recursionLimit,\n                maxConcurrency: options.maxConcurrency,\n                runId: options.runId,\n                timeout: options.timeout,\n                signal: options.signal,\n            });\n        }\n        const callOptions = { ...options };\n        delete callOptions.callbacks;\n        delete callOptions.tags;\n        delete callOptions.metadata;\n        delete callOptions.runName;\n        delete callOptions.configurable;\n        delete callOptions.recursionLimit;\n        delete callOptions.maxConcurrency;\n        delete callOptions.runId;\n        delete callOptions.timeout;\n        delete callOptions.signal;\n        return [runnableConfig, callOptions];\n    }\n    async _callWithConfig(func, input, options) {\n        const config = ensureConfig(options);\n        const callbackManager_ = await getCallbackManagerForConfig(config);\n        const runManager = await callbackManager_?.handleChainStart(this.toJSON(), _coerceToDict(input, \"input\"), config.runId, config?.runType, undefined, undefined, config?.runName ?? this.getName());\n        delete config.runId;\n        let output;\n        try {\n            const promise = func.call(this, input, config, runManager);\n            output = await raceWithSignal(promise, options?.signal);\n        }\n        catch (e) {\n            await runManager?.handleChainError(e);\n            throw e;\n        }\n        await runManager?.handleChainEnd(_coerceToDict(output, \"output\"));\n        return output;\n    }\n    /**\n     * Internal method that handles batching and configuration for a runnable\n     * It takes a function, input values, and optional configuration, and\n     * returns a promise that resolves to the output values.\n     * @param func The function to be executed for each input value.\n     * @param input The input values to be processed.\n     * @param config Optional configuration for the function execution.\n     * @returns A promise that resolves to the output values.\n     */\n    async _batchWithConfig(func, inputs, options, batchOptions) {\n        const optionsList = this._getOptionsList(options ?? {}, inputs.length);\n        const callbackManagers = await Promise.all(optionsList.map(getCallbackManagerForConfig));\n        const runManagers = await Promise.all(callbackManagers.map(async (callbackManager, i) => {\n            const handleStartRes = await callbackManager?.handleChainStart(this.toJSON(), _coerceToDict(inputs[i], \"input\"), optionsList[i].runId, optionsList[i].runType, undefined, undefined, optionsList[i].runName ?? this.getName());\n            delete optionsList[i].runId;\n            return handleStartRes;\n        }));\n        let outputs;\n        try {\n            const promise = func.call(this, inputs, optionsList, runManagers, batchOptions);\n            outputs = await raceWithSignal(promise, optionsList?.[0]?.signal);\n        }\n        catch (e) {\n            await Promise.all(runManagers.map((runManager) => runManager?.handleChainError(e)));\n            throw e;\n        }\n        await Promise.all(runManagers.map((runManager) => runManager?.handleChainEnd(_coerceToDict(outputs, \"output\"))));\n        return outputs;\n    }\n    /**\n     * Helper method to transform an Iterator of Input values into an Iterator of\n     * Output values, with callbacks.\n     * Use this to implement `stream()` or `transform()` in Runnable subclasses.\n     */\n    async *_transformStreamWithConfig(inputGenerator, transformer, options) {\n        let finalInput;\n        let finalInputSupported = true;\n        let finalOutput;\n        let finalOutputSupported = true;\n        const config = ensureConfig(options);\n        const callbackManager_ = await getCallbackManagerForConfig(config);\n        async function* wrapInputForTracing() {\n            for await (const chunk of inputGenerator) {\n                if (finalInputSupported) {\n                    if (finalInput === undefined) {\n                        finalInput = chunk;\n                    }\n                    else {\n                        try {\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            finalInput = concat(finalInput, chunk);\n                        }\n                        catch {\n                            finalInput = undefined;\n                            finalInputSupported = false;\n                        }\n                    }\n                }\n                yield chunk;\n            }\n        }\n        let runManager;\n        try {\n            const pipe = await pipeGeneratorWithSetup(transformer.bind(this), wrapInputForTracing(), async () => callbackManager_?.handleChainStart(this.toJSON(), { input: \"\" }, config.runId, config.runType, undefined, undefined, config.runName ?? this.getName()), options?.signal, config);\n            delete config.runId;\n            runManager = pipe.setup;\n            const streamEventsHandler = runManager?.handlers.find(isStreamEventsHandler);\n            let iterator = pipe.output;\n            if (streamEventsHandler !== undefined && runManager !== undefined) {\n                iterator = streamEventsHandler.tapOutputIterable(runManager.runId, iterator);\n            }\n            const streamLogHandler = runManager?.handlers.find(isLogStreamHandler);\n            if (streamLogHandler !== undefined && runManager !== undefined) {\n                iterator = streamLogHandler.tapOutputIterable(runManager.runId, iterator);\n            }\n            for await (const chunk of iterator) {\n                yield chunk;\n                if (finalOutputSupported) {\n                    if (finalOutput === undefined) {\n                        finalOutput = chunk;\n                    }\n                    else {\n                        try {\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            finalOutput = concat(finalOutput, chunk);\n                        }\n                        catch {\n                            finalOutput = undefined;\n                            finalOutputSupported = false;\n                        }\n                    }\n                }\n            }\n        }\n        catch (e) {\n            await runManager?.handleChainError(e, undefined, undefined, undefined, {\n                inputs: _coerceToDict(finalInput, \"input\"),\n            });\n            throw e;\n        }\n        await runManager?.handleChainEnd(finalOutput ?? {}, undefined, undefined, undefined, { inputs: _coerceToDict(finalInput, \"input\") });\n    }\n    getGraph(_) {\n        const graph = new Graph();\n        // TODO: Add input schema for runnables\n        const inputNode = graph.addNode({\n            name: `${this.getName()}Input`,\n            schema: z.any(),\n        });\n        const runnableNode = graph.addNode(this);\n        // TODO: Add output schemas for runnables\n        const outputNode = graph.addNode({\n            name: `${this.getName()}Output`,\n            schema: z.any(),\n        });\n        graph.addEdge(inputNode, runnableNode);\n        graph.addEdge(runnableNode, outputNode);\n        return graph;\n    }\n    /**\n     * Create a new runnable sequence that runs each individual runnable in series,\n     * piping the output of one runnable into another runnable or runnable-like.\n     * @param coerceable A runnable, function, or object whose values are functions or runnables.\n     * @returns A new runnable sequence.\n     */\n    pipe(coerceable) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunnableSequence({\n            first: this,\n            last: _coerceToRunnable(coerceable),\n        });\n    }\n    /**\n     * Pick keys from the dict output of this runnable. Returns a new runnable.\n     */\n    pick(keys) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return this.pipe(new RunnablePick(keys));\n    }\n    /**\n     * Assigns new fields to the dict output of this runnable. Returns a new runnable.\n     */\n    assign(mapping) {\n        return this.pipe(\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        new RunnableAssign(\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        new RunnableMap({ steps: mapping })));\n    }\n    /**\n     * Default implementation of transform, which buffers input and then calls stream.\n     * Subclasses should override this method if they can start producing output while\n     * input is still being generated.\n     * @param generator\n     * @param options\n     */\n    async *transform(generator, options) {\n        let finalChunk;\n        for await (const chunk of generator) {\n            if (finalChunk === undefined) {\n                finalChunk = chunk;\n            }\n            else {\n                // Make a best effort to gather, for any type that supports concat.\n                // This method should throw an error if gathering fails.\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                finalChunk = concat(finalChunk, chunk);\n            }\n        }\n        yield* this._streamIterator(finalChunk, ensureConfig(options));\n    }\n    /**\n     * Stream all output from a runnable, as reported to the callback system.\n     * This includes all inner runs of LLMs, Retrievers, Tools, etc.\n     * Output is streamed as Log objects, which include a list of\n     * jsonpatch ops that describe how the state of the run has changed in each\n     * step, and the final state of the run.\n     * The jsonpatch ops can be applied in order to construct state.\n     * @param input\n     * @param options\n     * @param streamOptions\n     */\n    async *streamLog(input, options, streamOptions) {\n        const logStreamCallbackHandler = new LogStreamCallbackHandler({\n            ...streamOptions,\n            autoClose: false,\n            _schemaFormat: \"original\",\n        });\n        const config = ensureConfig(options);\n        yield* this._streamLog(input, logStreamCallbackHandler, config);\n    }\n    async *_streamLog(input, logStreamCallbackHandler, config) {\n        const { callbacks } = config;\n        if (callbacks === undefined) {\n            // eslint-disable-next-line no-param-reassign\n            config.callbacks = [logStreamCallbackHandler];\n        }\n        else if (Array.isArray(callbacks)) {\n            // eslint-disable-next-line no-param-reassign\n            config.callbacks = callbacks.concat([logStreamCallbackHandler]);\n        }\n        else {\n            const copiedCallbacks = callbacks.copy();\n            copiedCallbacks.addHandler(logStreamCallbackHandler, true);\n            // eslint-disable-next-line no-param-reassign\n            config.callbacks = copiedCallbacks;\n        }\n        const runnableStreamPromise = this.stream(input, config);\n        async function consumeRunnableStream() {\n            try {\n                const runnableStream = await runnableStreamPromise;\n                for await (const chunk of runnableStream) {\n                    const patch = new RunLogPatch({\n                        ops: [\n                            {\n                                op: \"add\",\n                                path: \"/streamed_output/-\",\n                                value: chunk,\n                            },\n                        ],\n                    });\n                    await logStreamCallbackHandler.writer.write(patch);\n                }\n            }\n            finally {\n                await logStreamCallbackHandler.writer.close();\n            }\n        }\n        const runnableStreamConsumePromise = consumeRunnableStream();\n        try {\n            for await (const log of logStreamCallbackHandler) {\n                yield log;\n            }\n        }\n        finally {\n            await runnableStreamConsumePromise;\n        }\n    }\n    streamEvents(input, options, streamOptions) {\n        let stream;\n        if (options.version === \"v1\") {\n            stream = this._streamEventsV1(input, options, streamOptions);\n        }\n        else if (options.version === \"v2\") {\n            stream = this._streamEventsV2(input, options, streamOptions);\n        }\n        else {\n            throw new Error(`Only versions \"v1\" and \"v2\" of the schema are currently supported.`);\n        }\n        if (options.encoding === \"text/event-stream\") {\n            return convertToHttpEventStream(stream);\n        }\n        else {\n            return IterableReadableStream.fromAsyncGenerator(stream);\n        }\n    }\n    async *_streamEventsV2(input, options, streamOptions) {\n        const eventStreamer = new EventStreamCallbackHandler({\n            ...streamOptions,\n            autoClose: false,\n        });\n        const config = ensureConfig(options);\n        const runId = config.runId ?? uuidv4();\n        config.runId = runId;\n        const callbacks = config.callbacks;\n        if (callbacks === undefined) {\n            config.callbacks = [eventStreamer];\n        }\n        else if (Array.isArray(callbacks)) {\n            config.callbacks = callbacks.concat(eventStreamer);\n        }\n        else {\n            const copiedCallbacks = callbacks.copy();\n            copiedCallbacks.addHandler(eventStreamer, true);\n            // eslint-disable-next-line no-param-reassign\n            config.callbacks = copiedCallbacks;\n        }\n        const abortController = new AbortController();\n        // Call the runnable in streaming mode,\n        // add each chunk to the output stream\n        const outerThis = this;\n        async function consumeRunnableStream() {\n            try {\n                let signal;\n                if (options?.signal) {\n                    if (\"any\" in AbortSignal) {\n                        // Use native AbortSignal.any() if available (Node 19+)\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        signal = AbortSignal.any([\n                            abortController.signal,\n                            options.signal,\n                        ]);\n                    }\n                    else {\n                        // Fallback for Node 18 and below - just use the provided signal\n                        signal = options.signal;\n                        // Ensure we still abort our controller when the parent signal aborts\n                        options.signal.addEventListener(\"abort\", () => {\n                            abortController.abort();\n                        }, { once: true });\n                    }\n                }\n                else {\n                    signal = abortController.signal;\n                }\n                const runnableStream = await outerThis.stream(input, {\n                    ...config,\n                    signal,\n                });\n                const tappedStream = eventStreamer.tapOutputIterable(runId, runnableStream);\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                for await (const _ of tappedStream) {\n                    // Just iterate so that the callback handler picks up events\n                    if (abortController.signal.aborted)\n                        break;\n                }\n            }\n            finally {\n                await eventStreamer.finish();\n            }\n        }\n        const runnableStreamConsumePromise = consumeRunnableStream();\n        let firstEventSent = false;\n        let firstEventRunId;\n        try {\n            for await (const event of eventStreamer) {\n                // This is a work-around an issue where the inputs into the\n                // chain are not available until the entire input is consumed.\n                // As a temporary solution, we'll modify the input to be the input\n                // that was passed into the chain.\n                if (!firstEventSent) {\n                    event.data.input = input;\n                    firstEventSent = true;\n                    firstEventRunId = event.run_id;\n                    yield event;\n                    continue;\n                }\n                if (event.run_id === firstEventRunId && event.event.endsWith(\"_end\")) {\n                    // If it's the end event corresponding to the root runnable\n                    // we dont include the input in the event since it's guaranteed\n                    // to be included in the first event.\n                    if (event.data?.input) {\n                        delete event.data.input;\n                    }\n                }\n                yield event;\n            }\n        }\n        finally {\n            abortController.abort();\n            await runnableStreamConsumePromise;\n        }\n    }\n    async *_streamEventsV1(input, options, streamOptions) {\n        let runLog;\n        let hasEncounteredStartEvent = false;\n        const config = ensureConfig(options);\n        const rootTags = config.tags ?? [];\n        const rootMetadata = config.metadata ?? {};\n        const rootName = config.runName ?? this.getName();\n        const logStreamCallbackHandler = new LogStreamCallbackHandler({\n            ...streamOptions,\n            autoClose: false,\n            _schemaFormat: \"streaming_events\",\n        });\n        const rootEventFilter = new _RootEventFilter({\n            ...streamOptions,\n        });\n        const logStream = this._streamLog(input, logStreamCallbackHandler, config);\n        for await (const log of logStream) {\n            if (!runLog) {\n                runLog = RunLog.fromRunLogPatch(log);\n            }\n            else {\n                runLog = runLog.concat(log);\n            }\n            if (runLog.state === undefined) {\n                throw new Error(`Internal error: \"streamEvents\" state is missing. Please open a bug report.`);\n            }\n            // Yield the start event for the root runnable if it hasn't been seen.\n            // The root run is never filtered out\n            if (!hasEncounteredStartEvent) {\n                hasEncounteredStartEvent = true;\n                const state = { ...runLog.state };\n                const event = {\n                    run_id: state.id,\n                    event: `on_${state.type}_start`,\n                    name: rootName,\n                    tags: rootTags,\n                    metadata: rootMetadata,\n                    data: {\n                        input,\n                    },\n                };\n                if (rootEventFilter.includeEvent(event, state.type)) {\n                    yield event;\n                }\n            }\n            const paths = log.ops\n                .filter((op) => op.path.startsWith(\"/logs/\"))\n                .map((op) => op.path.split(\"/\")[2]);\n            const dedupedPaths = [...new Set(paths)];\n            for (const path of dedupedPaths) {\n                let eventType;\n                let data = {};\n                const logEntry = runLog.state.logs[path];\n                if (logEntry.end_time === undefined) {\n                    if (logEntry.streamed_output.length > 0) {\n                        eventType = \"stream\";\n                    }\n                    else {\n                        eventType = \"start\";\n                    }\n                }\n                else {\n                    eventType = \"end\";\n                }\n                if (eventType === \"start\") {\n                    // Include the inputs with the start event if they are available.\n                    // Usually they will NOT be available for components that operate\n                    // on streams, since those components stream the input and\n                    // don't know its final value until the end of the stream.\n                    if (logEntry.inputs !== undefined) {\n                        data.input = logEntry.inputs;\n                    }\n                }\n                else if (eventType === \"end\") {\n                    if (logEntry.inputs !== undefined) {\n                        data.input = logEntry.inputs;\n                    }\n                    data.output = logEntry.final_output;\n                }\n                else if (eventType === \"stream\") {\n                    const chunkCount = logEntry.streamed_output.length;\n                    if (chunkCount !== 1) {\n                        throw new Error(`Expected exactly one chunk of streamed output, got ${chunkCount} instead. Encountered in: \"${logEntry.name}\"`);\n                    }\n                    data = { chunk: logEntry.streamed_output[0] };\n                    // Clean up the stream, we don't need it anymore.\n                    // And this avoids duplicates as well!\n                    logEntry.streamed_output = [];\n                }\n                yield {\n                    event: `on_${logEntry.type}_${eventType}`,\n                    name: logEntry.name,\n                    run_id: logEntry.id,\n                    tags: logEntry.tags,\n                    metadata: logEntry.metadata,\n                    data,\n                };\n            }\n            // Finally, we take care of the streaming output from the root chain\n            // if there is any.\n            const { state } = runLog;\n            if (state.streamed_output.length > 0) {\n                const chunkCount = state.streamed_output.length;\n                if (chunkCount !== 1) {\n                    throw new Error(`Expected exactly one chunk of streamed output, got ${chunkCount} instead. Encountered in: \"${state.name}\"`);\n                }\n                const data = { chunk: state.streamed_output[0] };\n                // Clean up the stream, we don't need it anymore.\n                state.streamed_output = [];\n                const event = {\n                    event: `on_${state.type}_stream`,\n                    run_id: state.id,\n                    tags: rootTags,\n                    metadata: rootMetadata,\n                    name: rootName,\n                    data,\n                };\n                if (rootEventFilter.includeEvent(event, state.type)) {\n                    yield event;\n                }\n            }\n        }\n        const state = runLog?.state;\n        if (state !== undefined) {\n            // Finally, yield the end event for the root runnable.\n            const event = {\n                event: `on_${state.type}_end`,\n                name: rootName,\n                run_id: state.id,\n                tags: rootTags,\n                metadata: rootMetadata,\n                data: {\n                    output: state.final_output,\n                },\n            };\n            if (rootEventFilter.includeEvent(event, state.type))\n                yield event;\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static isRunnable(thing) {\n        return isRunnableInterface(thing);\n    }\n    /**\n     * Bind lifecycle listeners to a Runnable, returning a new Runnable.\n     * The Run object contains information about the run, including its id,\n     * type, input, output, error, startTime, endTime, and any tags or metadata\n     * added to the run.\n     *\n     * @param {Object} params - The object containing the callback functions.\n     * @param {(run: Run) => void} params.onStart - Called before the runnable starts running, with the Run object.\n     * @param {(run: Run) => void} params.onEnd - Called after the runnable finishes running, with the Run object.\n     * @param {(run: Run) => void} params.onError - Called if the runnable throws an error, with the Run object.\n     */\n    withListeners({ onStart, onEnd, onError, }) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return new RunnableBinding({\n            bound: this,\n            config: {},\n            configFactories: [\n                (config) => ({\n                    callbacks: [\n                        new RootListenersTracer({\n                            config,\n                            onStart,\n                            onEnd,\n                            onError,\n                        }),\n                    ],\n                }),\n            ],\n        });\n    }\n    /**\n     * Convert a runnable to a tool. Return a new instance of `RunnableToolLike`\n     * which contains the runnable, name, description and schema.\n     *\n     * @template {T extends RunInput = RunInput} RunInput - The input type of the runnable. Should be the same as the `RunInput` type of the runnable.\n     *\n     * @param fields\n     * @param {string | undefined} [fields.name] The name of the tool. If not provided, it will default to the name of the runnable.\n     * @param {string | undefined} [fields.description] The description of the tool. Falls back to the description on the Zod schema if not provided, or undefined if neither are provided.\n     * @param {z.ZodType<T>} [fields.schema] The Zod schema for the input of the tool. Infers the Zod type from the input type of the runnable.\n     * @returns {RunnableToolLike<z.ZodType<T>, RunOutput>} An instance of `RunnableToolLike` which is a runnable that can be used as a tool.\n     */\n    asTool(fields) {\n        return convertRunnableToTool(this, fields);\n    }\n}\n/**\n * A runnable that delegates calls to another runnable with a set of kwargs.\n * @example\n * ```typescript\n * import {\n *   type RunnableConfig,\n *   RunnableLambda,\n * } from \"@langchain/core/runnables\";\n *\n * const enhanceProfile = (\n *   profile: Record<string, any>,\n *   config?: RunnableConfig\n * ) => {\n *   if (config?.configurable?.role) {\n *     return { ...profile, role: config.configurable.role };\n *   }\n *   return profile;\n * };\n *\n * const runnable = RunnableLambda.from(enhanceProfile);\n *\n * // Bind configuration to the runnable to set the user's role dynamically\n * const adminRunnable = runnable.bind({ configurable: { role: \"Admin\" } });\n * const userRunnable = runnable.bind({ configurable: { role: \"User\" } });\n *\n * const result1 = await adminRunnable.invoke({\n *   name: \"Alice\",\n *   email: \"alice@example.com\"\n * });\n *\n * // { name: \"Alice\", email: \"alice@example.com\", role: \"Admin\" }\n *\n * const result2 = await userRunnable.invoke({\n *   name: \"Bob\",\n *   email: \"bob@example.com\"\n * });\n *\n * // { name: \"Bob\", email: \"bob@example.com\", role: \"User\" }\n * ```\n */\nexport class RunnableBinding extends Runnable {\n    static lc_name() {\n        return \"RunnableBinding\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"bound\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"config\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"kwargs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"configFactories\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.bound = fields.bound;\n        this.kwargs = fields.kwargs;\n        this.config = fields.config;\n        this.configFactories = fields.configFactories;\n    }\n    getName(suffix) {\n        return this.bound.getName(suffix);\n    }\n    async _mergeConfig(...options) {\n        const config = mergeConfigs(this.config, ...options);\n        return mergeConfigs(config, ...(this.configFactories\n            ? await Promise.all(this.configFactories.map(async (configFactory) => await configFactory(config)))\n            : []));\n    }\n    bind(kwargs) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return new this.constructor({\n            bound: this.bound,\n            kwargs: { ...this.kwargs, ...kwargs },\n            config: this.config,\n        });\n    }\n    withConfig(config) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return new this.constructor({\n            bound: this.bound,\n            kwargs: this.kwargs,\n            config: { ...this.config, ...config },\n        });\n    }\n    withRetry(fields) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return new this.constructor({\n            bound: this.bound.withRetry(fields),\n            kwargs: this.kwargs,\n            config: this.config,\n        });\n    }\n    async invoke(input, options) {\n        return this.bound.invoke(input, await this._mergeConfig(ensureConfig(options), this.kwargs));\n    }\n    async batch(inputs, options, batchOptions) {\n        const mergedOptions = Array.isArray(options)\n            ? await Promise.all(options.map(async (individualOption) => this._mergeConfig(ensureConfig(individualOption), this.kwargs)))\n            : await this._mergeConfig(ensureConfig(options), this.kwargs);\n        return this.bound.batch(inputs, mergedOptions, batchOptions);\n    }\n    async *_streamIterator(input, options) {\n        yield* this.bound._streamIterator(input, await this._mergeConfig(ensureConfig(options), this.kwargs));\n    }\n    async stream(input, options) {\n        return this.bound.stream(input, await this._mergeConfig(ensureConfig(options), this.kwargs));\n    }\n    async *transform(generator, options) {\n        yield* this.bound.transform(generator, await this._mergeConfig(ensureConfig(options), this.kwargs));\n    }\n    streamEvents(input, options, streamOptions) {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const outerThis = this;\n        const generator = async function* () {\n            yield* outerThis.bound.streamEvents(input, {\n                ...(await outerThis._mergeConfig(ensureConfig(options), outerThis.kwargs)),\n                version: options.version,\n            }, streamOptions);\n        };\n        return IterableReadableStream.fromAsyncGenerator(generator());\n    }\n    static isRunnableBinding(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    thing\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ) {\n        return thing.bound && Runnable.isRunnable(thing.bound);\n    }\n    /**\n     * Bind lifecycle listeners to a Runnable, returning a new Runnable.\n     * The Run object contains information about the run, including its id,\n     * type, input, output, error, startTime, endTime, and any tags or metadata\n     * added to the run.\n     *\n     * @param {Object} params - The object containing the callback functions.\n     * @param {(run: Run) => void} params.onStart - Called before the runnable starts running, with the Run object.\n     * @param {(run: Run) => void} params.onEnd - Called after the runnable finishes running, with the Run object.\n     * @param {(run: Run) => void} params.onError - Called if the runnable throws an error, with the Run object.\n     */\n    withListeners({ onStart, onEnd, onError, }) {\n        return new RunnableBinding({\n            bound: this.bound,\n            kwargs: this.kwargs,\n            config: this.config,\n            configFactories: [\n                (config) => ({\n                    callbacks: [\n                        new RootListenersTracer({\n                            config,\n                            onStart,\n                            onEnd,\n                            onError,\n                        }),\n                    ],\n                }),\n            ],\n        });\n    }\n}\n/**\n * A runnable that delegates calls to another runnable\n * with each element of the input sequence.\n * @example\n * ```typescript\n * import { RunnableEach, RunnableLambda } from \"@langchain/core/runnables\";\n *\n * const toUpperCase = (input: string): string => input.toUpperCase();\n * const addGreeting = (input: string): string => `Hello, ${input}!`;\n *\n * const upperCaseLambda = RunnableLambda.from(toUpperCase);\n * const greetingLambda = RunnableLambda.from(addGreeting);\n *\n * const chain = new RunnableEach({\n *   bound: upperCaseLambda.pipe(greetingLambda),\n * });\n *\n * const result = await chain.invoke([\"alice\", \"bob\", \"carol\"])\n *\n * // [\"Hello, ALICE!\", \"Hello, BOB!\", \"Hello, CAROL!\"]\n * ```\n */\nexport class RunnableEach extends Runnable {\n    static lc_name() {\n        return \"RunnableEach\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"bound\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.bound = fields.bound;\n    }\n    /**\n     * Binds the runnable with the specified arguments.\n     * @param kwargs The arguments to bind the runnable with.\n     * @returns A new instance of the `RunnableEach` class that is bound with the specified arguments.\n     */\n    bind(kwargs) {\n        return new RunnableEach({\n            bound: this.bound.bind(kwargs),\n        });\n    }\n    /**\n     * Invokes the runnable with the specified input and configuration.\n     * @param input The input to invoke the runnable with.\n     * @param config The configuration to invoke the runnable with.\n     * @returns A promise that resolves to the output of the runnable.\n     */\n    async invoke(inputs, config) {\n        return this._callWithConfig(this._invoke.bind(this), inputs, config);\n    }\n    /**\n     * A helper method that is used to invoke the runnable with the specified input and configuration.\n     * @param input The input to invoke the runnable with.\n     * @param config The configuration to invoke the runnable with.\n     * @returns A promise that resolves to the output of the runnable.\n     */\n    async _invoke(inputs, config, runManager) {\n        return this.bound.batch(inputs, patchConfig(config, { callbacks: runManager?.getChild() }));\n    }\n    /**\n     * Bind lifecycle listeners to a Runnable, returning a new Runnable.\n     * The Run object contains information about the run, including its id,\n     * type, input, output, error, startTime, endTime, and any tags or metadata\n     * added to the run.\n     *\n     * @param {Object} params - The object containing the callback functions.\n     * @param {(run: Run) => void} params.onStart - Called before the runnable starts running, with the Run object.\n     * @param {(run: Run) => void} params.onEnd - Called after the runnable finishes running, with the Run object.\n     * @param {(run: Run) => void} params.onError - Called if the runnable throws an error, with the Run object.\n     */\n    withListeners({ onStart, onEnd, onError, }) {\n        return new RunnableEach({\n            bound: this.bound.withListeners({ onStart, onEnd, onError }),\n        });\n    }\n}\n/**\n * Base class for runnables that can be retried a\n * specified number of times.\n * @example\n * ```typescript\n * import {\n *   RunnableLambda,\n *   RunnableRetry,\n * } from \"@langchain/core/runnables\";\n *\n * // Simulate an API call that fails\n * const simulateApiCall = (input: string): string => {\n *   console.log(`Attempting API call with input: ${input}`);\n *   throw new Error(\"API call failed due to network issue\");\n * };\n *\n * const apiCallLambda = RunnableLambda.from(simulateApiCall);\n *\n * // Apply retry logic using the .withRetry() method\n * const apiCallWithRetry = apiCallLambda.withRetry({ stopAfterAttempt: 3 });\n *\n * // Alternatively, create a RunnableRetry instance manually\n * const manualRetry = new RunnableRetry({\n *   bound: apiCallLambda,\n *   maxAttemptNumber: 3,\n *   config: {},\n * });\n *\n * // Example invocation using the .withRetry() method\n * const res = await apiCallWithRetry\n *   .invoke(\"Request 1\")\n *   .catch((error) => {\n *     console.error(\"Failed after multiple retries:\", error.message);\n *   });\n *\n * // Example invocation using the manual retry instance\n * const res2 = await manualRetry\n *   .invoke(\"Request 2\")\n *   .catch((error) => {\n *     console.error(\"Failed after multiple retries:\", error.message);\n *   });\n * ```\n */\nexport class RunnableRetry extends RunnableBinding {\n    static lc_name() {\n        return \"RunnableRetry\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"maxAttemptNumber\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 3\n        });\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Object.defineProperty(this, \"onFailedAttempt\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: () => { }\n        });\n        this.maxAttemptNumber = fields.maxAttemptNumber ?? this.maxAttemptNumber;\n        this.onFailedAttempt = fields.onFailedAttempt ?? this.onFailedAttempt;\n    }\n    _patchConfigForRetry(attempt, config, runManager) {\n        const tag = attempt > 1 ? `retry:attempt:${attempt}` : undefined;\n        return patchConfig(config, { callbacks: runManager?.getChild(tag) });\n    }\n    async _invoke(input, config, runManager) {\n        return pRetry((attemptNumber) => super.invoke(input, this._patchConfigForRetry(attemptNumber, config, runManager)), {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            onFailedAttempt: (error) => this.onFailedAttempt(error, input),\n            retries: Math.max(this.maxAttemptNumber - 1, 0),\n            randomize: true,\n        });\n    }\n    /**\n     * Method that invokes the runnable with the specified input, run manager,\n     * and config. It handles the retry logic by catching any errors and\n     * recursively invoking itself with the updated config for the next retry\n     * attempt.\n     * @param input The input for the runnable.\n     * @param runManager The run manager for the runnable.\n     * @param config The config for the runnable.\n     * @returns A promise that resolves to the output of the runnable.\n     */\n    async invoke(input, config) {\n        return this._callWithConfig(this._invoke.bind(this), input, config);\n    }\n    async _batch(inputs, configs, runManagers, batchOptions) {\n        const resultsMap = {};\n        try {\n            await pRetry(async (attemptNumber) => {\n                const remainingIndexes = inputs\n                    .map((_, i) => i)\n                    .filter((i) => resultsMap[i.toString()] === undefined ||\n                    // eslint-disable-next-line no-instanceof/no-instanceof\n                    resultsMap[i.toString()] instanceof Error);\n                const remainingInputs = remainingIndexes.map((i) => inputs[i]);\n                const patchedConfigs = remainingIndexes.map((i) => this._patchConfigForRetry(attemptNumber, configs?.[i], runManagers?.[i]));\n                const results = await super.batch(remainingInputs, patchedConfigs, {\n                    ...batchOptions,\n                    returnExceptions: true,\n                });\n                let firstException;\n                for (let i = 0; i < results.length; i += 1) {\n                    const result = results[i];\n                    const resultMapIndex = remainingIndexes[i];\n                    // eslint-disable-next-line no-instanceof/no-instanceof\n                    if (result instanceof Error) {\n                        if (firstException === undefined) {\n                            firstException = result;\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            firstException.input = remainingInputs[i];\n                        }\n                    }\n                    resultsMap[resultMapIndex.toString()] = result;\n                }\n                if (firstException) {\n                    throw firstException;\n                }\n                return results;\n            }, {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                onFailedAttempt: (error) => this.onFailedAttempt(error, error.input),\n                retries: Math.max(this.maxAttemptNumber - 1, 0),\n                randomize: true,\n            });\n        }\n        catch (e) {\n            if (batchOptions?.returnExceptions !== true) {\n                throw e;\n            }\n        }\n        return Object.keys(resultsMap)\n            .sort((a, b) => parseInt(a, 10) - parseInt(b, 10))\n            .map((key) => resultsMap[parseInt(key, 10)]);\n    }\n    async batch(inputs, options, batchOptions) {\n        return this._batchWithConfig(this._batch.bind(this), inputs, options, batchOptions);\n    }\n}\n/**\n * A sequence of runnables, where the output of each is the input of the next.\n * @example\n * ```typescript\n * const promptTemplate = PromptTemplate.fromTemplate(\n *   \"Tell me a joke about {topic}\",\n * );\n * const chain = RunnableSequence.from([promptTemplate, new ChatOpenAI({})]);\n * const result = await chain.invoke({ topic: \"bears\" });\n * ```\n */\nexport class RunnableSequence extends Runnable {\n    static lc_name() {\n        return \"RunnableSequence\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"first\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"middle\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Object.defineProperty(this, \"last\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"omitSequenceTags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        this.first = fields.first;\n        this.middle = fields.middle ?? this.middle;\n        this.last = fields.last;\n        this.name = fields.name;\n        this.omitSequenceTags = fields.omitSequenceTags ?? this.omitSequenceTags;\n    }\n    get steps() {\n        return [this.first, ...this.middle, this.last];\n    }\n    async invoke(input, options) {\n        const config = ensureConfig(options);\n        const callbackManager_ = await getCallbackManagerForConfig(config);\n        const runManager = await callbackManager_?.handleChainStart(this.toJSON(), _coerceToDict(input, \"input\"), config.runId, undefined, undefined, undefined, config?.runName);\n        delete config.runId;\n        let nextStepInput = input;\n        let finalOutput;\n        try {\n            const initialSteps = [this.first, ...this.middle];\n            for (let i = 0; i < initialSteps.length; i += 1) {\n                const step = initialSteps[i];\n                const promise = step.invoke(nextStepInput, patchConfig(config, {\n                    callbacks: runManager?.getChild(this.omitSequenceTags ? undefined : `seq:step:${i + 1}`),\n                }));\n                nextStepInput = await raceWithSignal(promise, options?.signal);\n            }\n            // TypeScript can't detect that the last output of the sequence returns RunOutput, so call it out of the loop here\n            if (options?.signal?.aborted) {\n                throw new Error(\"Aborted\");\n            }\n            finalOutput = await this.last.invoke(nextStepInput, patchConfig(config, {\n                callbacks: runManager?.getChild(this.omitSequenceTags ? undefined : `seq:step:${this.steps.length}`),\n            }));\n        }\n        catch (e) {\n            await runManager?.handleChainError(e);\n            throw e;\n        }\n        await runManager?.handleChainEnd(_coerceToDict(finalOutput, \"output\"));\n        return finalOutput;\n    }\n    async batch(inputs, options, batchOptions) {\n        const configList = this._getOptionsList(options ?? {}, inputs.length);\n        const callbackManagers = await Promise.all(configList.map(getCallbackManagerForConfig));\n        const runManagers = await Promise.all(callbackManagers.map(async (callbackManager, i) => {\n            const handleStartRes = await callbackManager?.handleChainStart(this.toJSON(), _coerceToDict(inputs[i], \"input\"), configList[i].runId, undefined, undefined, undefined, configList[i].runName);\n            delete configList[i].runId;\n            return handleStartRes;\n        }));\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let nextStepInputs = inputs;\n        try {\n            for (let i = 0; i < this.steps.length; i += 1) {\n                const step = this.steps[i];\n                const promise = step.batch(nextStepInputs, runManagers.map((runManager, j) => {\n                    const childRunManager = runManager?.getChild(this.omitSequenceTags ? undefined : `seq:step:${i + 1}`);\n                    return patchConfig(configList[j], { callbacks: childRunManager });\n                }), batchOptions);\n                nextStepInputs = await raceWithSignal(promise, configList[0]?.signal);\n            }\n        }\n        catch (e) {\n            await Promise.all(runManagers.map((runManager) => runManager?.handleChainError(e)));\n            throw e;\n        }\n        await Promise.all(runManagers.map((runManager) => runManager?.handleChainEnd(_coerceToDict(nextStepInputs, \"output\"))));\n        return nextStepInputs;\n    }\n    async *_streamIterator(input, options) {\n        const callbackManager_ = await getCallbackManagerForConfig(options);\n        const { runId, ...otherOptions } = options ?? {};\n        const runManager = await callbackManager_?.handleChainStart(this.toJSON(), _coerceToDict(input, \"input\"), runId, undefined, undefined, undefined, otherOptions?.runName);\n        const steps = [this.first, ...this.middle, this.last];\n        let concatSupported = true;\n        let finalOutput;\n        async function* inputGenerator() {\n            yield input;\n        }\n        try {\n            let finalGenerator = steps[0].transform(inputGenerator(), patchConfig(otherOptions, {\n                callbacks: runManager?.getChild(this.omitSequenceTags ? undefined : `seq:step:1`),\n            }));\n            for (let i = 1; i < steps.length; i += 1) {\n                const step = steps[i];\n                finalGenerator = await step.transform(finalGenerator, patchConfig(otherOptions, {\n                    callbacks: runManager?.getChild(this.omitSequenceTags ? undefined : `seq:step:${i + 1}`),\n                }));\n            }\n            for await (const chunk of finalGenerator) {\n                options?.signal?.throwIfAborted();\n                yield chunk;\n                if (concatSupported) {\n                    if (finalOutput === undefined) {\n                        finalOutput = chunk;\n                    }\n                    else {\n                        try {\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            finalOutput = concat(finalOutput, chunk);\n                        }\n                        catch (e) {\n                            finalOutput = undefined;\n                            concatSupported = false;\n                        }\n                    }\n                }\n            }\n        }\n        catch (e) {\n            await runManager?.handleChainError(e);\n            throw e;\n        }\n        await runManager?.handleChainEnd(_coerceToDict(finalOutput, \"output\"));\n    }\n    getGraph(config) {\n        const graph = new Graph();\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let currentLastNode = null;\n        this.steps.forEach((step, index) => {\n            const stepGraph = step.getGraph(config);\n            if (index !== 0) {\n                stepGraph.trimFirstNode();\n            }\n            if (index !== this.steps.length - 1) {\n                stepGraph.trimLastNode();\n            }\n            graph.extend(stepGraph);\n            const stepFirstNode = stepGraph.firstNode();\n            if (!stepFirstNode) {\n                throw new Error(`Runnable ${step} has no first node`);\n            }\n            if (currentLastNode) {\n                graph.addEdge(currentLastNode, stepFirstNode);\n            }\n            currentLastNode = stepGraph.lastNode();\n        });\n        return graph;\n    }\n    pipe(coerceable) {\n        if (RunnableSequence.isRunnableSequence(coerceable)) {\n            return new RunnableSequence({\n                first: this.first,\n                middle: this.middle.concat([\n                    this.last,\n                    coerceable.first,\n                    ...coerceable.middle,\n                ]),\n                last: coerceable.last,\n                name: this.name ?? coerceable.name,\n            });\n        }\n        else {\n            return new RunnableSequence({\n                first: this.first,\n                middle: [...this.middle, this.last],\n                last: _coerceToRunnable(coerceable),\n                name: this.name,\n            });\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static isRunnableSequence(thing) {\n        return Array.isArray(thing.middle) && Runnable.isRunnable(thing);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static from([first, ...runnables], nameOrFields) {\n        let extra = {};\n        if (typeof nameOrFields === \"string\") {\n            extra.name = nameOrFields;\n        }\n        else if (nameOrFields !== undefined) {\n            extra = nameOrFields;\n        }\n        return new RunnableSequence({\n            ...extra,\n            first: _coerceToRunnable(first),\n            middle: runnables.slice(0, -1).map(_coerceToRunnable),\n            last: _coerceToRunnable(runnables[runnables.length - 1]),\n        });\n    }\n}\n/**\n * A runnable that runs a mapping of runnables in parallel,\n * and returns a mapping of their outputs.\n * @example\n * ```typescript\n * const mapChain = RunnableMap.from({\n *   joke: PromptTemplate.fromTemplate(\"Tell me a joke about {topic}\").pipe(\n *     new ChatAnthropic({}),\n *   ),\n *   poem: PromptTemplate.fromTemplate(\"write a 2-line poem about {topic}\").pipe(\n *     new ChatAnthropic({}),\n *   ),\n * });\n * const result = await mapChain.invoke({ topic: \"bear\" });\n * ```\n */\nexport class RunnableMap extends Runnable {\n    static lc_name() {\n        return \"RunnableMap\";\n    }\n    getStepsKeys() {\n        return Object.keys(this.steps);\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"steps\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.steps = {};\n        for (const [key, value] of Object.entries(fields.steps)) {\n            this.steps[key] = _coerceToRunnable(value);\n        }\n    }\n    static from(steps) {\n        return new RunnableMap({ steps });\n    }\n    async invoke(input, options) {\n        const config = ensureConfig(options);\n        const callbackManager_ = await getCallbackManagerForConfig(config);\n        const runManager = await callbackManager_?.handleChainStart(this.toJSON(), {\n            input,\n        }, config.runId, undefined, undefined, undefined, config?.runName);\n        delete config.runId;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const output = {};\n        try {\n            const promises = Object.entries(this.steps).map(async ([key, runnable]) => {\n                output[key] = await runnable.invoke(input, patchConfig(config, {\n                    callbacks: runManager?.getChild(`map:key:${key}`),\n                }));\n            });\n            await raceWithSignal(Promise.all(promises), options?.signal);\n        }\n        catch (e) {\n            await runManager?.handleChainError(e);\n            throw e;\n        }\n        await runManager?.handleChainEnd(output);\n        return output;\n    }\n    async *_transform(generator, runManager, options) {\n        // shallow copy steps to ignore changes while iterating\n        const steps = { ...this.steps };\n        // each step gets a copy of the input iterator\n        const inputCopies = atee(generator, Object.keys(steps).length);\n        // start the first iteration of each output iterator\n        const tasks = new Map(Object.entries(steps).map(([key, runnable], i) => {\n            const gen = runnable.transform(inputCopies[i], patchConfig(options, {\n                callbacks: runManager?.getChild(`map:key:${key}`),\n            }));\n            return [key, gen.next().then((result) => ({ key, gen, result }))];\n        }));\n        // yield chunks as they become available,\n        // starting new iterations as needed,\n        // until all iterators are done\n        while (tasks.size) {\n            const promise = Promise.race(tasks.values());\n            const { key, result, gen } = await raceWithSignal(promise, options?.signal);\n            tasks.delete(key);\n            if (!result.done) {\n                yield { [key]: result.value };\n                tasks.set(key, gen.next().then((result) => ({ key, gen, result })));\n            }\n        }\n    }\n    transform(generator, options) {\n        return this._transformStreamWithConfig(generator, this._transform.bind(this), options);\n    }\n    async stream(input, options) {\n        async function* generator() {\n            yield input;\n        }\n        const config = ensureConfig(options);\n        const wrappedGenerator = new AsyncGeneratorWithSetup({\n            generator: this.transform(generator(), config),\n            config,\n        });\n        await wrappedGenerator.setup;\n        return IterableReadableStream.fromAsyncGenerator(wrappedGenerator);\n    }\n}\n/**\n * A runnable that wraps a traced LangSmith function.\n */\nexport class RunnableTraceable extends Runnable {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"func\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        if (!isTraceableFunction(fields.func)) {\n            throw new Error(\"RunnableTraceable requires a function that is wrapped in traceable higher-order function\");\n        }\n        this.func = fields.func;\n    }\n    async invoke(input, options) {\n        const [config] = this._getOptionsList(options ?? {}, 1);\n        const callbacks = await getCallbackManagerForConfig(config);\n        const promise = this.func(patchConfig(config, { callbacks }), input);\n        return raceWithSignal(promise, config?.signal);\n    }\n    async *_streamIterator(input, options) {\n        const [config] = this._getOptionsList(options ?? {}, 1);\n        const result = await this.invoke(input, options);\n        if (isAsyncIterable(result)) {\n            for await (const item of result) {\n                config?.signal?.throwIfAborted();\n                yield item;\n            }\n            return;\n        }\n        if (isIterator(result)) {\n            while (true) {\n                config?.signal?.throwIfAborted();\n                const state = result.next();\n                if (state.done)\n                    break;\n                yield state.value;\n            }\n            return;\n        }\n        yield result;\n    }\n    static from(func) {\n        return new RunnableTraceable({ func });\n    }\n}\nfunction assertNonTraceableFunction(func) {\n    if (isTraceableFunction(func)) {\n        throw new Error(\"RunnableLambda requires a function that is not wrapped in traceable higher-order function. This shouldn't happen.\");\n    }\n}\n/**\n * A runnable that wraps an arbitrary function that takes a single argument.\n * @example\n * ```typescript\n * import { RunnableLambda } from \"@langchain/core/runnables\";\n *\n * const add = (input: { x: number; y: number }) => input.x + input.y;\n *\n * const multiply = (input: { value: number; multiplier: number }) =>\n *   input.value * input.multiplier;\n *\n * // Create runnables for the functions\n * const addLambda = RunnableLambda.from(add);\n * const multiplyLambda = RunnableLambda.from(multiply);\n *\n * // Chain the lambdas for a mathematical operation\n * const chainedLambda = addLambda.pipe((result) =>\n *   multiplyLambda.invoke({ value: result, multiplier: 2 })\n * );\n *\n * // Example invocation of the chainedLambda\n * const result = await chainedLambda.invoke({ x: 2, y: 3 });\n *\n * // Will log \"10\" (since (2 + 3) * 2 = 10)\n * ```\n */\nexport class RunnableLambda extends Runnable {\n    static lc_name() {\n        return \"RunnableLambda\";\n    }\n    constructor(fields) {\n        if (isTraceableFunction(fields.func)) {\n            // eslint-disable-next-line no-constructor-return\n            return RunnableTraceable.from(fields.func);\n        }\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"func\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        assertNonTraceableFunction(fields.func);\n        this.func = fields.func;\n    }\n    static from(func) {\n        return new RunnableLambda({\n            func,\n        });\n    }\n    async _invoke(input, config, runManager) {\n        return new Promise((resolve, reject) => {\n            const childConfig = patchConfig(config, {\n                callbacks: runManager?.getChild(),\n                recursionLimit: (config?.recursionLimit ?? DEFAULT_RECURSION_LIMIT) - 1,\n            });\n            void AsyncLocalStorageProviderSingleton.runWithConfig(pickRunnableConfigKeys(childConfig), async () => {\n                try {\n                    let output = await this.func(input, {\n                        ...childConfig,\n                    });\n                    if (output && Runnable.isRunnable(output)) {\n                        if (config?.recursionLimit === 0) {\n                            throw new Error(\"Recursion limit reached.\");\n                        }\n                        output = await output.invoke(input, {\n                            ...childConfig,\n                            recursionLimit: (childConfig.recursionLimit ?? DEFAULT_RECURSION_LIMIT) - 1,\n                        });\n                    }\n                    else if (isAsyncIterable(output)) {\n                        let finalOutput;\n                        for await (const chunk of consumeAsyncIterableInContext(childConfig, output)) {\n                            config?.signal?.throwIfAborted();\n                            if (finalOutput === undefined) {\n                                finalOutput = chunk;\n                            }\n                            else {\n                                // Make a best effort to gather, for any type that supports concat.\n                                try {\n                                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                                    finalOutput = concat(finalOutput, chunk);\n                                }\n                                catch (e) {\n                                    finalOutput = chunk;\n                                }\n                            }\n                        }\n                        output = finalOutput;\n                    }\n                    else if (isIterableIterator(output)) {\n                        let finalOutput;\n                        for (const chunk of consumeIteratorInContext(childConfig, output)) {\n                            config?.signal?.throwIfAborted();\n                            if (finalOutput === undefined) {\n                                finalOutput = chunk;\n                            }\n                            else {\n                                // Make a best effort to gather, for any type that supports concat.\n                                try {\n                                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                                    finalOutput = concat(finalOutput, chunk);\n                                }\n                                catch (e) {\n                                    finalOutput = chunk;\n                                }\n                            }\n                        }\n                        output = finalOutput;\n                    }\n                    resolve(output);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            });\n        });\n    }\n    async invoke(input, options) {\n        return this._callWithConfig(this._invoke.bind(this), input, options);\n    }\n    async *_transform(generator, runManager, config) {\n        let finalChunk;\n        for await (const chunk of generator) {\n            if (finalChunk === undefined) {\n                finalChunk = chunk;\n            }\n            else {\n                // Make a best effort to gather, for any type that supports concat.\n                try {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    finalChunk = concat(finalChunk, chunk);\n                }\n                catch (e) {\n                    finalChunk = chunk;\n                }\n            }\n        }\n        const childConfig = patchConfig(config, {\n            callbacks: runManager?.getChild(),\n            recursionLimit: (config?.recursionLimit ?? DEFAULT_RECURSION_LIMIT) - 1,\n        });\n        const output = await new Promise((resolve, reject) => {\n            void AsyncLocalStorageProviderSingleton.runWithConfig(pickRunnableConfigKeys(childConfig), async () => {\n                try {\n                    const res = await this.func(finalChunk, {\n                        ...childConfig,\n                        config: childConfig,\n                    });\n                    resolve(res);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            });\n        });\n        if (output && Runnable.isRunnable(output)) {\n            if (config?.recursionLimit === 0) {\n                throw new Error(\"Recursion limit reached.\");\n            }\n            const stream = await output.stream(finalChunk, childConfig);\n            for await (const chunk of stream) {\n                yield chunk;\n            }\n        }\n        else if (isAsyncIterable(output)) {\n            for await (const chunk of consumeAsyncIterableInContext(childConfig, output)) {\n                config?.signal?.throwIfAborted();\n                yield chunk;\n            }\n        }\n        else if (isIterableIterator(output)) {\n            for (const chunk of consumeIteratorInContext(childConfig, output)) {\n                config?.signal?.throwIfAborted();\n                yield chunk;\n            }\n        }\n        else {\n            yield output;\n        }\n    }\n    transform(generator, options) {\n        return this._transformStreamWithConfig(generator, this._transform.bind(this), options);\n    }\n    async stream(input, options) {\n        async function* generator() {\n            yield input;\n        }\n        const config = ensureConfig(options);\n        const wrappedGenerator = new AsyncGeneratorWithSetup({\n            generator: this.transform(generator(), config),\n            config,\n        });\n        await wrappedGenerator.setup;\n        return IterableReadableStream.fromAsyncGenerator(wrappedGenerator);\n    }\n}\n/**\n * A runnable that runs a mapping of runnables in parallel,\n * and returns a mapping of their outputs.\n * @example\n * ```typescript\n * import {\n *   RunnableLambda,\n *   RunnableParallel,\n * } from \"@langchain/core/runnables\";\n *\n * const addYears = (age: number): number => age + 5;\n * const yearsToFifty = (age: number): number => 50 - age;\n * const yearsToHundred = (age: number): number => 100 - age;\n *\n * const addYearsLambda = RunnableLambda.from(addYears);\n * const milestoneFiftyLambda = RunnableLambda.from(yearsToFifty);\n * const milestoneHundredLambda = RunnableLambda.from(yearsToHundred);\n *\n * // Pipe will coerce objects into RunnableParallel by default, but we\n * // explicitly instantiate one here to demonstrate\n * const sequence = addYearsLambda.pipe(\n *   RunnableParallel.from({\n *     years_to_fifty: milestoneFiftyLambda,\n *     years_to_hundred: milestoneHundredLambda,\n *   })\n * );\n *\n * // Invoke the sequence with a single age input\n * const res = sequence.invoke(25);\n *\n * // { years_to_fifty: 25, years_to_hundred: 75 }\n * ```\n */\nexport class RunnableParallel extends RunnableMap {\n}\n/**\n * A Runnable that can fallback to other Runnables if it fails.\n * External APIs (e.g., APIs for a language model) may at times experience\n * degraded performance or even downtime.\n *\n * In these cases, it can be useful to have a fallback Runnable that can be\n * used in place of the original Runnable (e.g., fallback to another LLM provider).\n *\n * Fallbacks can be defined at the level of a single Runnable, or at the level\n * of a chain of Runnables. Fallbacks are tried in order until one succeeds or\n * all fail.\n *\n * While you can instantiate a `RunnableWithFallbacks` directly, it is usually\n * more convenient to use the `withFallbacks` method on an existing Runnable.\n *\n * When streaming, fallbacks will only be called on failures during the initial\n * stream creation. Errors that occur after a stream starts will not fallback\n * to the next Runnable.\n *\n * @example\n * ```typescript\n * import {\n *   RunnableLambda,\n *   RunnableWithFallbacks,\n * } from \"@langchain/core/runnables\";\n *\n * const primaryOperation = (input: string): string => {\n *   if (input !== \"safe\") {\n *     throw new Error(\"Primary operation failed due to unsafe input\");\n *   }\n *   return `Processed: ${input}`;\n * };\n *\n * // Define a fallback operation that processes the input differently\n * const fallbackOperation = (input: string): string =>\n *   `Fallback processed: ${input}`;\n *\n * const primaryRunnable = RunnableLambda.from(primaryOperation);\n * const fallbackRunnable = RunnableLambda.from(fallbackOperation);\n *\n * // Apply the fallback logic using the .withFallbacks() method\n * const runnableWithFallback = primaryRunnable.withFallbacks([fallbackRunnable]);\n *\n * // Alternatively, create a RunnableWithFallbacks instance manually\n * const manualFallbackChain = new RunnableWithFallbacks({\n *   runnable: primaryRunnable,\n *   fallbacks: [fallbackRunnable],\n * });\n *\n * // Example invocation using .withFallbacks()\n * const res = await runnableWithFallback\n *   .invoke(\"unsafe input\")\n *   .catch((error) => {\n *     console.error(\"Failed after all attempts:\", error.message);\n *   });\n *\n * // \"Fallback processed: unsafe input\"\n *\n * // Example invocation using manual instantiation\n * const res = await manualFallbackChain\n *   .invoke(\"safe\")\n *   .catch((error) => {\n *     console.error(\"Failed after all attempts:\", error.message);\n *   });\n *\n * // \"Processed: safe\"\n * ```\n */\nexport class RunnableWithFallbacks extends Runnable {\n    static lc_name() {\n        return \"RunnableWithFallbacks\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"runnable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"fallbacks\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.runnable = fields.runnable;\n        this.fallbacks = fields.fallbacks;\n    }\n    *runnables() {\n        yield this.runnable;\n        for (const fallback of this.fallbacks) {\n            yield fallback;\n        }\n    }\n    async invoke(input, options) {\n        const config = ensureConfig(options);\n        const callbackManager_ = await getCallbackManagerForConfig(config);\n        const { runId, ...otherConfigFields } = config;\n        const runManager = await callbackManager_?.handleChainStart(this.toJSON(), _coerceToDict(input, \"input\"), runId, undefined, undefined, undefined, otherConfigFields?.runName);\n        const childConfig = patchConfig(otherConfigFields, {\n            callbacks: runManager?.getChild(),\n        });\n        const res = await AsyncLocalStorageProviderSingleton.runWithConfig(childConfig, async () => {\n            let firstError;\n            for (const runnable of this.runnables()) {\n                config?.signal?.throwIfAborted();\n                try {\n                    const output = await runnable.invoke(input, childConfig);\n                    await runManager?.handleChainEnd(_coerceToDict(output, \"output\"));\n                    return output;\n                }\n                catch (e) {\n                    if (firstError === undefined) {\n                        firstError = e;\n                    }\n                }\n            }\n            if (firstError === undefined) {\n                throw new Error(\"No error stored at end of fallback.\");\n            }\n            await runManager?.handleChainError(firstError);\n            throw firstError;\n        });\n        return res;\n    }\n    async *_streamIterator(input, options) {\n        const config = ensureConfig(options);\n        const callbackManager_ = await getCallbackManagerForConfig(config);\n        const { runId, ...otherConfigFields } = config;\n        const runManager = await callbackManager_?.handleChainStart(this.toJSON(), _coerceToDict(input, \"input\"), runId, undefined, undefined, undefined, otherConfigFields?.runName);\n        let firstError;\n        let stream;\n        for (const runnable of this.runnables()) {\n            config?.signal?.throwIfAborted();\n            const childConfig = patchConfig(otherConfigFields, {\n                callbacks: runManager?.getChild(),\n            });\n            try {\n                const originalStream = await runnable.stream(input, childConfig);\n                stream = consumeAsyncIterableInContext(childConfig, originalStream);\n                break;\n            }\n            catch (e) {\n                if (firstError === undefined) {\n                    firstError = e;\n                }\n            }\n        }\n        if (stream === undefined) {\n            const error = firstError ?? new Error(\"No error stored at end of fallback.\");\n            await runManager?.handleChainError(error);\n            throw error;\n        }\n        let output;\n        try {\n            for await (const chunk of stream) {\n                yield chunk;\n                try {\n                    output = output === undefined ? output : concat(output, chunk);\n                }\n                catch (e) {\n                    output = undefined;\n                }\n            }\n        }\n        catch (e) {\n            await runManager?.handleChainError(e);\n            throw e;\n        }\n        await runManager?.handleChainEnd(_coerceToDict(output, \"output\"));\n    }\n    async batch(inputs, options, batchOptions) {\n        if (batchOptions?.returnExceptions) {\n            throw new Error(\"Not implemented.\");\n        }\n        const configList = this._getOptionsList(options ?? {}, inputs.length);\n        const callbackManagers = await Promise.all(configList.map((config) => getCallbackManagerForConfig(config)));\n        const runManagers = await Promise.all(callbackManagers.map(async (callbackManager, i) => {\n            const handleStartRes = await callbackManager?.handleChainStart(this.toJSON(), _coerceToDict(inputs[i], \"input\"), configList[i].runId, undefined, undefined, undefined, configList[i].runName);\n            delete configList[i].runId;\n            return handleStartRes;\n        }));\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let firstError;\n        for (const runnable of this.runnables()) {\n            configList[0].signal?.throwIfAborted();\n            try {\n                const outputs = await runnable.batch(inputs, runManagers.map((runManager, j) => patchConfig(configList[j], {\n                    callbacks: runManager?.getChild(),\n                })), batchOptions);\n                await Promise.all(runManagers.map((runManager, i) => runManager?.handleChainEnd(_coerceToDict(outputs[i], \"output\"))));\n                return outputs;\n            }\n            catch (e) {\n                if (firstError === undefined) {\n                    firstError = e;\n                }\n            }\n        }\n        if (!firstError) {\n            throw new Error(\"No error stored at end of fallbacks.\");\n        }\n        await Promise.all(runManagers.map((runManager) => runManager?.handleChainError(firstError)));\n        throw firstError;\n    }\n}\n// TODO: Figure out why the compiler needs help eliminating Error as a RunOutput type\nexport function _coerceToRunnable(coerceable) {\n    if (typeof coerceable === \"function\") {\n        return new RunnableLambda({ func: coerceable });\n    }\n    else if (Runnable.isRunnable(coerceable)) {\n        return coerceable;\n    }\n    else if (!Array.isArray(coerceable) && typeof coerceable === \"object\") {\n        const runnables = {};\n        for (const [key, value] of Object.entries(coerceable)) {\n            runnables[key] = _coerceToRunnable(value);\n        }\n        return new RunnableMap({\n            steps: runnables,\n        });\n    }\n    else {\n        throw new Error(`Expected a Runnable, function or object.\\nInstead got an unsupported type.`);\n    }\n}\n/**\n * A runnable that assigns key-value pairs to inputs of type `Record<string, unknown>`.\n * @example\n * ```typescript\n * import {\n *   RunnableAssign,\n *   RunnableLambda,\n *   RunnableParallel,\n * } from \"@langchain/core/runnables\";\n *\n * const calculateAge = (x: { birthYear: number }): { age: number } => {\n *   const currentYear = new Date().getFullYear();\n *   return { age: currentYear - x.birthYear };\n * };\n *\n * const createGreeting = (x: { name: string }): { greeting: string } => {\n *   return { greeting: `Hello, ${x.name}!` };\n * };\n *\n * const mapper = RunnableParallel.from({\n *   age_step: RunnableLambda.from(calculateAge),\n *   greeting_step: RunnableLambda.from(createGreeting),\n * });\n *\n * const runnableAssign = new RunnableAssign({ mapper });\n *\n * const res = await runnableAssign.invoke({ name: \"Alice\", birthYear: 1990 });\n *\n * // { name: \"Alice\", birthYear: 1990, age_step: { age: 34 }, greeting_step: { greeting: \"Hello, Alice!\" } }\n * ```\n */\nexport class RunnableAssign extends Runnable {\n    static lc_name() {\n        return \"RunnableAssign\";\n    }\n    constructor(fields) {\n        // eslint-disable-next-line no-instanceof/no-instanceof\n        if (fields instanceof RunnableMap) {\n            // eslint-disable-next-line no-param-reassign\n            fields = { mapper: fields };\n        }\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"mapper\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.mapper = fields.mapper;\n    }\n    async invoke(input, options) {\n        const mapperResult = await this.mapper.invoke(input, options);\n        return {\n            ...input,\n            ...mapperResult,\n        };\n    }\n    async *_transform(generator, runManager, options) {\n        // collect mapper keys\n        const mapperKeys = this.mapper.getStepsKeys();\n        // create two input gens, one for the mapper, one for the input\n        const [forPassthrough, forMapper] = atee(generator);\n        // create mapper output gen\n        const mapperOutput = this.mapper.transform(forMapper, patchConfig(options, { callbacks: runManager?.getChild() }));\n        // start the mapper\n        const firstMapperChunkPromise = mapperOutput.next();\n        // yield the passthrough\n        for await (const chunk of forPassthrough) {\n            if (typeof chunk !== \"object\" || Array.isArray(chunk)) {\n                throw new Error(`RunnableAssign can only be used with objects as input, got ${typeof chunk}`);\n            }\n            const filtered = Object.fromEntries(Object.entries(chunk).filter(([key]) => !mapperKeys.includes(key)));\n            if (Object.keys(filtered).length > 0) {\n                yield filtered;\n            }\n        }\n        // yield the mapper output\n        yield (await firstMapperChunkPromise).value;\n        for await (const chunk of mapperOutput) {\n            yield chunk;\n        }\n    }\n    transform(generator, options) {\n        return this._transformStreamWithConfig(generator, this._transform.bind(this), options);\n    }\n    async stream(input, options) {\n        async function* generator() {\n            yield input;\n        }\n        const config = ensureConfig(options);\n        const wrappedGenerator = new AsyncGeneratorWithSetup({\n            generator: this.transform(generator(), config),\n            config,\n        });\n        await wrappedGenerator.setup;\n        return IterableReadableStream.fromAsyncGenerator(wrappedGenerator);\n    }\n}\n/**\n * A runnable that assigns key-value pairs to inputs of type `Record<string, unknown>`.\n * Useful for streaming, can be automatically created and chained by calling `runnable.pick();`.\n * @example\n * ```typescript\n * import { RunnablePick } from \"@langchain/core/runnables\";\n *\n * const inputData = {\n *   name: \"John\",\n *   age: 30,\n *   city: \"New York\",\n *   country: \"USA\",\n *   email: \"john.doe@example.com\",\n *   phone: \"+1234567890\",\n * };\n *\n * const basicInfoRunnable = new RunnablePick([\"name\", \"city\"]);\n *\n * // Example invocation\n * const res = await basicInfoRunnable.invoke(inputData);\n *\n * // { name: 'John', city: 'New York' }\n * ```\n */\nexport class RunnablePick extends Runnable {\n    static lc_name() {\n        return \"RunnablePick\";\n    }\n    constructor(fields) {\n        if (typeof fields === \"string\" || Array.isArray(fields)) {\n            // eslint-disable-next-line no-param-reassign\n            fields = { keys: fields };\n        }\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"keys\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.keys = fields.keys;\n    }\n    async _pick(input) {\n        if (typeof this.keys === \"string\") {\n            return input[this.keys];\n        }\n        else {\n            const picked = this.keys\n                .map((key) => [key, input[key]])\n                .filter((v) => v[1] !== undefined);\n            return picked.length === 0 ? undefined : Object.fromEntries(picked);\n        }\n    }\n    async invoke(input, options) {\n        return this._callWithConfig(this._pick.bind(this), input, options);\n    }\n    async *_transform(generator) {\n        for await (const chunk of generator) {\n            const picked = await this._pick(chunk);\n            if (picked !== undefined) {\n                yield picked;\n            }\n        }\n    }\n    transform(generator, options) {\n        return this._transformStreamWithConfig(generator, this._transform.bind(this), options);\n    }\n    async stream(input, options) {\n        async function* generator() {\n            yield input;\n        }\n        const config = ensureConfig(options);\n        const wrappedGenerator = new AsyncGeneratorWithSetup({\n            generator: this.transform(generator(), config),\n            config,\n        });\n        await wrappedGenerator.setup;\n        return IterableReadableStream.fromAsyncGenerator(wrappedGenerator);\n    }\n}\nexport class RunnableToolLike extends RunnableBinding {\n    constructor(fields) {\n        const sequence = RunnableSequence.from([\n            RunnableLambda.from(async (input) => {\n                let toolInput;\n                if (_isToolCall(input)) {\n                    try {\n                        toolInput = await this.schema.parseAsync(input.args);\n                    }\n                    catch (e) {\n                        throw new ToolInputParsingException(`Received tool input did not match expected schema`, JSON.stringify(input.args));\n                    }\n                }\n                else {\n                    toolInput = input;\n                }\n                return toolInput;\n            }).withConfig({ runName: `${fields.name}:parse_input` }),\n            fields.bound,\n        ]).withConfig({ runName: fields.name });\n        super({\n            bound: sequence,\n            config: fields.config ?? {},\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"description\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"schema\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.name = fields.name;\n        this.description = fields.description;\n        this.schema = fields.schema;\n    }\n    static lc_name() {\n        return \"RunnableToolLike\";\n    }\n}\n/**\n * Given a runnable and a Zod schema, convert the runnable to a tool.\n *\n * @template RunInput The input type for the runnable.\n * @template RunOutput The output type for the runnable.\n *\n * @param {Runnable<RunInput, RunOutput>} runnable The runnable to convert to a tool.\n * @param fields\n * @param {string | undefined} [fields.name] The name of the tool. If not provided, it will default to the name of the runnable.\n * @param {string | undefined} [fields.description] The description of the tool. Falls back to the description on the Zod schema if not provided, or undefined if neither are provided.\n * @param {z.ZodType<RunInput>} [fields.schema] The Zod schema for the input of the tool. Infers the Zod type from the input type of the runnable.\n * @returns {RunnableToolLike<z.ZodType<RunInput>, RunOutput>} An instance of `RunnableToolLike` which is a runnable that can be used as a tool.\n */\nexport function convertRunnableToTool(runnable, fields) {\n    const name = fields.name ?? runnable.getName();\n    const description = fields.description ?? fields.schema?.description;\n    if (fields.schema.constructor === z.ZodString) {\n        return new RunnableToolLike({\n            name,\n            description,\n            schema: z\n                .object({\n                input: z.string(),\n            })\n                .transform((input) => input.input),\n            bound: runnable,\n        });\n    }\n    return new RunnableToolLike({\n        name,\n        description,\n        schema: fields.schema,\n        bound: runnable,\n    });\n}\n","import { IterableReadableStream } from \"../utils/stream.js\";\nexport function convertToHttpEventStream(stream) {\n    const encoder = new TextEncoder();\n    const finalStream = new ReadableStream({\n        async start(controller) {\n            for await (const chunk of stream) {\n                controller.enqueue(encoder.encode(`event: data\\ndata: ${JSON.stringify(chunk)}\\n\\n`));\n            }\n            controller.enqueue(encoder.encode(\"event: end\\n\\n\"));\n            controller.close();\n        },\n    });\n    return IterableReadableStream.fromReadableStream(finalStream);\n}\n","// @ts-nocheck\n// Inlined to deal with portability issues with importing crypto module\n/*\n * [js-sha1]{@link https://github.com/emn178/js-sha1}\n *\n * @version 0.6.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2014-2017\n * @license MIT\n */\n/*jslint bitwise: true */\n\"use strict\";\nvar root = typeof window === \"object\" ? window : {};\nvar HEX_CHARS = \"0123456789abcdef\".split(\"\");\nvar EXTRA = [-2147483648, 8388608, 32768, 128];\nvar SHIFT = [24, 16, 8, 0];\nvar OUTPUT_TYPES = [\"hex\", \"array\", \"digest\", \"arrayBuffer\"];\nvar blocks = [];\nfunction Sha1(sharedMemory) {\n    if (sharedMemory) {\n        blocks[0] =\n            blocks[16] =\n                blocks[1] =\n                    blocks[2] =\n                        blocks[3] =\n                            blocks[4] =\n                                blocks[5] =\n                                    blocks[6] =\n                                        blocks[7] =\n                                            blocks[8] =\n                                                blocks[9] =\n                                                    blocks[10] =\n                                                        blocks[11] =\n                                                            blocks[12] =\n                                                                blocks[13] =\n                                                                    blocks[14] =\n                                                                        blocks[15] =\n                                                                            0;\n        this.blocks = blocks;\n    }\n    else {\n        this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    }\n    this.h0 = 0x67452301;\n    this.h1 = 0xefcdab89;\n    this.h2 = 0x98badcfe;\n    this.h3 = 0x10325476;\n    this.h4 = 0xc3d2e1f0;\n    this.block = this.start = this.bytes = this.hBytes = 0;\n    this.finalized = this.hashed = false;\n    this.first = true;\n}\nSha1.prototype.update = function (message) {\n    if (this.finalized) {\n        return;\n    }\n    var notString = typeof message !== \"string\";\n    if (notString && message.constructor === root.ArrayBuffer) {\n        message = new Uint8Array(message);\n    }\n    var code, index = 0, i, length = message.length || 0, blocks = this.blocks;\n    while (index < length) {\n        if (this.hashed) {\n            this.hashed = false;\n            blocks[0] = this.block;\n            blocks[16] =\n                blocks[1] =\n                    blocks[2] =\n                        blocks[3] =\n                            blocks[4] =\n                                blocks[5] =\n                                    blocks[6] =\n                                        blocks[7] =\n                                            blocks[8] =\n                                                blocks[9] =\n                                                    blocks[10] =\n                                                        blocks[11] =\n                                                            blocks[12] =\n                                                                blocks[13] =\n                                                                    blocks[14] =\n                                                                        blocks[15] =\n                                                                            0;\n        }\n        if (notString) {\n            for (i = this.start; index < length && i < 64; ++index) {\n                blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n            }\n        }\n        else {\n            for (i = this.start; index < length && i < 64; ++index) {\n                code = message.charCodeAt(index);\n                if (code < 0x80) {\n                    blocks[i >> 2] |= code << SHIFT[i++ & 3];\n                }\n                else if (code < 0x800) {\n                    blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n                }\n                else if (code < 0xd800 || code >= 0xe000) {\n                    blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n                }\n                else {\n                    code =\n                        0x10000 +\n                            (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n                    blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n                    blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n                }\n            }\n        }\n        this.lastByteIndex = i;\n        this.bytes += i - this.start;\n        if (i >= 64) {\n            this.block = blocks[16];\n            this.start = i - 64;\n            this.hash();\n            this.hashed = true;\n        }\n        else {\n            this.start = i;\n        }\n    }\n    if (this.bytes > 4294967295) {\n        this.hBytes += (this.bytes / 4294967296) << 0;\n        this.bytes = this.bytes % 4294967296;\n    }\n    return this;\n};\nSha1.prototype.finalize = function () {\n    if (this.finalized) {\n        return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex;\n    blocks[16] = this.block;\n    blocks[i >> 2] |= EXTRA[i & 3];\n    this.block = blocks[16];\n    if (i >= 56) {\n        if (!this.hashed) {\n            this.hash();\n        }\n        blocks[0] = this.block;\n        blocks[16] =\n            blocks[1] =\n                blocks[2] =\n                    blocks[3] =\n                        blocks[4] =\n                            blocks[5] =\n                                blocks[6] =\n                                    blocks[7] =\n                                        blocks[8] =\n                                            blocks[9] =\n                                                blocks[10] =\n                                                    blocks[11] =\n                                                        blocks[12] =\n                                                            blocks[13] =\n                                                                blocks[14] =\n                                                                    blocks[15] =\n                                                                        0;\n    }\n    blocks[14] = (this.hBytes << 3) | (this.bytes >>> 29);\n    blocks[15] = this.bytes << 3;\n    this.hash();\n};\nSha1.prototype.hash = function () {\n    var a = this.h0, b = this.h1, c = this.h2, d = this.h3, e = this.h4;\n    var f, j, t, blocks = this.blocks;\n    for (j = 16; j < 80; ++j) {\n        t = blocks[j - 3] ^ blocks[j - 8] ^ blocks[j - 14] ^ blocks[j - 16];\n        blocks[j] = (t << 1) | (t >>> 31);\n    }\n    for (j = 0; j < 20; j += 5) {\n        f = (b & c) | (~b & d);\n        t = (a << 5) | (a >>> 27);\n        e = (t + f + e + 1518500249 + blocks[j]) << 0;\n        b = (b << 30) | (b >>> 2);\n        f = (a & b) | (~a & c);\n        t = (e << 5) | (e >>> 27);\n        d = (t + f + d + 1518500249 + blocks[j + 1]) << 0;\n        a = (a << 30) | (a >>> 2);\n        f = (e & a) | (~e & b);\n        t = (d << 5) | (d >>> 27);\n        c = (t + f + c + 1518500249 + blocks[j + 2]) << 0;\n        e = (e << 30) | (e >>> 2);\n        f = (d & e) | (~d & a);\n        t = (c << 5) | (c >>> 27);\n        b = (t + f + b + 1518500249 + blocks[j + 3]) << 0;\n        d = (d << 30) | (d >>> 2);\n        f = (c & d) | (~c & e);\n        t = (b << 5) | (b >>> 27);\n        a = (t + f + a + 1518500249 + blocks[j + 4]) << 0;\n        c = (c << 30) | (c >>> 2);\n    }\n    for (; j < 40; j += 5) {\n        f = b ^ c ^ d;\n        t = (a << 5) | (a >>> 27);\n        e = (t + f + e + 1859775393 + blocks[j]) << 0;\n        b = (b << 30) | (b >>> 2);\n        f = a ^ b ^ c;\n        t = (e << 5) | (e >>> 27);\n        d = (t + f + d + 1859775393 + blocks[j + 1]) << 0;\n        a = (a << 30) | (a >>> 2);\n        f = e ^ a ^ b;\n        t = (d << 5) | (d >>> 27);\n        c = (t + f + c + 1859775393 + blocks[j + 2]) << 0;\n        e = (e << 30) | (e >>> 2);\n        f = d ^ e ^ a;\n        t = (c << 5) | (c >>> 27);\n        b = (t + f + b + 1859775393 + blocks[j + 3]) << 0;\n        d = (d << 30) | (d >>> 2);\n        f = c ^ d ^ e;\n        t = (b << 5) | (b >>> 27);\n        a = (t + f + a + 1859775393 + blocks[j + 4]) << 0;\n        c = (c << 30) | (c >>> 2);\n    }\n    for (; j < 60; j += 5) {\n        f = (b & c) | (b & d) | (c & d);\n        t = (a << 5) | (a >>> 27);\n        e = (t + f + e - 1894007588 + blocks[j]) << 0;\n        b = (b << 30) | (b >>> 2);\n        f = (a & b) | (a & c) | (b & c);\n        t = (e << 5) | (e >>> 27);\n        d = (t + f + d - 1894007588 + blocks[j + 1]) << 0;\n        a = (a << 30) | (a >>> 2);\n        f = (e & a) | (e & b) | (a & b);\n        t = (d << 5) | (d >>> 27);\n        c = (t + f + c - 1894007588 + blocks[j + 2]) << 0;\n        e = (e << 30) | (e >>> 2);\n        f = (d & e) | (d & a) | (e & a);\n        t = (c << 5) | (c >>> 27);\n        b = (t + f + b - 1894007588 + blocks[j + 3]) << 0;\n        d = (d << 30) | (d >>> 2);\n        f = (c & d) | (c & e) | (d & e);\n        t = (b << 5) | (b >>> 27);\n        a = (t + f + a - 1894007588 + blocks[j + 4]) << 0;\n        c = (c << 30) | (c >>> 2);\n    }\n    for (; j < 80; j += 5) {\n        f = b ^ c ^ d;\n        t = (a << 5) | (a >>> 27);\n        e = (t + f + e - 899497514 + blocks[j]) << 0;\n        b = (b << 30) | (b >>> 2);\n        f = a ^ b ^ c;\n        t = (e << 5) | (e >>> 27);\n        d = (t + f + d - 899497514 + blocks[j + 1]) << 0;\n        a = (a << 30) | (a >>> 2);\n        f = e ^ a ^ b;\n        t = (d << 5) | (d >>> 27);\n        c = (t + f + c - 899497514 + blocks[j + 2]) << 0;\n        e = (e << 30) | (e >>> 2);\n        f = d ^ e ^ a;\n        t = (c << 5) | (c >>> 27);\n        b = (t + f + b - 899497514 + blocks[j + 3]) << 0;\n        d = (d << 30) | (d >>> 2);\n        f = c ^ d ^ e;\n        t = (b << 5) | (b >>> 27);\n        a = (t + f + a - 899497514 + blocks[j + 4]) << 0;\n        c = (c << 30) | (c >>> 2);\n    }\n    this.h0 = (this.h0 + a) << 0;\n    this.h1 = (this.h1 + b) << 0;\n    this.h2 = (this.h2 + c) << 0;\n    this.h3 = (this.h3 + d) << 0;\n    this.h4 = (this.h4 + e) << 0;\n};\nSha1.prototype.hex = function () {\n    this.finalize();\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4;\n    return (HEX_CHARS[(h0 >> 28) & 0x0f] +\n        HEX_CHARS[(h0 >> 24) & 0x0f] +\n        HEX_CHARS[(h0 >> 20) & 0x0f] +\n        HEX_CHARS[(h0 >> 16) & 0x0f] +\n        HEX_CHARS[(h0 >> 12) & 0x0f] +\n        HEX_CHARS[(h0 >> 8) & 0x0f] +\n        HEX_CHARS[(h0 >> 4) & 0x0f] +\n        HEX_CHARS[h0 & 0x0f] +\n        HEX_CHARS[(h1 >> 28) & 0x0f] +\n        HEX_CHARS[(h1 >> 24) & 0x0f] +\n        HEX_CHARS[(h1 >> 20) & 0x0f] +\n        HEX_CHARS[(h1 >> 16) & 0x0f] +\n        HEX_CHARS[(h1 >> 12) & 0x0f] +\n        HEX_CHARS[(h1 >> 8) & 0x0f] +\n        HEX_CHARS[(h1 >> 4) & 0x0f] +\n        HEX_CHARS[h1 & 0x0f] +\n        HEX_CHARS[(h2 >> 28) & 0x0f] +\n        HEX_CHARS[(h2 >> 24) & 0x0f] +\n        HEX_CHARS[(h2 >> 20) & 0x0f] +\n        HEX_CHARS[(h2 >> 16) & 0x0f] +\n        HEX_CHARS[(h2 >> 12) & 0x0f] +\n        HEX_CHARS[(h2 >> 8) & 0x0f] +\n        HEX_CHARS[(h2 >> 4) & 0x0f] +\n        HEX_CHARS[h2 & 0x0f] +\n        HEX_CHARS[(h3 >> 28) & 0x0f] +\n        HEX_CHARS[(h3 >> 24) & 0x0f] +\n        HEX_CHARS[(h3 >> 20) & 0x0f] +\n        HEX_CHARS[(h3 >> 16) & 0x0f] +\n        HEX_CHARS[(h3 >> 12) & 0x0f] +\n        HEX_CHARS[(h3 >> 8) & 0x0f] +\n        HEX_CHARS[(h3 >> 4) & 0x0f] +\n        HEX_CHARS[h3 & 0x0f] +\n        HEX_CHARS[(h4 >> 28) & 0x0f] +\n        HEX_CHARS[(h4 >> 24) & 0x0f] +\n        HEX_CHARS[(h4 >> 20) & 0x0f] +\n        HEX_CHARS[(h4 >> 16) & 0x0f] +\n        HEX_CHARS[(h4 >> 12) & 0x0f] +\n        HEX_CHARS[(h4 >> 8) & 0x0f] +\n        HEX_CHARS[(h4 >> 4) & 0x0f] +\n        HEX_CHARS[h4 & 0x0f]);\n};\nSha1.prototype.toString = Sha1.prototype.hex;\nSha1.prototype.digest = function () {\n    this.finalize();\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4;\n    return [\n        (h0 >> 24) & 0xff,\n        (h0 >> 16) & 0xff,\n        (h0 >> 8) & 0xff,\n        h0 & 0xff,\n        (h1 >> 24) & 0xff,\n        (h1 >> 16) & 0xff,\n        (h1 >> 8) & 0xff,\n        h1 & 0xff,\n        (h2 >> 24) & 0xff,\n        (h2 >> 16) & 0xff,\n        (h2 >> 8) & 0xff,\n        h2 & 0xff,\n        (h3 >> 24) & 0xff,\n        (h3 >> 16) & 0xff,\n        (h3 >> 8) & 0xff,\n        h3 & 0xff,\n        (h4 >> 24) & 0xff,\n        (h4 >> 16) & 0xff,\n        (h4 >> 8) & 0xff,\n        h4 & 0xff,\n    ];\n};\nSha1.prototype.array = Sha1.prototype.digest;\nSha1.prototype.arrayBuffer = function () {\n    this.finalize();\n    var buffer = new ArrayBuffer(20);\n    var dataView = new DataView(buffer);\n    dataView.setUint32(0, this.h0);\n    dataView.setUint32(4, this.h1);\n    dataView.setUint32(8, this.h2);\n    dataView.setUint32(12, this.h3);\n    dataView.setUint32(16, this.h4);\n    return buffer;\n};\nexport const insecureHash = (message) => {\n    return new Sha1(true).update(message)[\"hex\"]();\n};\n","import { insecureHash } from \"../utils/hash.js\";\nimport { mapStoredMessageToChatMessage } from \"../messages/utils.js\";\n/**\n * This cache key should be consistent across all versions of LangChain.\n * It is currently NOT consistent across versions of LangChain.\n *\n * A huge benefit of having a remote cache (like redis) is that you can\n * access the cache from different processes/machines. The allows you to\n * separate concerns and scale horizontally.\n *\n * TODO: Make cache key consistent across versions of LangChain.\n */\nexport const getCacheKey = (...strings) => insecureHash(strings.join(\"_\"));\nexport function deserializeStoredGeneration(storedGeneration) {\n    if (storedGeneration.message !== undefined) {\n        return {\n            text: storedGeneration.text,\n            message: mapStoredMessageToChatMessage(storedGeneration.message),\n        };\n    }\n    else {\n        return { text: storedGeneration.text };\n    }\n}\nexport function serializeGeneration(generation) {\n    const serializedValue = {\n        text: generation.text,\n    };\n    if (generation.message !== undefined) {\n        serializedValue.message = generation.message.toDict();\n    }\n    return serializedValue;\n}\n/**\n * Base class for all caches. All caches should extend this class.\n */\nexport class BaseCache {\n}\nconst GLOBAL_MAP = new Map();\n/**\n * A cache for storing LLM generations that stores data in memory.\n */\nexport class InMemoryCache extends BaseCache {\n    constructor(map) {\n        super();\n        Object.defineProperty(this, \"cache\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.cache = map ?? new Map();\n    }\n    /**\n     * Retrieves data from the cache using a prompt and an LLM key. If the\n     * data is not found, it returns null.\n     * @param prompt The prompt used to find the data.\n     * @param llmKey The LLM key used to find the data.\n     * @returns The data corresponding to the prompt and LLM key, or null if not found.\n     */\n    lookup(prompt, llmKey) {\n        return Promise.resolve(this.cache.get(getCacheKey(prompt, llmKey)) ?? null);\n    }\n    /**\n     * Updates the cache with new data using a prompt and an LLM key.\n     * @param prompt The prompt used to store the data.\n     * @param llmKey The LLM key used to store the data.\n     * @param value The data to be stored.\n     */\n    async update(prompt, llmKey, value) {\n        this.cache.set(getCacheKey(prompt, llmKey), value);\n    }\n    /**\n     * Returns a global instance of InMemoryCache using a predefined global\n     * map as the initial cache.\n     * @returns A global instance of InMemoryCache.\n     */\n    static global() {\n        return new InMemoryCache(GLOBAL_MAP);\n    }\n}\n","import { Serializable } from \"./load/serializable.js\";\nimport { HumanMessage } from \"./messages/human.js\";\nimport { getBufferString } from \"./messages/utils.js\";\n/**\n * Base PromptValue class. All prompt values should extend this class.\n */\nexport class BasePromptValue extends Serializable {\n}\n/**\n * Represents a prompt value as a string. It extends the BasePromptValue\n * class and overrides the toString and toChatMessages methods.\n */\nexport class StringPromptValue extends BasePromptValue {\n    static lc_name() {\n        return \"StringPromptValue\";\n    }\n    constructor(value) {\n        super({ value });\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"prompt_values\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"value\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.value = value;\n    }\n    toString() {\n        return this.value;\n    }\n    toChatMessages() {\n        return [new HumanMessage(this.value)];\n    }\n}\n/**\n * Class that represents a chat prompt value. It extends the\n * BasePromptValue and includes an array of BaseMessage instances.\n */\nexport class ChatPromptValue extends BasePromptValue {\n    static lc_name() {\n        return \"ChatPromptValue\";\n    }\n    constructor(fields) {\n        if (Array.isArray(fields)) {\n            // eslint-disable-next-line no-param-reassign\n            fields = { messages: fields };\n        }\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"prompt_values\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"messages\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.messages = fields.messages;\n    }\n    toString() {\n        return getBufferString(this.messages);\n    }\n    toChatMessages() {\n        return this.messages;\n    }\n}\n/**\n * Class that represents an image prompt value. It extends the\n * BasePromptValue and includes an ImageURL instance.\n */\nexport class ImagePromptValue extends BasePromptValue {\n    static lc_name() {\n        return \"ImagePromptValue\";\n    }\n    constructor(fields) {\n        if (!(\"imageUrl\" in fields)) {\n            // eslint-disable-next-line no-param-reassign\n            fields = { imageUrl: fields };\n        }\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"prompt_values\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"imageUrl\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /** @ignore */\n        Object.defineProperty(this, \"value\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.imageUrl = fields.imageUrl;\n    }\n    toString() {\n        return this.imageUrl.url;\n    }\n    toChatMessages() {\n        return [\n            new HumanMessage({\n                content: [\n                    {\n                        type: \"image_url\",\n                        image_url: {\n                            detail: this.imageUrl.detail,\n                            url: this.imageUrl.url,\n                        },\n                    },\n                ],\n            }),\n        ];\n    }\n}\n","import base64 from 'base64-js';\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\n\n// src/utils.ts\nfunction never(_) {\n}\nfunction bytePairMerge(piece, ranks) {\n  let parts = Array.from(\n    { length: piece.length },\n    (_, i) => ({ start: i, end: i + 1 })\n  );\n  while (parts.length > 1) {\n    let minRank = null;\n    for (let i = 0; i < parts.length - 1; i++) {\n      const slice = piece.slice(parts[i].start, parts[i + 1].end);\n      const rank = ranks.get(slice.join(\",\"));\n      if (rank == null)\n        continue;\n      if (minRank == null || rank < minRank[0]) {\n        minRank = [rank, i];\n      }\n    }\n    if (minRank != null) {\n      const i = minRank[1];\n      parts[i] = { start: parts[i].start, end: parts[i + 1].end };\n      parts.splice(i + 1, 1);\n    } else {\n      break;\n    }\n  }\n  return parts;\n}\nfunction bytePairEncode(piece, ranks) {\n  if (piece.length === 1)\n    return [ranks.get(piece.join(\",\"))];\n  return bytePairMerge(piece, ranks).map((p) => ranks.get(piece.slice(p.start, p.end).join(\",\"))).filter((x) => x != null);\n}\nfunction escapeRegex(str) {\n  return str.replace(/[\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\");\n}\nvar _Tiktoken = class {\n  /** @internal */\n  specialTokens;\n  /** @internal */\n  inverseSpecialTokens;\n  /** @internal */\n  patStr;\n  /** @internal */\n  textEncoder = new TextEncoder();\n  /** @internal */\n  textDecoder = new TextDecoder(\"utf-8\");\n  /** @internal */\n  rankMap = /* @__PURE__ */ new Map();\n  /** @internal */\n  textMap = /* @__PURE__ */ new Map();\n  constructor(ranks, extendedSpecialTokens) {\n    this.patStr = ranks.pat_str;\n    const uncompressed = ranks.bpe_ranks.split(\"\\n\").filter(Boolean).reduce((memo, x) => {\n      const [_, offsetStr, ...tokens] = x.split(\" \");\n      const offset = Number.parseInt(offsetStr, 10);\n      tokens.forEach((token, i) => memo[token] = offset + i);\n      return memo;\n    }, {});\n    for (const [token, rank] of Object.entries(uncompressed)) {\n      const bytes = base64.toByteArray(token);\n      this.rankMap.set(bytes.join(\",\"), rank);\n      this.textMap.set(rank, bytes);\n    }\n    this.specialTokens = { ...ranks.special_tokens, ...extendedSpecialTokens };\n    this.inverseSpecialTokens = Object.entries(this.specialTokens).reduce((memo, [text, rank]) => {\n      memo[rank] = this.textEncoder.encode(text);\n      return memo;\n    }, {});\n  }\n  encode(text, allowedSpecial = [], disallowedSpecial = \"all\") {\n    const regexes = new RegExp(this.patStr, \"ug\");\n    const specialRegex = _Tiktoken.specialTokenRegex(\n      Object.keys(this.specialTokens)\n    );\n    const ret = [];\n    const allowedSpecialSet = new Set(\n      allowedSpecial === \"all\" ? Object.keys(this.specialTokens) : allowedSpecial\n    );\n    const disallowedSpecialSet = new Set(\n      disallowedSpecial === \"all\" ? Object.keys(this.specialTokens).filter(\n        (x) => !allowedSpecialSet.has(x)\n      ) : disallowedSpecial\n    );\n    if (disallowedSpecialSet.size > 0) {\n      const disallowedSpecialRegex = _Tiktoken.specialTokenRegex([\n        ...disallowedSpecialSet\n      ]);\n      const specialMatch = text.match(disallowedSpecialRegex);\n      if (specialMatch != null) {\n        throw new Error(\n          `The text contains a special token that is not allowed: ${specialMatch[0]}`\n        );\n      }\n    }\n    let start = 0;\n    while (true) {\n      let nextSpecial = null;\n      let startFind = start;\n      while (true) {\n        specialRegex.lastIndex = startFind;\n        nextSpecial = specialRegex.exec(text);\n        if (nextSpecial == null || allowedSpecialSet.has(nextSpecial[0]))\n          break;\n        startFind = nextSpecial.index + 1;\n      }\n      const end = nextSpecial?.index ?? text.length;\n      for (const match of text.substring(start, end).matchAll(regexes)) {\n        const piece = this.textEncoder.encode(match[0]);\n        const token2 = this.rankMap.get(piece.join(\",\"));\n        if (token2 != null) {\n          ret.push(token2);\n          continue;\n        }\n        ret.push(...bytePairEncode(piece, this.rankMap));\n      }\n      if (nextSpecial == null)\n        break;\n      let token = this.specialTokens[nextSpecial[0]];\n      ret.push(token);\n      start = nextSpecial.index + nextSpecial[0].length;\n    }\n    return ret;\n  }\n  decode(tokens) {\n    const res = [];\n    let length = 0;\n    for (let i2 = 0; i2 < tokens.length; ++i2) {\n      const token = tokens[i2];\n      const bytes = this.textMap.get(token) ?? this.inverseSpecialTokens[token];\n      if (bytes != null) {\n        res.push(bytes);\n        length += bytes.length;\n      }\n    }\n    const mergedArray = new Uint8Array(length);\n    let i = 0;\n    for (const bytes of res) {\n      mergedArray.set(bytes, i);\n      i += bytes.length;\n    }\n    return this.textDecoder.decode(mergedArray);\n  }\n};\nvar Tiktoken = _Tiktoken;\n__publicField(Tiktoken, \"specialTokenRegex\", (tokens) => {\n  return new RegExp(tokens.map((i) => escapeRegex(i)).join(\"|\"), \"g\");\n});\nfunction getEncodingNameForModel(model) {\n  switch (model) {\n    case \"gpt2\": {\n      return \"gpt2\";\n    }\n    case \"code-cushman-001\":\n    case \"code-cushman-002\":\n    case \"code-davinci-001\":\n    case \"code-davinci-002\":\n    case \"cushman-codex\":\n    case \"davinci-codex\":\n    case \"davinci-002\":\n    case \"text-davinci-002\":\n    case \"text-davinci-003\": {\n      return \"p50k_base\";\n    }\n    case \"code-davinci-edit-001\":\n    case \"text-davinci-edit-001\": {\n      return \"p50k_edit\";\n    }\n    case \"ada\":\n    case \"babbage\":\n    case \"babbage-002\":\n    case \"code-search-ada-code-001\":\n    case \"code-search-babbage-code-001\":\n    case \"curie\":\n    case \"davinci\":\n    case \"text-ada-001\":\n    case \"text-babbage-001\":\n    case \"text-curie-001\":\n    case \"text-davinci-001\":\n    case \"text-search-ada-doc-001\":\n    case \"text-search-babbage-doc-001\":\n    case \"text-search-curie-doc-001\":\n    case \"text-search-davinci-doc-001\":\n    case \"text-similarity-ada-001\":\n    case \"text-similarity-babbage-001\":\n    case \"text-similarity-curie-001\":\n    case \"text-similarity-davinci-001\": {\n      return \"r50k_base\";\n    }\n    case \"gpt-3.5-turbo-instruct-0914\":\n    case \"gpt-3.5-turbo-instruct\":\n    case \"gpt-3.5-turbo-16k-0613\":\n    case \"gpt-3.5-turbo-16k\":\n    case \"gpt-3.5-turbo-0613\":\n    case \"gpt-3.5-turbo-0301\":\n    case \"gpt-3.5-turbo\":\n    case \"gpt-4-32k-0613\":\n    case \"gpt-4-32k-0314\":\n    case \"gpt-4-32k\":\n    case \"gpt-4-0613\":\n    case \"gpt-4-0314\":\n    case \"gpt-4\":\n    case \"gpt-3.5-turbo-1106\":\n    case \"gpt-35-turbo\":\n    case \"gpt-4-1106-preview\":\n    case \"gpt-4-vision-preview\":\n    case \"gpt-3.5-turbo-0125\":\n    case \"gpt-4-turbo\":\n    case \"gpt-4-turbo-2024-04-09\":\n    case \"gpt-4-turbo-preview\":\n    case \"gpt-4-0125-preview\":\n    case \"text-embedding-ada-002\":\n    case \"text-embedding-3-small\":\n    case \"text-embedding-3-large\": {\n      return \"cl100k_base\";\n    }\n    case \"gpt-4o\":\n    case \"gpt-4o-2024-05-13\":\n    case \"gpt-4o-2024-08-06\":\n    case \"gpt-4o-2024-11-20\":\n    case \"gpt-4o-mini-2024-07-18\":\n    case \"gpt-4o-mini\":\n    case \"gpt-4o-search-preview\":\n    case \"gpt-4o-search-preview-2025-03-11\":\n    case \"gpt-4o-mini-search-preview\":\n    case \"gpt-4o-mini-search-preview-2025-03-11\":\n    case \"gpt-4o-audio-preview\":\n    case \"gpt-4o-audio-preview-2024-12-17\":\n    case \"gpt-4o-audio-preview-2024-10-01\":\n    case \"gpt-4o-mini-audio-preview\":\n    case \"gpt-4o-mini-audio-preview-2024-12-17\":\n    case \"o1\":\n    case \"o1-2024-12-17\":\n    case \"o1-mini\":\n    case \"o1-mini-2024-09-12\":\n    case \"o1-preview\":\n    case \"o1-preview-2024-09-12\":\n    case \"o1-pro\":\n    case \"o1-pro-2025-03-19\":\n    case \"o3\":\n    case \"o3-2025-04-16\":\n    case \"o3-mini\":\n    case \"o3-mini-2025-01-31\":\n    case \"o4-mini\":\n    case \"o4-mini-2025-04-16\":\n    case \"chatgpt-4o-latest\":\n    case \"gpt-4o-realtime\":\n    case \"gpt-4o-realtime-preview-2024-10-01\":\n    case \"gpt-4o-realtime-preview-2024-12-17\":\n    case \"gpt-4o-mini-realtime-preview\":\n    case \"gpt-4o-mini-realtime-preview-2024-12-17\":\n    case \"gpt-4.1\":\n    case \"gpt-4.1-2025-04-14\":\n    case \"gpt-4.1-mini\":\n    case \"gpt-4.1-mini-2025-04-14\":\n    case \"gpt-4.1-nano\":\n    case \"gpt-4.1-nano-2025-04-14\":\n    case \"gpt-4.5-preview\":\n    case \"gpt-4.5-preview-2025-02-27\": {\n      return \"o200k_base\";\n    }\n    default:\n      throw new Error(\"Unknown model\");\n  }\n}\n\nexport { Tiktoken, getEncodingNameForModel, never };\n","import { Tiktoken, getEncodingNameForModel, } from \"js-tiktoken/lite\";\nimport { AsyncCaller } from \"./async_caller.js\";\nconst cache = {};\nconst caller = /* #__PURE__ */ new AsyncCaller({});\nexport async function getEncoding(encoding) {\n    if (!(encoding in cache)) {\n        cache[encoding] = caller\n            .fetch(`https://tiktoken.pages.dev/js/${encoding}.json`)\n            .then((res) => res.json())\n            .then((data) => new Tiktoken(data))\n            .catch((e) => {\n            delete cache[encoding];\n            throw e;\n        });\n    }\n    return await cache[encoding];\n}\nexport async function encodingForModel(model) {\n    return getEncoding(getEncodingNameForModel(model));\n}\n","import { InMemoryCache } from \"../caches/base.js\";\nimport { StringPromptValue, ChatPromptValue, } from \"../prompt_values.js\";\nimport { coerceMessageLikeToMessage } from \"../messages/utils.js\";\nimport { AsyncCaller } from \"../utils/async_caller.js\";\nimport { encodingForModel } from \"../utils/tiktoken.js\";\nimport { Runnable } from \"../runnables/base.js\";\n// https://www.npmjs.com/package/js-tiktoken\nexport const getModelNameForTiktoken = (modelName) => {\n    if (modelName.startsWith(\"gpt-3.5-turbo-16k\")) {\n        return \"gpt-3.5-turbo-16k\";\n    }\n    if (modelName.startsWith(\"gpt-3.5-turbo-\")) {\n        return \"gpt-3.5-turbo\";\n    }\n    if (modelName.startsWith(\"gpt-4-32k\")) {\n        return \"gpt-4-32k\";\n    }\n    if (modelName.startsWith(\"gpt-4-\")) {\n        return \"gpt-4\";\n    }\n    if (modelName.startsWith(\"gpt-4o\")) {\n        return \"gpt-4o\";\n    }\n    return modelName;\n};\nexport const getEmbeddingContextSize = (modelName) => {\n    switch (modelName) {\n        case \"text-embedding-ada-002\":\n            return 8191;\n        default:\n            return 2046;\n    }\n};\nexport const getModelContextSize = (modelName) => {\n    switch (getModelNameForTiktoken(modelName)) {\n        case \"gpt-3.5-turbo-16k\":\n            return 16384;\n        case \"gpt-3.5-turbo\":\n            return 4096;\n        case \"gpt-4-32k\":\n            return 32768;\n        case \"gpt-4\":\n            return 8192;\n        case \"text-davinci-003\":\n            return 4097;\n        case \"text-curie-001\":\n            return 2048;\n        case \"text-babbage-001\":\n            return 2048;\n        case \"text-ada-001\":\n            return 2048;\n        case \"code-davinci-002\":\n            return 8000;\n        case \"code-cushman-001\":\n            return 2048;\n        default:\n            return 4097;\n    }\n};\n/**\n * Whether or not the input matches the OpenAI tool definition.\n * @param {unknown} tool The input to check.\n * @returns {boolean} Whether the input is an OpenAI tool definition.\n */\nexport function isOpenAITool(tool) {\n    if (typeof tool !== \"object\" || !tool)\n        return false;\n    if (\"type\" in tool &&\n        tool.type === \"function\" &&\n        \"function\" in tool &&\n        typeof tool.function === \"object\" &&\n        tool.function &&\n        \"name\" in tool.function &&\n        \"parameters\" in tool.function) {\n        return true;\n    }\n    return false;\n}\nexport const calculateMaxTokens = async ({ prompt, modelName, }) => {\n    let numTokens;\n    try {\n        numTokens = (await encodingForModel(getModelNameForTiktoken(modelName))).encode(prompt).length;\n    }\n    catch (error) {\n        console.warn(\"Failed to calculate number of tokens, falling back to approximate count\");\n        // fallback to approximate calculation if tiktoken is not available\n        // each token is ~4 characters: https://help.openai.com/en/articles/4936856-what-are-tokens-and-how-to-count-them#\n        numTokens = Math.ceil(prompt.length / 4);\n    }\n    const maxTokens = getModelContextSize(modelName);\n    return maxTokens - numTokens;\n};\nconst getVerbosity = () => false;\n/**\n * Base class for language models, chains, tools.\n */\nexport class BaseLangChain extends Runnable {\n    get lc_attributes() {\n        return {\n            callbacks: undefined,\n            verbose: undefined,\n        };\n    }\n    constructor(params) {\n        super(params);\n        /**\n         * Whether to print out response text.\n         */\n        Object.defineProperty(this, \"verbose\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"callbacks\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"tags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"metadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.verbose = params.verbose ?? getVerbosity();\n        this.callbacks = params.callbacks;\n        this.tags = params.tags ?? [];\n        this.metadata = params.metadata ?? {};\n    }\n}\n/**\n * Base class for language models.\n */\nexport class BaseLanguageModel extends BaseLangChain {\n    /**\n     * Keys that the language model accepts as call options.\n     */\n    get callKeys() {\n        return [\"stop\", \"timeout\", \"signal\", \"tags\", \"metadata\", \"callbacks\"];\n    }\n    constructor({ callbacks, callbackManager, ...params }) {\n        const { cache, ...rest } = params;\n        super({\n            callbacks: callbacks ?? callbackManager,\n            ...rest,\n        });\n        /**\n         * The async caller should be used by subclasses to make any async calls,\n         * which will thus benefit from the concurrency and retry logic.\n         */\n        Object.defineProperty(this, \"caller\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"cache\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_encoding\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        if (typeof cache === \"object\") {\n            this.cache = cache;\n        }\n        else if (cache) {\n            this.cache = InMemoryCache.global();\n        }\n        else {\n            this.cache = undefined;\n        }\n        this.caller = new AsyncCaller(params ?? {});\n    }\n    async getNumTokens(content) {\n        // TODO: Figure out correct value.\n        if (typeof content !== \"string\") {\n            return 0;\n        }\n        // fallback to approximate calculation if tiktoken is not available\n        let numTokens = Math.ceil(content.length / 4);\n        if (!this._encoding) {\n            try {\n                this._encoding = await encodingForModel(\"modelName\" in this\n                    ? getModelNameForTiktoken(this.modelName)\n                    : \"gpt2\");\n            }\n            catch (error) {\n                console.warn(\"Failed to calculate number of tokens, falling back to approximate count\", error);\n            }\n        }\n        if (this._encoding) {\n            try {\n                numTokens = this._encoding.encode(content).length;\n            }\n            catch (error) {\n                console.warn(\"Failed to calculate number of tokens, falling back to approximate count\", error);\n            }\n        }\n        return numTokens;\n    }\n    static _convertInputToPromptValue(input) {\n        if (typeof input === \"string\") {\n            return new StringPromptValue(input);\n        }\n        else if (Array.isArray(input)) {\n            return new ChatPromptValue(input.map(coerceMessageLikeToMessage));\n        }\n        else {\n            return input;\n        }\n    }\n    /**\n     * Get the identifying parameters of the LLM.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    _identifyingParams() {\n        return {};\n    }\n    /**\n     * Create a unique cache key for a specific call to a specific language model.\n     * @param callOptions Call options for the model\n     * @returns A unique cache key.\n     */\n    _getSerializedCacheKeyParametersForCall(\n    // TODO: Fix when we remove the RunnableLambda backwards compatibility shim.\n    { config, ...callOptions }) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const params = {\n            ...this._identifyingParams(),\n            ...callOptions,\n            _type: this._llmType(),\n            _model: this._modelType(),\n        };\n        const filteredEntries = Object.entries(params).filter(([_, value]) => value !== undefined);\n        const serializedEntries = filteredEntries\n            .map(([key, value]) => `${key}:${JSON.stringify(value)}`)\n            .sort()\n            .join(\",\");\n        return serializedEntries;\n    }\n    /**\n     * @deprecated\n     * Return a json-like object representing this LLM.\n     */\n    serialize() {\n        return {\n            ...this._identifyingParams(),\n            _type: this._llmType(),\n            _model: this._modelType(),\n        };\n    }\n    /**\n     * @deprecated\n     * Load an LLM from a json-like object describing it.\n     */\n    static async deserialize(_data) {\n        throw new Error(\"Use .toJSON() instead\");\n    }\n}\n","import { concat } from \"../utils/stream.js\";\nimport { Runnable, RunnableAssign, RunnableMap, } from \"./base.js\";\nimport { ensureConfig } from \"./config.js\";\n/**\n * A runnable to passthrough inputs unchanged or with additional keys.\n *\n * This runnable behaves almost like the identity function, except that it\n * can be configured to add additional keys to the output, if the input is\n * an object.\n *\n * The example below demonstrates how to use `RunnablePassthrough to\n * passthrough the input from the `.invoke()`\n *\n * @example\n * ```typescript\n * const chain = RunnableSequence.from([\n *   {\n *     question: new RunnablePassthrough(),\n *     context: async () => loadContextFromStore(),\n *   },\n *   prompt,\n *   llm,\n *   outputParser,\n * ]);\n * const response = await chain.invoke(\n *   \"I can pass a single string instead of an object since I'm using `RunnablePassthrough`.\"\n * );\n * ```\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport class RunnablePassthrough extends Runnable {\n    static lc_name() {\n        return \"RunnablePassthrough\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"runnables\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"func\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        if (fields) {\n            this.func = fields.func;\n        }\n    }\n    async invoke(input, options) {\n        const config = ensureConfig(options);\n        if (this.func) {\n            await this.func(input, config);\n        }\n        return this._callWithConfig((input) => Promise.resolve(input), input, config);\n    }\n    async *transform(generator, options) {\n        const config = ensureConfig(options);\n        let finalOutput;\n        let finalOutputSupported = true;\n        for await (const chunk of this._transformStreamWithConfig(generator, (input) => input, config)) {\n            yield chunk;\n            if (finalOutputSupported) {\n                if (finalOutput === undefined) {\n                    finalOutput = chunk;\n                }\n                else {\n                    try {\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        finalOutput = concat(finalOutput, chunk);\n                    }\n                    catch {\n                        finalOutput = undefined;\n                        finalOutputSupported = false;\n                    }\n                }\n            }\n        }\n        if (this.func && finalOutput !== undefined) {\n            await this.func(finalOutput, config);\n        }\n    }\n    /**\n     * A runnable that assigns key-value pairs to the input.\n     *\n     * The example below shows how you could use it with an inline function.\n     *\n     * @example\n     * ```typescript\n     * const prompt =\n     *   PromptTemplate.fromTemplate(`Write a SQL query to answer the question using the following schema: {schema}\n     * Question: {question}\n     * SQL Query:`);\n     *\n     * // The `RunnablePassthrough.assign()` is used here to passthrough the input from the `.invoke()`\n     * // call (in this example it's the question), along with any inputs passed to the `.assign()` method.\n     * // In this case, we're passing the schema.\n     * const sqlQueryGeneratorChain = RunnableSequence.from([\n     *   RunnablePassthrough.assign({\n     *     schema: async () => db.getTableInfo(),\n     *   }),\n     *   prompt,\n     *   new ChatOpenAI({}).bind({ stop: [\"\\nSQLResult:\"] }),\n     *   new StringOutputParser(),\n     * ]);\n     * const result = await sqlQueryGeneratorChain.invoke({\n     *   question: \"How many employees are there?\",\n     * });\n     * ```\n     */\n    static assign(mapping) {\n        return new RunnableAssign(new RunnableMap({ steps: mapping }));\n    }\n}\n","import { z } from \"zod\";\n/**\n * Given either a Zod schema, or plain object, determine if the input is a Zod schema.\n *\n * @param {z.ZodType<RunOutput> | Record<string, unknown>} input\n * @returns {boolean} Whether or not the provided input is a Zod schema.\n */\nexport function isZodSchema(input) {\n    if (!input) {\n        return false;\n    }\n    if (typeof input !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(input)) {\n        return false;\n    }\n    const asZodSchema = input;\n    // relies on an internal property of Zod schemas, so this may break in the future, hence the\n    // additional fallback checks below\n    if (asZodSchema._def) {\n        return true;\n    }\n    const zodFirstPartyTypeKinds = Object.values(z.ZodFirstPartyTypeKind);\n    if (zodFirstPartyTypeKinds.includes(asZodSchema.constructor?.name ?? \"NOT_INCLUDED\")) {\n        return true;\n    }\n    // if all else fails, assume based on the presence of parse, parseAsync, safeParse, and\n    // safeParseAsync, as these are characteristic of Zod schemas\n    return (typeof asZodSchema.parse === \"function\" &&\n        typeof asZodSchema.parseAsync === \"function\" &&\n        typeof asZodSchema.safeParse === \"function\" &&\n        typeof asZodSchema.safeParseAsync === \"function\");\n}\n","import { zodToJsonSchema } from \"zod-to-json-schema\";\nimport { AIMessage, HumanMessage, coerceMessageLikeToMessage, isAIMessageChunk, isBaseMessage, isAIMessage, convertToOpenAIImageBlock, isURLContentBlock, isBase64ContentBlock, } from \"../messages/index.js\";\nimport { RUN_KEY, } from \"../outputs.js\";\nimport { BaseLanguageModel, } from \"./base.js\";\nimport { CallbackManager, } from \"../callbacks/manager.js\";\nimport { RunnableLambda, RunnableSequence, } from \"../runnables/base.js\";\nimport { concat } from \"../utils/stream.js\";\nimport { RunnablePassthrough } from \"../runnables/passthrough.js\";\nimport { isZodSchema } from \"../utils/types/is_zod_schema.js\";\nimport { callbackHandlerPrefersStreaming } from \"../callbacks/base.js\";\n/**\n * Creates a transform stream for encoding chat message chunks.\n * @deprecated Use {@link BytesOutputParser} instead\n * @returns A TransformStream instance that encodes chat message chunks.\n */\nexport function createChatMessageChunkEncoderStream() {\n    const textEncoder = new TextEncoder();\n    return new TransformStream({\n        transform(chunk, controller) {\n            controller.enqueue(textEncoder.encode(typeof chunk.content === \"string\"\n                ? chunk.content\n                : JSON.stringify(chunk.content)));\n        },\n    });\n}\nfunction _formatForTracing(messages) {\n    const messagesToTrace = [];\n    for (const message of messages) {\n        let messageToTrace = message;\n        if (Array.isArray(message.content)) {\n            for (let idx = 0; idx < message.content.length; idx++) {\n                const block = message.content[idx];\n                if (isURLContentBlock(block) || isBase64ContentBlock(block)) {\n                    if (messageToTrace === message) {\n                        // Also shallow-copy content\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        messageToTrace = new message.constructor({\n                            ...messageToTrace,\n                            content: [\n                                ...message.content.slice(0, idx),\n                                convertToOpenAIImageBlock(block),\n                                ...message.content.slice(idx + 1),\n                            ],\n                        });\n                    }\n                }\n            }\n        }\n        messagesToTrace.push(messageToTrace);\n    }\n    return messagesToTrace;\n}\n/**\n * Base class for chat models. It extends the BaseLanguageModel class and\n * provides methods for generating chat based on input messages.\n */\nexport class BaseChatModel extends BaseLanguageModel {\n    constructor(fields) {\n        super(fields);\n        // Only ever instantiated in main LangChain\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"chat_models\", this._llmType()]\n        });\n        Object.defineProperty(this, \"disableStreaming\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n    }\n    _separateRunnableConfigFromCallOptionsCompat(options) {\n        // For backwards compat, keep `signal` in both runnableConfig and callOptions\n        const [runnableConfig, callOptions] = super._separateRunnableConfigFromCallOptions(options);\n        callOptions.signal = runnableConfig.signal;\n        return [runnableConfig, callOptions];\n    }\n    /**\n     * Invokes the chat model with a single input.\n     * @param input The input for the language model.\n     * @param options The call options.\n     * @returns A Promise that resolves to a BaseMessageChunk.\n     */\n    async invoke(input, options) {\n        const promptValue = BaseChatModel._convertInputToPromptValue(input);\n        const result = await this.generatePrompt([promptValue], options, options?.callbacks);\n        const chatGeneration = result.generations[0][0];\n        // TODO: Remove cast after figuring out inheritance\n        return chatGeneration.message;\n    }\n    // eslint-disable-next-line require-yield\n    async *_streamResponseChunks(_messages, _options, _runManager) {\n        throw new Error(\"Not implemented.\");\n    }\n    async *_streamIterator(input, options) {\n        // Subclass check required to avoid double callbacks with default implementation\n        if (this._streamResponseChunks ===\n            BaseChatModel.prototype._streamResponseChunks ||\n            this.disableStreaming) {\n            yield this.invoke(input, options);\n        }\n        else {\n            const prompt = BaseChatModel._convertInputToPromptValue(input);\n            const messages = prompt.toChatMessages();\n            const [runnableConfig, callOptions] = this._separateRunnableConfigFromCallOptionsCompat(options);\n            const inheritableMetadata = {\n                ...runnableConfig.metadata,\n                ...this.getLsParams(callOptions),\n            };\n            const callbackManager_ = await CallbackManager.configure(runnableConfig.callbacks, this.callbacks, runnableConfig.tags, this.tags, inheritableMetadata, this.metadata, { verbose: this.verbose });\n            const extra = {\n                options: callOptions,\n                invocation_params: this?.invocationParams(callOptions),\n                batch_size: 1,\n            };\n            const runManagers = await callbackManager_?.handleChatModelStart(this.toJSON(), [_formatForTracing(messages)], runnableConfig.runId, undefined, extra, undefined, undefined, runnableConfig.runName);\n            let generationChunk;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            let llmOutput;\n            try {\n                for await (const chunk of this._streamResponseChunks(messages, callOptions, runManagers?.[0])) {\n                    if (chunk.message.id == null) {\n                        const runId = runManagers?.at(0)?.runId;\n                        if (runId != null)\n                            chunk.message._updateId(`run-${runId}`);\n                    }\n                    chunk.message.response_metadata = {\n                        ...chunk.generationInfo,\n                        ...chunk.message.response_metadata,\n                    };\n                    yield chunk.message;\n                    if (!generationChunk) {\n                        generationChunk = chunk;\n                    }\n                    else {\n                        generationChunk = generationChunk.concat(chunk);\n                    }\n                    if (isAIMessageChunk(chunk.message) &&\n                        chunk.message.usage_metadata !== undefined) {\n                        llmOutput = {\n                            tokenUsage: {\n                                promptTokens: chunk.message.usage_metadata.input_tokens,\n                                completionTokens: chunk.message.usage_metadata.output_tokens,\n                                totalTokens: chunk.message.usage_metadata.total_tokens,\n                            },\n                        };\n                    }\n                }\n            }\n            catch (err) {\n                await Promise.all((runManagers ?? []).map((runManager) => runManager?.handleLLMError(err)));\n                throw err;\n            }\n            await Promise.all((runManagers ?? []).map((runManager) => runManager?.handleLLMEnd({\n                // TODO: Remove cast after figuring out inheritance\n                generations: [[generationChunk]],\n                llmOutput,\n            })));\n        }\n    }\n    getLsParams(options) {\n        const providerName = this.getName().startsWith(\"Chat\")\n            ? this.getName().replace(\"Chat\", \"\")\n            : this.getName();\n        return {\n            ls_model_type: \"chat\",\n            ls_stop: options.stop,\n            ls_provider: providerName,\n        };\n    }\n    /** @ignore */\n    async _generateUncached(messages, parsedOptions, handledOptions, startedRunManagers) {\n        const baseMessages = messages.map((messageList) => messageList.map(coerceMessageLikeToMessage));\n        let runManagers;\n        if (startedRunManagers !== undefined &&\n            startedRunManagers.length === baseMessages.length) {\n            runManagers = startedRunManagers;\n        }\n        else {\n            const inheritableMetadata = {\n                ...handledOptions.metadata,\n                ...this.getLsParams(parsedOptions),\n            };\n            // create callback manager and start run\n            const callbackManager_ = await CallbackManager.configure(handledOptions.callbacks, this.callbacks, handledOptions.tags, this.tags, inheritableMetadata, this.metadata, { verbose: this.verbose });\n            const extra = {\n                options: parsedOptions,\n                invocation_params: this?.invocationParams(parsedOptions),\n                batch_size: 1,\n            };\n            runManagers = await callbackManager_?.handleChatModelStart(this.toJSON(), baseMessages.map(_formatForTracing), handledOptions.runId, undefined, extra, undefined, undefined, handledOptions.runName);\n        }\n        const generations = [];\n        const llmOutputs = [];\n        // Even if stream is not explicitly called, check if model is implicitly\n        // called from streamEvents() or streamLog() to get all streamed events.\n        // Bail out if _streamResponseChunks not overridden\n        const hasStreamingHandler = !!runManagers?.[0].handlers.find(callbackHandlerPrefersStreaming);\n        if (hasStreamingHandler &&\n            !this.disableStreaming &&\n            baseMessages.length === 1 &&\n            this._streamResponseChunks !==\n                BaseChatModel.prototype._streamResponseChunks) {\n            try {\n                const stream = await this._streamResponseChunks(baseMessages[0], parsedOptions, runManagers?.[0]);\n                let aggregated;\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                let llmOutput;\n                for await (const chunk of stream) {\n                    if (chunk.message.id == null) {\n                        const runId = runManagers?.at(0)?.runId;\n                        if (runId != null)\n                            chunk.message._updateId(`run-${runId}`);\n                    }\n                    if (aggregated === undefined) {\n                        aggregated = chunk;\n                    }\n                    else {\n                        aggregated = concat(aggregated, chunk);\n                    }\n                    if (isAIMessageChunk(chunk.message) &&\n                        chunk.message.usage_metadata !== undefined) {\n                        llmOutput = {\n                            tokenUsage: {\n                                promptTokens: chunk.message.usage_metadata.input_tokens,\n                                completionTokens: chunk.message.usage_metadata.output_tokens,\n                                totalTokens: chunk.message.usage_metadata.total_tokens,\n                            },\n                        };\n                    }\n                }\n                if (aggregated === undefined) {\n                    throw new Error(\"Received empty response from chat model call.\");\n                }\n                generations.push([aggregated]);\n                await runManagers?.[0].handleLLMEnd({\n                    generations,\n                    llmOutput,\n                });\n            }\n            catch (e) {\n                await runManagers?.[0].handleLLMError(e);\n                throw e;\n            }\n        }\n        else {\n            // generate results\n            const results = await Promise.allSettled(baseMessages.map((messageList, i) => this._generate(messageList, { ...parsedOptions, promptIndex: i }, runManagers?.[i])));\n            // handle results\n            await Promise.all(results.map(async (pResult, i) => {\n                if (pResult.status === \"fulfilled\") {\n                    const result = pResult.value;\n                    for (const generation of result.generations) {\n                        if (generation.message.id == null) {\n                            const runId = runManagers?.at(0)?.runId;\n                            if (runId != null)\n                                generation.message._updateId(`run-${runId}`);\n                        }\n                        generation.message.response_metadata = {\n                            ...generation.generationInfo,\n                            ...generation.message.response_metadata,\n                        };\n                    }\n                    if (result.generations.length === 1) {\n                        result.generations[0].message.response_metadata = {\n                            ...result.llmOutput,\n                            ...result.generations[0].message.response_metadata,\n                        };\n                    }\n                    generations[i] = result.generations;\n                    llmOutputs[i] = result.llmOutput;\n                    return runManagers?.[i]?.handleLLMEnd({\n                        generations: [result.generations],\n                        llmOutput: result.llmOutput,\n                    });\n                }\n                else {\n                    // status === \"rejected\"\n                    await runManagers?.[i]?.handleLLMError(pResult.reason);\n                    return Promise.reject(pResult.reason);\n                }\n            }));\n        }\n        // create combined output\n        const output = {\n            generations,\n            llmOutput: llmOutputs.length\n                ? this._combineLLMOutput?.(...llmOutputs)\n                : undefined,\n        };\n        Object.defineProperty(output, RUN_KEY, {\n            value: runManagers\n                ? { runIds: runManagers?.map((manager) => manager.runId) }\n                : undefined,\n            configurable: true,\n        });\n        return output;\n    }\n    async _generateCached({ messages, cache, llmStringKey, parsedOptions, handledOptions, }) {\n        const baseMessages = messages.map((messageList) => messageList.map(coerceMessageLikeToMessage));\n        const inheritableMetadata = {\n            ...handledOptions.metadata,\n            ...this.getLsParams(parsedOptions),\n        };\n        // create callback manager and start run\n        const callbackManager_ = await CallbackManager.configure(handledOptions.callbacks, this.callbacks, handledOptions.tags, this.tags, inheritableMetadata, this.metadata, { verbose: this.verbose });\n        const extra = {\n            options: parsedOptions,\n            invocation_params: this?.invocationParams(parsedOptions),\n            batch_size: 1,\n        };\n        const runManagers = await callbackManager_?.handleChatModelStart(this.toJSON(), baseMessages.map(_formatForTracing), handledOptions.runId, undefined, extra, undefined, undefined, handledOptions.runName);\n        // generate results\n        const missingPromptIndices = [];\n        const results = await Promise.allSettled(baseMessages.map(async (baseMessage, index) => {\n            // Join all content into one string for the prompt index\n            const prompt = BaseChatModel._convertInputToPromptValue(baseMessage).toString();\n            const result = await cache.lookup(prompt, llmStringKey);\n            if (result == null) {\n                missingPromptIndices.push(index);\n            }\n            return result;\n        }));\n        // Map run managers to the results before filtering out null results\n        // Null results are just absent from the cache.\n        const cachedResults = results\n            .map((result, index) => ({ result, runManager: runManagers?.[index] }))\n            .filter(({ result }) => (result.status === \"fulfilled\" && result.value != null) ||\n            result.status === \"rejected\");\n        // Handle results and call run managers\n        const generations = [];\n        await Promise.all(cachedResults.map(async ({ result: promiseResult, runManager }, i) => {\n            if (promiseResult.status === \"fulfilled\") {\n                const result = promiseResult.value;\n                generations[i] = result.map((result) => {\n                    if (\"message\" in result &&\n                        isBaseMessage(result.message) &&\n                        isAIMessage(result.message)) {\n                        // eslint-disable-next-line no-param-reassign\n                        result.message.usage_metadata = {\n                            input_tokens: 0,\n                            output_tokens: 0,\n                            total_tokens: 0,\n                        };\n                    }\n                    // eslint-disable-next-line no-param-reassign\n                    result.generationInfo = {\n                        ...result.generationInfo,\n                        tokenUsage: {},\n                    };\n                    return result;\n                });\n                if (result.length) {\n                    await runManager?.handleLLMNewToken(result[0].text);\n                }\n                return runManager?.handleLLMEnd({\n                    generations: [result],\n                }, undefined, undefined, undefined, {\n                    cached: true,\n                });\n            }\n            else {\n                // status === \"rejected\"\n                await runManager?.handleLLMError(promiseResult.reason, undefined, undefined, undefined, {\n                    cached: true,\n                });\n                return Promise.reject(promiseResult.reason);\n            }\n        }));\n        const output = {\n            generations,\n            missingPromptIndices,\n            startedRunManagers: runManagers,\n        };\n        // This defines RUN_KEY as a non-enumerable property on the output object\n        // so that it is not serialized when the output is stringified, and so that\n        // it isnt included when listing the keys of the output object.\n        Object.defineProperty(output, RUN_KEY, {\n            value: runManagers\n                ? { runIds: runManagers?.map((manager) => manager.runId) }\n                : undefined,\n            configurable: true,\n        });\n        return output;\n    }\n    /**\n     * Generates chat based on the input messages.\n     * @param messages An array of arrays of BaseMessage instances.\n     * @param options The call options or an array of stop sequences.\n     * @param callbacks The callbacks for the language model.\n     * @returns A Promise that resolves to an LLMResult.\n     */\n    async generate(messages, options, callbacks) {\n        // parse call options\n        let parsedOptions;\n        if (Array.isArray(options)) {\n            parsedOptions = { stop: options };\n        }\n        else {\n            parsedOptions = options;\n        }\n        const baseMessages = messages.map((messageList) => messageList.map(coerceMessageLikeToMessage));\n        const [runnableConfig, callOptions] = this._separateRunnableConfigFromCallOptionsCompat(parsedOptions);\n        runnableConfig.callbacks = runnableConfig.callbacks ?? callbacks;\n        if (!this.cache) {\n            return this._generateUncached(baseMessages, callOptions, runnableConfig);\n        }\n        const { cache } = this;\n        const llmStringKey = this._getSerializedCacheKeyParametersForCall(callOptions);\n        const { generations, missingPromptIndices, startedRunManagers } = await this._generateCached({\n            messages: baseMessages,\n            cache,\n            llmStringKey,\n            parsedOptions: callOptions,\n            handledOptions: runnableConfig,\n        });\n        let llmOutput = {};\n        if (missingPromptIndices.length > 0) {\n            const results = await this._generateUncached(missingPromptIndices.map((i) => baseMessages[i]), callOptions, runnableConfig, startedRunManagers !== undefined\n                ? missingPromptIndices.map((i) => startedRunManagers?.[i])\n                : undefined);\n            await Promise.all(results.generations.map(async (generation, index) => {\n                const promptIndex = missingPromptIndices[index];\n                generations[promptIndex] = generation;\n                // Join all content into one string for the prompt index\n                const prompt = BaseChatModel._convertInputToPromptValue(baseMessages[promptIndex]).toString();\n                return cache.update(prompt, llmStringKey, generation);\n            }));\n            llmOutput = results.llmOutput ?? {};\n        }\n        return { generations, llmOutput };\n    }\n    /**\n     * Get the parameters used to invoke the model\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    invocationParams(_options) {\n        return {};\n    }\n    _modelType() {\n        return \"base_chat_model\";\n    }\n    /**\n     * @deprecated\n     * Return a json-like object representing this LLM.\n     */\n    serialize() {\n        return {\n            ...this.invocationParams(),\n            _type: this._llmType(),\n            _model: this._modelType(),\n        };\n    }\n    /**\n     * Generates a prompt based on the input prompt values.\n     * @param promptValues An array of BasePromptValue instances.\n     * @param options The call options or an array of stop sequences.\n     * @param callbacks The callbacks for the language model.\n     * @returns A Promise that resolves to an LLMResult.\n     */\n    async generatePrompt(promptValues, options, callbacks) {\n        const promptMessages = promptValues.map((promptValue) => promptValue.toChatMessages());\n        return this.generate(promptMessages, options, callbacks);\n    }\n    /**\n     * @deprecated Use .invoke() instead. Will be removed in 0.2.0.\n     *\n     * Makes a single call to the chat model.\n     * @param messages An array of BaseMessage instances.\n     * @param options The call options or an array of stop sequences.\n     * @param callbacks The callbacks for the language model.\n     * @returns A Promise that resolves to a BaseMessage.\n     */\n    async call(messages, options, callbacks) {\n        const result = await this.generate([messages.map(coerceMessageLikeToMessage)], options, callbacks);\n        const generations = result.generations;\n        return generations[0][0].message;\n    }\n    /**\n     * @deprecated Use .invoke() instead. Will be removed in 0.2.0.\n     *\n     * Makes a single call to the chat model with a prompt value.\n     * @param promptValue The value of the prompt.\n     * @param options The call options or an array of stop sequences.\n     * @param callbacks The callbacks for the language model.\n     * @returns A Promise that resolves to a BaseMessage.\n     */\n    async callPrompt(promptValue, options, callbacks) {\n        const promptMessages = promptValue.toChatMessages();\n        return this.call(promptMessages, options, callbacks);\n    }\n    /**\n     * @deprecated Use .invoke() instead. Will be removed in 0.2.0.\n     *\n     * Predicts the next message based on the input messages.\n     * @param messages An array of BaseMessage instances.\n     * @param options The call options or an array of stop sequences.\n     * @param callbacks The callbacks for the language model.\n     * @returns A Promise that resolves to a BaseMessage.\n     */\n    async predictMessages(messages, options, callbacks) {\n        return this.call(messages, options, callbacks);\n    }\n    /**\n     * @deprecated Use .invoke() instead. Will be removed in 0.2.0.\n     *\n     * Predicts the next message based on a text input.\n     * @param text The text input.\n     * @param options The call options or an array of stop sequences.\n     * @param callbacks The callbacks for the language model.\n     * @returns A Promise that resolves to a string.\n     */\n    async predict(text, options, callbacks) {\n        const message = new HumanMessage(text);\n        const result = await this.call([message], options, callbacks);\n        if (typeof result.content !== \"string\") {\n            throw new Error(\"Cannot use predict when output is not a string.\");\n        }\n        return result.content;\n    }\n    withStructuredOutput(outputSchema, config) {\n        if (typeof this.bindTools !== \"function\") {\n            throw new Error(`Chat model must implement \".bindTools()\" to use withStructuredOutput.`);\n        }\n        if (config?.strict) {\n            throw new Error(`\"strict\" mode is not supported for this model by default.`);\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const schema = outputSchema;\n        const name = config?.name;\n        const description = schema.description ?? \"A function available to call.\";\n        const method = config?.method;\n        const includeRaw = config?.includeRaw;\n        if (method === \"jsonMode\") {\n            throw new Error(`Base withStructuredOutput implementation only supports \"functionCalling\" as a method.`);\n        }\n        let functionName = name ?? \"extract\";\n        let tools;\n        if (isZodSchema(schema)) {\n            tools = [\n                {\n                    type: \"function\",\n                    function: {\n                        name: functionName,\n                        description,\n                        parameters: zodToJsonSchema(schema),\n                    },\n                },\n            ];\n        }\n        else {\n            if (\"name\" in schema) {\n                functionName = schema.name;\n            }\n            tools = [\n                {\n                    type: \"function\",\n                    function: {\n                        name: functionName,\n                        description,\n                        parameters: schema,\n                    },\n                },\n            ];\n        }\n        const llm = this.bindTools(tools);\n        const outputParser = RunnableLambda.from((input) => {\n            if (!input.tool_calls || input.tool_calls.length === 0) {\n                throw new Error(\"No tool calls found in the response.\");\n            }\n            const toolCall = input.tool_calls.find((tc) => tc.name === functionName);\n            if (!toolCall) {\n                throw new Error(`No tool call found with name ${functionName}.`);\n            }\n            return toolCall.args;\n        });\n        if (!includeRaw) {\n            return llm.pipe(outputParser).withConfig({\n                runName: \"StructuredOutput\",\n            });\n        }\n        const parserAssign = RunnablePassthrough.assign({\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            parsed: (input, config) => outputParser.invoke(input.raw, config),\n        });\n        const parserNone = RunnablePassthrough.assign({\n            parsed: () => null,\n        });\n        const parsedWithFallback = parserAssign.withFallbacks({\n            fallbacks: [parserNone],\n        });\n        return RunnableSequence.from([\n            {\n                raw: llm,\n            },\n            parsedWithFallback,\n        ]).withConfig({\n            runName: \"StructuredOutputRunnable\",\n        });\n    }\n}\n/**\n * An abstract class that extends BaseChatModel and provides a simple\n * implementation of _generate.\n */\nexport class SimpleChatModel extends BaseChatModel {\n    async _generate(messages, options, runManager) {\n        const text = await this._call(messages, options, runManager);\n        const message = new AIMessage(text);\n        if (typeof message.content !== \"string\") {\n            throw new Error(\"Cannot generate with a simple chat model when output is not a string.\");\n        }\n        return {\n            generations: [\n                {\n                    text: message.content,\n                    message,\n                },\n            ],\n        };\n    }\n}\n","import { Runnable } from \"../runnables/index.js\";\nimport { addLangChainErrorFields } from \"../errors/index.js\";\n/**\n * Abstract base class for parsing the output of a Large Language Model\n * (LLM) call. It provides methods for parsing the result of an LLM call\n * and invoking the parser with a given input.\n */\nexport class BaseLLMOutputParser extends Runnable {\n    /**\n     * Parses the result of an LLM call with a given prompt. By default, it\n     * simply calls `parseResult`.\n     * @param generations The generations from an LLM call.\n     * @param _prompt The prompt used in the LLM call.\n     * @param callbacks Optional callbacks.\n     * @returns A promise of the parsed output.\n     */\n    parseResultWithPrompt(generations, _prompt, callbacks) {\n        return this.parseResult(generations, callbacks);\n    }\n    _baseMessageToString(message) {\n        return typeof message.content === \"string\"\n            ? message.content\n            : this._baseMessageContentToString(message.content);\n    }\n    _baseMessageContentToString(content) {\n        return JSON.stringify(content);\n    }\n    /**\n     * Calls the parser with a given input and optional configuration options.\n     * If the input is a string, it creates a generation with the input as\n     * text and calls `parseResult`. If the input is a `BaseMessage`, it\n     * creates a generation with the input as a message and the content of the\n     * input as text, and then calls `parseResult`.\n     * @param input The input to the parser, which can be a string or a `BaseMessage`.\n     * @param options Optional configuration options.\n     * @returns A promise of the parsed output.\n     */\n    async invoke(input, options) {\n        if (typeof input === \"string\") {\n            return this._callWithConfig(async (input, options) => this.parseResult([{ text: input }], options?.callbacks), input, { ...options, runType: \"parser\" });\n        }\n        else {\n            return this._callWithConfig(async (input, options) => this.parseResult([\n                {\n                    message: input,\n                    text: this._baseMessageToString(input),\n                },\n            ], options?.callbacks), input, { ...options, runType: \"parser\" });\n        }\n    }\n}\n/**\n * Class to parse the output of an LLM call.\n */\nexport class BaseOutputParser extends BaseLLMOutputParser {\n    parseResult(generations, callbacks) {\n        return this.parse(generations[0].text, callbacks);\n    }\n    async parseWithPrompt(text, _prompt, callbacks) {\n        return this.parse(text, callbacks);\n    }\n    /**\n     * Return the string type key uniquely identifying this class of parser\n     */\n    _type() {\n        throw new Error(\"_type not implemented\");\n    }\n}\n/**\n * Exception that output parsers should raise to signify a parsing error.\n *\n * This exists to differentiate parsing errors from other code or execution errors\n * that also may arise inside the output parser. OutputParserExceptions will be\n * available to catch and handle in ways to fix the parsing error, while other\n * errors will be raised.\n *\n * @param message - The error that's being re-raised or an error message.\n * @param llmOutput - String model output which is error-ing.\n * @param observation - String explanation of error which can be passed to a\n *     model to try and remediate the issue.\n * @param sendToLLM - Whether to send the observation and llm_output back to an Agent\n *     after an OutputParserException has been raised. This gives the underlying\n *     model driving the agent the context that the previous output was improperly\n *     structured, in the hopes that it will update the output to the correct\n *     format.\n */\nexport class OutputParserException extends Error {\n    constructor(message, llmOutput, observation, sendToLLM = false) {\n        super(message);\n        Object.defineProperty(this, \"llmOutput\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"observation\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"sendToLLM\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.llmOutput = llmOutput;\n        this.observation = observation;\n        this.sendToLLM = sendToLLM;\n        if (sendToLLM) {\n            if (observation === undefined || llmOutput === undefined) {\n                throw new Error(\"Arguments 'observation' & 'llmOutput' are required if 'sendToLlm' is true\");\n            }\n        }\n        addLangChainErrorFields(this, \"OUTPUT_PARSING_FAILURE\");\n    }\n}\n","export function deepCompareStrict(a, b) {\n    const typeofa = typeof a;\n    if (typeofa !== typeof b) {\n        return false;\n    }\n    if (Array.isArray(a)) {\n        if (!Array.isArray(b)) {\n            return false;\n        }\n        const length = a.length;\n        if (length !== b.length) {\n            return false;\n        }\n        for (let i = 0; i < length; i++) {\n            if (!deepCompareStrict(a[i], b[i])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    if (typeofa === 'object') {\n        if (!a || !b) {\n            return a === b;\n        }\n        const aKeys = Object.keys(a);\n        const bKeys = Object.keys(b);\n        const length = aKeys.length;\n        if (length !== bKeys.length) {\n            return false;\n        }\n        for (const k of aKeys) {\n            if (!deepCompareStrict(a[k], b[k])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    return a === b;\n}\n","export function encodePointer(p) {\n    return encodeURI(escapePointer(p));\n}\nexport function escapePointer(p) {\n    return p.replace(/~/g, '~0').replace(/\\//g, '~1');\n}\n","import { encodePointer } from './pointer.js';\nexport const schemaKeyword = {\n    additionalItems: true,\n    unevaluatedItems: true,\n    items: true,\n    contains: true,\n    additionalProperties: true,\n    unevaluatedProperties: true,\n    propertyNames: true,\n    not: true,\n    if: true,\n    then: true,\n    else: true\n};\nexport const schemaArrayKeyword = {\n    prefixItems: true,\n    items: true,\n    allOf: true,\n    anyOf: true,\n    oneOf: true\n};\nexport const schemaMapKeyword = {\n    $defs: true,\n    definitions: true,\n    properties: true,\n    patternProperties: true,\n    dependentSchemas: true\n};\nexport const ignoredKeyword = {\n    id: true,\n    $id: true,\n    $ref: true,\n    $schema: true,\n    $anchor: true,\n    $vocabulary: true,\n    $comment: true,\n    default: true,\n    enum: true,\n    const: true,\n    required: true,\n    type: true,\n    maximum: true,\n    minimum: true,\n    exclusiveMaximum: true,\n    exclusiveMinimum: true,\n    multipleOf: true,\n    maxLength: true,\n    minLength: true,\n    pattern: true,\n    format: true,\n    maxItems: true,\n    minItems: true,\n    uniqueItems: true,\n    maxProperties: true,\n    minProperties: true\n};\nexport let initialBaseURI = typeof self !== 'undefined' &&\n    self.location &&\n    self.location.origin !== 'null'\n    ?\n        new URL(self.location.origin + self.location.pathname + location.search)\n    : new URL('https://github.com/cfworker');\nexport function dereference(schema, lookup = Object.create(null), baseURI = initialBaseURI, basePointer = '') {\n    if (schema && typeof schema === 'object' && !Array.isArray(schema)) {\n        const id = schema.$id || schema.id;\n        if (id) {\n            const url = new URL(id, baseURI.href);\n            if (url.hash.length > 1) {\n                lookup[url.href] = schema;\n            }\n            else {\n                url.hash = '';\n                if (basePointer === '') {\n                    baseURI = url;\n                }\n                else {\n                    dereference(schema, lookup, baseURI);\n                }\n            }\n        }\n    }\n    else if (schema !== true && schema !== false) {\n        return lookup;\n    }\n    const schemaURI = baseURI.href + (basePointer ? '#' + basePointer : '');\n    if (lookup[schemaURI] !== undefined) {\n        throw new Error(`Duplicate schema URI \"${schemaURI}\".`);\n    }\n    lookup[schemaURI] = schema;\n    if (schema === true || schema === false) {\n        return lookup;\n    }\n    if (schema.__absolute_uri__ === undefined) {\n        Object.defineProperty(schema, '__absolute_uri__', {\n            enumerable: false,\n            value: schemaURI\n        });\n    }\n    if (schema.$ref && schema.__absolute_ref__ === undefined) {\n        const url = new URL(schema.$ref, baseURI.href);\n        url.hash = url.hash;\n        Object.defineProperty(schema, '__absolute_ref__', {\n            enumerable: false,\n            value: url.href\n        });\n    }\n    if (schema.$recursiveRef && schema.__absolute_recursive_ref__ === undefined) {\n        const url = new URL(schema.$recursiveRef, baseURI.href);\n        url.hash = url.hash;\n        Object.defineProperty(schema, '__absolute_recursive_ref__', {\n            enumerable: false,\n            value: url.href\n        });\n    }\n    if (schema.$anchor) {\n        const url = new URL('#' + schema.$anchor, baseURI.href);\n        lookup[url.href] = schema;\n    }\n    for (let key in schema) {\n        if (ignoredKeyword[key]) {\n            continue;\n        }\n        const keyBase = `${basePointer}/${encodePointer(key)}`;\n        const subSchema = schema[key];\n        if (Array.isArray(subSchema)) {\n            if (schemaArrayKeyword[key]) {\n                const length = subSchema.length;\n                for (let i = 0; i < length; i++) {\n                    dereference(subSchema[i], lookup, baseURI, `${keyBase}/${i}`);\n                }\n            }\n        }\n        else if (schemaMapKeyword[key]) {\n            for (let subKey in subSchema) {\n                dereference(subSchema[subKey], lookup, baseURI, `${keyBase}/${encodePointer(subKey)}`);\n            }\n        }\n        else {\n            dereference(subSchema, lookup, baseURI, keyBase);\n        }\n    }\n    return lookup;\n}\n","const DATE = /^(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d)$/;\nconst DAYS = [0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst TIME = /^(\\d\\d):(\\d\\d):(\\d\\d)(\\.\\d+)?(z|[+-]\\d\\d(?::?\\d\\d)?)?$/i;\nconst HOSTNAME = /^(?=.{1,253}\\.?$)[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[-0-9a-z]{0,61}[0-9a-z])?)*\\.?$/i;\nconst URIREF = /^(?:[a-z][a-z0-9+\\-.]*:)?(?:\\/?\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\\.[a-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)|(?:[a-z0-9\\-._~!$&'\"()*+,;=]|%[0-9a-f]{2})*)(?::\\d*)?(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*|\\/(?:(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*)?(?:\\?(?:[a-z0-9\\-._~!$&'\"()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\\-._~!$&'\"()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i;\nconst URITEMPLATE = /^(?:(?:[^\\x00-\\x20\"'<>%\\\\^`{|}]|%[0-9a-f]{2})|\\{[+#./;?&=,!@|]?(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\\*)?(?:,(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\\*)?)*\\})*$/i;\nconst URL_ = /^(?:(?:https?|ftp):\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!10(?:\\.\\d{1,3}){3})(?!127(?:\\.\\d{1,3}){3})(?!169\\.254(?:\\.\\d{1,3}){2})(?!192\\.168(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u{00a1}-\\u{ffff}0-9]+-?)*[a-z\\u{00a1}-\\u{ffff}0-9]+)(?:\\.(?:[a-z\\u{00a1}-\\u{ffff}0-9]+-?)*[a-z\\u{00a1}-\\u{ffff}0-9]+)*(?:\\.(?:[a-z\\u{00a1}-\\u{ffff}]{2,})))(?::\\d{2,5})?(?:\\/[^\\s]*)?$/iu;\nconst UUID = /^(?:urn:uuid:)?[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}$/i;\nconst JSON_POINTER = /^(?:\\/(?:[^~/]|~0|~1)*)*$/;\nconst JSON_POINTER_URI_FRAGMENT = /^#(?:\\/(?:[a-z0-9_\\-.!$&'()*+,;:=@]|%[0-9a-f]{2}|~0|~1)*)*$/i;\nconst RELATIVE_JSON_POINTER = /^(?:0|[1-9][0-9]*)(?:#|(?:\\/(?:[^~/]|~0|~1)*)*)$/;\nconst EMAIL = (input) => {\n    if (input[0] === '\"')\n        return false;\n    const [name, host, ...rest] = input.split('@');\n    if (!name ||\n        !host ||\n        rest.length !== 0 ||\n        name.length > 64 ||\n        host.length > 253)\n        return false;\n    if (name[0] === '.' || name.endsWith('.') || name.includes('..'))\n        return false;\n    if (!/^[a-z0-9.-]+$/i.test(host) ||\n        !/^[a-z0-9.!#$%&'*+/=?^_`{|}~-]+$/i.test(name))\n        return false;\n    return host\n        .split('.')\n        .every(part => /^[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?$/i.test(part));\n};\nconst IPV4 = /^(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)$/;\nconst IPV6 = /^((([0-9a-f]{1,4}:){7}([0-9a-f]{1,4}|:))|(([0-9a-f]{1,4}:){6}(:[0-9a-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9a-f]{1,4}:){5}(((:[0-9a-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9a-f]{1,4}:){4}(((:[0-9a-f]{1,4}){1,3})|((:[0-9a-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9a-f]{1,4}:){3}(((:[0-9a-f]{1,4}){1,4})|((:[0-9a-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9a-f]{1,4}:){2}(((:[0-9a-f]{1,4}){1,5})|((:[0-9a-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9a-f]{1,4}:){1}(((:[0-9a-f]{1,4}){1,6})|((:[0-9a-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9a-f]{1,4}){1,7})|((:[0-9a-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))$/i;\nconst DURATION = (input) => input.length > 1 &&\n    input.length < 80 &&\n    (/^P\\d+([.,]\\d+)?W$/.test(input) ||\n        (/^P[\\dYMDTHS]*(\\d[.,]\\d+)?[YMDHS]$/.test(input) &&\n            /^P([.,\\d]+Y)?([.,\\d]+M)?([.,\\d]+D)?(T([.,\\d]+H)?([.,\\d]+M)?([.,\\d]+S)?)?$/.test(input)));\nfunction bind(r) {\n    return r.test.bind(r);\n}\nexport const format = {\n    date,\n    time: time.bind(undefined, false),\n    'date-time': date_time,\n    duration: DURATION,\n    uri,\n    'uri-reference': bind(URIREF),\n    'uri-template': bind(URITEMPLATE),\n    url: bind(URL_),\n    email: EMAIL,\n    hostname: bind(HOSTNAME),\n    ipv4: bind(IPV4),\n    ipv6: bind(IPV6),\n    regex: regex,\n    uuid: bind(UUID),\n    'json-pointer': bind(JSON_POINTER),\n    'json-pointer-uri-fragment': bind(JSON_POINTER_URI_FRAGMENT),\n    'relative-json-pointer': bind(RELATIVE_JSON_POINTER)\n};\nfunction isLeapYear(year) {\n    return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n}\nfunction date(str) {\n    const matches = str.match(DATE);\n    if (!matches)\n        return false;\n    const year = +matches[1];\n    const month = +matches[2];\n    const day = +matches[3];\n    return (month >= 1 &&\n        month <= 12 &&\n        day >= 1 &&\n        day <= (month == 2 && isLeapYear(year) ? 29 : DAYS[month]));\n}\nfunction time(full, str) {\n    const matches = str.match(TIME);\n    if (!matches)\n        return false;\n    const hour = +matches[1];\n    const minute = +matches[2];\n    const second = +matches[3];\n    const timeZone = !!matches[5];\n    return (((hour <= 23 && minute <= 59 && second <= 59) ||\n        (hour == 23 && minute == 59 && second == 60)) &&\n        (!full || timeZone));\n}\nconst DATE_TIME_SEPARATOR = /t|\\s/i;\nfunction date_time(str) {\n    const dateTime = str.split(DATE_TIME_SEPARATOR);\n    return dateTime.length == 2 && date(dateTime[0]) && time(true, dateTime[1]);\n}\nconst NOT_URI_FRAGMENT = /\\/|:/;\nconst URI_PATTERN = /^(?:[a-z][a-z0-9+\\-.]*:)(?:\\/?\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\\.[a-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)|(?:[a-z0-9\\-._~!$&'()*+,;=]|%[0-9a-f]{2})*)(?::\\d*)?(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*|\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)(?:\\?(?:[a-z0-9\\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i;\nfunction uri(str) {\n    return NOT_URI_FRAGMENT.test(str) && URI_PATTERN.test(str);\n}\nconst Z_ANCHOR = /[^\\\\]\\\\Z/;\nfunction regex(str) {\n    if (Z_ANCHOR.test(str))\n        return false;\n    try {\n        new RegExp(str, 'u');\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n","export var OutputFormat;\n(function (OutputFormat) {\n    OutputFormat[OutputFormat[\"Flag\"] = 1] = \"Flag\";\n    OutputFormat[OutputFormat[\"Basic\"] = 2] = \"Basic\";\n    OutputFormat[OutputFormat[\"Detailed\"] = 4] = \"Detailed\";\n})(OutputFormat || (OutputFormat = {}));\n","import { deepCompareStrict } from './deep-compare-strict.js';\nimport { dereference } from './dereference.js';\nimport { format } from './format.js';\nimport { encodePointer } from './pointer.js';\nimport { ucs2length } from './ucs2-length.js';\nexport function validate(instance, schema, draft = '2019-09', lookup = dereference(schema), shortCircuit = true, recursiveAnchor = null, instanceLocation = '#', schemaLocation = '#', evaluated = Object.create(null)) {\n    if (schema === true) {\n        return { valid: true, errors: [] };\n    }\n    if (schema === false) {\n        return {\n            valid: false,\n            errors: [\n                {\n                    instanceLocation,\n                    keyword: 'false',\n                    keywordLocation: instanceLocation,\n                    error: 'False boolean schema.'\n                }\n            ]\n        };\n    }\n    const rawInstanceType = typeof instance;\n    let instanceType;\n    switch (rawInstanceType) {\n        case 'boolean':\n        case 'number':\n        case 'string':\n            instanceType = rawInstanceType;\n            break;\n        case 'object':\n            if (instance === null) {\n                instanceType = 'null';\n            }\n            else if (Array.isArray(instance)) {\n                instanceType = 'array';\n            }\n            else {\n                instanceType = 'object';\n            }\n            break;\n        default:\n            throw new Error(`Instances of \"${rawInstanceType}\" type are not supported.`);\n    }\n    const { $ref, $recursiveRef, $recursiveAnchor, type: $type, const: $const, enum: $enum, required: $required, not: $not, anyOf: $anyOf, allOf: $allOf, oneOf: $oneOf, if: $if, then: $then, else: $else, format: $format, properties: $properties, patternProperties: $patternProperties, additionalProperties: $additionalProperties, unevaluatedProperties: $unevaluatedProperties, minProperties: $minProperties, maxProperties: $maxProperties, propertyNames: $propertyNames, dependentRequired: $dependentRequired, dependentSchemas: $dependentSchemas, dependencies: $dependencies, prefixItems: $prefixItems, items: $items, additionalItems: $additionalItems, unevaluatedItems: $unevaluatedItems, contains: $contains, minContains: $minContains, maxContains: $maxContains, minItems: $minItems, maxItems: $maxItems, uniqueItems: $uniqueItems, minimum: $minimum, maximum: $maximum, exclusiveMinimum: $exclusiveMinimum, exclusiveMaximum: $exclusiveMaximum, multipleOf: $multipleOf, minLength: $minLength, maxLength: $maxLength, pattern: $pattern, __absolute_ref__, __absolute_recursive_ref__ } = schema;\n    const errors = [];\n    if ($recursiveAnchor === true && recursiveAnchor === null) {\n        recursiveAnchor = schema;\n    }\n    if ($recursiveRef === '#') {\n        const refSchema = recursiveAnchor === null\n            ? lookup[__absolute_recursive_ref__]\n            : recursiveAnchor;\n        const keywordLocation = `${schemaLocation}/$recursiveRef`;\n        const result = validate(instance, recursiveAnchor === null ? schema : recursiveAnchor, draft, lookup, shortCircuit, refSchema, instanceLocation, keywordLocation, evaluated);\n        if (!result.valid) {\n            errors.push({\n                instanceLocation,\n                keyword: '$recursiveRef',\n                keywordLocation,\n                error: 'A subschema had errors.'\n            }, ...result.errors);\n        }\n    }\n    if ($ref !== undefined) {\n        const uri = __absolute_ref__ || $ref;\n        const refSchema = lookup[uri];\n        if (refSchema === undefined) {\n            let message = `Unresolved $ref \"${$ref}\".`;\n            if (__absolute_ref__ && __absolute_ref__ !== $ref) {\n                message += `  Absolute URI \"${__absolute_ref__}\".`;\n            }\n            message += `\\nKnown schemas:\\n- ${Object.keys(lookup).join('\\n- ')}`;\n            throw new Error(message);\n        }\n        const keywordLocation = `${schemaLocation}/$ref`;\n        const result = validate(instance, refSchema, draft, lookup, shortCircuit, recursiveAnchor, instanceLocation, keywordLocation, evaluated);\n        if (!result.valid) {\n            errors.push({\n                instanceLocation,\n                keyword: '$ref',\n                keywordLocation,\n                error: 'A subschema had errors.'\n            }, ...result.errors);\n        }\n        if (draft === '4' || draft === '7') {\n            return { valid: errors.length === 0, errors };\n        }\n    }\n    if (Array.isArray($type)) {\n        let length = $type.length;\n        let valid = false;\n        for (let i = 0; i < length; i++) {\n            if (instanceType === $type[i] ||\n                ($type[i] === 'integer' &&\n                    instanceType === 'number' &&\n                    instance % 1 === 0 &&\n                    instance === instance)) {\n                valid = true;\n                break;\n            }\n        }\n        if (!valid) {\n            errors.push({\n                instanceLocation,\n                keyword: 'type',\n                keywordLocation: `${schemaLocation}/type`,\n                error: `Instance type \"${instanceType}\" is invalid. Expected \"${$type.join('\", \"')}\".`\n            });\n        }\n    }\n    else if ($type === 'integer') {\n        if (instanceType !== 'number' || instance % 1 || instance !== instance) {\n            errors.push({\n                instanceLocation,\n                keyword: 'type',\n                keywordLocation: `${schemaLocation}/type`,\n                error: `Instance type \"${instanceType}\" is invalid. Expected \"${$type}\".`\n            });\n        }\n    }\n    else if ($type !== undefined && instanceType !== $type) {\n        errors.push({\n            instanceLocation,\n            keyword: 'type',\n            keywordLocation: `${schemaLocation}/type`,\n            error: `Instance type \"${instanceType}\" is invalid. Expected \"${$type}\".`\n        });\n    }\n    if ($const !== undefined) {\n        if (instanceType === 'object' || instanceType === 'array') {\n            if (!deepCompareStrict(instance, $const)) {\n                errors.push({\n                    instanceLocation,\n                    keyword: 'const',\n                    keywordLocation: `${schemaLocation}/const`,\n                    error: `Instance does not match ${JSON.stringify($const)}.`\n                });\n            }\n        }\n        else if (instance !== $const) {\n            errors.push({\n                instanceLocation,\n                keyword: 'const',\n                keywordLocation: `${schemaLocation}/const`,\n                error: `Instance does not match ${JSON.stringify($const)}.`\n            });\n        }\n    }\n    if ($enum !== undefined) {\n        if (instanceType === 'object' || instanceType === 'array') {\n            if (!$enum.some(value => deepCompareStrict(instance, value))) {\n                errors.push({\n                    instanceLocation,\n                    keyword: 'enum',\n                    keywordLocation: `${schemaLocation}/enum`,\n                    error: `Instance does not match any of ${JSON.stringify($enum)}.`\n                });\n            }\n        }\n        else if (!$enum.some(value => instance === value)) {\n            errors.push({\n                instanceLocation,\n                keyword: 'enum',\n                keywordLocation: `${schemaLocation}/enum`,\n                error: `Instance does not match any of ${JSON.stringify($enum)}.`\n            });\n        }\n    }\n    if ($not !== undefined) {\n        const keywordLocation = `${schemaLocation}/not`;\n        const result = validate(instance, $not, draft, lookup, shortCircuit, recursiveAnchor, instanceLocation, keywordLocation);\n        if (result.valid) {\n            errors.push({\n                instanceLocation,\n                keyword: 'not',\n                keywordLocation,\n                error: 'Instance matched \"not\" schema.'\n            });\n        }\n    }\n    let subEvaluateds = [];\n    if ($anyOf !== undefined) {\n        const keywordLocation = `${schemaLocation}/anyOf`;\n        const errorsLength = errors.length;\n        let anyValid = false;\n        for (let i = 0; i < $anyOf.length; i++) {\n            const subSchema = $anyOf[i];\n            const subEvaluated = Object.create(evaluated);\n            const result = validate(instance, subSchema, draft, lookup, shortCircuit, $recursiveAnchor === true ? recursiveAnchor : null, instanceLocation, `${keywordLocation}/${i}`, subEvaluated);\n            errors.push(...result.errors);\n            anyValid = anyValid || result.valid;\n            if (result.valid) {\n                subEvaluateds.push(subEvaluated);\n            }\n        }\n        if (anyValid) {\n            errors.length = errorsLength;\n        }\n        else {\n            errors.splice(errorsLength, 0, {\n                instanceLocation,\n                keyword: 'anyOf',\n                keywordLocation,\n                error: 'Instance does not match any subschemas.'\n            });\n        }\n    }\n    if ($allOf !== undefined) {\n        const keywordLocation = `${schemaLocation}/allOf`;\n        const errorsLength = errors.length;\n        let allValid = true;\n        for (let i = 0; i < $allOf.length; i++) {\n            const subSchema = $allOf[i];\n            const subEvaluated = Object.create(evaluated);\n            const result = validate(instance, subSchema, draft, lookup, shortCircuit, $recursiveAnchor === true ? recursiveAnchor : null, instanceLocation, `${keywordLocation}/${i}`, subEvaluated);\n            errors.push(...result.errors);\n            allValid = allValid && result.valid;\n            if (result.valid) {\n                subEvaluateds.push(subEvaluated);\n            }\n        }\n        if (allValid) {\n            errors.length = errorsLength;\n        }\n        else {\n            errors.splice(errorsLength, 0, {\n                instanceLocation,\n                keyword: 'allOf',\n                keywordLocation,\n                error: `Instance does not match every subschema.`\n            });\n        }\n    }\n    if ($oneOf !== undefined) {\n        const keywordLocation = `${schemaLocation}/oneOf`;\n        const errorsLength = errors.length;\n        const matches = $oneOf.filter((subSchema, i) => {\n            const subEvaluated = Object.create(evaluated);\n            const result = validate(instance, subSchema, draft, lookup, shortCircuit, $recursiveAnchor === true ? recursiveAnchor : null, instanceLocation, `${keywordLocation}/${i}`, subEvaluated);\n            errors.push(...result.errors);\n            if (result.valid) {\n                subEvaluateds.push(subEvaluated);\n            }\n            return result.valid;\n        }).length;\n        if (matches === 1) {\n            errors.length = errorsLength;\n        }\n        else {\n            errors.splice(errorsLength, 0, {\n                instanceLocation,\n                keyword: 'oneOf',\n                keywordLocation,\n                error: `Instance does not match exactly one subschema (${matches} matches).`\n            });\n        }\n    }\n    if (instanceType === 'object' || instanceType === 'array') {\n        Object.assign(evaluated, ...subEvaluateds);\n    }\n    if ($if !== undefined) {\n        const keywordLocation = `${schemaLocation}/if`;\n        const conditionResult = validate(instance, $if, draft, lookup, shortCircuit, recursiveAnchor, instanceLocation, keywordLocation, evaluated).valid;\n        if (conditionResult) {\n            if ($then !== undefined) {\n                const thenResult = validate(instance, $then, draft, lookup, shortCircuit, recursiveAnchor, instanceLocation, `${schemaLocation}/then`, evaluated);\n                if (!thenResult.valid) {\n                    errors.push({\n                        instanceLocation,\n                        keyword: 'if',\n                        keywordLocation,\n                        error: `Instance does not match \"then\" schema.`\n                    }, ...thenResult.errors);\n                }\n            }\n        }\n        else if ($else !== undefined) {\n            const elseResult = validate(instance, $else, draft, lookup, shortCircuit, recursiveAnchor, instanceLocation, `${schemaLocation}/else`, evaluated);\n            if (!elseResult.valid) {\n                errors.push({\n                    instanceLocation,\n                    keyword: 'if',\n                    keywordLocation,\n                    error: `Instance does not match \"else\" schema.`\n                }, ...elseResult.errors);\n            }\n        }\n    }\n    if (instanceType === 'object') {\n        if ($required !== undefined) {\n            for (const key of $required) {\n                if (!(key in instance)) {\n                    errors.push({\n                        instanceLocation,\n                        keyword: 'required',\n                        keywordLocation: `${schemaLocation}/required`,\n                        error: `Instance does not have required property \"${key}\".`\n                    });\n                }\n            }\n        }\n        const keys = Object.keys(instance);\n        if ($minProperties !== undefined && keys.length < $minProperties) {\n            errors.push({\n                instanceLocation,\n                keyword: 'minProperties',\n                keywordLocation: `${schemaLocation}/minProperties`,\n                error: `Instance does not have at least ${$minProperties} properties.`\n            });\n        }\n        if ($maxProperties !== undefined && keys.length > $maxProperties) {\n            errors.push({\n                instanceLocation,\n                keyword: 'maxProperties',\n                keywordLocation: `${schemaLocation}/maxProperties`,\n                error: `Instance does not have at least ${$maxProperties} properties.`\n            });\n        }\n        if ($propertyNames !== undefined) {\n            const keywordLocation = `${schemaLocation}/propertyNames`;\n            for (const key in instance) {\n                const subInstancePointer = `${instanceLocation}/${encodePointer(key)}`;\n                const result = validate(key, $propertyNames, draft, lookup, shortCircuit, recursiveAnchor, subInstancePointer, keywordLocation);\n                if (!result.valid) {\n                    errors.push({\n                        instanceLocation,\n                        keyword: 'propertyNames',\n                        keywordLocation,\n                        error: `Property name \"${key}\" does not match schema.`\n                    }, ...result.errors);\n                }\n            }\n        }\n        if ($dependentRequired !== undefined) {\n            const keywordLocation = `${schemaLocation}/dependantRequired`;\n            for (const key in $dependentRequired) {\n                if (key in instance) {\n                    const required = $dependentRequired[key];\n                    for (const dependantKey of required) {\n                        if (!(dependantKey in instance)) {\n                            errors.push({\n                                instanceLocation,\n                                keyword: 'dependentRequired',\n                                keywordLocation,\n                                error: `Instance has \"${key}\" but does not have \"${dependantKey}\".`\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        if ($dependentSchemas !== undefined) {\n            for (const key in $dependentSchemas) {\n                const keywordLocation = `${schemaLocation}/dependentSchemas`;\n                if (key in instance) {\n                    const result = validate(instance, $dependentSchemas[key], draft, lookup, shortCircuit, recursiveAnchor, instanceLocation, `${keywordLocation}/${encodePointer(key)}`, evaluated);\n                    if (!result.valid) {\n                        errors.push({\n                            instanceLocation,\n                            keyword: 'dependentSchemas',\n                            keywordLocation,\n                            error: `Instance has \"${key}\" but does not match dependant schema.`\n                        }, ...result.errors);\n                    }\n                }\n            }\n        }\n        if ($dependencies !== undefined) {\n            const keywordLocation = `${schemaLocation}/dependencies`;\n            for (const key in $dependencies) {\n                if (key in instance) {\n                    const propsOrSchema = $dependencies[key];\n                    if (Array.isArray(propsOrSchema)) {\n                        for (const dependantKey of propsOrSchema) {\n                            if (!(dependantKey in instance)) {\n                                errors.push({\n                                    instanceLocation,\n                                    keyword: 'dependencies',\n                                    keywordLocation,\n                                    error: `Instance has \"${key}\" but does not have \"${dependantKey}\".`\n                                });\n                            }\n                        }\n                    }\n                    else {\n                        const result = validate(instance, propsOrSchema, draft, lookup, shortCircuit, recursiveAnchor, instanceLocation, `${keywordLocation}/${encodePointer(key)}`);\n                        if (!result.valid) {\n                            errors.push({\n                                instanceLocation,\n                                keyword: 'dependencies',\n                                keywordLocation,\n                                error: `Instance has \"${key}\" but does not match dependant schema.`\n                            }, ...result.errors);\n                        }\n                    }\n                }\n            }\n        }\n        const thisEvaluated = Object.create(null);\n        let stop = false;\n        if ($properties !== undefined) {\n            const keywordLocation = `${schemaLocation}/properties`;\n            for (const key in $properties) {\n                if (!(key in instance)) {\n                    continue;\n                }\n                const subInstancePointer = `${instanceLocation}/${encodePointer(key)}`;\n                const result = validate(instance[key], $properties[key], draft, lookup, shortCircuit, recursiveAnchor, subInstancePointer, `${keywordLocation}/${encodePointer(key)}`);\n                if (result.valid) {\n                    evaluated[key] = thisEvaluated[key] = true;\n                }\n                else {\n                    stop = shortCircuit;\n                    errors.push({\n                        instanceLocation,\n                        keyword: 'properties',\n                        keywordLocation,\n                        error: `Property \"${key}\" does not match schema.`\n                    }, ...result.errors);\n                    if (stop)\n                        break;\n                }\n            }\n        }\n        if (!stop && $patternProperties !== undefined) {\n            const keywordLocation = `${schemaLocation}/patternProperties`;\n            for (const pattern in $patternProperties) {\n                const regex = new RegExp(pattern, 'u');\n                const subSchema = $patternProperties[pattern];\n                for (const key in instance) {\n                    if (!regex.test(key)) {\n                        continue;\n                    }\n                    const subInstancePointer = `${instanceLocation}/${encodePointer(key)}`;\n                    const result = validate(instance[key], subSchema, draft, lookup, shortCircuit, recursiveAnchor, subInstancePointer, `${keywordLocation}/${encodePointer(pattern)}`);\n                    if (result.valid) {\n                        evaluated[key] = thisEvaluated[key] = true;\n                    }\n                    else {\n                        stop = shortCircuit;\n                        errors.push({\n                            instanceLocation,\n                            keyword: 'patternProperties',\n                            keywordLocation,\n                            error: `Property \"${key}\" matches pattern \"${pattern}\" but does not match associated schema.`\n                        }, ...result.errors);\n                    }\n                }\n            }\n        }\n        if (!stop && $additionalProperties !== undefined) {\n            const keywordLocation = `${schemaLocation}/additionalProperties`;\n            for (const key in instance) {\n                if (thisEvaluated[key]) {\n                    continue;\n                }\n                const subInstancePointer = `${instanceLocation}/${encodePointer(key)}`;\n                const result = validate(instance[key], $additionalProperties, draft, lookup, shortCircuit, recursiveAnchor, subInstancePointer, keywordLocation);\n                if (result.valid) {\n                    evaluated[key] = true;\n                }\n                else {\n                    stop = shortCircuit;\n                    errors.push({\n                        instanceLocation,\n                        keyword: 'additionalProperties',\n                        keywordLocation,\n                        error: `Property \"${key}\" does not match additional properties schema.`\n                    }, ...result.errors);\n                }\n            }\n        }\n        else if (!stop && $unevaluatedProperties !== undefined) {\n            const keywordLocation = `${schemaLocation}/unevaluatedProperties`;\n            for (const key in instance) {\n                if (!evaluated[key]) {\n                    const subInstancePointer = `${instanceLocation}/${encodePointer(key)}`;\n                    const result = validate(instance[key], $unevaluatedProperties, draft, lookup, shortCircuit, recursiveAnchor, subInstancePointer, keywordLocation);\n                    if (result.valid) {\n                        evaluated[key] = true;\n                    }\n                    else {\n                        errors.push({\n                            instanceLocation,\n                            keyword: 'unevaluatedProperties',\n                            keywordLocation,\n                            error: `Property \"${key}\" does not match unevaluated properties schema.`\n                        }, ...result.errors);\n                    }\n                }\n            }\n        }\n    }\n    else if (instanceType === 'array') {\n        if ($maxItems !== undefined && instance.length > $maxItems) {\n            errors.push({\n                instanceLocation,\n                keyword: 'maxItems',\n                keywordLocation: `${schemaLocation}/maxItems`,\n                error: `Array has too many items (${instance.length} > ${$maxItems}).`\n            });\n        }\n        if ($minItems !== undefined && instance.length < $minItems) {\n            errors.push({\n                instanceLocation,\n                keyword: 'minItems',\n                keywordLocation: `${schemaLocation}/minItems`,\n                error: `Array has too few items (${instance.length} < ${$minItems}).`\n            });\n        }\n        const length = instance.length;\n        let i = 0;\n        let stop = false;\n        if ($prefixItems !== undefined) {\n            const keywordLocation = `${schemaLocation}/prefixItems`;\n            const length2 = Math.min($prefixItems.length, length);\n            for (; i < length2; i++) {\n                const result = validate(instance[i], $prefixItems[i], draft, lookup, shortCircuit, recursiveAnchor, `${instanceLocation}/${i}`, `${keywordLocation}/${i}`);\n                evaluated[i] = true;\n                if (!result.valid) {\n                    stop = shortCircuit;\n                    errors.push({\n                        instanceLocation,\n                        keyword: 'prefixItems',\n                        keywordLocation,\n                        error: `Items did not match schema.`\n                    }, ...result.errors);\n                    if (stop)\n                        break;\n                }\n            }\n        }\n        if ($items !== undefined) {\n            const keywordLocation = `${schemaLocation}/items`;\n            if (Array.isArray($items)) {\n                const length2 = Math.min($items.length, length);\n                for (; i < length2; i++) {\n                    const result = validate(instance[i], $items[i], draft, lookup, shortCircuit, recursiveAnchor, `${instanceLocation}/${i}`, `${keywordLocation}/${i}`);\n                    evaluated[i] = true;\n                    if (!result.valid) {\n                        stop = shortCircuit;\n                        errors.push({\n                            instanceLocation,\n                            keyword: 'items',\n                            keywordLocation,\n                            error: `Items did not match schema.`\n                        }, ...result.errors);\n                        if (stop)\n                            break;\n                    }\n                }\n            }\n            else {\n                for (; i < length; i++) {\n                    const result = validate(instance[i], $items, draft, lookup, shortCircuit, recursiveAnchor, `${instanceLocation}/${i}`, keywordLocation);\n                    evaluated[i] = true;\n                    if (!result.valid) {\n                        stop = shortCircuit;\n                        errors.push({\n                            instanceLocation,\n                            keyword: 'items',\n                            keywordLocation,\n                            error: `Items did not match schema.`\n                        }, ...result.errors);\n                        if (stop)\n                            break;\n                    }\n                }\n            }\n            if (!stop && $additionalItems !== undefined) {\n                const keywordLocation = `${schemaLocation}/additionalItems`;\n                for (; i < length; i++) {\n                    const result = validate(instance[i], $additionalItems, draft, lookup, shortCircuit, recursiveAnchor, `${instanceLocation}/${i}`, keywordLocation);\n                    evaluated[i] = true;\n                    if (!result.valid) {\n                        stop = shortCircuit;\n                        errors.push({\n                            instanceLocation,\n                            keyword: 'additionalItems',\n                            keywordLocation,\n                            error: `Items did not match additional items schema.`\n                        }, ...result.errors);\n                    }\n                }\n            }\n        }\n        if ($contains !== undefined) {\n            if (length === 0 && $minContains === undefined) {\n                errors.push({\n                    instanceLocation,\n                    keyword: 'contains',\n                    keywordLocation: `${schemaLocation}/contains`,\n                    error: `Array is empty. It must contain at least one item matching the schema.`\n                });\n            }\n            else if ($minContains !== undefined && length < $minContains) {\n                errors.push({\n                    instanceLocation,\n                    keyword: 'minContains',\n                    keywordLocation: `${schemaLocation}/minContains`,\n                    error: `Array has less items (${length}) than minContains (${$minContains}).`\n                });\n            }\n            else {\n                const keywordLocation = `${schemaLocation}/contains`;\n                const errorsLength = errors.length;\n                let contained = 0;\n                for (let j = 0; j < length; j++) {\n                    const result = validate(instance[j], $contains, draft, lookup, shortCircuit, recursiveAnchor, `${instanceLocation}/${j}`, keywordLocation);\n                    if (result.valid) {\n                        evaluated[j] = true;\n                        contained++;\n                    }\n                    else {\n                        errors.push(...result.errors);\n                    }\n                }\n                if (contained >= ($minContains || 0)) {\n                    errors.length = errorsLength;\n                }\n                if ($minContains === undefined &&\n                    $maxContains === undefined &&\n                    contained === 0) {\n                    errors.splice(errorsLength, 0, {\n                        instanceLocation,\n                        keyword: 'contains',\n                        keywordLocation,\n                        error: `Array does not contain item matching schema.`\n                    });\n                }\n                else if ($minContains !== undefined && contained < $minContains) {\n                    errors.push({\n                        instanceLocation,\n                        keyword: 'minContains',\n                        keywordLocation: `${schemaLocation}/minContains`,\n                        error: `Array must contain at least ${$minContains} items matching schema. Only ${contained} items were found.`\n                    });\n                }\n                else if ($maxContains !== undefined && contained > $maxContains) {\n                    errors.push({\n                        instanceLocation,\n                        keyword: 'maxContains',\n                        keywordLocation: `${schemaLocation}/maxContains`,\n                        error: `Array may contain at most ${$maxContains} items matching schema. ${contained} items were found.`\n                    });\n                }\n            }\n        }\n        if (!stop && $unevaluatedItems !== undefined) {\n            const keywordLocation = `${schemaLocation}/unevaluatedItems`;\n            for (i; i < length; i++) {\n                if (evaluated[i]) {\n                    continue;\n                }\n                const result = validate(instance[i], $unevaluatedItems, draft, lookup, shortCircuit, recursiveAnchor, `${instanceLocation}/${i}`, keywordLocation);\n                evaluated[i] = true;\n                if (!result.valid) {\n                    errors.push({\n                        instanceLocation,\n                        keyword: 'unevaluatedItems',\n                        keywordLocation,\n                        error: `Items did not match unevaluated items schema.`\n                    }, ...result.errors);\n                }\n            }\n        }\n        if ($uniqueItems) {\n            for (let j = 0; j < length; j++) {\n                const a = instance[j];\n                const ao = typeof a === 'object' && a !== null;\n                for (let k = 0; k < length; k++) {\n                    if (j === k) {\n                        continue;\n                    }\n                    const b = instance[k];\n                    const bo = typeof b === 'object' && b !== null;\n                    if (a === b || (ao && bo && deepCompareStrict(a, b))) {\n                        errors.push({\n                            instanceLocation,\n                            keyword: 'uniqueItems',\n                            keywordLocation: `${schemaLocation}/uniqueItems`,\n                            error: `Duplicate items at indexes ${j} and ${k}.`\n                        });\n                        j = Number.MAX_SAFE_INTEGER;\n                        k = Number.MAX_SAFE_INTEGER;\n                    }\n                }\n            }\n        }\n    }\n    else if (instanceType === 'number') {\n        if (draft === '4') {\n            if ($minimum !== undefined &&\n                (($exclusiveMinimum === true && instance <= $minimum) ||\n                    instance < $minimum)) {\n                errors.push({\n                    instanceLocation,\n                    keyword: 'minimum',\n                    keywordLocation: `${schemaLocation}/minimum`,\n                    error: `${instance} is less than ${$exclusiveMinimum ? 'or equal to ' : ''} ${$minimum}.`\n                });\n            }\n            if ($maximum !== undefined &&\n                (($exclusiveMaximum === true && instance >= $maximum) ||\n                    instance > $maximum)) {\n                errors.push({\n                    instanceLocation,\n                    keyword: 'maximum',\n                    keywordLocation: `${schemaLocation}/maximum`,\n                    error: `${instance} is greater than ${$exclusiveMaximum ? 'or equal to ' : ''} ${$maximum}.`\n                });\n            }\n        }\n        else {\n            if ($minimum !== undefined && instance < $minimum) {\n                errors.push({\n                    instanceLocation,\n                    keyword: 'minimum',\n                    keywordLocation: `${schemaLocation}/minimum`,\n                    error: `${instance} is less than ${$minimum}.`\n                });\n            }\n            if ($maximum !== undefined && instance > $maximum) {\n                errors.push({\n                    instanceLocation,\n                    keyword: 'maximum',\n                    keywordLocation: `${schemaLocation}/maximum`,\n                    error: `${instance} is greater than ${$maximum}.`\n                });\n            }\n            if ($exclusiveMinimum !== undefined && instance <= $exclusiveMinimum) {\n                errors.push({\n                    instanceLocation,\n                    keyword: 'exclusiveMinimum',\n                    keywordLocation: `${schemaLocation}/exclusiveMinimum`,\n                    error: `${instance} is less than ${$exclusiveMinimum}.`\n                });\n            }\n            if ($exclusiveMaximum !== undefined && instance >= $exclusiveMaximum) {\n                errors.push({\n                    instanceLocation,\n                    keyword: 'exclusiveMaximum',\n                    keywordLocation: `${schemaLocation}/exclusiveMaximum`,\n                    error: `${instance} is greater than or equal to ${$exclusiveMaximum}.`\n                });\n            }\n        }\n        if ($multipleOf !== undefined) {\n            const remainder = instance % $multipleOf;\n            if (Math.abs(0 - remainder) >= 1.1920929e-7 &&\n                Math.abs($multipleOf - remainder) >= 1.1920929e-7) {\n                errors.push({\n                    instanceLocation,\n                    keyword: 'multipleOf',\n                    keywordLocation: `${schemaLocation}/multipleOf`,\n                    error: `${instance} is not a multiple of ${$multipleOf}.`\n                });\n            }\n        }\n    }\n    else if (instanceType === 'string') {\n        const length = $minLength === undefined && $maxLength === undefined\n            ? 0\n            : ucs2length(instance);\n        if ($minLength !== undefined && length < $minLength) {\n            errors.push({\n                instanceLocation,\n                keyword: 'minLength',\n                keywordLocation: `${schemaLocation}/minLength`,\n                error: `String is too short (${length} < ${$minLength}).`\n            });\n        }\n        if ($maxLength !== undefined && length > $maxLength) {\n            errors.push({\n                instanceLocation,\n                keyword: 'maxLength',\n                keywordLocation: `${schemaLocation}/maxLength`,\n                error: `String is too long (${length} > ${$maxLength}).`\n            });\n        }\n        if ($pattern !== undefined && !new RegExp($pattern, 'u').test(instance)) {\n            errors.push({\n                instanceLocation,\n                keyword: 'pattern',\n                keywordLocation: `${schemaLocation}/pattern`,\n                error: `String does not match pattern.`\n            });\n        }\n        if ($format !== undefined &&\n            format[$format] &&\n            !format[$format](instance)) {\n            errors.push({\n                instanceLocation,\n                keyword: 'format',\n                keywordLocation: `${schemaLocation}/format`,\n                error: `String does not match format \"${$format}\".`\n            });\n        }\n    }\n    return { valid: errors.length === 0, errors };\n}\n","export function ucs2length(s) {\n    let result = 0;\n    let length = s.length;\n    let index = 0;\n    let charCode;\n    while (index < length) {\n        result++;\n        charCode = s.charCodeAt(index++);\n        if (charCode >= 0xd800 && charCode <= 0xdbff && index < length) {\n            charCode = s.charCodeAt(index);\n            if ((charCode & 0xfc00) == 0xdc00) {\n                index++;\n            }\n        }\n    }\n    return result;\n}\n","import { deepCompareStrict } from \"@cfworker/json-schema\";\nimport { BaseOutputParser } from \"./base.js\";\nimport { isBaseMessage, isBaseMessageChunk, } from \"../messages/base.js\";\nimport { convertToChunk } from \"../messages/utils.js\";\nimport { GenerationChunk, ChatGenerationChunk, } from \"../outputs.js\";\n/**\n * Class to parse the output of an LLM call that also allows streaming inputs.\n */\nexport class BaseTransformOutputParser extends BaseOutputParser {\n    async *_transform(inputGenerator) {\n        for await (const chunk of inputGenerator) {\n            if (typeof chunk === \"string\") {\n                yield this.parseResult([{ text: chunk }]);\n            }\n            else {\n                yield this.parseResult([\n                    {\n                        message: chunk,\n                        text: this._baseMessageToString(chunk),\n                    },\n                ]);\n            }\n        }\n    }\n    /**\n     * Transforms an asynchronous generator of input into an asynchronous\n     * generator of parsed output.\n     * @param inputGenerator An asynchronous generator of input.\n     * @param options A configuration object.\n     * @returns An asynchronous generator of parsed output.\n     */\n    async *transform(inputGenerator, options) {\n        yield* this._transformStreamWithConfig(inputGenerator, this._transform.bind(this), {\n            ...options,\n            runType: \"parser\",\n        });\n    }\n}\n/**\n * A base class for output parsers that can handle streaming input. It\n * extends the `BaseTransformOutputParser` class and provides a method for\n * converting parsed outputs into a diff format.\n */\nexport class BaseCumulativeTransformOutputParser extends BaseTransformOutputParser {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"diff\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        this.diff = fields?.diff ?? this.diff;\n    }\n    async *_transform(inputGenerator) {\n        let prevParsed;\n        let accGen;\n        for await (const chunk of inputGenerator) {\n            if (typeof chunk !== \"string\" && typeof chunk.content !== \"string\") {\n                throw new Error(\"Cannot handle non-string output.\");\n            }\n            let chunkGen;\n            if (isBaseMessageChunk(chunk)) {\n                if (typeof chunk.content !== \"string\") {\n                    throw new Error(\"Cannot handle non-string message output.\");\n                }\n                chunkGen = new ChatGenerationChunk({\n                    message: chunk,\n                    text: chunk.content,\n                });\n            }\n            else if (isBaseMessage(chunk)) {\n                if (typeof chunk.content !== \"string\") {\n                    throw new Error(\"Cannot handle non-string message output.\");\n                }\n                chunkGen = new ChatGenerationChunk({\n                    message: convertToChunk(chunk),\n                    text: chunk.content,\n                });\n            }\n            else {\n                chunkGen = new GenerationChunk({ text: chunk });\n            }\n            if (accGen === undefined) {\n                accGen = chunkGen;\n            }\n            else {\n                accGen = accGen.concat(chunkGen);\n            }\n            const parsed = await this.parsePartialResult([accGen]);\n            if (parsed !== undefined &&\n                parsed !== null &&\n                !deepCompareStrict(parsed, prevParsed)) {\n                if (this.diff) {\n                    yield this._diff(prevParsed, parsed);\n                }\n                else {\n                    yield parsed;\n                }\n                prevParsed = parsed;\n            }\n        }\n    }\n    getFormatInstructions() {\n        return \"\";\n    }\n}\n","import { z } from \"zod\";\nimport { zodToJsonSchema, } from \"zod-to-json-schema\";\nimport { BaseOutputParser, OutputParserException, } from \"./base.js\";\nexport class StructuredOutputParser extends BaseOutputParser {\n    static lc_name() {\n        return \"StructuredOutputParser\";\n    }\n    toJSON() {\n        return this.toJSONNotImplemented();\n    }\n    constructor(schema) {\n        super(schema);\n        Object.defineProperty(this, \"schema\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: schema\n        });\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"output_parsers\", \"structured\"]\n        });\n    }\n    /**\n     * Creates a new StructuredOutputParser from a Zod schema.\n     * @param schema The Zod schema which the output should match\n     * @returns A new instance of StructuredOutputParser.\n     */\n    static fromZodSchema(schema) {\n        return new this(schema);\n    }\n    /**\n     * Creates a new StructuredOutputParser from a set of names and\n     * descriptions.\n     * @param schemas An object where each key is a name and each value is a description\n     * @returns A new instance of StructuredOutputParser.\n     */\n    static fromNamesAndDescriptions(schemas) {\n        const zodSchema = z.object(Object.fromEntries(Object.entries(schemas).map(([name, description]) => [name, z.string().describe(description)])));\n        return new this(zodSchema);\n    }\n    /**\n     * Returns a markdown code snippet with a JSON object formatted according\n     * to the schema.\n     * @param options Optional. The options for formatting the instructions\n     * @returns A markdown code snippet with a JSON object formatted according to the schema.\n     */\n    getFormatInstructions() {\n        return `You must format your output as a JSON value that adheres to a given \"JSON Schema\" instance.\n\n\"JSON Schema\" is a declarative language that allows you to annotate and validate JSON documents.\n\nFor example, the example \"JSON Schema\" instance {{\"properties\": {{\"foo\": {{\"description\": \"a list of test words\", \"type\": \"array\", \"items\": {{\"type\": \"string\"}}}}}}, \"required\": [\"foo\"]}}\nwould match an object with one required property, \"foo\". The \"type\" property specifies \"foo\" must be an \"array\", and the \"description\" property semantically describes it as \"a list of test words\". The items within \"foo\" must be strings.\nThus, the object {{\"foo\": [\"bar\", \"baz\"]}} is a well-formatted instance of this example \"JSON Schema\". The object {{\"properties\": {{\"foo\": [\"bar\", \"baz\"]}}}} is not well-formatted.\n\nYour output will be parsed and type-checked according to the provided schema instance, so make sure all fields in your output match the schema exactly and there are no trailing commas!\n\nHere is the JSON Schema instance your output must adhere to. Include the enclosing markdown codeblock:\n\\`\\`\\`json\n${JSON.stringify(zodToJsonSchema(this.schema))}\n\\`\\`\\`\n`;\n    }\n    /**\n     * Parses the given text according to the schema.\n     * @param text The text to parse\n     * @returns The parsed output.\n     */\n    async parse(text) {\n        try {\n            const json = text.includes(\"```\")\n                ? text.trim().split(/```(?:json)?/)[1]\n                : text.trim();\n            const escapedJson = json\n                .replace(/\"([^\"\\\\]*(\\\\.[^\"\\\\]*)*)\"/g, (_match, capturedGroup) => {\n                const escapedInsideQuotes = capturedGroup.replace(/\\n/g, \"\\\\n\");\n                return `\"${escapedInsideQuotes}\"`;\n            })\n                .replace(/\\n/g, \"\");\n            return await this.schema.parseAsync(JSON.parse(escapedJson));\n        }\n        catch (e) {\n            throw new OutputParserException(`Failed to parse. Text: \"${text}\". Error: ${e}`, text);\n        }\n    }\n}\n/**\n * A specific type of `StructuredOutputParser` that parses JSON data\n * formatted as a markdown code snippet.\n */\nexport class JsonMarkdownStructuredOutputParser extends StructuredOutputParser {\n    static lc_name() {\n        return \"JsonMarkdownStructuredOutputParser\";\n    }\n    getFormatInstructions(options) {\n        const interpolationDepth = options?.interpolationDepth ?? 1;\n        if (interpolationDepth < 1) {\n            throw new Error(\"f string interpolation depth must be at least 1\");\n        }\n        return `Return a markdown code snippet with a JSON object formatted to look like:\\n\\`\\`\\`json\\n${this._schemaToInstruction(zodToJsonSchema(this.schema))\n            .replaceAll(\"{\", \"{\".repeat(interpolationDepth))\n            .replaceAll(\"}\", \"}\".repeat(interpolationDepth))}\\n\\`\\`\\``;\n    }\n    _schemaToInstruction(schemaInput, indent = 2) {\n        const schema = schemaInput;\n        if (\"type\" in schema) {\n            let nullable = false;\n            let type;\n            if (Array.isArray(schema.type)) {\n                const nullIdx = schema.type.findIndex((type) => type === \"null\");\n                if (nullIdx !== -1) {\n                    nullable = true;\n                    schema.type.splice(nullIdx, 1);\n                }\n                type = schema.type.join(\" | \");\n            }\n            else {\n                type = schema.type;\n            }\n            if (schema.type === \"object\" && schema.properties) {\n                const description = schema.description\n                    ? ` // ${schema.description}`\n                    : \"\";\n                const properties = Object.entries(schema.properties)\n                    .map(([key, value]) => {\n                    const isOptional = schema.required?.includes(key)\n                        ? \"\"\n                        : \" (optional)\";\n                    return `${\" \".repeat(indent)}\"${key}\": ${this._schemaToInstruction(value, indent + 2)}${isOptional}`;\n                })\n                    .join(\"\\n\");\n                return `{\\n${properties}\\n${\" \".repeat(indent - 2)}}${description}`;\n            }\n            if (schema.type === \"array\" && schema.items) {\n                const description = schema.description\n                    ? ` // ${schema.description}`\n                    : \"\";\n                return `array[\\n${\" \".repeat(indent)}${this._schemaToInstruction(schema.items, indent + 2)}\\n${\" \".repeat(indent - 2)}] ${description}`;\n            }\n            const isNullable = nullable ? \" (nullable)\" : \"\";\n            const description = schema.description ? ` // ${schema.description}` : \"\";\n            return `${type}${description}${isNullable}`;\n        }\n        if (\"anyOf\" in schema) {\n            return schema.anyOf\n                .map((s) => this._schemaToInstruction(s, indent))\n                .join(`\\n${\" \".repeat(indent - 2)}`);\n        }\n        throw new Error(\"unsupported schema type\");\n    }\n    static fromZodSchema(schema) {\n        return new this(schema);\n    }\n    static fromNamesAndDescriptions(schemas) {\n        const zodSchema = z.object(Object.fromEntries(Object.entries(schemas).map(([name, description]) => [name, z.string().describe(description)])));\n        return new this(zodSchema);\n    }\n}\n/**\n * A type of `StructuredOutputParser` that handles asymmetric input and\n * output schemas.\n */\nexport class AsymmetricStructuredOutputParser extends BaseOutputParser {\n    constructor({ inputSchema }) {\n        super(...arguments);\n        Object.defineProperty(this, \"structuredInputParser\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.structuredInputParser = new JsonMarkdownStructuredOutputParser(inputSchema);\n    }\n    async parse(text) {\n        let parsedInput;\n        try {\n            parsedInput = await this.structuredInputParser.parse(text);\n        }\n        catch (e) {\n            throw new OutputParserException(`Failed to parse. Text: \"${text}\". Error: ${e}`, text);\n        }\n        return this.outputProcessor(parsedInput);\n    }\n    getFormatInstructions() {\n        return this.structuredInputParser.getFormatInstructions();\n    }\n}\n","import { BaseCumulativeTransformOutputParser } from \"./transform.js\";\nimport { compare } from \"../utils/json_patch.js\";\nimport { parseJsonMarkdown, parsePartialJson } from \"../utils/json.js\";\n/**\n * Class for parsing the output of an LLM into a JSON object.\n */\nexport class JsonOutputParser extends BaseCumulativeTransformOutputParser {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain_core\", \"output_parsers\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n    }\n    static lc_name() {\n        return \"JsonOutputParser\";\n    }\n    _diff(prev, next) {\n        if (!next) {\n            return undefined;\n        }\n        if (!prev) {\n            return [{ op: \"replace\", path: \"\", value: next }];\n        }\n        return compare(prev, next);\n    }\n    // This should actually return Partial<T>, but there's no way\n    // to specify emitted chunks as instances separate from the main output type.\n    async parsePartialResult(generations) {\n        return parseJsonMarkdown(generations[0].text);\n    }\n    async parse(text) {\n        return parseJsonMarkdown(text, JSON.parse);\n    }\n    getFormatInstructions() {\n        return \"\";\n    }\n}\nexport { parsePartialJson, parseJsonMarkdown };\n","import { OutputParserException } from \"../base.js\";\nimport { parsePartialJson } from \"../json.js\";\nimport { BaseCumulativeTransformOutputParser, } from \"../transform.js\";\nimport { isAIMessage } from \"../../messages/ai.js\";\nexport function parseToolCall(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nrawToolCall, options) {\n    if (rawToolCall.function === undefined) {\n        return undefined;\n    }\n    let functionArgs;\n    if (options?.partial) {\n        try {\n            functionArgs = parsePartialJson(rawToolCall.function.arguments ?? \"{}\");\n        }\n        catch (e) {\n            return undefined;\n        }\n    }\n    else {\n        try {\n            functionArgs = JSON.parse(rawToolCall.function.arguments);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        }\n        catch (e) {\n            throw new OutputParserException([\n                `Function \"${rawToolCall.function.name}\" arguments:`,\n                ``,\n                rawToolCall.function.arguments,\n                ``,\n                `are not valid JSON.`,\n                `Error: ${e.message}`,\n            ].join(\"\\n\"));\n        }\n    }\n    const parsedToolCall = {\n        name: rawToolCall.function.name,\n        args: functionArgs,\n        type: \"tool_call\",\n    };\n    if (options?.returnId) {\n        parsedToolCall.id = rawToolCall.id;\n    }\n    return parsedToolCall;\n}\nexport function convertLangChainToolCallToOpenAI(toolCall) {\n    if (toolCall.id === undefined) {\n        throw new Error(`All OpenAI tool calls must have an \"id\" field.`);\n    }\n    return {\n        id: toolCall.id,\n        type: \"function\",\n        function: {\n            name: toolCall.name,\n            arguments: JSON.stringify(toolCall.args),\n        },\n    };\n}\nexport function makeInvalidToolCall(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nrawToolCall, errorMsg) {\n    return {\n        name: rawToolCall.function?.name,\n        args: rawToolCall.function?.arguments,\n        id: rawToolCall.id,\n        error: errorMsg,\n        type: \"invalid_tool_call\",\n    };\n}\n/**\n * Class for parsing the output of a tool-calling LLM into a JSON object.\n */\nexport class JsonOutputToolsParser extends BaseCumulativeTransformOutputParser {\n    static lc_name() {\n        return \"JsonOutputToolsParser\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"returnId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"output_parsers\", \"openai_tools\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        this.returnId = fields?.returnId ?? this.returnId;\n    }\n    _diff() {\n        throw new Error(\"Not supported.\");\n    }\n    async parse() {\n        throw new Error(\"Not implemented.\");\n    }\n    async parseResult(generations) {\n        const result = await this.parsePartialResult(generations, false);\n        return result;\n    }\n    /**\n     * Parses the output and returns a JSON object. If `argsOnly` is true,\n     * only the arguments of the function call are returned.\n     * @param generations The output of the LLM to parse.\n     * @returns A JSON object representation of the function call or its arguments.\n     */\n    async parsePartialResult(generations, partial = true\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ) {\n        const message = generations[0].message;\n        let toolCalls;\n        if (isAIMessage(message) && message.tool_calls?.length) {\n            toolCalls = message.tool_calls.map((toolCall) => {\n                const { id, ...rest } = toolCall;\n                if (!this.returnId) {\n                    return rest;\n                }\n                return {\n                    id,\n                    ...rest,\n                };\n            });\n        }\n        else if (message.additional_kwargs.tool_calls !== undefined) {\n            const rawToolCalls = JSON.parse(JSON.stringify(message.additional_kwargs.tool_calls));\n            toolCalls = rawToolCalls.map((rawToolCall) => {\n                return parseToolCall(rawToolCall, { returnId: this.returnId, partial });\n            });\n        }\n        if (!toolCalls) {\n            return [];\n        }\n        const parsedToolCalls = [];\n        for (const toolCall of toolCalls) {\n            if (toolCall !== undefined) {\n                const backwardsCompatibleToolCall = {\n                    type: toolCall.name,\n                    args: toolCall.args,\n                    id: toolCall.id,\n                };\n                parsedToolCalls.push(backwardsCompatibleToolCall);\n            }\n        }\n        return parsedToolCalls;\n    }\n}\n/**\n * Class for parsing the output of a tool-calling LLM into a JSON object if you are\n * expecting only a single tool to be called.\n */\nexport class JsonOutputKeyToolsParser extends JsonOutputToolsParser {\n    static lc_name() {\n        return \"JsonOutputKeyToolsParser\";\n    }\n    constructor(params) {\n        super(params);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"output_parsers\", \"openai_tools\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"returnId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        /** The type of tool calls to return. */\n        Object.defineProperty(this, \"keyName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /** Whether to return only the first tool call. */\n        Object.defineProperty(this, \"returnSingle\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"zodSchema\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.keyName = params.keyName;\n        this.returnSingle = params.returnSingle ?? this.returnSingle;\n        this.zodSchema = params.zodSchema;\n    }\n    async _validateResult(result) {\n        if (this.zodSchema === undefined) {\n            return result;\n        }\n        const zodParsedResult = await this.zodSchema.safeParseAsync(result);\n        if (zodParsedResult.success) {\n            return zodParsedResult.data;\n        }\n        else {\n            throw new OutputParserException(`Failed to parse. Text: \"${JSON.stringify(result, null, 2)}\". Error: ${JSON.stringify(zodParsedResult.error.errors)}`, JSON.stringify(result, null, 2));\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    async parsePartialResult(generations) {\n        const results = await super.parsePartialResult(generations);\n        const matchingResults = results.filter((result) => result.type === this.keyName);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let returnedValues = matchingResults;\n        if (!matchingResults.length) {\n            return undefined;\n        }\n        if (!this.returnId) {\n            returnedValues = matchingResults.map((result) => result.args);\n        }\n        if (this.returnSingle) {\n            return returnedValues[0];\n        }\n        return returnedValues;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    async parseResult(generations) {\n        const results = await super.parsePartialResult(generations, false);\n        const matchingResults = results.filter((result) => result.type === this.keyName);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let returnedValues = matchingResults;\n        if (!matchingResults.length) {\n            return undefined;\n        }\n        if (!this.returnId) {\n            returnedValues = matchingResults.map((result) => result.args);\n        }\n        if (this.returnSingle) {\n            return this._validateResult(returnedValues[0]);\n        }\n        const toolCallResults = await Promise.all(returnedValues.map((value) => this._validateResult(value)));\n        return toolCallResults;\n    }\n}\n","export function addErrorMessage(res, key, errorMessage, refs) {\n    if (!refs?.errorMessages)\n        return;\n    if (errorMessage) {\n        res.errorMessage = {\n            ...res.errorMessage,\n            [key]: errorMessage,\n        };\n    }\n}\nexport function setResponseValueAndErrors(res, key, value, errorMessage, refs) {\n    res[key] = value;\n    addErrorMessage(res, key, errorMessage, refs);\n}\n//# sourceMappingURL=errorMessages.mjs.map","import { setResponseValueAndErrors } from \"../errorMessages.mjs\";\nexport function parseDateDef(def, refs, overrideDateStrategy) {\n    const strategy = overrideDateStrategy ?? refs.dateStrategy;\n    if (Array.isArray(strategy)) {\n        return {\n            anyOf: strategy.map((item, i) => parseDateDef(def, refs, item)),\n        };\n    }\n    switch (strategy) {\n        case 'string':\n        case 'format:date-time':\n            return {\n                type: 'string',\n                format: 'date-time',\n            };\n        case 'format:date':\n            return {\n                type: 'string',\n                format: 'date',\n            };\n        case 'integer':\n            return integerDateParser(def, refs);\n    }\n}\nconst integerDateParser = (def, refs) => {\n    const res = {\n        type: 'integer',\n        format: 'unix-time',\n    };\n    if (refs.target === 'openApi3') {\n        return res;\n    }\n    for (const check of def.checks) {\n        switch (check.kind) {\n            case 'min':\n                setResponseValueAndErrors(res, 'minimum', check.value, // This is in milliseconds\n                check.message, refs);\n                break;\n            case 'max':\n                setResponseValueAndErrors(res, 'maximum', check.value, // This is in milliseconds\n                check.message, refs);\n                break;\n        }\n    }\n    return res;\n};\n//# sourceMappingURL=date.mjs.map","import { setResponseValueAndErrors } from \"../errorMessages.mjs\";\nlet emojiRegex;\n/**\n * Generated from the regular expressions found here as of 2024-05-22:\n * https://github.com/colinhacks/zod/blob/master/src/types.ts.\n *\n * Expressions with /i flag have been changed accordingly.\n */\nexport const zodPatterns = {\n    /**\n     * `c` was changed to `[cC]` to replicate /i flag\n     */\n    cuid: /^[cC][^\\s-]{8,}$/,\n    cuid2: /^[0-9a-z]+$/,\n    ulid: /^[0-9A-HJKMNP-TV-Z]{26}$/,\n    /**\n     * `a-z` was added to replicate /i flag\n     */\n    email: /^(?!\\.)(?!.*\\.\\.)([a-zA-Z0-9_'+\\-\\.]*)[a-zA-Z0-9_+-]@([a-zA-Z0-9][a-zA-Z0-9\\-]*\\.)+[a-zA-Z]{2,}$/,\n    /**\n     * Constructed a valid Unicode RegExp\n     *\n     * Lazily instantiate since this type of regex isn't supported\n     * in all envs (e.g. React Native).\n     *\n     * See:\n     * https://github.com/colinhacks/zod/issues/2433\n     * Fix in Zod:\n     * https://github.com/colinhacks/zod/commit/9340fd51e48576a75adc919bff65dbc4a5d4c99b\n     */\n    emoji: () => {\n        if (emojiRegex === undefined) {\n            emojiRegex = RegExp('^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$', 'u');\n        }\n        return emojiRegex;\n    },\n    /**\n     * Unused\n     */\n    uuid: /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/,\n    /**\n     * Unused\n     */\n    ipv4: /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/,\n    /**\n     * Unused\n     */\n    ipv6: /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/,\n    base64: /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/,\n    nanoid: /^[a-zA-Z0-9_-]{21}$/,\n};\nexport function parseStringDef(def, refs) {\n    const res = {\n        type: 'string',\n    };\n    function processPattern(value) {\n        return refs.patternStrategy === 'escape' ? escapeNonAlphaNumeric(value) : value;\n    }\n    if (def.checks) {\n        for (const check of def.checks) {\n            switch (check.kind) {\n                case 'min':\n                    setResponseValueAndErrors(res, 'minLength', typeof res.minLength === 'number' ? Math.max(res.minLength, check.value) : check.value, check.message, refs);\n                    break;\n                case 'max':\n                    setResponseValueAndErrors(res, 'maxLength', typeof res.maxLength === 'number' ? Math.min(res.maxLength, check.value) : check.value, check.message, refs);\n                    break;\n                case 'email':\n                    switch (refs.emailStrategy) {\n                        case 'format:email':\n                            addFormat(res, 'email', check.message, refs);\n                            break;\n                        case 'format:idn-email':\n                            addFormat(res, 'idn-email', check.message, refs);\n                            break;\n                        case 'pattern:zod':\n                            addPattern(res, zodPatterns.email, check.message, refs);\n                            break;\n                    }\n                    break;\n                case 'url':\n                    addFormat(res, 'uri', check.message, refs);\n                    break;\n                case 'uuid':\n                    addFormat(res, 'uuid', check.message, refs);\n                    break;\n                case 'regex':\n                    addPattern(res, check.regex, check.message, refs);\n                    break;\n                case 'cuid':\n                    addPattern(res, zodPatterns.cuid, check.message, refs);\n                    break;\n                case 'cuid2':\n                    addPattern(res, zodPatterns.cuid2, check.message, refs);\n                    break;\n                case 'startsWith':\n                    addPattern(res, RegExp(`^${processPattern(check.value)}`), check.message, refs);\n                    break;\n                case 'endsWith':\n                    addPattern(res, RegExp(`${processPattern(check.value)}$`), check.message, refs);\n                    break;\n                case 'datetime':\n                    addFormat(res, 'date-time', check.message, refs);\n                    break;\n                case 'date':\n                    addFormat(res, 'date', check.message, refs);\n                    break;\n                case 'time':\n                    addFormat(res, 'time', check.message, refs);\n                    break;\n                case 'duration':\n                    addFormat(res, 'duration', check.message, refs);\n                    break;\n                case 'length':\n                    setResponseValueAndErrors(res, 'minLength', typeof res.minLength === 'number' ? Math.max(res.minLength, check.value) : check.value, check.message, refs);\n                    setResponseValueAndErrors(res, 'maxLength', typeof res.maxLength === 'number' ? Math.min(res.maxLength, check.value) : check.value, check.message, refs);\n                    break;\n                case 'includes': {\n                    addPattern(res, RegExp(processPattern(check.value)), check.message, refs);\n                    break;\n                }\n                case 'ip': {\n                    if (check.version !== 'v6') {\n                        addFormat(res, 'ipv4', check.message, refs);\n                    }\n                    if (check.version !== 'v4') {\n                        addFormat(res, 'ipv6', check.message, refs);\n                    }\n                    break;\n                }\n                case 'emoji':\n                    addPattern(res, zodPatterns.emoji, check.message, refs);\n                    break;\n                case 'ulid': {\n                    addPattern(res, zodPatterns.ulid, check.message, refs);\n                    break;\n                }\n                case 'base64': {\n                    switch (refs.base64Strategy) {\n                        case 'format:binary': {\n                            addFormat(res, 'binary', check.message, refs);\n                            break;\n                        }\n                        case 'contentEncoding:base64': {\n                            setResponseValueAndErrors(res, 'contentEncoding', 'base64', check.message, refs);\n                            break;\n                        }\n                        case 'pattern:zod': {\n                            addPattern(res, zodPatterns.base64, check.message, refs);\n                            break;\n                        }\n                    }\n                    break;\n                }\n                case 'nanoid': {\n                    addPattern(res, zodPatterns.nanoid, check.message, refs);\n                }\n                case 'toLowerCase':\n                case 'toUpperCase':\n                case 'trim':\n                    break;\n                default:\n                    ((_) => { })(check);\n            }\n        }\n    }\n    return res;\n}\nconst escapeNonAlphaNumeric = (value) => Array.from(value)\n    .map((c) => (/[a-zA-Z0-9]/.test(c) ? c : `\\\\${c}`))\n    .join('');\nconst addFormat = (schema, value, message, refs) => {\n    if (schema.format || schema.anyOf?.some((x) => x.format)) {\n        if (!schema.anyOf) {\n            schema.anyOf = [];\n        }\n        if (schema.format) {\n            schema.anyOf.push({\n                format: schema.format,\n                ...(schema.errorMessage &&\n                    refs.errorMessages && {\n                    errorMessage: { format: schema.errorMessage.format },\n                }),\n            });\n            delete schema.format;\n            if (schema.errorMessage) {\n                delete schema.errorMessage.format;\n                if (Object.keys(schema.errorMessage).length === 0) {\n                    delete schema.errorMessage;\n                }\n            }\n        }\n        schema.anyOf.push({\n            format: value,\n            ...(message && refs.errorMessages && { errorMessage: { format: message } }),\n        });\n    }\n    else {\n        setResponseValueAndErrors(schema, 'format', value, message, refs);\n    }\n};\nconst addPattern = (schema, regex, message, refs) => {\n    if (schema.pattern || schema.allOf?.some((x) => x.pattern)) {\n        if (!schema.allOf) {\n            schema.allOf = [];\n        }\n        if (schema.pattern) {\n            schema.allOf.push({\n                pattern: schema.pattern,\n                ...(schema.errorMessage &&\n                    refs.errorMessages && {\n                    errorMessage: { pattern: schema.errorMessage.pattern },\n                }),\n            });\n            delete schema.pattern;\n            if (schema.errorMessage) {\n                delete schema.errorMessage.pattern;\n                if (Object.keys(schema.errorMessage).length === 0) {\n                    delete schema.errorMessage;\n                }\n            }\n        }\n        schema.allOf.push({\n            pattern: processRegExp(regex, refs),\n            ...(message && refs.errorMessages && { errorMessage: { pattern: message } }),\n        });\n    }\n    else {\n        setResponseValueAndErrors(schema, 'pattern', processRegExp(regex, refs), message, refs);\n    }\n};\n// Mutate z.string.regex() in a best attempt to accommodate for regex flags when applyRegexFlags is true\nconst processRegExp = (regexOrFunction, refs) => {\n    const regex = typeof regexOrFunction === 'function' ? regexOrFunction() : regexOrFunction;\n    if (!refs.applyRegexFlags || !regex.flags)\n        return regex.source;\n    // Currently handled flags\n    const flags = {\n        i: regex.flags.includes('i'),\n        m: regex.flags.includes('m'),\n        s: regex.flags.includes('s'), // `.` matches newlines\n    };\n    // The general principle here is to step through each character, one at a time, applying mutations as flags require. We keep track when the current character is escaped, and when it's inside a group /like [this]/ or (also) a range like /[a-z]/. The following is fairly brittle imperative code; edit at your peril!\n    const source = flags.i ? regex.source.toLowerCase() : regex.source;\n    let pattern = '';\n    let isEscaped = false;\n    let inCharGroup = false;\n    let inCharRange = false;\n    for (let i = 0; i < source.length; i++) {\n        if (isEscaped) {\n            pattern += source[i];\n            isEscaped = false;\n            continue;\n        }\n        if (flags.i) {\n            if (inCharGroup) {\n                if (source[i].match(/[a-z]/)) {\n                    if (inCharRange) {\n                        pattern += source[i];\n                        pattern += `${source[i - 2]}-${source[i]}`.toUpperCase();\n                        inCharRange = false;\n                    }\n                    else if (source[i + 1] === '-' && source[i + 2]?.match(/[a-z]/)) {\n                        pattern += source[i];\n                        inCharRange = true;\n                    }\n                    else {\n                        pattern += `${source[i]}${source[i].toUpperCase()}`;\n                    }\n                    continue;\n                }\n            }\n            else if (source[i].match(/[a-z]/)) {\n                pattern += `[${source[i]}${source[i].toUpperCase()}]`;\n                continue;\n            }\n        }\n        if (flags.m) {\n            if (source[i] === '^') {\n                pattern += `(^|(?<=[\\r\\n]))`;\n                continue;\n            }\n            else if (source[i] === '$') {\n                pattern += `($|(?=[\\r\\n]))`;\n                continue;\n            }\n        }\n        if (flags.s && source[i] === '.') {\n            pattern += inCharGroup ? `${source[i]}\\r\\n` : `[${source[i]}\\r\\n]`;\n            continue;\n        }\n        pattern += source[i];\n        if (source[i] === '\\\\') {\n            isEscaped = true;\n        }\n        else if (inCharGroup && source[i] === ']') {\n            inCharGroup = false;\n        }\n        else if (!inCharGroup && source[i] === '[') {\n            inCharGroup = true;\n        }\n    }\n    try {\n        const regexTest = new RegExp(pattern);\n    }\n    catch {\n        console.warn(`Could not convert regex pattern at ${refs.currentPath.join('/')} to a flag-independent form! Falling back to the flag-ignorant source`);\n        return regex.source;\n    }\n    return pattern;\n};\n//# sourceMappingURL=string.mjs.map","import { ZodFirstPartyTypeKind } from 'zod';\nimport { parseDef } from \"../parseDef.mjs\";\nimport { parseStringDef } from \"./string.mjs\";\nexport function parseRecordDef(def, refs) {\n    if (refs.target === 'openApi3' && def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodEnum) {\n        return {\n            type: 'object',\n            required: def.keyType._def.values,\n            properties: def.keyType._def.values.reduce((acc, key) => ({\n                ...acc,\n                [key]: parseDef(def.valueType._def, {\n                    ...refs,\n                    currentPath: [...refs.currentPath, 'properties', key],\n                }) ?? {},\n            }), {}),\n            additionalProperties: false,\n        };\n    }\n    const schema = {\n        type: 'object',\n        additionalProperties: parseDef(def.valueType._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, 'additionalProperties'],\n        }) ?? {},\n    };\n    if (refs.target === 'openApi3') {\n        return schema;\n    }\n    if (def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodString && def.keyType._def.checks?.length) {\n        const keyType = Object.entries(parseStringDef(def.keyType._def, refs)).reduce((acc, [key, value]) => (key === 'type' ? acc : { ...acc, [key]: value }), {});\n        return {\n            ...schema,\n            propertyNames: keyType,\n        };\n    }\n    else if (def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodEnum) {\n        return {\n            ...schema,\n            propertyNames: {\n                enum: def.keyType._def.values,\n            },\n        };\n    }\n    return schema;\n}\n//# sourceMappingURL=record.mjs.map","import { parseDef } from \"../parseDef.mjs\";\nexport const primitiveMappings = {\n    ZodString: 'string',\n    ZodNumber: 'number',\n    ZodBigInt: 'integer',\n    ZodBoolean: 'boolean',\n    ZodNull: 'null',\n};\nexport function parseUnionDef(def, refs) {\n    if (refs.target === 'openApi3')\n        return asAnyOf(def, refs);\n    const options = def.options instanceof Map ? Array.from(def.options.values()) : def.options;\n    // This blocks tries to look ahead a bit to produce nicer looking schemas with type array instead of anyOf.\n    if (options.every((x) => x._def.typeName in primitiveMappings && (!x._def.checks || !x._def.checks.length))) {\n        // all types in union are primitive and lack checks, so might as well squash into {type: [...]}\n        const types = options.reduce((types, x) => {\n            const type = primitiveMappings[x._def.typeName]; //Can be safely casted due to row 43\n            return type && !types.includes(type) ? [...types, type] : types;\n        }, []);\n        return {\n            type: types.length > 1 ? types : types[0],\n        };\n    }\n    else if (options.every((x) => x._def.typeName === 'ZodLiteral' && !x.description)) {\n        // all options literals\n        const types = options.reduce((acc, x) => {\n            const type = typeof x._def.value;\n            switch (type) {\n                case 'string':\n                case 'number':\n                case 'boolean':\n                    return [...acc, type];\n                case 'bigint':\n                    return [...acc, 'integer'];\n                case 'object':\n                    if (x._def.value === null)\n                        return [...acc, 'null'];\n                case 'symbol':\n                case 'undefined':\n                case 'function':\n                default:\n                    return acc;\n            }\n        }, []);\n        if (types.length === options.length) {\n            // all the literals are primitive, as far as null can be considered primitive\n            const uniqueTypes = types.filter((x, i, a) => a.indexOf(x) === i);\n            return {\n                type: uniqueTypes.length > 1 ? uniqueTypes : uniqueTypes[0],\n                enum: options.reduce((acc, x) => {\n                    return acc.includes(x._def.value) ? acc : [...acc, x._def.value];\n                }, []),\n            };\n        }\n    }\n    else if (options.every((x) => x._def.typeName === 'ZodEnum')) {\n        return {\n            type: 'string',\n            enum: options.reduce((acc, x) => [...acc, ...x._def.values.filter((x) => !acc.includes(x))], []),\n        };\n    }\n    return asAnyOf(def, refs);\n}\nconst asAnyOf = (def, refs) => {\n    const anyOf = (def.options instanceof Map ? Array.from(def.options.values()) : def.options)\n        .map((x, i) => parseDef(x._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, 'anyOf', `${i}`],\n    }))\n        .filter((x) => !!x && (!refs.strictUnions || (typeof x === 'object' && Object.keys(x).length > 0)));\n    return anyOf.length ? { anyOf } : undefined;\n};\n//# sourceMappingURL=union.mjs.map","import { parseDef } from \"../parseDef.mjs\";\nfunction decideAdditionalProperties(def, refs) {\n    if (refs.removeAdditionalStrategy === 'strict') {\n        return def.catchall._def.typeName === 'ZodNever' ?\n            def.unknownKeys !== 'strict'\n            : parseDef(def.catchall._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, 'additionalProperties'],\n            }) ?? true;\n    }\n    else {\n        return def.catchall._def.typeName === 'ZodNever' ?\n            def.unknownKeys === 'passthrough'\n            : parseDef(def.catchall._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, 'additionalProperties'],\n            }) ?? true;\n    }\n}\nexport function parseObjectDef(def, refs) {\n    const result = {\n        type: 'object',\n        ...Object.entries(def.shape()).reduce((acc, [propName, propDef]) => {\n            if (propDef === undefined || propDef._def === undefined)\n                return acc;\n            const propertyPath = [...refs.currentPath, 'properties', propName];\n            const parsedDef = parseDef(propDef._def, {\n                ...refs,\n                currentPath: propertyPath,\n                propertyPath,\n            });\n            if (parsedDef === undefined)\n                return acc;\n            if (refs.openaiStrictMode && propDef.isOptional() && !propDef.isNullable()) {\n                console.warn(`Zod field at \\`${propertyPath.join('/')}\\` uses \\`.optional()\\` without \\`.nullable()\\` which is not supported by the API. See: https://platform.openai.com/docs/guides/structured-outputs?api-mode=responses#all-fields-must-be-required\\nThis will become an error in a future version of the SDK.`);\n            }\n            return {\n                properties: {\n                    ...acc.properties,\n                    [propName]: parsedDef,\n                },\n                required: propDef.isOptional() && !refs.openaiStrictMode ? acc.required : [...acc.required, propName],\n            };\n        }, { properties: {}, required: [] }),\n        additionalProperties: decideAdditionalProperties(def, refs),\n    };\n    if (!result.required.length)\n        delete result.required;\n    return result;\n}\n//# sourceMappingURL=object.mjs.map","import { parseDef } from \"../parseDef.mjs\";\nexport const parseReadonlyDef = (def, refs) => {\n    return parseDef(def.innerType._def, refs);\n};\n//# sourceMappingURL=readonly.mjs.map","export const ignoreOverride = Symbol('Let zodToJsonSchema decide on which parser to use');\nconst defaultOptions = {\n    name: undefined,\n    $refStrategy: 'root',\n    effectStrategy: 'input',\n    pipeStrategy: 'all',\n    dateStrategy: 'format:date-time',\n    mapStrategy: 'entries',\n    nullableStrategy: 'from-target',\n    removeAdditionalStrategy: 'passthrough',\n    definitionPath: 'definitions',\n    target: 'jsonSchema7',\n    strictUnions: false,\n    errorMessages: false,\n    markdownDescription: false,\n    patternStrategy: 'escape',\n    applyRegexFlags: false,\n    emailStrategy: 'format:email',\n    base64Strategy: 'contentEncoding:base64',\n    nameStrategy: 'ref',\n};\nexport const getDefaultOptions = (options) => {\n    // We need to add `definitions` here as we may mutate it\n    return (typeof options === 'string' ?\n        {\n            ...defaultOptions,\n            basePath: ['#'],\n            definitions: {},\n            name: options,\n        }\n        : {\n            ...defaultOptions,\n            basePath: ['#'],\n            definitions: {},\n            ...options,\n        });\n};\n//# sourceMappingURL=Options.mjs.map","import { ZodFirstPartyTypeKind } from 'zod';\nimport { parseAnyDef } from \"./parsers/any.mjs\";\nimport { parseArrayDef } from \"./parsers/array.mjs\";\nimport { parseBigintDef } from \"./parsers/bigint.mjs\";\nimport { parseBooleanDef } from \"./parsers/boolean.mjs\";\nimport { parseBrandedDef } from \"./parsers/branded.mjs\";\nimport { parseCatchDef } from \"./parsers/catch.mjs\";\nimport { parseDateDef } from \"./parsers/date.mjs\";\nimport { parseDefaultDef } from \"./parsers/default.mjs\";\nimport { parseEffectsDef } from \"./parsers/effects.mjs\";\nimport { parseEnumDef } from \"./parsers/enum.mjs\";\nimport { parseIntersectionDef } from \"./parsers/intersection.mjs\";\nimport { parseLiteralDef } from \"./parsers/literal.mjs\";\nimport { parseMapDef } from \"./parsers/map.mjs\";\nimport { parseNativeEnumDef } from \"./parsers/nativeEnum.mjs\";\nimport { parseNeverDef } from \"./parsers/never.mjs\";\nimport { parseNullDef } from \"./parsers/null.mjs\";\nimport { parseNullableDef } from \"./parsers/nullable.mjs\";\nimport { parseNumberDef } from \"./parsers/number.mjs\";\nimport { parseObjectDef } from \"./parsers/object.mjs\";\nimport { parseOptionalDef } from \"./parsers/optional.mjs\";\nimport { parsePipelineDef } from \"./parsers/pipeline.mjs\";\nimport { parsePromiseDef } from \"./parsers/promise.mjs\";\nimport { parseRecordDef } from \"./parsers/record.mjs\";\nimport { parseSetDef } from \"./parsers/set.mjs\";\nimport { parseStringDef } from \"./parsers/string.mjs\";\nimport { parseTupleDef } from \"./parsers/tuple.mjs\";\nimport { parseUndefinedDef } from \"./parsers/undefined.mjs\";\nimport { parseUnionDef } from \"./parsers/union.mjs\";\nimport { parseUnknownDef } from \"./parsers/unknown.mjs\";\nimport { parseReadonlyDef } from \"./parsers/readonly.mjs\";\nimport { ignoreOverride } from \"./Options.mjs\";\nexport function parseDef(def, refs, forceResolution = false) {\n    const seenItem = refs.seen.get(def);\n    if (refs.override) {\n        const overrideResult = refs.override?.(def, refs, seenItem, forceResolution);\n        if (overrideResult !== ignoreOverride) {\n            return overrideResult;\n        }\n    }\n    if (seenItem && !forceResolution) {\n        const seenSchema = get$ref(seenItem, refs);\n        if (seenSchema !== undefined) {\n            if ('$ref' in seenSchema) {\n                refs.seenRefs.add(seenSchema.$ref);\n            }\n            return seenSchema;\n        }\n    }\n    const newItem = { def, path: refs.currentPath, jsonSchema: undefined };\n    refs.seen.set(def, newItem);\n    const jsonSchema = selectParser(def, def.typeName, refs, forceResolution);\n    if (jsonSchema) {\n        addMeta(def, refs, jsonSchema);\n    }\n    newItem.jsonSchema = jsonSchema;\n    return jsonSchema;\n}\nconst get$ref = (item, refs) => {\n    switch (refs.$refStrategy) {\n        case 'root':\n            return { $ref: item.path.join('/') };\n        // this case is needed as OpenAI strict mode doesn't support top-level `$ref`s, i.e.\n        // the top-level schema *must* be `{\"type\": \"object\", \"properties\": {...}}` but if we ever\n        // need to define a `$ref`, relative `$ref`s aren't supported, so we need to extract\n        // the schema to `#/definitions/` and reference that.\n        //\n        // e.g. if we need to reference a schema at\n        // `[\"#\",\"definitions\",\"contactPerson\",\"properties\",\"person1\",\"properties\",\"name\"]`\n        // then we'll extract it out to `contactPerson_properties_person1_properties_name`\n        case 'extract-to-root':\n            const name = item.path.slice(refs.basePath.length + 1).join('_');\n            // we don't need to extract the root schema in this case, as it's already\n            // been added to the definitions\n            if (name !== refs.name && refs.nameStrategy === 'duplicate-ref') {\n                refs.definitions[name] = item.def;\n            }\n            return { $ref: [...refs.basePath, refs.definitionPath, name].join('/') };\n        case 'relative':\n            return { $ref: getRelativePath(refs.currentPath, item.path) };\n        case 'none':\n        case 'seen': {\n            if (item.path.length < refs.currentPath.length &&\n                item.path.every((value, index) => refs.currentPath[index] === value)) {\n                console.warn(`Recursive reference detected at ${refs.currentPath.join('/')}! Defaulting to any`);\n                return {};\n            }\n            return refs.$refStrategy === 'seen' ? {} : undefined;\n        }\n    }\n};\nconst getRelativePath = (pathA, pathB) => {\n    let i = 0;\n    for (; i < pathA.length && i < pathB.length; i++) {\n        if (pathA[i] !== pathB[i])\n            break;\n    }\n    return [(pathA.length - i).toString(), ...pathB.slice(i)].join('/');\n};\nconst selectParser = (def, typeName, refs, forceResolution) => {\n    switch (typeName) {\n        case ZodFirstPartyTypeKind.ZodString:\n            return parseStringDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodNumber:\n            return parseNumberDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodObject:\n            return parseObjectDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodBigInt:\n            return parseBigintDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodBoolean:\n            return parseBooleanDef();\n        case ZodFirstPartyTypeKind.ZodDate:\n            return parseDateDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodUndefined:\n            return parseUndefinedDef();\n        case ZodFirstPartyTypeKind.ZodNull:\n            return parseNullDef(refs);\n        case ZodFirstPartyTypeKind.ZodArray:\n            return parseArrayDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodUnion:\n        case ZodFirstPartyTypeKind.ZodDiscriminatedUnion:\n            return parseUnionDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodIntersection:\n            return parseIntersectionDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodTuple:\n            return parseTupleDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodRecord:\n            return parseRecordDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodLiteral:\n            return parseLiteralDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodEnum:\n            return parseEnumDef(def);\n        case ZodFirstPartyTypeKind.ZodNativeEnum:\n            return parseNativeEnumDef(def);\n        case ZodFirstPartyTypeKind.ZodNullable:\n            return parseNullableDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodOptional:\n            return parseOptionalDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodMap:\n            return parseMapDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodSet:\n            return parseSetDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodLazy:\n            return parseDef(def.getter()._def, refs);\n        case ZodFirstPartyTypeKind.ZodPromise:\n            return parsePromiseDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodNaN:\n        case ZodFirstPartyTypeKind.ZodNever:\n            return parseNeverDef();\n        case ZodFirstPartyTypeKind.ZodEffects:\n            return parseEffectsDef(def, refs, forceResolution);\n        case ZodFirstPartyTypeKind.ZodAny:\n            return parseAnyDef();\n        case ZodFirstPartyTypeKind.ZodUnknown:\n            return parseUnknownDef();\n        case ZodFirstPartyTypeKind.ZodDefault:\n            return parseDefaultDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodBranded:\n            return parseBrandedDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodReadonly:\n            return parseReadonlyDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodCatch:\n            return parseCatchDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodPipeline:\n            return parsePipelineDef(def, refs);\n        case ZodFirstPartyTypeKind.ZodFunction:\n        case ZodFirstPartyTypeKind.ZodVoid:\n        case ZodFirstPartyTypeKind.ZodSymbol:\n            return undefined;\n        default:\n            return ((_) => undefined)(typeName);\n    }\n};\nconst addMeta = (def, refs, jsonSchema) => {\n    if (def.description) {\n        jsonSchema.description = def.description;\n        if (refs.markdownDescription) {\n            jsonSchema.markdownDescription = def.description;\n        }\n    }\n    return jsonSchema;\n};\n//# sourceMappingURL=parseDef.mjs.map","import { addErrorMessage, setResponseValueAndErrors } from \"../errorMessages.mjs\";\nexport function parseNumberDef(def, refs) {\n    const res = {\n        type: 'number',\n    };\n    if (!def.checks)\n        return res;\n    for (const check of def.checks) {\n        switch (check.kind) {\n            case 'int':\n                res.type = 'integer';\n                addErrorMessage(res, 'type', check.message, refs);\n                break;\n            case 'min':\n                if (refs.target === 'jsonSchema7') {\n                    if (check.inclusive) {\n                        setResponseValueAndErrors(res, 'minimum', check.value, check.message, refs);\n                    }\n                    else {\n                        setResponseValueAndErrors(res, 'exclusiveMinimum', check.value, check.message, refs);\n                    }\n                }\n                else {\n                    if (!check.inclusive) {\n                        res.exclusiveMinimum = true;\n                    }\n                    setResponseValueAndErrors(res, 'minimum', check.value, check.message, refs);\n                }\n                break;\n            case 'max':\n                if (refs.target === 'jsonSchema7') {\n                    if (check.inclusive) {\n                        setResponseValueAndErrors(res, 'maximum', check.value, check.message, refs);\n                    }\n                    else {\n                        setResponseValueAndErrors(res, 'exclusiveMaximum', check.value, check.message, refs);\n                    }\n                }\n                else {\n                    if (!check.inclusive) {\n                        res.exclusiveMaximum = true;\n                    }\n                    setResponseValueAndErrors(res, 'maximum', check.value, check.message, refs);\n                }\n                break;\n            case 'multipleOf':\n                setResponseValueAndErrors(res, 'multipleOf', check.value, check.message, refs);\n                break;\n        }\n    }\n    return res;\n}\n//# sourceMappingURL=number.mjs.map","import { setResponseValueAndErrors } from \"../errorMessages.mjs\";\nexport function parseBigintDef(def, refs) {\n    const res = {\n        type: 'integer',\n        format: 'int64',\n    };\n    if (!def.checks)\n        return res;\n    for (const check of def.checks) {\n        switch (check.kind) {\n            case 'min':\n                if (refs.target === 'jsonSchema7') {\n                    if (check.inclusive) {\n                        setResponseValueAndErrors(res, 'minimum', check.value, check.message, refs);\n                    }\n                    else {\n                        setResponseValueAndErrors(res, 'exclusiveMinimum', check.value, check.message, refs);\n                    }\n                }\n                else {\n                    if (!check.inclusive) {\n                        res.exclusiveMinimum = true;\n                    }\n                    setResponseValueAndErrors(res, 'minimum', check.value, check.message, refs);\n                }\n                break;\n            case 'max':\n                if (refs.target === 'jsonSchema7') {\n                    if (check.inclusive) {\n                        setResponseValueAndErrors(res, 'maximum', check.value, check.message, refs);\n                    }\n                    else {\n                        setResponseValueAndErrors(res, 'exclusiveMaximum', check.value, check.message, refs);\n                    }\n                }\n                else {\n                    if (!check.inclusive) {\n                        res.exclusiveMaximum = true;\n                    }\n                    setResponseValueAndErrors(res, 'maximum', check.value, check.message, refs);\n                }\n                break;\n            case 'multipleOf':\n                setResponseValueAndErrors(res, 'multipleOf', check.value, check.message, refs);\n                break;\n        }\n    }\n    return res;\n}\n//# sourceMappingURL=bigint.mjs.map","export function parseBooleanDef() {\n    return {\n        type: 'boolean',\n    };\n}\n//# sourceMappingURL=boolean.mjs.map","export function parseUndefinedDef() {\n    return {\n        not: {},\n    };\n}\n//# sourceMappingURL=undefined.mjs.map","export function parseNullDef(refs) {\n    return refs.target === 'openApi3' ?\n        {\n            enum: ['null'],\n            nullable: true,\n        }\n        : {\n            type: 'null',\n        };\n}\n//# sourceMappingURL=null.mjs.map","import { ZodFirstPartyTypeKind } from 'zod';\nimport { setResponseValueAndErrors } from \"../errorMessages.mjs\";\nimport { parseDef } from \"../parseDef.mjs\";\nexport function parseArrayDef(def, refs) {\n    const res = {\n        type: 'array',\n    };\n    if (def.type?._def?.typeName !== ZodFirstPartyTypeKind.ZodAny) {\n        res.items = parseDef(def.type._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, 'items'],\n        });\n    }\n    if (def.minLength) {\n        setResponseValueAndErrors(res, 'minItems', def.minLength.value, def.minLength.message, refs);\n    }\n    if (def.maxLength) {\n        setResponseValueAndErrors(res, 'maxItems', def.maxLength.value, def.maxLength.message, refs);\n    }\n    if (def.exactLength) {\n        setResponseValueAndErrors(res, 'minItems', def.exactLength.value, def.exactLength.message, refs);\n        setResponseValueAndErrors(res, 'maxItems', def.exactLength.value, def.exactLength.message, refs);\n    }\n    return res;\n}\n//# sourceMappingURL=array.mjs.map","import { parseDef } from \"../parseDef.mjs\";\nconst isJsonSchema7AllOfType = (type) => {\n    if ('type' in type && type.type === 'string')\n        return false;\n    return 'allOf' in type;\n};\nexport function parseIntersectionDef(def, refs) {\n    const allOf = [\n        parseDef(def.left._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, 'allOf', '0'],\n        }),\n        parseDef(def.right._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, 'allOf', '1'],\n        }),\n    ].filter((x) => !!x);\n    let unevaluatedProperties = refs.target === 'jsonSchema2019-09' ? { unevaluatedProperties: false } : undefined;\n    const mergedAllOf = [];\n    // If either of the schemas is an allOf, merge them into a single allOf\n    allOf.forEach((schema) => {\n        if (isJsonSchema7AllOfType(schema)) {\n            mergedAllOf.push(...schema.allOf);\n            if (schema.unevaluatedProperties === undefined) {\n                // If one of the schemas has no unevaluatedProperties set,\n                // the merged schema should also have no unevaluatedProperties set\n                unevaluatedProperties = undefined;\n            }\n        }\n        else {\n            let nestedSchema = schema;\n            if ('additionalProperties' in schema && schema.additionalProperties === false) {\n                const { additionalProperties, ...rest } = schema;\n                nestedSchema = rest;\n            }\n            else {\n                // As soon as one of the schemas has additionalProperties set not to false, we allow unevaluatedProperties\n                unevaluatedProperties = undefined;\n            }\n            mergedAllOf.push(nestedSchema);\n        }\n    });\n    return mergedAllOf.length ?\n        {\n            allOf: mergedAllOf,\n            ...unevaluatedProperties,\n        }\n        : undefined;\n}\n//# sourceMappingURL=intersection.mjs.map","import { parseDef } from \"../parseDef.mjs\";\nexport function parseTupleDef(def, refs) {\n    if (def.rest) {\n        return {\n            type: 'array',\n            minItems: def.items.length,\n            items: def.items\n                .map((x, i) => parseDef(x._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, 'items', `${i}`],\n            }))\n                .reduce((acc, x) => (x === undefined ? acc : [...acc, x]), []),\n            additionalItems: parseDef(def.rest._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, 'additionalItems'],\n            }),\n        };\n    }\n    else {\n        return {\n            type: 'array',\n            minItems: def.items.length,\n            maxItems: def.items.length,\n            items: def.items\n                .map((x, i) => parseDef(x._def, {\n                ...refs,\n                currentPath: [...refs.currentPath, 'items', `${i}`],\n            }))\n                .reduce((acc, x) => (x === undefined ? acc : [...acc, x]), []),\n        };\n    }\n}\n//# sourceMappingURL=tuple.mjs.map","export function parseLiteralDef(def, refs) {\n    const parsedType = typeof def.value;\n    if (parsedType !== 'bigint' &&\n        parsedType !== 'number' &&\n        parsedType !== 'boolean' &&\n        parsedType !== 'string') {\n        return {\n            type: Array.isArray(def.value) ? 'array' : 'object',\n        };\n    }\n    if (refs.target === 'openApi3') {\n        return {\n            type: parsedType === 'bigint' ? 'integer' : parsedType,\n            enum: [def.value],\n        };\n    }\n    return {\n        type: parsedType === 'bigint' ? 'integer' : parsedType,\n        const: def.value,\n    };\n}\n//# sourceMappingURL=literal.mjs.map","export function parseEnumDef(def) {\n    return {\n        type: 'string',\n        enum: [...def.values],\n    };\n}\n//# sourceMappingURL=enum.mjs.map","export function parseNativeEnumDef(def) {\n    const object = def.values;\n    const actualKeys = Object.keys(def.values).filter((key) => {\n        return typeof object[object[key]] !== 'number';\n    });\n    const actualValues = actualKeys.map((key) => object[key]);\n    const parsedTypes = Array.from(new Set(actualValues.map((values) => typeof values)));\n    return {\n        type: parsedTypes.length === 1 ?\n            parsedTypes[0] === 'string' ?\n                'string'\n                : 'number'\n            : ['string', 'number'],\n        enum: actualValues,\n    };\n}\n//# sourceMappingURL=nativeEnum.mjs.map","import { parseDef } from \"../parseDef.mjs\";\nimport { primitiveMappings } from \"./union.mjs\";\nexport function parseNullableDef(def, refs) {\n    if (['ZodString', 'ZodNumber', 'ZodBigInt', 'ZodBoolean', 'ZodNull'].includes(def.innerType._def.typeName) &&\n        (!def.innerType._def.checks || !def.innerType._def.checks.length)) {\n        if (refs.target === 'openApi3' || refs.nullableStrategy === 'property') {\n            return {\n                type: primitiveMappings[def.innerType._def.typeName],\n                nullable: true,\n            };\n        }\n        return {\n            type: [primitiveMappings[def.innerType._def.typeName], 'null'],\n        };\n    }\n    if (refs.target === 'openApi3') {\n        const base = parseDef(def.innerType._def, {\n            ...refs,\n            currentPath: [...refs.currentPath],\n        });\n        if (base && '$ref' in base)\n            return { allOf: [base], nullable: true };\n        return base && { ...base, nullable: true };\n    }\n    const base = parseDef(def.innerType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, 'anyOf', '0'],\n    });\n    return base && { anyOf: [base, { type: 'null' }] };\n}\n//# sourceMappingURL=nullable.mjs.map","import { parseDef } from \"../parseDef.mjs\";\nexport const parseOptionalDef = (def, refs) => {\n    if (refs.currentPath.toString() === refs.propertyPath?.toString()) {\n        return parseDef(def.innerType._def, refs);\n    }\n    const innerSchema = parseDef(def.innerType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, 'anyOf', '1'],\n    });\n    return innerSchema ?\n        {\n            anyOf: [\n                {\n                    not: {},\n                },\n                innerSchema,\n            ],\n        }\n        : {};\n};\n//# sourceMappingURL=optional.mjs.map","import { parseDef } from \"../parseDef.mjs\";\nimport { parseRecordDef } from \"./record.mjs\";\nexport function parseMapDef(def, refs) {\n    if (refs.mapStrategy === 'record') {\n        return parseRecordDef(def, refs);\n    }\n    const keys = parseDef(def.keyType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, 'items', 'items', '0'],\n    }) || {};\n    const values = parseDef(def.valueType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, 'items', 'items', '1'],\n    }) || {};\n    return {\n        type: 'array',\n        maxItems: 125,\n        items: {\n            type: 'array',\n            items: [keys, values],\n            minItems: 2,\n            maxItems: 2,\n        },\n    };\n}\n//# sourceMappingURL=map.mjs.map","import { setResponseValueAndErrors } from \"../errorMessages.mjs\";\nimport { parseDef } from \"../parseDef.mjs\";\nexport function parseSetDef(def, refs) {\n    const items = parseDef(def.valueType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, 'items'],\n    });\n    const schema = {\n        type: 'array',\n        uniqueItems: true,\n        items,\n    };\n    if (def.minSize) {\n        setResponseValueAndErrors(schema, 'minItems', def.minSize.value, def.minSize.message, refs);\n    }\n    if (def.maxSize) {\n        setResponseValueAndErrors(schema, 'maxItems', def.maxSize.value, def.maxSize.message, refs);\n    }\n    return schema;\n}\n//# sourceMappingURL=set.mjs.map","import { parseDef } from \"../parseDef.mjs\";\nexport function parsePromiseDef(def, refs) {\n    return parseDef(def.type._def, refs);\n}\n//# sourceMappingURL=promise.mjs.map","export function parseNeverDef() {\n    return {\n        not: {},\n    };\n}\n//# sourceMappingURL=never.mjs.map","import { parseDef } from \"../parseDef.mjs\";\nexport function parseEffectsDef(_def, refs, forceResolution) {\n    return refs.effectStrategy === 'input' ? parseDef(_def.schema._def, refs, forceResolution) : {};\n}\n//# sourceMappingURL=effects.mjs.map","export function parseUnknownDef() {\n    return {};\n}\n//# sourceMappingURL=unknown.mjs.map","import { parseDef } from \"../parseDef.mjs\";\nexport function parseDefaultDef(_def, refs) {\n    return {\n        ...parseDef(_def.innerType._def, refs),\n        default: _def.defaultValue(),\n    };\n}\n//# sourceMappingURL=default.mjs.map","import { parseDef } from \"../parseDef.mjs\";\nexport function parseBrandedDef(_def, refs) {\n    return parseDef(_def.type._def, refs);\n}\n//# sourceMappingURL=branded.mjs.map","import { parseDef } from \"../parseDef.mjs\";\nexport const parseCatchDef = (def, refs) => {\n    return parseDef(def.innerType._def, refs);\n};\n//# sourceMappingURL=catch.mjs.map","import { parseDef } from \"../parseDef.mjs\";\nexport const parsePipelineDef = (def, refs) => {\n    if (refs.pipeStrategy === 'input') {\n        return parseDef(def.in._def, refs);\n    }\n    else if (refs.pipeStrategy === 'output') {\n        return parseDef(def.out._def, refs);\n    }\n    const a = parseDef(def.in._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, 'allOf', '0'],\n    });\n    const b = parseDef(def.out._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, 'allOf', a ? '1' : '0'],\n    });\n    return {\n        allOf: [a, b].filter((x) => x !== undefined),\n    };\n};\n//# sourceMappingURL=pipeline.mjs.map","export const zodDef = (zodSchema) => {\n    return '_def' in zodSchema ? zodSchema._def : zodSchema;\n};\nexport function isEmptyObj(obj) {\n    if (!obj)\n        return true;\n    for (const _k in obj)\n        return false;\n    return true;\n}\n//# sourceMappingURL=util.mjs.map","import { makeParseableResponseFormat, makeParseableTextFormat, makeParseableTool, } from \"../lib/parser.mjs\";\nimport { zodToJsonSchema as _zodToJsonSchema } from \"../_vendor/zod-to-json-schema/index.mjs\";\nimport { makeParseableResponseTool } from \"../lib/ResponsesParser.mjs\";\nfunction zodToJsonSchema(schema, options) {\n    return _zodToJsonSchema(schema, {\n        openaiStrictMode: true,\n        name: options.name,\n        nameStrategy: 'duplicate-ref',\n        $refStrategy: 'extract-to-root',\n        nullableStrategy: 'property',\n    });\n}\n/**\n * Creates a chat completion `JSONSchema` response format object from\n * the given Zod schema.\n *\n * If this is passed to the `.parse()`, `.stream()` or `.runTools()`\n * chat completion methods then the response message will contain a\n * `.parsed` property that is the result of parsing the content with\n * the given Zod object.\n *\n * ```ts\n * const completion = await client.beta.chat.completions.parse({\n *    model: 'gpt-4o-2024-08-06',\n *    messages: [\n *      { role: 'system', content: 'You are a helpful math tutor.' },\n *      { role: 'user', content: 'solve 8x + 31 = 2' },\n *    ],\n *    response_format: zodResponseFormat(\n *      z.object({\n *        steps: z.array(z.object({\n *          explanation: z.string(),\n *          answer: z.string(),\n *        })),\n *        final_answer: z.string(),\n *      }),\n *      'math_answer',\n *    ),\n *  });\n *  const message = completion.choices[0]?.message;\n *  if (message?.parsed) {\n *    console.log(message.parsed);\n *    console.log(message.parsed.final_answer);\n * }\n * ```\n *\n * This can be passed directly to the `.create()` method but will not\n * result in any automatic parsing, you'll have to parse the response yourself.\n */\nexport function zodResponseFormat(zodObject, name, props) {\n    return makeParseableResponseFormat({\n        type: 'json_schema',\n        json_schema: {\n            ...props,\n            name,\n            strict: true,\n            schema: zodToJsonSchema(zodObject, { name }),\n        },\n    }, (content) => zodObject.parse(JSON.parse(content)));\n}\nexport function zodTextFormat(zodObject, name, props) {\n    return makeParseableTextFormat({\n        type: 'json_schema',\n        ...props,\n        name,\n        strict: true,\n        schema: zodToJsonSchema(zodObject, { name }),\n    }, (content) => zodObject.parse(JSON.parse(content)));\n}\n/**\n * Creates a chat completion `function` tool that can be invoked\n * automatically by the chat completion `.runTools()` method or automatically\n * parsed by `.parse()` / `.stream()`.\n */\nexport function zodFunction(options) {\n    // @ts-expect-error TODO\n    return makeParseableTool({\n        type: 'function',\n        function: {\n            name: options.name,\n            parameters: zodToJsonSchema(options.parameters, { name: options.name }),\n            strict: true,\n            ...(options.description ? { description: options.description } : undefined),\n        },\n    }, {\n        callback: options.function,\n        parser: (args) => options.parameters.parse(JSON.parse(args)),\n    });\n}\nexport function zodResponsesFunction(options) {\n    return makeParseableResponseTool({\n        type: 'function',\n        name: options.name,\n        parameters: zodToJsonSchema(options.parameters, { name: options.name }),\n        strict: true,\n        ...(options.description ? { description: options.description } : undefined),\n    }, {\n        callback: options.function,\n        parser: (args) => options.parameters.parse(JSON.parse(args)),\n    });\n}\n//# sourceMappingURL=zod.mjs.map","import { parseDef } from \"./parseDef.mjs\";\nimport { getRefs } from \"./Refs.mjs\";\nimport { zodDef, isEmptyObj } from \"./util.mjs\";\nconst zodToJsonSchema = (schema, options) => {\n    const refs = getRefs(options);\n    const name = typeof options === 'string' ? options\n        : options?.nameStrategy === 'title' ? undefined\n            : options?.name;\n    const main = parseDef(schema._def, name === undefined ? refs : ({\n        ...refs,\n        currentPath: [...refs.basePath, refs.definitionPath, name],\n    }), false) ?? {};\n    const title = typeof options === 'object' && options.name !== undefined && options.nameStrategy === 'title' ?\n        options.name\n        : undefined;\n    if (title !== undefined) {\n        main.title = title;\n    }\n    const definitions = (() => {\n        if (isEmptyObj(refs.definitions)) {\n            return undefined;\n        }\n        const definitions = {};\n        const processedDefinitions = new Set();\n        // the call to `parseDef()` here might itself add more entries to `.definitions`\n        // so we need to continually evaluate definitions until we've resolved all of them\n        //\n        // we have a generous iteration limit here to avoid blowing up the stack if there\n        // are any bugs that would otherwise result in us iterating indefinitely\n        for (let i = 0; i < 500; i++) {\n            const newDefinitions = Object.entries(refs.definitions).filter(([key]) => !processedDefinitions.has(key));\n            if (newDefinitions.length === 0)\n                break;\n            for (const [key, schema] of newDefinitions) {\n                definitions[key] =\n                    parseDef(zodDef(schema), { ...refs, currentPath: [...refs.basePath, refs.definitionPath, key] }, true) ?? {};\n                processedDefinitions.add(key);\n            }\n        }\n        return definitions;\n    })();\n    const combined = name === undefined ?\n        definitions ?\n            {\n                ...main,\n                [refs.definitionPath]: definitions,\n            }\n            : main\n        : refs.nameStrategy === 'duplicate-ref' ?\n            {\n                ...main,\n                ...(definitions || refs.seenRefs.size ?\n                    {\n                        [refs.definitionPath]: {\n                            ...definitions,\n                            // only actually duplicate the schema definition if it was ever referenced\n                            // otherwise the duplication is completely pointless\n                            ...(refs.seenRefs.size ? { [name]: main } : undefined),\n                        },\n                    }\n                    : undefined),\n            }\n            : {\n                $ref: [...(refs.$refStrategy === 'relative' ? [] : refs.basePath), refs.definitionPath, name].join('/'),\n                [refs.definitionPath]: {\n                    ...definitions,\n                    [name]: main,\n                },\n            };\n    if (refs.target === 'jsonSchema7') {\n        combined.$schema = 'http://json-schema.org/draft-07/schema#';\n    }\n    else if (refs.target === 'jsonSchema2019-09') {\n        combined.$schema = 'https://json-schema.org/draft/2019-09/schema#';\n    }\n    return combined;\n};\nexport { zodToJsonSchema };\n//# sourceMappingURL=zodToJsonSchema.mjs.map","import { getDefaultOptions } from \"./Options.mjs\";\nimport { zodDef } from \"./util.mjs\";\nexport const getRefs = (options) => {\n    const _options = getDefaultOptions(options);\n    const currentPath = _options.name !== undefined ?\n        [..._options.basePath, _options.definitionPath, _options.name]\n        : _options.basePath;\n    return {\n        ..._options,\n        currentPath: currentPath,\n        propertyPath: undefined,\n        seenRefs: new Set(),\n        seen: new Map(Object.entries(_options.definitions).map(([name, def]) => [\n            zodDef(def),\n            {\n                def: zodDef(def),\n                path: [..._options.basePath, _options.definitionPath, name],\n                // Resolution of references will be forced even though seen, so it's ok that the schema is undefined here for now.\n                jsonSchema: undefined,\n            },\n        ])),\n    };\n};\n//# sourceMappingURL=Refs.mjs.map","import { Runnable, } from \"../runnables/base.js\";\nimport { isZodSchema } from \"../utils/types/is_zod_schema.js\";\n/**\n * Confirm whether the inputted tool is an instance of `StructuredToolInterface`.\n *\n * @param {StructuredToolInterface | JSONSchema | undefined} tool The tool to check if it is an instance of `StructuredToolInterface`.\n * @returns {tool is StructuredToolInterface} Whether the inputted tool is an instance of `StructuredToolInterface`.\n */\nexport function isStructuredTool(tool) {\n    return (tool !== undefined &&\n        Array.isArray(tool.lc_namespace));\n}\n/**\n * Confirm whether the inputted tool is an instance of `RunnableToolLike`.\n *\n * @param {unknown | undefined} tool The tool to check if it is an instance of `RunnableToolLike`.\n * @returns {tool is RunnableToolLike} Whether the inputted tool is an instance of `RunnableToolLike`.\n */\nexport function isRunnableToolLike(tool) {\n    return (tool !== undefined &&\n        Runnable.isRunnable(tool) &&\n        \"lc_name\" in tool.constructor &&\n        typeof tool.constructor.lc_name === \"function\" &&\n        tool.constructor.lc_name() === \"RunnableToolLike\");\n}\n/**\n * Confirm whether or not the tool contains the necessary properties to be considered a `StructuredToolParams`.\n *\n * @param {unknown | undefined} tool The object to check if it is a `StructuredToolParams`.\n * @returns {tool is StructuredToolParams} Whether the inputted object is a `StructuredToolParams`.\n */\nexport function isStructuredToolParams(tool) {\n    return (!!tool &&\n        typeof tool === \"object\" &&\n        \"name\" in tool &&\n        \"schema\" in tool &&\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        isZodSchema(tool.schema));\n}\n/**\n * Whether or not the tool is one of StructuredTool, RunnableTool or StructuredToolParams.\n * It returns `is StructuredToolParams` since that is the most minimal interface of the three,\n * while still containing the necessary properties to be passed to a LLM for tool calling.\n *\n * @param {unknown | undefined} tool The tool to check if it is a LangChain tool.\n * @returns {tool is StructuredToolParams} Whether the inputted tool is a LangChain tool.\n */\nexport function isLangChainTool(tool) {\n    return (isStructuredToolParams(tool) ||\n        isRunnableToolLike(tool) ||\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        isStructuredTool(tool));\n}\n","import { isLangChainTool, } from \"../tools/types.js\";\nimport { toJsonSchema } from \"./json_schema.js\";\n// These utility functions were moved to a more appropriate location,\n// but we still export them here for backwards compatibility.\nexport { isStructuredTool, isStructuredToolParams, isRunnableToolLike, isLangChainTool, } from \"../tools/types.js\";\n/**\n * Formats a `StructuredTool` or `RunnableToolLike` instance into a format\n * that is compatible with OpenAI function calling. If `StructuredTool` or\n * `RunnableToolLike` has a zod schema, it uses the `zodToJsonSchema`\n * function to convert the schema of the `StructuredTool` or `RunnableToolLike`\n * into a JSON schema, which is then used as the parameters for the OpenAI function.\n *\n * @param {StructuredToolInterface | RunnableToolLike} tool The tool to convert to an OpenAI function.\n * @returns {FunctionDefinition} The inputted tool in OpenAI function format.\n */\nexport function convertToOpenAIFunction(tool, fields) {\n    // @TODO 0.3.0 Remove the `number` typing\n    const fieldsCopy = typeof fields === \"number\" ? undefined : fields;\n    return {\n        name: tool.name,\n        description: tool.description,\n        parameters: toJsonSchema(tool.schema),\n        // Do not include the `strict` field if it is `undefined`.\n        ...(fieldsCopy?.strict !== undefined ? { strict: fieldsCopy.strict } : {}),\n    };\n}\n/**\n * Formats a `StructuredTool` or `RunnableToolLike` instance into a\n * format that is compatible with OpenAI tool calling. If `StructuredTool` or\n * `RunnableToolLike` has a zod schema, it uses the `zodToJsonSchema`\n * function to convert the schema of the `StructuredTool` or `RunnableToolLike`\n * into a JSON schema, which is then used as the parameters for the OpenAI tool.\n *\n * @param {StructuredToolInterface | Record<string, any> | RunnableToolLike} tool The tool to convert to an OpenAI tool.\n * @returns {ToolDefinition} The inputted tool in OpenAI tool format.\n */\nexport function convertToOpenAITool(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntool, fields) {\n    // @TODO 0.3.0 Remove the `number` typing\n    const fieldsCopy = typeof fields === \"number\" ? undefined : fields;\n    let toolDef;\n    if (isLangChainTool(tool)) {\n        toolDef = {\n            type: \"function\",\n            function: convertToOpenAIFunction(tool),\n        };\n    }\n    else {\n        toolDef = tool;\n    }\n    if (fieldsCopy?.strict !== undefined) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        toolDef.function.strict = fieldsCopy.strict;\n    }\n    return toolDef;\n}\n","import { zodToJsonSchema } from \"zod-to-json-schema\";\nimport { dereference } from \"@cfworker/json-schema\";\nimport { isZodSchema } from \"./types/is_zod_schema.js\";\nexport { deepCompareStrict, Validator } from \"@cfworker/json-schema\";\n/**\n * Converts a Zod schema or JSON schema to a JSON schema.\n * @param schema - The schema to convert.\n * @returns The converted schema.\n */\nexport function toJsonSchema(schema) {\n    if (isZodSchema(schema)) {\n        return zodToJsonSchema(schema);\n    }\n    return schema;\n}\n/**\n * Validates if a JSON schema validates only strings. May return false negatives in some edge cases\n * (like recursive or unresolvable refs).\n *\n * @param schema - The schema to validate.\n * @returns `true` if the schema validates only strings, `false` otherwise.\n */\nexport function validatesOnlyStrings(schema) {\n    // Null, undefined, or empty schema\n    if (!schema ||\n        typeof schema !== \"object\" ||\n        Object.keys(schema).length === 0 ||\n        Array.isArray(schema)) {\n        return false; // Validates anything, not just strings\n    }\n    // Explicit type constraint\n    if (\"type\" in schema) {\n        if (typeof schema.type === \"string\") {\n            return schema.type === \"string\";\n        }\n        if (Array.isArray(schema.type)) {\n            // not sure why someone would do `\"type\": [\"string\"]` or especially `\"type\": [\"string\",\n            // \"string\", \"string\", ...]` but we're not here to judge\n            return schema.type.every((t) => t === \"string\");\n        }\n        return false; // Invalid or non-string type\n    }\n    // Enum with only string values\n    if (\"enum\" in schema) {\n        return (Array.isArray(schema.enum) &&\n            schema.enum.length > 0 &&\n            schema.enum.every((val) => typeof val === \"string\"));\n    }\n    // String constant\n    if (\"const\" in schema) {\n        return typeof schema.const === \"string\";\n    }\n    // Schema combinations\n    if (\"allOf\" in schema && Array.isArray(schema.allOf)) {\n        // If any subschema validates only strings, then the overall schema validates only strings\n        return schema.allOf.some((subschema) => validatesOnlyStrings(subschema));\n    }\n    if ((\"anyOf\" in schema && Array.isArray(schema.anyOf)) ||\n        (\"oneOf\" in schema && Array.isArray(schema.oneOf))) {\n        const subschemas = (\"anyOf\" in schema ? schema.anyOf : schema.oneOf);\n        // All subschemas must validate only strings\n        return (subschemas.length > 0 &&\n            subschemas.every((subschema) => validatesOnlyStrings(subschema)));\n    }\n    // We're not going to try on this one, it's too complex - we just assume if it has a \"not\" key and hasn't matched one of the above checks, it's not a string schema.\n    if (\"not\" in schema) {\n        return false; // The not case can validate non-strings\n    }\n    if (\"$ref\" in schema && typeof schema.$ref === \"string\") {\n        const ref = schema.$ref;\n        const resolved = dereference(schema);\n        if (resolved[ref]) {\n            return validatesOnlyStrings(resolved[ref]);\n        }\n        return false;\n    }\n    // ignore recursive refs and other cases where type is omitted for now\n    // ignore other cases for now where type is omitted\n    return false;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable no-param-reassign */\nexport function addLangChainErrorFields(error, lc_error_code) {\n    error.lc_error_code = lc_error_code;\n    error.message = `${error.message}\\n\\nTroubleshooting URL: https://js.langchain.com/docs/troubleshooting/errors/${lc_error_code}/\\n`;\n    return error;\n}\n","import { APIConnectionTimeoutError, APIUserAbortError, } from \"openai\";\nimport { convertToOpenAIFunction, convertToOpenAITool, } from \"@langchain/core/utils/function_calling\";\nimport { zodToJsonSchema } from \"zod-to-json-schema\";\nimport { isZodSchema } from \"@langchain/core/utils/types\";\nimport { addLangChainErrorFields } from \"./errors.js\";\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function wrapOpenAIClientError(e) {\n    let error;\n    if (e.constructor.name === APIConnectionTimeoutError.name) {\n        error = new Error(e.message);\n        error.name = \"TimeoutError\";\n    }\n    else if (e.constructor.name === APIUserAbortError.name) {\n        error = new Error(e.message);\n        error.name = \"AbortError\";\n    }\n    else if (e.status === 400 && e.message.includes(\"tool_calls\")) {\n        error = addLangChainErrorFields(e, \"INVALID_TOOL_RESULTS\");\n    }\n    else if (e.status === 401) {\n        error = addLangChainErrorFields(e, \"MODEL_AUTHENTICATION\");\n    }\n    else if (e.status === 429) {\n        error = addLangChainErrorFields(e, \"MODEL_RATE_LIMIT\");\n    }\n    else if (e.status === 404) {\n        error = addLangChainErrorFields(e, \"MODEL_NOT_FOUND\");\n    }\n    else {\n        error = e;\n    }\n    return error;\n}\nexport { convertToOpenAIFunction as formatToOpenAIFunction, convertToOpenAITool as formatToOpenAITool, };\nexport function formatToOpenAIAssistantTool(tool) {\n    return {\n        type: \"function\",\n        function: {\n            name: tool.name,\n            description: tool.description,\n            parameters: isZodSchema(tool.schema)\n                ? zodToJsonSchema(tool.schema)\n                : tool.schema,\n        },\n    };\n}\nexport function formatToOpenAIToolChoice(toolChoice) {\n    if (!toolChoice) {\n        return undefined;\n    }\n    else if (toolChoice === \"any\" || toolChoice === \"required\") {\n        return \"required\";\n    }\n    else if (toolChoice === \"auto\") {\n        return \"auto\";\n    }\n    else if (toolChoice === \"none\") {\n        return \"none\";\n    }\n    else if (typeof toolChoice === \"string\") {\n        return {\n            type: \"function\",\n            function: {\n                name: toolChoice,\n            },\n        };\n    }\n    else {\n        return toolChoice;\n    }\n}\n","function isAnyOfProp(prop) {\n    return (prop.anyOf !== undefined &&\n        Array.isArray(prop.anyOf));\n}\n// When OpenAI use functions in the prompt, they format them as TypeScript definitions rather than OpenAPI JSON schemas.\n// This function converts the JSON schemas into TypeScript definitions.\nexport function formatFunctionDefinitions(functions) {\n    const lines = [\"namespace functions {\", \"\"];\n    for (const f of functions) {\n        if (f.description) {\n            lines.push(`// ${f.description}`);\n        }\n        if (Object.keys(f.parameters.properties ?? {}).length > 0) {\n            lines.push(`type ${f.name} = (_: {`);\n            lines.push(formatObjectProperties(f.parameters, 0));\n            lines.push(\"}) => any;\");\n        }\n        else {\n            lines.push(`type ${f.name} = () => any;`);\n        }\n        lines.push(\"\");\n    }\n    lines.push(\"} // namespace functions\");\n    return lines.join(\"\\n\");\n}\n// Format just the properties of an object (not including the surrounding braces)\nfunction formatObjectProperties(obj, indent) {\n    const lines = [];\n    for (const [name, param] of Object.entries(obj.properties ?? {})) {\n        if (param.description && indent < 2) {\n            lines.push(`// ${param.description}`);\n        }\n        if (obj.required?.includes(name)) {\n            lines.push(`${name}: ${formatType(param, indent)},`);\n        }\n        else {\n            lines.push(`${name}?: ${formatType(param, indent)},`);\n        }\n    }\n    return lines.map((line) => \" \".repeat(indent) + line).join(\"\\n\");\n}\n// Format a single property type\nfunction formatType(param, indent) {\n    if (isAnyOfProp(param)) {\n        return param.anyOf.map((v) => formatType(v, indent)).join(\" | \");\n    }\n    switch (param.type) {\n        case \"string\":\n            if (param.enum) {\n                return param.enum.map((v) => `\"${v}\"`).join(\" | \");\n            }\n            return \"string\";\n        case \"number\":\n            if (param.enum) {\n                return param.enum.map((v) => `${v}`).join(\" | \");\n            }\n            return \"number\";\n        case \"integer\":\n            if (param.enum) {\n                return param.enum.map((v) => `${v}`).join(\" | \");\n            }\n            return \"number\";\n        case \"boolean\":\n            return \"boolean\";\n        case \"null\":\n            return \"null\";\n        case \"object\":\n            return [\"{\", formatObjectProperties(param, indent + 2), \"}\"].join(\"\\n\");\n        case \"array\":\n            if (param.items) {\n                return `${formatType(param.items, indent)}[]`;\n            }\n            return \"any[]\";\n        default:\n            return \"\";\n    }\n}\n","import { OpenAI as OpenAIClient } from \"openai\";\nimport { AIMessage, AIMessageChunk, ChatMessage, ChatMessageChunk, FunctionMessageChunk, HumanMessageChunk, SystemMessageChunk, ToolMessageChunk, isAIMessage, parseBase64DataUrl, parseMimeType, convertToProviderContentBlock, isDataContentBlock, } from \"@langchain/core/messages\";\nimport { ChatGenerationChunk, } from \"@langchain/core/outputs\";\nimport { getEnvironmentVariable } from \"@langchain/core/utils/env\";\nimport { BaseChatModel, } from \"@langchain/core/language_models/chat_models\";\nimport { isOpenAITool, } from \"@langchain/core/language_models/base\";\nimport { RunnableLambda, RunnablePassthrough, RunnableSequence, } from \"@langchain/core/runnables\";\nimport { JsonOutputParser, StructuredOutputParser, } from \"@langchain/core/output_parsers\";\nimport { JsonOutputKeyToolsParser, convertLangChainToolCallToOpenAI, makeInvalidToolCall, parseToolCall, } from \"@langchain/core/output_parsers/openai_tools\";\nimport { zodToJsonSchema } from \"zod-to-json-schema\";\nimport { zodResponseFormat } from \"openai/helpers/zod\";\nimport { getEndpoint } from \"./utils/azure.js\";\nimport { formatToOpenAIToolChoice, wrapOpenAIClientError, } from \"./utils/openai.js\";\nimport { formatFunctionDefinitions, } from \"./utils/openai-format-fndef.js\";\nimport { _convertToOpenAITool } from \"./utils/tools.js\";\nfunction extractGenericMessageCustomRole(message) {\n    if (message.role !== \"system\" &&\n        message.role !== \"developer\" &&\n        message.role !== \"assistant\" &&\n        message.role !== \"user\" &&\n        message.role !== \"function\" &&\n        message.role !== \"tool\") {\n        console.warn(`Unknown message role: ${message.role}`);\n    }\n    return message.role;\n}\nexport function messageToOpenAIRole(message) {\n    const type = message._getType();\n    switch (type) {\n        case \"system\":\n            return \"system\";\n        case \"ai\":\n            return \"assistant\";\n        case \"human\":\n            return \"user\";\n        case \"function\":\n            return \"function\";\n        case \"tool\":\n            return \"tool\";\n        case \"generic\": {\n            if (!ChatMessage.isInstance(message))\n                throw new Error(\"Invalid generic chat message\");\n            return extractGenericMessageCustomRole(message);\n        }\n        default:\n            throw new Error(`Unknown message type: ${type}`);\n    }\n}\nconst completionsApiContentBlockConverter = {\n    providerName: \"ChatOpenAI\",\n    fromStandardTextBlock(block) {\n        return { type: \"text\", text: block.text };\n    },\n    fromStandardImageBlock(block) {\n        if (block.source_type === \"url\") {\n            return {\n                type: \"image_url\",\n                image_url: {\n                    url: block.url,\n                    ...(block.metadata?.detail\n                        ? { detail: block.metadata.detail }\n                        : {}),\n                },\n            };\n        }\n        if (block.source_type === \"base64\") {\n            const url = `data:${block.mime_type ?? \"\"};base64,${block.data}`;\n            return {\n                type: \"image_url\",\n                image_url: {\n                    url,\n                    ...(block.metadata?.detail\n                        ? { detail: block.metadata.detail }\n                        : {}),\n                },\n            };\n        }\n        throw new Error(`Image content blocks with source_type ${block.source_type} are not supported for ChatOpenAI`);\n    },\n    fromStandardAudioBlock(block) {\n        if (block.source_type === \"url\") {\n            const data = parseBase64DataUrl({ dataUrl: block.url });\n            if (!data) {\n                throw new Error(`URL audio blocks with source_type ${block.source_type} must be formatted as a data URL for ChatOpenAI`);\n            }\n            const rawMimeType = data.mime_type || block.mime_type || \"\";\n            let mimeType;\n            try {\n                mimeType = parseMimeType(rawMimeType);\n            }\n            catch {\n                throw new Error(`Audio blocks with source_type ${block.source_type} must have mime type of audio/wav or audio/mp3`);\n            }\n            if (mimeType.type !== \"audio\" ||\n                (mimeType.subtype !== \"wav\" && mimeType.subtype !== \"mp3\")) {\n                throw new Error(`Audio blocks with source_type ${block.source_type} must have mime type of audio/wav or audio/mp3`);\n            }\n            return {\n                type: \"input_audio\",\n                input_audio: {\n                    format: mimeType.subtype,\n                    data: data.data,\n                },\n            };\n        }\n        if (block.source_type === \"base64\") {\n            let mimeType;\n            try {\n                mimeType = parseMimeType(block.mime_type ?? \"\");\n            }\n            catch {\n                throw new Error(`Audio blocks with source_type ${block.source_type} must have mime type of audio/wav or audio/mp3`);\n            }\n            if (mimeType.type !== \"audio\" ||\n                (mimeType.subtype !== \"wav\" && mimeType.subtype !== \"mp3\")) {\n                throw new Error(`Audio blocks with source_type ${block.source_type} must have mime type of audio/wav or audio/mp3`);\n            }\n            return {\n                type: \"input_audio\",\n                input_audio: {\n                    format: mimeType.subtype,\n                    data: block.data,\n                },\n            };\n        }\n        throw new Error(`Audio content blocks with source_type ${block.source_type} are not supported for ChatOpenAI`);\n    },\n    fromStandardFileBlock(block) {\n        if (block.source_type === \"url\") {\n            const data = parseBase64DataUrl({ dataUrl: block.url });\n            if (!data) {\n                throw new Error(`URL file blocks with source_type ${block.source_type} must be formatted as a data URL for ChatOpenAI`);\n            }\n            return {\n                type: \"file\",\n                file: {\n                    file_data: block.url,\n                    ...(block.metadata?.filename || block.metadata?.name\n                        ? {\n                            filename: (block.metadata?.filename ||\n                                block.metadata?.name),\n                        }\n                        : {}),\n                },\n            };\n        }\n        if (block.source_type === \"base64\") {\n            return {\n                type: \"file\",\n                file: {\n                    file_data: `data:${block.mime_type ?? \"\"};base64,${block.data}`,\n                    ...(block.metadata?.filename ||\n                        block.metadata?.name ||\n                        block.metadata?.title\n                        ? {\n                            filename: (block.metadata?.filename ||\n                                block.metadata?.name ||\n                                block.metadata?.title),\n                        }\n                        : {}),\n                },\n            };\n        }\n        if (block.source_type === \"id\") {\n            return {\n                type: \"file\",\n                file: {\n                    file_id: block.id,\n                },\n            };\n        }\n        throw new Error(`File content blocks with source_type ${block.source_type} are not supported for ChatOpenAI`);\n    },\n};\n// Used in LangSmith, export is important here\nexport function _convertMessagesToOpenAIParams(messages, model) {\n    // TODO: Function messages do not support array content, fix cast\n    return messages.flatMap((message) => {\n        let role = messageToOpenAIRole(message);\n        if (role === \"system\" && isReasoningModel(model)) {\n            role = \"developer\";\n        }\n        const content = typeof message.content === \"string\"\n            ? message.content\n            : message.content.map((m) => {\n                if (isDataContentBlock(m)) {\n                    return convertToProviderContentBlock(m, completionsApiContentBlockConverter);\n                }\n                return m;\n            });\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const completionParam = {\n            role,\n            content,\n        };\n        if (message.name != null) {\n            completionParam.name = message.name;\n        }\n        if (message.additional_kwargs.function_call != null) {\n            completionParam.function_call = message.additional_kwargs.function_call;\n            completionParam.content = \"\";\n        }\n        if (isAIMessage(message) && !!message.tool_calls?.length) {\n            completionParam.tool_calls = message.tool_calls.map(convertLangChainToolCallToOpenAI);\n            completionParam.content = \"\";\n        }\n        else {\n            if (message.additional_kwargs.tool_calls != null) {\n                completionParam.tool_calls = message.additional_kwargs.tool_calls;\n            }\n            if (message.tool_call_id != null) {\n                completionParam.tool_call_id = message.tool_call_id;\n            }\n        }\n        if (message.additional_kwargs.audio &&\n            typeof message.additional_kwargs.audio === \"object\" &&\n            \"id\" in message.additional_kwargs.audio) {\n            const audioMessage = {\n                role: \"assistant\",\n                audio: {\n                    id: message.additional_kwargs.audio.id,\n                },\n            };\n            return [completionParam, audioMessage];\n        }\n        return completionParam;\n    });\n}\nconst _FUNCTION_CALL_IDS_MAP_KEY = \"__openai_function_call_ids__\";\nfunction _convertMessagesToOpenAIResponsesParams(messages, model) {\n    return messages.flatMap((lcMsg) => {\n        let role = messageToOpenAIRole(lcMsg);\n        if (role === \"system\" && isReasoningModel(model))\n            role = \"developer\";\n        if (role === \"function\") {\n            throw new Error(\"Function messages are not supported in Responses API\");\n        }\n        if (role === \"tool\") {\n            const toolMessage = lcMsg;\n            // Handle computer call output\n            if (toolMessage.additional_kwargs?.type === \"computer_call_output\") {\n                const output = (() => {\n                    if (typeof toolMessage.content === \"string\") {\n                        return {\n                            type: \"computer_screenshot\",\n                            image_url: toolMessage.content,\n                        };\n                    }\n                    if (Array.isArray(toolMessage.content)) {\n                        const oaiScreenshot = toolMessage.content.find((i) => i.type === \"computer_screenshot\");\n                        if (oaiScreenshot)\n                            return oaiScreenshot;\n                        const lcImage = toolMessage.content.find((i) => i.type === \"image_url\");\n                        if (lcImage) {\n                            return {\n                                type: \"computer_screenshot\",\n                                image_url: typeof lcImage.image_url === \"string\"\n                                    ? lcImage.image_url\n                                    : lcImage.image_url.url,\n                            };\n                        }\n                    }\n                    throw new Error(\"Invalid computer call output\");\n                })();\n                return {\n                    type: \"computer_call_output\",\n                    output,\n                    call_id: toolMessage.tool_call_id,\n                };\n            }\n            return {\n                type: \"function_call_output\",\n                call_id: toolMessage.tool_call_id,\n                id: toolMessage.id,\n                output: typeof toolMessage.content !== \"string\"\n                    ? JSON.stringify(toolMessage.content)\n                    : toolMessage.content,\n            };\n        }\n        if (role === \"assistant\") {\n            const input = [];\n            // reasoning items\n            if (lcMsg.additional_kwargs.reasoning != null) {\n                const isReasoningItem = (item) => typeof item === \"object\" &&\n                    item != null &&\n                    \"type\" in item &&\n                    item.type === \"reasoning\";\n                if (isReasoningItem(lcMsg.additional_kwargs.reasoning)) {\n                    input.push(lcMsg.additional_kwargs.reasoning);\n                }\n            }\n            // ai content\n            let { content } = lcMsg;\n            if (lcMsg.additional_kwargs.refusal != null) {\n                if (typeof content === \"string\") {\n                    content = [{ type: \"output_text\", text: content, annotations: [] }];\n                }\n                content = [\n                    ...content,\n                    { type: \"refusal\", refusal: lcMsg.additional_kwargs.refusal },\n                ];\n            }\n            input.push({\n                type: \"message\",\n                role: \"assistant\",\n                content: typeof content === \"string\"\n                    ? content\n                    : content.flatMap((item) => {\n                        if (item.type === \"text\") {\n                            return {\n                                type: \"output_text\",\n                                text: item.text,\n                                // @ts-expect-error TODO: add types for `annotations`\n                                annotations: item.annotations ?? [],\n                            };\n                        }\n                        if (item.type === \"output_text\" || item.type === \"refusal\") {\n                            return item;\n                        }\n                        return [];\n                    }),\n            });\n            // function tool calls and computer use tool calls\n            const functionCallIds = \n            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n            lcMsg.additional_kwargs[_FUNCTION_CALL_IDS_MAP_KEY];\n            if (isAIMessage(lcMsg) && !!lcMsg.tool_calls?.length) {\n                input.push(...lcMsg.tool_calls.map((toolCall) => ({\n                    type: \"function_call\",\n                    name: toolCall.name,\n                    arguments: JSON.stringify(toolCall.args),\n                    call_id: toolCall.id,\n                    id: functionCallIds?.[toolCall.id],\n                })));\n            }\n            else if (lcMsg.additional_kwargs.tool_calls != null) {\n                input.push(...lcMsg.additional_kwargs.tool_calls.map((toolCall) => ({\n                    type: \"function_call\",\n                    name: toolCall.function.name,\n                    call_id: toolCall.id,\n                    id: functionCallIds?.[toolCall.id],\n                    arguments: toolCall.function.arguments,\n                })));\n            }\n            const toolOutputs = lcMsg.response_metadata.output?.length\n                ? lcMsg.response_metadata.output\n                : lcMsg.additional_kwargs.tool_outputs;\n            if (toolOutputs != null) {\n                const castToolOutputs = toolOutputs;\n                const reasoningCalls = castToolOutputs?.filter((item) => item.type === \"reasoning\");\n                const computerCalls = castToolOutputs?.filter((item) => item.type === \"computer_call\");\n                // NOTE: Reasoning outputs must be passed to the model BEFORE computer calls.\n                if (reasoningCalls.length > 0 && computerCalls.length > 0) {\n                    input.push(...reasoningCalls);\n                }\n                if (computerCalls.length > 0)\n                    input.push(...computerCalls);\n            }\n            return input;\n        }\n        const content = typeof lcMsg.content === \"string\"\n            ? lcMsg.content\n            : lcMsg.content.flatMap((item) => {\n                if (isDataContentBlock(item)) {\n                    return convertToProviderContentBlock(item, completionsApiContentBlockConverter);\n                }\n                if (item.type === \"text\") {\n                    return { type: \"input_text\", text: item.text };\n                }\n                if (item.type === \"image_url\") {\n                    const image_url = typeof item.image_url === \"string\"\n                        ? item.image_url\n                        : item.image_url.url;\n                    const detail = typeof item.image_url === \"string\"\n                        ? \"auto\"\n                        : item.image_url.detail;\n                    return { type: \"input_image\", image_url, detail };\n                }\n                if (item.type === \"input_text\" ||\n                    item.type === \"input_image\" ||\n                    item.type === \"input_file\") {\n                    return item;\n                }\n                return [];\n            });\n        if (role === \"user\" || role === \"system\" || role === \"developer\") {\n            return { type: \"message\", role, content };\n        }\n        console.warn(`Unsupported role found when converting to OpenAI Responses API: ${role}`);\n        return [];\n    });\n}\nfunction _convertOpenAIResponsesMessageToBaseMessage(response) {\n    if (response.error) {\n        // TODO: add support for `addLangChainErrorFields`\n        const error = new Error(response.error.message);\n        error.name = response.error.code;\n        throw error;\n    }\n    const content = [];\n    const tool_calls = [];\n    const invalid_tool_calls = [];\n    const response_metadata = {\n        model: response.model,\n        created_at: response.created_at,\n        id: response.id,\n        incomplete_details: response.incomplete_details,\n        metadata: response.metadata,\n        object: response.object,\n        status: response.status,\n        user: response.user,\n        // for compatibility with chat completion calls.\n        model_name: response.model,\n    };\n    const additional_kwargs = {};\n    for (const item of response.output) {\n        if (item.type === \"message\") {\n            content.push(...item.content.flatMap((part) => {\n                if (part.type === \"output_text\") {\n                    if (\"parsed\" in part && part.parsed != null) {\n                        additional_kwargs.parsed = part.parsed;\n                    }\n                    return {\n                        type: \"text\",\n                        text: part.text,\n                        annotations: part.annotations,\n                    };\n                }\n                if (part.type === \"refusal\") {\n                    additional_kwargs.refusal = part.refusal;\n                    return [];\n                }\n                return part;\n            }));\n        }\n        else if (item.type === \"function_call\") {\n            const fnAdapter = {\n                function: { name: item.name, arguments: item.arguments },\n                id: item.call_id,\n            };\n            try {\n                tool_calls.push(parseToolCall(fnAdapter, { returnId: true }));\n            }\n            catch (e) {\n                let errMessage;\n                if (typeof e === \"object\" &&\n                    e != null &&\n                    \"message\" in e &&\n                    typeof e.message === \"string\") {\n                    errMessage = e.message;\n                }\n                invalid_tool_calls.push(makeInvalidToolCall(fnAdapter, errMessage));\n            }\n            additional_kwargs[_FUNCTION_CALL_IDS_MAP_KEY] ??= {};\n            if (item.id) {\n                additional_kwargs[_FUNCTION_CALL_IDS_MAP_KEY][item.call_id] = item.id;\n            }\n        }\n        else if (item.type === \"reasoning\") {\n            additional_kwargs.reasoning = item;\n        }\n        else {\n            additional_kwargs.tool_outputs ??= [];\n            additional_kwargs.tool_outputs.push(item);\n        }\n    }\n    return new AIMessage({\n        id: response.id,\n        content,\n        tool_calls,\n        invalid_tool_calls,\n        usage_metadata: response.usage,\n        additional_kwargs,\n        response_metadata,\n    });\n}\nfunction _convertOpenAIResponsesDeltaToBaseMessageChunk(chunk) {\n    const content = [];\n    let generationInfo = {};\n    let usage_metadata;\n    const tool_call_chunks = [];\n    const response_metadata = {};\n    const additional_kwargs = {};\n    let id;\n    if (chunk.type === \"response.output_text.delta\") {\n        content.push({\n            type: \"text\",\n            text: chunk.delta,\n            index: chunk.content_index,\n        });\n    }\n    else if (chunk.type === \"response.output_text.annotation.added\") {\n        content.push({\n            type: \"text\",\n            text: \"\",\n            annotations: [chunk.annotation],\n            index: chunk.content_index,\n        });\n    }\n    else if (chunk.type === \"response.output_item.added\" &&\n        chunk.item.type === \"message\") {\n        id = chunk.item.id;\n    }\n    else if (chunk.type === \"response.output_item.added\" &&\n        chunk.item.type === \"function_call\") {\n        tool_call_chunks.push({\n            type: \"tool_call_chunk\",\n            name: chunk.item.name,\n            args: chunk.item.arguments,\n            id: chunk.item.id,\n            index: chunk.output_index,\n        });\n        additional_kwargs[_FUNCTION_CALL_IDS_MAP_KEY] = {\n            [chunk.item.call_id]: chunk.item.id,\n        };\n    }\n    else if (chunk.type === \"response.output_item.done\" &&\n        (chunk.item.type === \"web_search_call\" ||\n            chunk.item.type === \"file_search_call\" ||\n            chunk.item.type === \"computer_call\")) {\n        additional_kwargs.tool_outputs = [chunk.item];\n    }\n    else if (chunk.type === \"response.created\") {\n        response_metadata.id = chunk.response.id;\n        response_metadata.model_name = chunk.response.model;\n        response_metadata.model = chunk.response.model;\n    }\n    else if (chunk.type === \"response.completed\") {\n        const msg = _convertOpenAIResponsesMessageToBaseMessage(chunk.response);\n        usage_metadata = chunk.response.usage;\n        if (chunk.response.text?.format?.type === \"json_schema\") {\n            additional_kwargs.parsed ??= JSON.parse(msg.text);\n        }\n        for (const [key, value] of Object.entries(chunk.response)) {\n            if (key !== \"id\")\n                response_metadata[key] = value;\n        }\n    }\n    else if (chunk.type === \"response.function_call_arguments.delta\") {\n        tool_call_chunks.push({\n            type: \"tool_call_chunk\",\n            args: chunk.delta,\n            index: chunk.output_index,\n        });\n    }\n    else if (chunk.type === \"response.web_search_call.completed\" ||\n        chunk.type === \"response.file_search_call.completed\") {\n        generationInfo = {\n            tool_outputs: {\n                id: chunk.item_id,\n                type: chunk.type.replace(\"response.\", \"\").replace(\".completed\", \"\"),\n                status: \"completed\",\n            },\n        };\n    }\n    else if (chunk.type === \"response.refusal.done\") {\n        additional_kwargs.refusal = chunk.refusal;\n    }\n    else {\n        return null;\n    }\n    return new ChatGenerationChunk({\n        // Legacy reasons, `onLLMNewToken` should pulls this out\n        text: content.map((part) => part.text).join(\"\"),\n        message: new AIMessageChunk({\n            id,\n            content,\n            tool_call_chunks,\n            usage_metadata,\n            additional_kwargs,\n            response_metadata,\n        }),\n        generationInfo,\n    });\n}\nfunction isBuiltInTool(tool) {\n    return \"type\" in tool && tool.type !== \"function\";\n}\nfunction isBuiltInToolChoice(tool_choice) {\n    return (tool_choice != null &&\n        typeof tool_choice === \"object\" &&\n        \"type\" in tool_choice &&\n        tool_choice.type !== \"function\");\n}\nfunction _convertChatOpenAIToolTypeToOpenAITool(tool, fields) {\n    if (isOpenAITool(tool)) {\n        if (fields?.strict !== undefined) {\n            return {\n                ...tool,\n                function: {\n                    ...tool.function,\n                    strict: fields.strict,\n                },\n            };\n        }\n        return tool;\n    }\n    return _convertToOpenAITool(tool, fields);\n}\nfunction isReasoningModel(model) {\n    return (model?.startsWith(\"o1\") ||\n        model?.startsWith(\"o3\") ||\n        model?.startsWith(\"o4\"));\n}\n/**\n * OpenAI chat model integration.\n *\n * To use with Azure, import the `AzureChatOpenAI` class.\n *\n * Setup:\n * Install `@langchain/openai` and set an environment variable named `OPENAI_API_KEY`.\n *\n * ```bash\n * npm install @langchain/openai\n * export OPENAI_API_KEY=\"your-api-key\"\n * ```\n *\n * ## [Constructor args](https://api.js.langchain.com/classes/langchain_openai.ChatOpenAI.html#constructor)\n *\n * ## [Runtime args](https://api.js.langchain.com/interfaces/langchain_openai.ChatOpenAICallOptions.html)\n *\n * Runtime args can be passed as the second argument to any of the base runnable methods `.invoke`. `.stream`, `.batch`, etc.\n * They can also be passed via `.bind`, or the second arg in `.bindTools`, like shown in the examples below:\n *\n * ```typescript\n * // When calling `.bind`, call options should be passed via the first argument\n * const llmWithArgsBound = llm.bind({\n *   stop: [\"\\n\"],\n *   tools: [...],\n * });\n *\n * // When calling `.bindTools`, call options should be passed via the second argument\n * const llmWithTools = llm.bindTools(\n *   [...],\n *   {\n *     tool_choice: \"auto\",\n *   }\n * );\n * ```\n *\n * ## Examples\n *\n * <details open>\n * <summary><strong>Instantiate</strong></summary>\n *\n * ```typescript\n * import { ChatOpenAI } from '@langchain/openai';\n *\n * const llm = new ChatOpenAI({\n *   model: \"gpt-4o\",\n *   temperature: 0,\n *   maxTokens: undefined,\n *   timeout: undefined,\n *   maxRetries: 2,\n *   // apiKey: \"...\",\n *   // baseUrl: \"...\",\n *   // organization: \"...\",\n *   // other params...\n * });\n * ```\n * </details>\n *\n * <br />\n *\n * <details>\n * <summary><strong>Invoking</strong></summary>\n *\n * ```typescript\n * const input = `Translate \"I love programming\" into French.`;\n *\n * // Models also accept a list of chat messages or a formatted prompt\n * const result = await llm.invoke(input);\n * console.log(result);\n * ```\n *\n * ```txt\n * AIMessage {\n *   \"id\": \"chatcmpl-9u4Mpu44CbPjwYFkTbeoZgvzB00Tz\",\n *   \"content\": \"J'adore la programmation.\",\n *   \"response_metadata\": {\n *     \"tokenUsage\": {\n *       \"completionTokens\": 5,\n *       \"promptTokens\": 28,\n *       \"totalTokens\": 33\n *     },\n *     \"finish_reason\": \"stop\",\n *     \"system_fingerprint\": \"fp_3aa7262c27\"\n *   },\n *   \"usage_metadata\": {\n *     \"input_tokens\": 28,\n *     \"output_tokens\": 5,\n *     \"total_tokens\": 33\n *   }\n * }\n * ```\n * </details>\n *\n * <br />\n *\n * <details>\n * <summary><strong>Streaming Chunks</strong></summary>\n *\n * ```typescript\n * for await (const chunk of await llm.stream(input)) {\n *   console.log(chunk);\n * }\n * ```\n *\n * ```txt\n * AIMessageChunk {\n *   \"id\": \"chatcmpl-9u4NWB7yUeHCKdLr6jP3HpaOYHTqs\",\n *   \"content\": \"\"\n * }\n * AIMessageChunk {\n *   \"content\": \"J\"\n * }\n * AIMessageChunk {\n *   \"content\": \"'adore\"\n * }\n * AIMessageChunk {\n *   \"content\": \" la\"\n * }\n * AIMessageChunk {\n *   \"content\": \" programmation\",,\n * }\n * AIMessageChunk {\n *   \"content\": \".\",,\n * }\n * AIMessageChunk {\n *   \"content\": \"\",\n *   \"response_metadata\": {\n *     \"finish_reason\": \"stop\",\n *     \"system_fingerprint\": \"fp_c9aa9c0491\"\n *   },\n * }\n * AIMessageChunk {\n *   \"content\": \"\",\n *   \"usage_metadata\": {\n *     \"input_tokens\": 28,\n *     \"output_tokens\": 5,\n *     \"total_tokens\": 33\n *   }\n * }\n * ```\n * </details>\n *\n * <br />\n *\n * <details>\n * <summary><strong>Aggregate Streamed Chunks</strong></summary>\n *\n * ```typescript\n * import { AIMessageChunk } from '@langchain/core/messages';\n * import { concat } from '@langchain/core/utils/stream';\n *\n * const stream = await llm.stream(input);\n * let full: AIMessageChunk | undefined;\n * for await (const chunk of stream) {\n *   full = !full ? chunk : concat(full, chunk);\n * }\n * console.log(full);\n * ```\n *\n * ```txt\n * AIMessageChunk {\n *   \"id\": \"chatcmpl-9u4PnX6Fy7OmK46DASy0bH6cxn5Xu\",\n *   \"content\": \"J'adore la programmation.\",\n *   \"response_metadata\": {\n *     \"prompt\": 0,\n *     \"completion\": 0,\n *     \"finish_reason\": \"stop\",\n *   },\n *   \"usage_metadata\": {\n *     \"input_tokens\": 28,\n *     \"output_tokens\": 5,\n *     \"total_tokens\": 33\n *   }\n * }\n * ```\n * </details>\n *\n * <br />\n *\n * <details>\n * <summary><strong>Bind tools</strong></summary>\n *\n * ```typescript\n * import { z } from 'zod';\n *\n * const GetWeather = {\n *   name: \"GetWeather\",\n *   description: \"Get the current weather in a given location\",\n *   schema: z.object({\n *     location: z.string().describe(\"The city and state, e.g. San Francisco, CA\")\n *   }),\n * }\n *\n * const GetPopulation = {\n *   name: \"GetPopulation\",\n *   description: \"Get the current population in a given location\",\n *   schema: z.object({\n *     location: z.string().describe(\"The city and state, e.g. San Francisco, CA\")\n *   }),\n * }\n *\n * const llmWithTools = llm.bindTools(\n *   [GetWeather, GetPopulation],\n *   {\n *     // strict: true  // enforce tool args schema is respected\n *   }\n * );\n * const aiMsg = await llmWithTools.invoke(\n *   \"Which city is hotter today and which is bigger: LA or NY?\"\n * );\n * console.log(aiMsg.tool_calls);\n * ```\n *\n * ```txt\n * [\n *   {\n *     name: 'GetWeather',\n *     args: { location: 'Los Angeles, CA' },\n *     type: 'tool_call',\n *     id: 'call_uPU4FiFzoKAtMxfmPnfQL6UK'\n *   },\n *   {\n *     name: 'GetWeather',\n *     args: { location: 'New York, NY' },\n *     type: 'tool_call',\n *     id: 'call_UNkEwuQsHrGYqgDQuH9nPAtX'\n *   },\n *   {\n *     name: 'GetPopulation',\n *     args: { location: 'Los Angeles, CA' },\n *     type: 'tool_call',\n *     id: 'call_kL3OXxaq9OjIKqRTpvjaCH14'\n *   },\n *   {\n *     name: 'GetPopulation',\n *     args: { location: 'New York, NY' },\n *     type: 'tool_call',\n *     id: 'call_s9KQB1UWj45LLGaEnjz0179q'\n *   }\n * ]\n * ```\n * </details>\n *\n * <br />\n *\n * <details>\n * <summary><strong>Structured Output</strong></summary>\n *\n * ```typescript\n * import { z } from 'zod';\n *\n * const Joke = z.object({\n *   setup: z.string().describe(\"The setup of the joke\"),\n *   punchline: z.string().describe(\"The punchline to the joke\"),\n *   rating: z.number().nullable().describe(\"How funny the joke is, from 1 to 10\")\n * }).describe('Joke to tell user.');\n *\n * const structuredLlm = llm.withStructuredOutput(Joke, {\n *   name: \"Joke\",\n *   strict: true, // Optionally enable OpenAI structured outputs\n * });\n * const jokeResult = await structuredLlm.invoke(\"Tell me a joke about cats\");\n * console.log(jokeResult);\n * ```\n *\n * ```txt\n * {\n *   setup: 'Why was the cat sitting on the computer?',\n *   punchline: 'Because it wanted to keep an eye on the mouse!',\n *   rating: 7\n * }\n * ```\n * </details>\n *\n * <br />\n *\n * <details>\n * <summary><strong>JSON Object Response Format</strong></summary>\n *\n * ```typescript\n * const jsonLlm = llm.bind({ response_format: { type: \"json_object\" } });\n * const jsonLlmAiMsg = await jsonLlm.invoke(\n *   \"Return a JSON object with key 'randomInts' and a value of 10 random ints in [0-99]\"\n * );\n * console.log(jsonLlmAiMsg.content);\n * ```\n *\n * ```txt\n * {\n *   \"randomInts\": [23, 87, 45, 12, 78, 34, 56, 90, 11, 67]\n * }\n * ```\n * </details>\n *\n * <br />\n *\n * <details>\n * <summary><strong>Multimodal</strong></summary>\n *\n * ```typescript\n * import { HumanMessage } from '@langchain/core/messages';\n *\n * const imageUrl = \"https://example.com/image.jpg\";\n * const imageData = await fetch(imageUrl).then(res => res.arrayBuffer());\n * const base64Image = Buffer.from(imageData).toString('base64');\n *\n * const message = new HumanMessage({\n *   content: [\n *     { type: \"text\", text: \"describe the weather in this image\" },\n *     {\n *       type: \"image_url\",\n *       image_url: { url: `data:image/jpeg;base64,${base64Image}` },\n *     },\n *   ]\n * });\n *\n * const imageDescriptionAiMsg = await llm.invoke([message]);\n * console.log(imageDescriptionAiMsg.content);\n * ```\n *\n * ```txt\n * The weather in the image appears to be clear and sunny. The sky is mostly blue with a few scattered white clouds, indicating fair weather. The bright sunlight is casting shadows on the green, grassy hill, suggesting it is a pleasant day with good visibility. There are no signs of rain or stormy conditions.\n * ```\n * </details>\n *\n * <br />\n *\n * <details>\n * <summary><strong>Usage Metadata</strong></summary>\n *\n * ```typescript\n * const aiMsgForMetadata = await llm.invoke(input);\n * console.log(aiMsgForMetadata.usage_metadata);\n * ```\n *\n * ```txt\n * { input_tokens: 28, output_tokens: 5, total_tokens: 33 }\n * ```\n * </details>\n *\n * <br />\n *\n * <details>\n * <summary><strong>Logprobs</strong></summary>\n *\n * ```typescript\n * const logprobsLlm = new ChatOpenAI({ logprobs: true });\n * const aiMsgForLogprobs = await logprobsLlm.invoke(input);\n * console.log(aiMsgForLogprobs.response_metadata.logprobs);\n * ```\n *\n * ```txt\n * {\n *   content: [\n *     {\n *       token: 'J',\n *       logprob: -0.000050616763,\n *       bytes: [Array],\n *       top_logprobs: []\n *     },\n *     {\n *       token: \"'\",\n *       logprob: -0.01868736,\n *       bytes: [Array],\n *       top_logprobs: []\n *     },\n *     {\n *       token: 'ad',\n *       logprob: -0.0000030545007,\n *       bytes: [Array],\n *       top_logprobs: []\n *     },\n *     { token: 'ore', logprob: 0, bytes: [Array], top_logprobs: [] },\n *     {\n *       token: ' la',\n *       logprob: -0.515404,\n *       bytes: [Array],\n *       top_logprobs: []\n *     },\n *     {\n *       token: ' programm',\n *       logprob: -0.0000118755715,\n *       bytes: [Array],\n *       top_logprobs: []\n *     },\n *     { token: 'ation', logprob: 0, bytes: [Array], top_logprobs: [] },\n *     {\n *       token: '.',\n *       logprob: -0.0000037697225,\n *       bytes: [Array],\n *       top_logprobs: []\n *     }\n *   ],\n *   refusal: null\n * }\n * ```\n * </details>\n *\n * <br />\n *\n * <details>\n * <summary><strong>Response Metadata</strong></summary>\n *\n * ```typescript\n * const aiMsgForResponseMetadata = await llm.invoke(input);\n * console.log(aiMsgForResponseMetadata.response_metadata);\n * ```\n *\n * ```txt\n * {\n *   tokenUsage: { completionTokens: 5, promptTokens: 28, totalTokens: 33 },\n *   finish_reason: 'stop',\n *   system_fingerprint: 'fp_3aa7262c27'\n * }\n * ```\n * </details>\n *\n * <br />\n *\n * <details>\n * <summary><strong>JSON Schema Structured Output</strong></summary>\n *\n * ```typescript\n * const llmForJsonSchema = new ChatOpenAI({\n *   model: \"gpt-4o-2024-08-06\",\n * }).withStructuredOutput(\n *   z.object({\n *     command: z.string().describe(\"The command to execute\"),\n *     expectedOutput: z.string().describe(\"The expected output of the command\"),\n *     options: z\n *       .array(z.string())\n *       .describe(\"The options you can pass to the command\"),\n *   }),\n *   {\n *     method: \"jsonSchema\",\n *     strict: true, // Optional when using the `jsonSchema` method\n *   }\n * );\n *\n * const jsonSchemaRes = await llmForJsonSchema.invoke(\n *   \"What is the command to list files in a directory?\"\n * );\n * console.log(jsonSchemaRes);\n * ```\n *\n * ```txt\n * {\n *   command: 'ls',\n *   expectedOutput: 'A list of files and subdirectories within the specified directory.',\n *   options: [\n *     '-a: include directory entries whose names begin with a dot (.).',\n *     '-l: use a long listing format.',\n *     '-h: with -l, print sizes in human readable format (e.g., 1K, 234M, 2G).',\n *     '-t: sort by time, newest first.',\n *     '-r: reverse order while sorting.',\n *     '-S: sort by file size, largest first.',\n *     '-R: list subdirectories recursively.'\n *   ]\n * }\n * ```\n * </details>\n *\n * <br />\n *\n * <details>\n * <summary><strong>Audio Outputs</strong></summary>\n *\n * ```typescript\n * import { ChatOpenAI } from \"@langchain/openai\";\n *\n * const modelWithAudioOutput = new ChatOpenAI({\n *   model: \"gpt-4o-audio-preview\",\n *   // You may also pass these fields to `.bind` as a call argument.\n *   modalities: [\"text\", \"audio\"], // Specifies that the model should output audio.\n *   audio: {\n *     voice: \"alloy\",\n *     format: \"wav\",\n *   },\n * });\n *\n * const audioOutputResult = await modelWithAudioOutput.invoke(\"Tell me a joke about cats.\");\n * const castMessageContent = audioOutputResult.content[0] as Record<string, any>;\n *\n * console.log({\n *   ...castMessageContent,\n *   data: castMessageContent.data.slice(0, 100) // Sliced for brevity\n * })\n * ```\n *\n * ```txt\n * {\n *   id: 'audio_67117718c6008190a3afad3e3054b9b6',\n *   data: 'UklGRqYwBgBXQVZFZm10IBAAAAABAAEAwF0AAIC7AAACABAATElTVBoAAABJTkZPSVNGVA4AAABMYXZmNTguMjkuMTAwAGRhdGFg',\n *   expires_at: 1729201448,\n *   transcript: 'Sure! Why did the cat sit on the computer? Because it wanted to keep an eye on the mouse!'\n * }\n * ```\n * </details>\n *\n * <br />\n *\n * <details>\n * <summary><strong>Audio Outputs</strong></summary>\n *\n * ```typescript\n * import { ChatOpenAI } from \"@langchain/openai\";\n *\n * const modelWithAudioOutput = new ChatOpenAI({\n *   model: \"gpt-4o-audio-preview\",\n *   // You may also pass these fields to `.bind` as a call argument.\n *   modalities: [\"text\", \"audio\"], // Specifies that the model should output audio.\n *   audio: {\n *     voice: \"alloy\",\n *     format: \"wav\",\n *   },\n * });\n *\n * const audioOutputResult = await modelWithAudioOutput.invoke(\"Tell me a joke about cats.\");\n * const castAudioContent = audioOutputResult.additional_kwargs.audio as Record<string, any>;\n *\n * console.log({\n *   ...castAudioContent,\n *   data: castAudioContent.data.slice(0, 100) // Sliced for brevity\n * })\n * ```\n *\n * ```txt\n * {\n *   id: 'audio_67117718c6008190a3afad3e3054b9b6',\n *   data: 'UklGRqYwBgBXQVZFZm10IBAAAAABAAEAwF0AAIC7AAACABAATElTVBoAAABJTkZPSVNGVA4AAABMYXZmNTguMjkuMTAwAGRhdGFg',\n *   expires_at: 1729201448,\n *   transcript: 'Sure! Why did the cat sit on the computer? Because it wanted to keep an eye on the mouse!'\n * }\n * ```\n * </details>\n *\n * <br />\n */\nexport class ChatOpenAI extends BaseChatModel {\n    static lc_name() {\n        return \"ChatOpenAI\";\n    }\n    get callKeys() {\n        return [\n            ...super.callKeys,\n            \"options\",\n            \"function_call\",\n            \"functions\",\n            \"tools\",\n            \"tool_choice\",\n            \"promptIndex\",\n            \"response_format\",\n            \"seed\",\n            \"reasoning_effort\",\n        ];\n    }\n    get lc_secrets() {\n        return {\n            openAIApiKey: \"OPENAI_API_KEY\",\n            apiKey: \"OPENAI_API_KEY\",\n            organization: \"OPENAI_ORGANIZATION\",\n        };\n    }\n    get lc_aliases() {\n        return {\n            modelName: \"model\",\n            openAIApiKey: \"openai_api_key\",\n            apiKey: \"openai_api_key\",\n        };\n    }\n    get lc_serializable_keys() {\n        return [\n            \"configuration\",\n            \"logprobs\",\n            \"topLogprobs\",\n            \"prefixMessages\",\n            \"supportsStrictToolCalling\",\n            \"modalities\",\n            \"audio\",\n            \"reasoningEffort\",\n            \"temperature\",\n            \"maxTokens\",\n            \"topP\",\n            \"frequencyPenalty\",\n            \"presencePenalty\",\n            \"n\",\n            \"logitBias\",\n            \"user\",\n            \"streaming\",\n            \"streamUsage\",\n            \"modelName\",\n            \"model\",\n            \"modelKwargs\",\n            \"stop\",\n            \"stopSequences\",\n            \"timeout\",\n            \"openAIApiKey\",\n            \"apiKey\",\n            \"cache\",\n            \"maxConcurrency\",\n            \"maxRetries\",\n            \"verbose\",\n            \"callbacks\",\n            \"tags\",\n            \"metadata\",\n            \"disableStreaming\",\n        ];\n    }\n    constructor(fields) {\n        super(fields ?? {});\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"temperature\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"topP\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"frequencyPenalty\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"presencePenalty\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"n\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"logitBias\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /** @deprecated Use \"model\" instead */\n        Object.defineProperty(this, \"modelName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"model\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"gpt-3.5-turbo\"\n        });\n        Object.defineProperty(this, \"modelKwargs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"stop\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"stopSequences\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"user\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"timeout\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"streaming\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"streamUsage\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"maxTokens\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"logprobs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"topLogprobs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"openAIApiKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"apiKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"organization\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"__includeRawResponse\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"clientConfig\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /**\n         * Whether the model supports the `strict` argument when passing in tools.\n         * If `undefined` the `strict` argument will not be passed to OpenAI.\n         */\n        Object.defineProperty(this, \"supportsStrictToolCalling\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"audio\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"modalities\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"reasoningEffort\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"useResponsesApi\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        this.openAIApiKey =\n            fields?.apiKey ??\n                fields?.openAIApiKey ??\n                fields?.configuration?.apiKey ??\n                getEnvironmentVariable(\"OPENAI_API_KEY\");\n        this.apiKey = this.openAIApiKey;\n        this.organization =\n            fields?.configuration?.organization ??\n                getEnvironmentVariable(\"OPENAI_ORGANIZATION\");\n        this.model = fields?.model ?? fields?.modelName ?? this.model;\n        this.modelName = this.model;\n        this.modelKwargs = fields?.modelKwargs ?? {};\n        this.timeout = fields?.timeout;\n        this.temperature = fields?.temperature ?? this.temperature;\n        this.topP = fields?.topP ?? this.topP;\n        this.frequencyPenalty = fields?.frequencyPenalty ?? this.frequencyPenalty;\n        this.presencePenalty = fields?.presencePenalty ?? this.presencePenalty;\n        this.logprobs = fields?.logprobs;\n        this.topLogprobs = fields?.topLogprobs;\n        this.n = fields?.n ?? this.n;\n        this.logitBias = fields?.logitBias;\n        this.stop = fields?.stopSequences ?? fields?.stop;\n        this.stopSequences = this.stop;\n        this.user = fields?.user;\n        this.__includeRawResponse = fields?.__includeRawResponse;\n        this.audio = fields?.audio;\n        this.modalities = fields?.modalities;\n        this.reasoningEffort = fields?.reasoningEffort;\n        this.maxTokens = fields?.maxCompletionTokens ?? fields?.maxTokens;\n        this.useResponsesApi = fields?.useResponsesApi ?? this.useResponsesApi;\n        this.disableStreaming = fields?.disableStreaming ?? this.disableStreaming;\n        if (this.model === \"o1\")\n            this.disableStreaming = true;\n        this.streaming = fields?.streaming ?? false;\n        if (this.disableStreaming)\n            this.streaming = false;\n        this.streamUsage = fields?.streamUsage ?? this.streamUsage;\n        if (this.disableStreaming)\n            this.streamUsage = false;\n        this.clientConfig = {\n            apiKey: this.apiKey,\n            organization: this.organization,\n            dangerouslyAllowBrowser: true,\n            ...fields?.configuration,\n        };\n        // If `supportsStrictToolCalling` is explicitly set, use that value.\n        // Else leave undefined so it's not passed to OpenAI.\n        if (fields?.supportsStrictToolCalling !== undefined) {\n            this.supportsStrictToolCalling = fields.supportsStrictToolCalling;\n        }\n    }\n    getLsParams(options) {\n        const params = this.invocationParams(options);\n        return {\n            ls_provider: \"openai\",\n            ls_model_name: this.model,\n            ls_model_type: \"chat\",\n            ls_temperature: params.temperature ?? undefined,\n            ls_max_tokens: params.max_tokens ?? undefined,\n            ls_stop: options.stop,\n        };\n    }\n    bindTools(tools, kwargs) {\n        let strict;\n        if (kwargs?.strict !== undefined) {\n            strict = kwargs.strict;\n        }\n        else if (this.supportsStrictToolCalling !== undefined) {\n            strict = this.supportsStrictToolCalling;\n        }\n        return this.bind({\n            tools: tools.map((tool) => isBuiltInTool(tool)\n                ? tool\n                : _convertChatOpenAIToolTypeToOpenAITool(tool, { strict })),\n            ...kwargs,\n        });\n    }\n    createResponseFormat(resFormat) {\n        if (resFormat &&\n            resFormat.type === \"json_schema\" &&\n            resFormat.json_schema.schema &&\n            isZodSchema(resFormat.json_schema.schema)) {\n            return zodResponseFormat(resFormat.json_schema.schema, resFormat.json_schema.name, {\n                description: resFormat.json_schema.description,\n            });\n        }\n        return resFormat;\n    }\n    /**\n     * Get the parameters used to invoke the model\n     */\n    invocationParams(options, extra) {\n        let strict;\n        if (options?.strict !== undefined) {\n            strict = options.strict;\n        }\n        else if (this.supportsStrictToolCalling !== undefined) {\n            strict = this.supportsStrictToolCalling;\n        }\n        if (this._useResponseApi(options)) {\n            const params = {\n                model: this.model,\n                temperature: this.temperature,\n                top_p: this.topP,\n                user: this.user,\n                // if include_usage is set or streamUsage then stream must be set to true.\n                stream: this.streaming,\n                previous_response_id: options?.previous_response_id,\n                truncation: options?.truncation,\n                include: options?.include,\n                tools: options?.tools?.length\n                    ? options.tools\n                        .map((tool) => {\n                        if (isBuiltInTool(tool)) {\n                            return tool;\n                        }\n                        else if (isOpenAITool(tool)) {\n                            return {\n                                type: \"function\",\n                                name: tool.function.name,\n                                parameters: tool.function.parameters,\n                                description: tool.function.description,\n                                strict,\n                            };\n                        }\n                        else {\n                            return null;\n                        }\n                    })\n                        .filter((tool) => tool !== null)\n                    : undefined,\n                tool_choice: isBuiltInToolChoice(options?.tool_choice)\n                    ? options?.tool_choice\n                    : (() => {\n                        const formatted = formatToOpenAIToolChoice(options?.tool_choice);\n                        if (typeof formatted === \"object\" && \"type\" in formatted) {\n                            return { type: \"function\", name: formatted.function.name };\n                        }\n                        else {\n                            return undefined;\n                        }\n                    })(),\n                text: (() => {\n                    if (options?.text)\n                        return options.text;\n                    const format = this.createResponseFormat(options?.response_format);\n                    if (format?.type === \"json_schema\") {\n                        if (format.json_schema.schema != null) {\n                            return {\n                                format: {\n                                    type: \"json_schema\",\n                                    schema: format.json_schema.schema,\n                                    description: format.json_schema.description,\n                                    name: format.json_schema.name,\n                                    strict: format.json_schema.strict,\n                                },\n                            };\n                        }\n                        return undefined;\n                    }\n                    return { format };\n                })(),\n                parallel_tool_calls: options?.parallel_tool_calls,\n                max_output_tokens: this.maxTokens === -1 ? undefined : this.maxTokens,\n                ...this.modelKwargs,\n            };\n            const reasoningEffort = options?.reasoning_effort ?? this.reasoningEffort;\n            if (reasoningEffort !== undefined) {\n                params.reasoning = { effort: reasoningEffort };\n            }\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            return params;\n        }\n        let streamOptionsConfig = {};\n        if (options?.stream_options !== undefined) {\n            streamOptionsConfig = { stream_options: options.stream_options };\n        }\n        else if (this.streamUsage && (this.streaming || extra?.streaming)) {\n            streamOptionsConfig = { stream_options: { include_usage: true } };\n        }\n        const params = {\n            model: this.model,\n            temperature: this.temperature,\n            top_p: this.topP,\n            frequency_penalty: this.frequencyPenalty,\n            presence_penalty: this.presencePenalty,\n            logprobs: this.logprobs,\n            top_logprobs: this.topLogprobs,\n            n: this.n,\n            logit_bias: this.logitBias,\n            stop: options?.stop ?? this.stopSequences,\n            user: this.user,\n            // if include_usage is set or streamUsage then stream must be set to true.\n            stream: this.streaming,\n            functions: options?.functions,\n            function_call: options?.function_call,\n            tools: options?.tools?.length\n                ? options.tools.map((tool) => _convertChatOpenAIToolTypeToOpenAITool(tool, { strict }))\n                : undefined,\n            tool_choice: formatToOpenAIToolChoice(options?.tool_choice),\n            response_format: this.createResponseFormat(options?.response_format),\n            seed: options?.seed,\n            ...streamOptionsConfig,\n            parallel_tool_calls: options?.parallel_tool_calls,\n            ...(this.audio || options?.audio\n                ? { audio: this.audio || options?.audio }\n                : {}),\n            ...(this.modalities || options?.modalities\n                ? { modalities: this.modalities || options?.modalities }\n                : {}),\n            ...this.modelKwargs,\n        };\n        if (options?.prediction !== undefined) {\n            params.prediction = options.prediction;\n        }\n        const reasoningEffort = options?.reasoning_effort ?? this.reasoningEffort;\n        if (reasoningEffort !== undefined) {\n            params.reasoning_effort = reasoningEffort;\n        }\n        if (isReasoningModel(params.model)) {\n            params.max_completion_tokens =\n                this.maxTokens === -1 ? undefined : this.maxTokens;\n        }\n        else {\n            params.max_tokens = this.maxTokens === -1 ? undefined : this.maxTokens;\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return params;\n    }\n    _convertOpenAIChatCompletionMessageToBaseMessage(message, rawResponse) {\n        const rawToolCalls = message.tool_calls;\n        switch (message.role) {\n            case \"assistant\": {\n                const toolCalls = [];\n                const invalidToolCalls = [];\n                for (const rawToolCall of rawToolCalls ?? []) {\n                    try {\n                        toolCalls.push(parseToolCall(rawToolCall, { returnId: true }));\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    }\n                    catch (e) {\n                        invalidToolCalls.push(makeInvalidToolCall(rawToolCall, e.message));\n                    }\n                }\n                const additional_kwargs = {\n                    function_call: message.function_call,\n                    tool_calls: rawToolCalls,\n                };\n                if (this.__includeRawResponse !== undefined) {\n                    additional_kwargs.__raw_response = rawResponse;\n                }\n                const response_metadata = {\n                    model_name: rawResponse.model,\n                    ...(rawResponse.system_fingerprint\n                        ? {\n                            usage: { ...rawResponse.usage },\n                            system_fingerprint: rawResponse.system_fingerprint,\n                        }\n                        : {}),\n                };\n                if (message.audio) {\n                    additional_kwargs.audio = message.audio;\n                }\n                return new AIMessage({\n                    content: message.content || \"\",\n                    tool_calls: toolCalls,\n                    invalid_tool_calls: invalidToolCalls,\n                    additional_kwargs,\n                    response_metadata,\n                    id: rawResponse.id,\n                });\n            }\n            default:\n                return new ChatMessage(message.content || \"\", message.role ?? \"unknown\");\n        }\n    }\n    _convertOpenAIDeltaToBaseMessageChunk(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    delta, rawResponse, defaultRole) {\n        const role = delta.role ?? defaultRole;\n        const content = delta.content ?? \"\";\n        let additional_kwargs;\n        if (delta.function_call) {\n            additional_kwargs = {\n                function_call: delta.function_call,\n            };\n        }\n        else if (delta.tool_calls) {\n            additional_kwargs = {\n                tool_calls: delta.tool_calls,\n            };\n        }\n        else {\n            additional_kwargs = {};\n        }\n        if (this.__includeRawResponse) {\n            additional_kwargs.__raw_response = rawResponse;\n        }\n        if (delta.audio) {\n            additional_kwargs.audio = {\n                ...delta.audio,\n                index: rawResponse.choices[0].index,\n            };\n        }\n        const response_metadata = { usage: { ...rawResponse.usage } };\n        if (role === \"user\") {\n            return new HumanMessageChunk({ content, response_metadata });\n        }\n        else if (role === \"assistant\") {\n            const toolCallChunks = [];\n            if (Array.isArray(delta.tool_calls)) {\n                for (const rawToolCall of delta.tool_calls) {\n                    toolCallChunks.push({\n                        name: rawToolCall.function?.name,\n                        args: rawToolCall.function?.arguments,\n                        id: rawToolCall.id,\n                        index: rawToolCall.index,\n                        type: \"tool_call_chunk\",\n                    });\n                }\n            }\n            return new AIMessageChunk({\n                content,\n                tool_call_chunks: toolCallChunks,\n                additional_kwargs,\n                id: rawResponse.id,\n                response_metadata,\n            });\n        }\n        else if (role === \"system\") {\n            return new SystemMessageChunk({ content, response_metadata });\n        }\n        else if (role === \"developer\") {\n            return new SystemMessageChunk({\n                content,\n                response_metadata,\n                additional_kwargs: {\n                    __openai_role__: \"developer\",\n                },\n            });\n        }\n        else if (role === \"function\") {\n            return new FunctionMessageChunk({\n                content,\n                additional_kwargs,\n                name: delta.name,\n                response_metadata,\n            });\n        }\n        else if (role === \"tool\") {\n            return new ToolMessageChunk({\n                content,\n                additional_kwargs,\n                tool_call_id: delta.tool_call_id,\n                response_metadata,\n            });\n        }\n        else {\n            return new ChatMessageChunk({ content, role, response_metadata });\n        }\n    }\n    /** @ignore */\n    _identifyingParams() {\n        return {\n            model_name: this.model,\n            ...this.invocationParams(),\n            ...this.clientConfig,\n        };\n    }\n    async *_streamResponseChunks(messages, options, runManager) {\n        if (this._useResponseApi(options)) {\n            const streamIterable = await this.responseApiWithRetry({\n                ...this.invocationParams(options, { streaming: true }),\n                input: _convertMessagesToOpenAIResponsesParams(messages, this.model),\n                stream: true,\n            }, options);\n            for await (const data of streamIterable) {\n                const chunk = _convertOpenAIResponsesDeltaToBaseMessageChunk(data);\n                if (chunk == null)\n                    continue;\n                yield chunk;\n            }\n            return;\n        }\n        const messagesMapped = _convertMessagesToOpenAIParams(messages, this.model);\n        const params = {\n            ...this.invocationParams(options, {\n                streaming: true,\n            }),\n            messages: messagesMapped,\n            stream: true,\n        };\n        let defaultRole;\n        const streamIterable = await this.completionWithRetry(params, options);\n        let usage;\n        for await (const data of streamIterable) {\n            const choice = data?.choices?.[0];\n            if (data.usage) {\n                usage = data.usage;\n            }\n            if (!choice) {\n                continue;\n            }\n            const { delta } = choice;\n            if (!delta) {\n                continue;\n            }\n            const chunk = this._convertOpenAIDeltaToBaseMessageChunk(delta, data, defaultRole);\n            defaultRole = delta.role ?? defaultRole;\n            const newTokenIndices = {\n                prompt: options.promptIndex ?? 0,\n                completion: choice.index ?? 0,\n            };\n            if (typeof chunk.content !== \"string\") {\n                console.log(\"[WARNING]: Received non-string content from OpenAI. This is currently not supported.\");\n                continue;\n            }\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const generationInfo = { ...newTokenIndices };\n            if (choice.finish_reason != null) {\n                generationInfo.finish_reason = choice.finish_reason;\n                // Only include system fingerprint in the last chunk for now\n                // to avoid concatenation issues\n                generationInfo.system_fingerprint = data.system_fingerprint;\n                generationInfo.model_name = data.model;\n            }\n            if (this.logprobs) {\n                generationInfo.logprobs = choice.logprobs;\n            }\n            const generationChunk = new ChatGenerationChunk({\n                message: chunk,\n                text: chunk.content,\n                generationInfo,\n            });\n            yield generationChunk;\n            await runManager?.handleLLMNewToken(generationChunk.text ?? \"\", newTokenIndices, undefined, undefined, undefined, { chunk: generationChunk });\n        }\n        if (usage) {\n            const inputTokenDetails = {\n                ...(usage.prompt_tokens_details?.audio_tokens !== null && {\n                    audio: usage.prompt_tokens_details?.audio_tokens,\n                }),\n                ...(usage.prompt_tokens_details?.cached_tokens !== null && {\n                    cache_read: usage.prompt_tokens_details?.cached_tokens,\n                }),\n            };\n            const outputTokenDetails = {\n                ...(usage.completion_tokens_details?.audio_tokens !== null && {\n                    audio: usage.completion_tokens_details?.audio_tokens,\n                }),\n                ...(usage.completion_tokens_details?.reasoning_tokens !== null && {\n                    reasoning: usage.completion_tokens_details?.reasoning_tokens,\n                }),\n            };\n            const generationChunk = new ChatGenerationChunk({\n                message: new AIMessageChunk({\n                    content: \"\",\n                    response_metadata: {\n                        usage: { ...usage },\n                    },\n                    usage_metadata: {\n                        input_tokens: usage.prompt_tokens,\n                        output_tokens: usage.completion_tokens,\n                        total_tokens: usage.total_tokens,\n                        ...(Object.keys(inputTokenDetails).length > 0 && {\n                            input_token_details: inputTokenDetails,\n                        }),\n                        ...(Object.keys(outputTokenDetails).length > 0 && {\n                            output_token_details: outputTokenDetails,\n                        }),\n                    },\n                }),\n                text: \"\",\n            });\n            yield generationChunk;\n        }\n        if (options.signal?.aborted) {\n            throw new Error(\"AbortError\");\n        }\n    }\n    /**\n     * Get the identifying parameters for the model\n     *\n     */\n    identifyingParams() {\n        return this._identifyingParams();\n    }\n    /** @ignore */\n    async _responseApiGenerate(messages, options, runManager) {\n        const invocationParams = this.invocationParams(options);\n        if (invocationParams.stream) {\n            const stream = this._streamResponseChunks(messages, options, runManager);\n            let finalChunk;\n            for await (const chunk of stream) {\n                chunk.message.response_metadata = {\n                    ...chunk.generationInfo,\n                    ...chunk.message.response_metadata,\n                };\n                finalChunk = finalChunk?.concat(chunk) ?? chunk;\n            }\n            return {\n                generations: finalChunk ? [finalChunk] : [],\n                llmOutput: {\n                    estimatedTokenUsage: finalChunk?.message\n                        ?.usage_metadata,\n                },\n            };\n        }\n        const input = _convertMessagesToOpenAIResponsesParams(messages, this.model);\n        const data = await this.responseApiWithRetry({ input, ...invocationParams }, { signal: options?.signal, ...options?.options });\n        return {\n            generations: [\n                {\n                    text: data.output_text,\n                    message: _convertOpenAIResponsesMessageToBaseMessage(data),\n                },\n            ],\n            llmOutput: {\n                id: data.id,\n                estimatedTokenUsage: data.usage\n                    ? {\n                        promptTokens: data.usage.input_tokens,\n                        completionTokens: data.usage.output_tokens,\n                        totalTokens: data.usage.total_tokens,\n                    }\n                    : undefined,\n            },\n        };\n    }\n    _useResponseApi(options) {\n        const usesBuiltInTools = options?.tools?.some(isBuiltInTool);\n        const hasResponsesOnlyKwargs = options?.previous_response_id != null ||\n            options?.text != null ||\n            options?.truncation != null ||\n            options?.include != null;\n        return this.useResponsesApi || usesBuiltInTools || hasResponsesOnlyKwargs;\n    }\n    /** @ignore */\n    async _generate(messages, options, runManager) {\n        if (this._useResponseApi(options)) {\n            return this._responseApiGenerate(messages, options, runManager);\n        }\n        const usageMetadata = {};\n        const params = this.invocationParams(options);\n        const messagesMapped = _convertMessagesToOpenAIParams(messages, this.model);\n        if (params.stream) {\n            const stream = this._streamResponseChunks(messages, options, runManager);\n            const finalChunks = {};\n            for await (const chunk of stream) {\n                chunk.message.response_metadata = {\n                    ...chunk.generationInfo,\n                    ...chunk.message.response_metadata,\n                };\n                const index = chunk.generationInfo?.completion ?? 0;\n                if (finalChunks[index] === undefined) {\n                    finalChunks[index] = chunk;\n                }\n                else {\n                    finalChunks[index] = finalChunks[index].concat(chunk);\n                }\n            }\n            const generations = Object.entries(finalChunks)\n                .sort(([aKey], [bKey]) => parseInt(aKey, 10) - parseInt(bKey, 10))\n                .map(([_, value]) => value);\n            const { functions, function_call } = this.invocationParams(options);\n            // OpenAI does not support token usage report under stream mode,\n            // fallback to estimation.\n            const promptTokenUsage = await this.getEstimatedTokenCountFromPrompt(messages, functions, function_call);\n            const completionTokenUsage = await this.getNumTokensFromGenerations(generations);\n            usageMetadata.input_tokens = promptTokenUsage;\n            usageMetadata.output_tokens = completionTokenUsage;\n            usageMetadata.total_tokens = promptTokenUsage + completionTokenUsage;\n            return {\n                generations,\n                llmOutput: {\n                    estimatedTokenUsage: {\n                        promptTokens: usageMetadata.input_tokens,\n                        completionTokens: usageMetadata.output_tokens,\n                        totalTokens: usageMetadata.total_tokens,\n                    },\n                },\n            };\n        }\n        else {\n            let data;\n            if (options.response_format &&\n                options.response_format.type === \"json_schema\") {\n                data = await this.betaParsedCompletionWithRetry({\n                    ...params,\n                    stream: false,\n                    messages: messagesMapped,\n                }, {\n                    signal: options?.signal,\n                    ...options?.options,\n                });\n            }\n            else {\n                data = await this.completionWithRetry({\n                    ...params,\n                    stream: false,\n                    messages: messagesMapped,\n                }, {\n                    signal: options?.signal,\n                    ...options?.options,\n                });\n            }\n            const { completion_tokens: completionTokens, prompt_tokens: promptTokens, total_tokens: totalTokens, prompt_tokens_details: promptTokensDetails, completion_tokens_details: completionTokensDetails, } = data?.usage ?? {};\n            if (completionTokens) {\n                usageMetadata.output_tokens =\n                    (usageMetadata.output_tokens ?? 0) + completionTokens;\n            }\n            if (promptTokens) {\n                usageMetadata.input_tokens =\n                    (usageMetadata.input_tokens ?? 0) + promptTokens;\n            }\n            if (totalTokens) {\n                usageMetadata.total_tokens =\n                    (usageMetadata.total_tokens ?? 0) + totalTokens;\n            }\n            if (promptTokensDetails?.audio_tokens !== null ||\n                promptTokensDetails?.cached_tokens !== null) {\n                usageMetadata.input_token_details = {\n                    ...(promptTokensDetails?.audio_tokens !== null && {\n                        audio: promptTokensDetails?.audio_tokens,\n                    }),\n                    ...(promptTokensDetails?.cached_tokens !== null && {\n                        cache_read: promptTokensDetails?.cached_tokens,\n                    }),\n                };\n            }\n            if (completionTokensDetails?.audio_tokens !== null ||\n                completionTokensDetails?.reasoning_tokens !== null) {\n                usageMetadata.output_token_details = {\n                    ...(completionTokensDetails?.audio_tokens !== null && {\n                        audio: completionTokensDetails?.audio_tokens,\n                    }),\n                    ...(completionTokensDetails?.reasoning_tokens !== null && {\n                        reasoning: completionTokensDetails?.reasoning_tokens,\n                    }),\n                };\n            }\n            const generations = [];\n            for (const part of data?.choices ?? []) {\n                const text = part.message?.content ?? \"\";\n                const generation = {\n                    text,\n                    message: this._convertOpenAIChatCompletionMessageToBaseMessage(part.message ?? { role: \"assistant\" }, data),\n                };\n                generation.generationInfo = {\n                    ...(part.finish_reason ? { finish_reason: part.finish_reason } : {}),\n                    ...(part.logprobs ? { logprobs: part.logprobs } : {}),\n                };\n                if (isAIMessage(generation.message)) {\n                    generation.message.usage_metadata = usageMetadata;\n                }\n                // Fields are not serialized unless passed to the constructor\n                // Doing this ensures all fields on the message are serialized\n                generation.message = new AIMessage(Object.fromEntries(Object.entries(generation.message).filter(([key]) => !key.startsWith(\"lc_\"))));\n                generations.push(generation);\n            }\n            return {\n                generations,\n                llmOutput: {\n                    tokenUsage: {\n                        promptTokens: usageMetadata.input_tokens,\n                        completionTokens: usageMetadata.output_tokens,\n                        totalTokens: usageMetadata.total_tokens,\n                    },\n                },\n            };\n        }\n    }\n    /**\n     * Estimate the number of tokens a prompt will use.\n     * Modified from: https://github.com/hmarr/openai-chat-tokens/blob/main/src/index.ts\n     */\n    async getEstimatedTokenCountFromPrompt(messages, functions, function_call) {\n        // It appears that if functions are present, the first system message is padded with a trailing newline. This\n        // was inferred by trying lots of combinations of messages and functions and seeing what the token counts were.\n        let tokens = (await this.getNumTokensFromMessages(messages)).totalCount;\n        // If there are functions, add the function definitions as they count towards token usage\n        if (functions && function_call !== \"auto\") {\n            const promptDefinitions = formatFunctionDefinitions(functions);\n            tokens += await this.getNumTokens(promptDefinitions);\n            tokens += 9; // Add nine per completion\n        }\n        // If there's a system message _and_ functions are present, subtract four tokens. I assume this is because\n        // functions typically add a system message, but reuse the first one if it's already there. This offsets\n        // the extra 9 tokens added by the function definitions.\n        if (functions && messages.find((m) => m._getType() === \"system\")) {\n            tokens -= 4;\n        }\n        // If function_call is 'none', add one token.\n        // If it's a FunctionCall object, add 4 + the number of tokens in the function name.\n        // If it's undefined or 'auto', don't add anything.\n        if (function_call === \"none\") {\n            tokens += 1;\n        }\n        else if (typeof function_call === \"object\") {\n            tokens += (await this.getNumTokens(function_call.name)) + 4;\n        }\n        return tokens;\n    }\n    /**\n     * Estimate the number of tokens an array of generations have used.\n     */\n    async getNumTokensFromGenerations(generations) {\n        const generationUsages = await Promise.all(generations.map(async (generation) => {\n            if (generation.message.additional_kwargs?.function_call) {\n                return (await this.getNumTokensFromMessages([generation.message]))\n                    .countPerMessage[0];\n            }\n            else {\n                return await this.getNumTokens(generation.message.content);\n            }\n        }));\n        return generationUsages.reduce((a, b) => a + b, 0);\n    }\n    async getNumTokensFromMessages(messages) {\n        let totalCount = 0;\n        let tokensPerMessage = 0;\n        let tokensPerName = 0;\n        // From: https://github.com/openai/openai-cookbook/blob/main/examples/How_to_format_inputs_to_ChatGPT_models.ipynb\n        if (this.model === \"gpt-3.5-turbo-0301\") {\n            tokensPerMessage = 4;\n            tokensPerName = -1;\n        }\n        else {\n            tokensPerMessage = 3;\n            tokensPerName = 1;\n        }\n        const countPerMessage = await Promise.all(messages.map(async (message) => {\n            const textCount = await this.getNumTokens(message.content);\n            const roleCount = await this.getNumTokens(messageToOpenAIRole(message));\n            const nameCount = message.name !== undefined\n                ? tokensPerName + (await this.getNumTokens(message.name))\n                : 0;\n            let count = textCount + tokensPerMessage + roleCount + nameCount;\n            // From: https://github.com/hmarr/openai-chat-tokens/blob/main/src/index.ts messageTokenEstimate\n            const openAIMessage = message;\n            if (openAIMessage._getType() === \"function\") {\n                count -= 2;\n            }\n            if (openAIMessage.additional_kwargs?.function_call) {\n                count += 3;\n            }\n            if (openAIMessage?.additional_kwargs.function_call?.name) {\n                count += await this.getNumTokens(openAIMessage.additional_kwargs.function_call?.name);\n            }\n            if (openAIMessage.additional_kwargs.function_call?.arguments) {\n                try {\n                    count += await this.getNumTokens(\n                    // Remove newlines and spaces\n                    JSON.stringify(JSON.parse(openAIMessage.additional_kwargs.function_call?.arguments)));\n                }\n                catch (error) {\n                    console.error(\"Error parsing function arguments\", error, JSON.stringify(openAIMessage.additional_kwargs.function_call));\n                    count += await this.getNumTokens(openAIMessage.additional_kwargs.function_call?.arguments);\n                }\n            }\n            totalCount += count;\n            return count;\n        }));\n        totalCount += 3; // every reply is primed with <|start|>assistant<|message|>\n        return { totalCount, countPerMessage };\n    }\n    async completionWithRetry(request, options) {\n        const requestOptions = this._getClientOptions(options);\n        return this.caller.call(async () => {\n            try {\n                const res = await this.client.chat.completions.create(request, requestOptions);\n                return res;\n            }\n            catch (e) {\n                const error = wrapOpenAIClientError(e);\n                throw error;\n            }\n        });\n    }\n    async responseApiWithRetry(request, options) {\n        return this.caller.call(async () => {\n            const requestOptions = this._getClientOptions(options);\n            try {\n                // use parse if dealing with json_schema\n                if (request.text?.format?.type === \"json_schema\" && !request.stream) {\n                    return await this.client.responses.parse(request, requestOptions);\n                }\n                return await this.client.responses.create(request, requestOptions);\n            }\n            catch (e) {\n                const error = wrapOpenAIClientError(e);\n                throw error;\n            }\n        });\n    }\n    /**\n     * Call the beta chat completions parse endpoint. This should only be called if\n     * response_format is set to \"json_object\".\n     * @param {OpenAIClient.Chat.ChatCompletionCreateParamsNonStreaming} request\n     * @param {OpenAICoreRequestOptions | undefined} options\n     */\n    async betaParsedCompletionWithRetry(request, options\n    // Avoid relying importing a beta type with no official entrypoint\n    ) {\n        const requestOptions = this._getClientOptions(options);\n        return this.caller.call(async () => {\n            try {\n                const res = await this.client.beta.chat.completions.parse(request, requestOptions);\n                return res;\n            }\n            catch (e) {\n                const error = wrapOpenAIClientError(e);\n                throw error;\n            }\n        });\n    }\n    _getClientOptions(options) {\n        if (!this.client) {\n            const openAIEndpointConfig = {\n                baseURL: this.clientConfig.baseURL,\n            };\n            const endpoint = getEndpoint(openAIEndpointConfig);\n            const params = {\n                ...this.clientConfig,\n                baseURL: endpoint,\n                timeout: this.timeout,\n                maxRetries: 0,\n            };\n            if (!params.baseURL) {\n                delete params.baseURL;\n            }\n            this.client = new OpenAIClient(params);\n        }\n        const requestOptions = {\n            ...this.clientConfig,\n            ...options,\n        };\n        return requestOptions;\n    }\n    _llmType() {\n        return \"openai\";\n    }\n    /** @ignore */\n    _combineLLMOutput(...llmOutputs) {\n        return llmOutputs.reduce((acc, llmOutput) => {\n            if (llmOutput && llmOutput.tokenUsage) {\n                acc.tokenUsage.completionTokens +=\n                    llmOutput.tokenUsage.completionTokens ?? 0;\n                acc.tokenUsage.promptTokens += llmOutput.tokenUsage.promptTokens ?? 0;\n                acc.tokenUsage.totalTokens += llmOutput.tokenUsage.totalTokens ?? 0;\n            }\n            return acc;\n        }, {\n            tokenUsage: {\n                completionTokens: 0,\n                promptTokens: 0,\n                totalTokens: 0,\n            },\n        });\n    }\n    withStructuredOutput(outputSchema, config) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let schema;\n        let name;\n        let method;\n        let includeRaw;\n        if (isStructuredOutputMethodParams(outputSchema)) {\n            schema = outputSchema.schema;\n            name = outputSchema.name;\n            method = outputSchema.method;\n            includeRaw = outputSchema.includeRaw;\n        }\n        else {\n            schema = outputSchema;\n            name = config?.name;\n            method = config?.method;\n            includeRaw = config?.includeRaw;\n        }\n        let llm;\n        let outputParser;\n        if (config?.strict !== undefined && method === \"jsonMode\") {\n            throw new Error(\"Argument `strict` is only supported for `method` = 'function_calling'\");\n        }\n        if (!this.model.startsWith(\"gpt-3\") &&\n            !this.model.startsWith(\"gpt-4-\") &&\n            this.model !== \"gpt-4\") {\n            if (method === undefined) {\n                method = \"jsonSchema\";\n            }\n        }\n        else if (method === \"jsonSchema\") {\n            console.warn(`[WARNING]: JSON Schema is not supported for model \"${this.model}\". Falling back to tool calling.`);\n        }\n        if (method === \"jsonMode\") {\n            llm = this.bind({\n                response_format: { type: \"json_object\" },\n            });\n            if (isZodSchema(schema)) {\n                outputParser = StructuredOutputParser.fromZodSchema(schema);\n            }\n            else {\n                outputParser = new JsonOutputParser();\n            }\n        }\n        else if (method === \"jsonSchema\") {\n            llm = this.bind({\n                response_format: {\n                    type: \"json_schema\",\n                    json_schema: {\n                        name: name ?? \"extract\",\n                        description: schema.description,\n                        schema,\n                        strict: config?.strict,\n                    },\n                },\n            });\n            if (isZodSchema(schema)) {\n                const altParser = StructuredOutputParser.fromZodSchema(schema);\n                outputParser = RunnableLambda.from((aiMessage) => {\n                    if (\"parsed\" in aiMessage.additional_kwargs) {\n                        return aiMessage.additional_kwargs.parsed;\n                    }\n                    return altParser;\n                });\n            }\n            else {\n                outputParser = new JsonOutputParser();\n            }\n        }\n        else {\n            let functionName = name ?? \"extract\";\n            // Is function calling\n            if (isZodSchema(schema)) {\n                const asJsonSchema = zodToJsonSchema(schema);\n                llm = this.bind({\n                    tools: [\n                        {\n                            type: \"function\",\n                            function: {\n                                name: functionName,\n                                description: asJsonSchema.description,\n                                parameters: asJsonSchema,\n                            },\n                        },\n                    ],\n                    tool_choice: {\n                        type: \"function\",\n                        function: {\n                            name: functionName,\n                        },\n                    },\n                    // Do not pass `strict` argument to OpenAI if `config.strict` is undefined\n                    ...(config?.strict !== undefined ? { strict: config.strict } : {}),\n                });\n                outputParser = new JsonOutputKeyToolsParser({\n                    returnSingle: true,\n                    keyName: functionName,\n                    zodSchema: schema,\n                });\n            }\n            else {\n                let openAIFunctionDefinition;\n                if (typeof schema.name === \"string\" &&\n                    typeof schema.parameters === \"object\" &&\n                    schema.parameters != null) {\n                    openAIFunctionDefinition = schema;\n                    functionName = schema.name;\n                }\n                else {\n                    functionName = schema.title ?? functionName;\n                    openAIFunctionDefinition = {\n                        name: functionName,\n                        description: schema.description ?? \"\",\n                        parameters: schema,\n                    };\n                }\n                llm = this.bind({\n                    tools: [\n                        {\n                            type: \"function\",\n                            function: openAIFunctionDefinition,\n                        },\n                    ],\n                    tool_choice: {\n                        type: \"function\",\n                        function: {\n                            name: functionName,\n                        },\n                    },\n                    // Do not pass `strict` argument to OpenAI if `config.strict` is undefined\n                    ...(config?.strict !== undefined ? { strict: config.strict } : {}),\n                });\n                outputParser = new JsonOutputKeyToolsParser({\n                    returnSingle: true,\n                    keyName: functionName,\n                });\n            }\n        }\n        if (!includeRaw) {\n            return llm.pipe(outputParser);\n        }\n        const parserAssign = RunnablePassthrough.assign({\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            parsed: (input, config) => outputParser.invoke(input.raw, config),\n        });\n        const parserNone = RunnablePassthrough.assign({\n            parsed: () => null,\n        });\n        const parsedWithFallback = parserAssign.withFallbacks({\n            fallbacks: [parserNone],\n        });\n        return RunnableSequence.from([{ raw: llm }, parsedWithFallback]);\n    }\n}\nfunction isZodSchema(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ninput) {\n    // Check for a characteristic method of Zod schemas\n    return typeof input?.parse === \"function\";\n}\nfunction isStructuredOutputMethodParams(x\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n) {\n    return (x !== undefined &&\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        typeof x.schema ===\n            \"object\");\n}\n","import { isLangChainTool } from \"@langchain/core/utils/function_calling\";\nimport { formatToOpenAITool } from \"./openai.js\";\n/**\n * Formats a tool in either OpenAI format, or LangChain structured tool format\n * into an OpenAI tool format. If the tool is already in OpenAI format, return without\n * any changes. If it is in LangChain structured tool format, convert it to OpenAI tool format\n * using OpenAI's `zodFunction` util, falling back to `convertToOpenAIFunction` if the parameters\n * returned from the `zodFunction` util are not defined.\n *\n * @param {BindToolsInput} tool The tool to convert to an OpenAI tool.\n * @param {Object} [fields] Additional fields to add to the OpenAI tool.\n * @returns {ToolDefinition} The inputted tool in OpenAI tool format.\n */\nexport function _convertToOpenAITool(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntool, fields) {\n    let toolDef;\n    if (isLangChainTool(tool)) {\n        toolDef = formatToOpenAITool(tool);\n    }\n    else {\n        toolDef = tool;\n    }\n    if (fields?.strict !== undefined) {\n        toolDef.function.strict = fields.strict;\n    }\n    return toolDef;\n}\n","/**\n * This function generates an endpoint URL for (Azure) OpenAI\n * based on the configuration parameters provided.\n *\n * @param {OpenAIEndpointConfig} config - The configuration object for the (Azure) endpoint.\n *\n * @property {string} config.azureOpenAIApiDeploymentName - The deployment name of Azure OpenAI.\n * @property {string} config.azureOpenAIApiInstanceName - The instance name of Azure OpenAI, e.g. `example-resource`.\n * @property {string} config.azureOpenAIApiKey - The API Key for Azure OpenAI.\n * @property {string} config.azureOpenAIBasePath - The base path for Azure OpenAI, e.g. `https://example-resource.azure.openai.com/openai/deployments/`.\n * @property {string} config.baseURL - Some other custom base path URL.\n * @property {string} config.azureOpenAIEndpoint - The endpoint for the Azure OpenAI instance, e.g. `https://example-resource.azure.openai.com/`.\n *\n * The function operates as follows:\n * - If both `azureOpenAIBasePath` and `azureOpenAIApiDeploymentName` (plus `azureOpenAIApiKey`) are provided, it returns an URL combining these two parameters (`${azureOpenAIBasePath}/${azureOpenAIApiDeploymentName}`).\n * - If both `azureOpenAIEndpoint` and `azureOpenAIApiDeploymentName` (plus `azureOpenAIApiKey`) are provided, it returns an URL combining these two parameters (`${azureOpenAIEndpoint}/openai/deployments/${azureOpenAIApiDeploymentName}`).\n * - If `azureOpenAIApiKey` is provided, it checks for `azureOpenAIApiInstanceName` and `azureOpenAIApiDeploymentName` and throws an error if any of these is missing. If both are provided, it generates an URL incorporating these parameters.\n * - If none of the above conditions are met, return any custom `baseURL`.\n * - The function returns the generated URL as a string, or undefined if no custom paths are specified.\n *\n * @throws Will throw an error if the necessary parameters for generating the URL are missing.\n *\n * @returns {string | undefined} The generated (Azure) OpenAI endpoint URL.\n */\nexport function getEndpoint(config) {\n    const { azureOpenAIApiDeploymentName, azureOpenAIApiInstanceName, azureOpenAIApiKey, azureOpenAIBasePath, baseURL, azureADTokenProvider, azureOpenAIEndpoint, } = config;\n    if ((azureOpenAIApiKey || azureADTokenProvider) &&\n        azureOpenAIBasePath &&\n        azureOpenAIApiDeploymentName) {\n        return `${azureOpenAIBasePath}/${azureOpenAIApiDeploymentName}`;\n    }\n    if ((azureOpenAIApiKey || azureADTokenProvider) &&\n        azureOpenAIEndpoint &&\n        azureOpenAIApiDeploymentName) {\n        return `${azureOpenAIEndpoint}/openai/deployments/${azureOpenAIApiDeploymentName}`;\n    }\n    if (azureOpenAIApiKey || azureADTokenProvider) {\n        if (!azureOpenAIApiInstanceName) {\n            throw new Error(\"azureOpenAIApiInstanceName is required when using azureOpenAIApiKey\");\n        }\n        if (!azureOpenAIApiDeploymentName) {\n            throw new Error(\"azureOpenAIApiDeploymentName is a required parameter when using azureOpenAIApiKey\");\n        }\n        return `https://${azureOpenAIApiInstanceName}.openai.azure.com/openai/deployments/${azureOpenAIApiDeploymentName}`;\n    }\n    return baseURL;\n}\n","import { z } from \"zod\";\nimport { validate, } from \"@cfworker/json-schema\";\nimport { CallbackManager, parseCallbackConfigArg, } from \"../callbacks/manager.js\";\nimport { BaseLangChain } from \"../language_models/base.js\";\nimport { ensureConfig, patchConfig, pickRunnableConfigKeys, } from \"../runnables/config.js\";\nimport { isDirectToolOutput, ToolMessage } from \"../messages/tool.js\";\nimport { AsyncLocalStorageProviderSingleton } from \"../singletons/index.js\";\nimport { _isToolCall, ToolInputParsingException } from \"./utils.js\";\nimport { isZodSchema } from \"../utils/types/is_zod_schema.js\";\nimport { validatesOnlyStrings } from \"../utils/json_schema.js\";\nexport { ToolInputParsingException };\n/**\n * Base class for Tools that accept input of any shape defined by a Zod schema.\n */\nexport class StructuredTool extends BaseLangChain {\n    get lc_namespace() {\n        return [\"langchain\", \"tools\"];\n    }\n    constructor(fields) {\n        super(fields ?? {});\n        /**\n         * Whether to return the tool's output directly.\n         *\n         * Setting this to true means that after the tool is called,\n         * an agent should stop looping.\n         */\n        Object.defineProperty(this, \"returnDirect\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"verboseParsingErrors\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        /**\n         * The tool response format.\n         *\n         * If \"content\" then the output of the tool is interpreted as the contents of a\n         * ToolMessage. If \"content_and_artifact\" then the output is expected to be a\n         * two-tuple corresponding to the (content, artifact) of a ToolMessage.\n         *\n         * @default \"content\"\n         */\n        Object.defineProperty(this, \"responseFormat\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"content\"\n        });\n        this.verboseParsingErrors =\n            fields?.verboseParsingErrors ?? this.verboseParsingErrors;\n        this.responseFormat = fields?.responseFormat ?? this.responseFormat;\n    }\n    /**\n     * Invokes the tool with the provided input and configuration.\n     * @param input The input for the tool.\n     * @param config Optional configuration for the tool.\n     * @returns A Promise that resolves with a string.\n     */\n    async invoke(input, config) {\n        let tool_call_id;\n        let toolInput;\n        let enrichedConfig = ensureConfig(config);\n        if (_isToolCall(input)) {\n            tool_call_id = input.id;\n            toolInput = input.args;\n            enrichedConfig = {\n                ...enrichedConfig,\n                toolCall: input,\n                configurable: {\n                    ...enrichedConfig.configurable,\n                    tool_call_id,\n                },\n            };\n        }\n        else {\n            toolInput = input;\n        }\n        return this.call(toolInput, enrichedConfig);\n    }\n    /**\n     * @deprecated Use .invoke() instead. Will be removed in 0.3.0.\n     *\n     * Calls the tool with the provided argument, configuration, and tags. It\n     * parses the input according to the schema, handles any errors, and\n     * manages callbacks.\n     * @param arg The input argument for the tool.\n     * @param configArg Optional configuration or callbacks for the tool.\n     * @param tags Optional tags for the tool.\n     * @returns A Promise that resolves with a string.\n     */\n    async call(arg, configArg, \n    /** @deprecated */\n    tags) {\n        let parsed = arg;\n        if (isZodSchema(this.schema)) {\n            try {\n                parsed = await this.schema.parseAsync(arg);\n            }\n            catch (e) {\n                let message = `Received tool input did not match expected schema`;\n                if (this.verboseParsingErrors) {\n                    message = `${message}\\nDetails: ${e.message}`;\n                }\n                throw new ToolInputParsingException(message, JSON.stringify(arg));\n            }\n        }\n        else {\n            const result = validate(arg, this.schema);\n            if (!result.valid) {\n                let message = `Received tool input did not match expected schema`;\n                if (this.verboseParsingErrors) {\n                    message = `${message}\\nDetails: ${result.errors\n                        .map((e) => `${e.keywordLocation}: ${e.error}`)\n                        .join(\"\\n\")}`;\n                }\n                throw new ToolInputParsingException(message, JSON.stringify(arg));\n            }\n        }\n        const config = parseCallbackConfigArg(configArg);\n        const callbackManager_ = CallbackManager.configure(config.callbacks, this.callbacks, config.tags || tags, this.tags, config.metadata, this.metadata, { verbose: this.verbose });\n        const runManager = await callbackManager_?.handleToolStart(this.toJSON(), typeof parsed === \"string\" ? parsed : JSON.stringify(parsed), config.runId, undefined, undefined, undefined, config.runName);\n        delete config.runId;\n        let result;\n        try {\n            result = await this._call(parsed, runManager, config);\n        }\n        catch (e) {\n            await runManager?.handleToolError(e);\n            throw e;\n        }\n        let content;\n        let artifact;\n        if (this.responseFormat === \"content_and_artifact\") {\n            if (Array.isArray(result) && result.length === 2) {\n                [content, artifact] = result;\n            }\n            else {\n                throw new Error(`Tool response format is \"content_and_artifact\" but the output was not a two-tuple.\\nResult: ${JSON.stringify(result)}`);\n            }\n        }\n        else {\n            content = result;\n        }\n        let toolCallId;\n        if (config && \"configurable\" in config) {\n            toolCallId = config.configurable\n                .tool_call_id;\n        }\n        const formattedOutput = _formatToolOutput({\n            content,\n            artifact,\n            toolCallId,\n            name: this.name,\n        });\n        await runManager?.handleToolEnd(formattedOutput);\n        return formattedOutput;\n    }\n}\n/**\n * Base class for Tools that accept input as a string.\n */\nexport class Tool extends StructuredTool {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"schema\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: z\n                .object({ input: z.string().optional() })\n                .transform((obj) => obj.input)\n        });\n    }\n    /**\n     * @deprecated Use .invoke() instead. Will be removed in 0.3.0.\n     *\n     * Calls the tool with the provided argument and callbacks. It handles\n     * string inputs specifically.\n     * @param arg The input argument for the tool, which can be a string, undefined, or an input of the tool's schema.\n     * @param callbacks Optional callbacks for the tool.\n     * @returns A Promise that resolves with a string.\n     */\n    call(arg, callbacks) {\n        return super.call(typeof arg === \"string\" || !arg ? { input: arg } : arg, callbacks);\n    }\n}\n/**\n * A tool that can be created dynamically from a function, name, and description.\n */\nexport class DynamicTool extends Tool {\n    static lc_name() {\n        return \"DynamicTool\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"description\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"func\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.name = fields.name;\n        this.description = fields.description;\n        this.func = fields.func;\n        this.returnDirect = fields.returnDirect ?? this.returnDirect;\n    }\n    /**\n     * @deprecated Use .invoke() instead. Will be removed in 0.3.0.\n     */\n    async call(arg, configArg) {\n        const config = parseCallbackConfigArg(configArg);\n        if (config.runName === undefined) {\n            config.runName = this.name;\n        }\n        return super.call(arg, config);\n    }\n    /** @ignore */\n    async _call(input, runManager, parentConfig) {\n        return this.func(input, runManager, parentConfig);\n    }\n}\n/**\n * A tool that can be created dynamically from a function, name, and\n * description, designed to work with structured data. It extends the\n * StructuredTool class and overrides the _call method to execute the\n * provided function when the tool is called.\n *\n * Schema can be passed as Zod or JSON schema. The tool will not validate\n * input if JSON schema is passed.\n */\nexport class DynamicStructuredTool extends StructuredTool {\n    static lc_name() {\n        return \"DynamicStructuredTool\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"description\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"func\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"schema\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.name = fields.name;\n        this.description = fields.description;\n        this.func = fields.func;\n        this.returnDirect = fields.returnDirect ?? this.returnDirect;\n        this.schema = fields.schema;\n    }\n    /**\n     * @deprecated Use .invoke() instead. Will be removed in 0.3.0.\n     */\n    async call(arg, configArg, \n    /** @deprecated */\n    tags) {\n        const config = parseCallbackConfigArg(configArg);\n        if (config.runName === undefined) {\n            config.runName = this.name;\n        }\n        return super.call(arg, config, tags);\n    }\n    _call(arg, runManager, parentConfig) {\n        return this.func(arg, runManager, parentConfig);\n    }\n}\n/**\n * Abstract base class for toolkits in LangChain. Toolkits are collections\n * of tools that agents can use. Subclasses must implement the `tools`\n * property to provide the specific tools for the toolkit.\n */\nexport class BaseToolkit {\n    getTools() {\n        return this.tools;\n    }\n}\nexport function tool(func, fields) {\n    const isShapelessZodSchema = fields.schema &&\n        isZodSchema(fields.schema) &&\n        (!(\"shape\" in fields.schema) || !fields.schema.shape);\n    const isStringJSONSchema = validatesOnlyStrings(fields.schema);\n    // If the schema is not provided, or it's a shapeless schema (e.g. a ZodString), create a DynamicTool\n    if (!fields.schema || isShapelessZodSchema || isStringJSONSchema) {\n        return new DynamicTool({\n            ...fields,\n            description: fields.description ??\n                fields.schema?.description ??\n                `${fields.name} tool`,\n            func: async (input, runManager, config) => {\n                return new Promise((resolve, reject) => {\n                    const childConfig = patchConfig(config, {\n                        callbacks: runManager?.getChild(),\n                    });\n                    void AsyncLocalStorageProviderSingleton.runWithConfig(pickRunnableConfigKeys(childConfig), async () => {\n                        try {\n                            // TS doesn't restrict the type here based on the guard above\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            resolve(func(input, childConfig));\n                        }\n                        catch (e) {\n                            reject(e);\n                        }\n                    });\n                });\n            },\n        });\n    }\n    const schema = fields.schema;\n    const description = fields.description ??\n        fields.schema.description ??\n        `${fields.name} tool`;\n    return new DynamicStructuredTool({\n        ...fields,\n        description,\n        schema,\n        func: async (input, runManager, config) => {\n            return new Promise((resolve, reject) => {\n                const childConfig = patchConfig(config, {\n                    callbacks: runManager?.getChild(),\n                });\n                void AsyncLocalStorageProviderSingleton.runWithConfig(pickRunnableConfigKeys(childConfig), async () => {\n                    try {\n                        resolve(func(input, childConfig));\n                    }\n                    catch (e) {\n                        reject(e);\n                    }\n                });\n            });\n        },\n    });\n}\nfunction _formatToolOutput(params) {\n    const { content, artifact, toolCallId } = params;\n    if (toolCallId && !isDirectToolOutput(content)) {\n        if (typeof content === \"string\" ||\n            (Array.isArray(content) &&\n                content.every((item) => typeof item === \"object\"))) {\n            return new ToolMessage({\n                content,\n                artifact,\n                tool_call_id: toolCallId,\n                name: params.name,\n            });\n        }\n        else {\n            return new ToolMessage({\n                content: _stringify(content),\n                artifact,\n                tool_call_id: toolCallId,\n                name: params.name,\n            });\n        }\n    }\n    else {\n        return content;\n    }\n}\nfunction _stringify(content) {\n    try {\n        return JSON.stringify(content, null, 2);\n    }\n    catch (_noOp) {\n        return `${content}`;\n    }\n}\n","import { ChatOpenAI } from \"@langchain/openai\";\n\n// Interface for model data\ninterface ModelData {\n    id: string;\n    name: string;\n    description?: string;\n}\n\n// Function to fetch available models from the API\nexport async function fetchAvailableModels(baseURL: string, apiKey: string): Promise<string[]> {\n    try {\n        const response = await fetch(`${baseURL}/models`, {\n            headers: {\n                \"Authorization\": `Bearer ${apiKey}`,\n                \"HTTP-Referer\": \"https://localhost:3000\",\n                \"X-Title\": \"WordLLM\",\n            }\n        });\n\n        if (!response.ok) {\n            throw new Error(`Failed to fetch models: ${response.status} ${response.statusText}`);\n        }\n\n        const data = await response.json();\n        return data.data.map((model: ModelData) => model.id);\n    } catch (error) {\n        console.error(\"Error fetching models:\", error);\n        throw error;\n    }\n}\n\n// Function to filter models based on search term\nexport function filterModels(models: string[], searchTerm: string): string[] {\n    const term = searchTerm.toLowerCase();\n    return models.filter(model => model.toLowerCase().includes(term));\n}\n\n// Function to initialize the model with custom configuration\nexport function initializeModel(baseURL: string, openAIApiKey: string, modelName?: string, promptName?: string) {\n    const defaultHeaders = {\n        \"HTTP-Referer\": \"https://localhost:3000\",\n        \"X-Title\": promptName ? `WordLLM/${promptName}` : \"WordLLM\"\n    };\n\n    return new ChatOpenAI({\n        openAIApiKey: openAIApiKey,\n        configuration: {\n            baseURL: baseURL,\n            defaultHeaders: defaultHeaders,\n        },\n        modelName: modelName || \"qwen/qwen-2.5-7b-instruct:free\",\n        temperature: 0.7,\n    });\n}\n\n// Function to get response from the LLM\nexport async function getLLMResponse(prompt: string, model: ChatOpenAI): Promise<string> {\n    try {\n        const response = await model.invoke(prompt);\n        return response.content as string;\n    } catch (error: any) {\n        console.error(\"Error getting LLM response:\", error);\n        \n        // Extract error details from the response if available\n        let errorMessage = \"Sorry, there was an error processing your request.\";\n        if (error.response) {\n            try {\n                const errorData = await error.response.json();\n                errorMessage = `API Error: ${errorData.error?.message || JSON.stringify(errorData)}`;\n            } catch (e) {\n                errorMessage = `API Error: ${error.response.status} ${error.response.statusText}`;\n            }\n        } else if (error.message) {\n            errorMessage = `Error: ${error.message}`;\n        }\n        \n        return errorMessage;\n    }\n} ","/* eslint-disable no-param-reassign */\nimport { getEnvironmentVariable } from \"@langchain/core/utils/env\";\nimport { OpenAI as OpenAIClient } from \"openai\";\nimport { Tool } from \"@langchain/core/tools\";\n/**\n * A tool for generating images with Open AIs Dall-E 2 or 3 API.\n */\nexport class DallEAPIWrapper extends Tool {\n    static lc_name() {\n        return \"DallEAPIWrapper\";\n    }\n    constructor(fields) {\n        // Shim for new base tool param name\n        if (fields?.responseFormat !== undefined &&\n            [\"url\", \"b64_json\"].includes(fields.responseFormat)) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            fields.dallEResponseFormat = fields.responseFormat;\n            fields.responseFormat = \"content\";\n        }\n        super(fields);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"dalle_api_wrapper\"\n        });\n        Object.defineProperty(this, \"description\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"A wrapper around OpenAI DALL-E API. Useful for when you need to generate images from a text description. Input should be an image description.\"\n        });\n        Object.defineProperty(this, \"client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"model\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"dall-e-3\"\n        });\n        Object.defineProperty(this, \"style\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"vivid\"\n        });\n        Object.defineProperty(this, \"quality\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"standard\"\n        });\n        Object.defineProperty(this, \"n\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 1\n        });\n        Object.defineProperty(this, \"size\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"1024x1024\"\n        });\n        Object.defineProperty(this, \"dallEResponseFormat\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"url\"\n        });\n        Object.defineProperty(this, \"user\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        const openAIApiKey = fields?.apiKey ??\n            fields?.openAIApiKey ??\n            getEnvironmentVariable(\"OPENAI_API_KEY\");\n        const organization = fields?.organization ?? getEnvironmentVariable(\"OPENAI_ORGANIZATION\");\n        const clientConfig = {\n            apiKey: openAIApiKey,\n            organization,\n            dangerouslyAllowBrowser: true,\n            baseURL: fields?.baseUrl,\n        };\n        this.client = new OpenAIClient(clientConfig);\n        this.model = fields?.model ?? fields?.modelName ?? this.model;\n        this.style = fields?.style ?? this.style;\n        this.quality = fields?.quality ?? this.quality;\n        this.n = fields?.n ?? this.n;\n        this.size = fields?.size ?? this.size;\n        this.dallEResponseFormat =\n            fields?.dallEResponseFormat ?? this.dallEResponseFormat;\n        this.user = fields?.user;\n    }\n    /**\n     * Processes the API response if multiple images are generated.\n     * Returns a list of MessageContentImageUrl objects. If the response\n     * format is `url`, then the `image_url` field will contain the URL.\n     * If it is `b64_json`, then the `image_url` field will contain an object\n     * with a `url` field with the base64 encoded image.\n     *\n     * @param {OpenAIClient.Images.ImagesResponse[]} response The API response\n     * @returns {MessageContentImageUrl[]}\n     */\n    processMultipleGeneratedUrls(response) {\n        if (this.dallEResponseFormat === \"url\") {\n            return response.flatMap((res) => {\n                const imageUrlContent = res.data\n                    .flatMap((item) => {\n                    if (!item.url)\n                        return [];\n                    return {\n                        type: \"image_url\",\n                        image_url: item.url,\n                    };\n                })\n                    .filter((item) => item !== undefined &&\n                    item.type === \"image_url\" &&\n                    typeof item.image_url === \"string\" &&\n                    item.image_url !== undefined);\n                return imageUrlContent;\n            });\n        }\n        else {\n            return response.flatMap((res) => {\n                const b64Content = res.data\n                    .flatMap((item) => {\n                    if (!item.b64_json)\n                        return [];\n                    return {\n                        type: \"image_url\",\n                        image_url: {\n                            url: item.b64_json,\n                        },\n                    };\n                })\n                    .filter((item) => item !== undefined &&\n                    item.type === \"image_url\" &&\n                    typeof item.image_url === \"object\" &&\n                    \"url\" in item.image_url &&\n                    typeof item.image_url.url === \"string\" &&\n                    item.image_url.url !== undefined);\n                return b64Content;\n            });\n        }\n    }\n    /** @ignore */\n    async _call(input) {\n        const generateImageFields = {\n            model: this.model,\n            prompt: input,\n            n: 1,\n            size: this.size,\n            response_format: this.dallEResponseFormat,\n            style: this.style,\n            quality: this.quality,\n            user: this.user,\n        };\n        if (this.n > 1) {\n            const results = await Promise.all(Array.from({ length: this.n }).map(() => this.client.images.generate(generateImageFields)));\n            return this.processMultipleGeneratedUrls(results);\n        }\n        const response = await this.client.images.generate(generateImageFields);\n        let data = \"\";\n        if (this.dallEResponseFormat === \"url\") {\n            [data] = response.data\n                .map((item) => item.url)\n                .filter((url) => url !== \"undefined\");\n        }\n        else {\n            [data] = response.data\n                .map((item) => item.b64_json)\n                .filter((b64_json) => b64_json !== \"undefined\");\n        }\n        return data;\n    }\n}\nObject.defineProperty(DallEAPIWrapper, \"toolName\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"dalle_api_wrapper\"\n});\n","/**\n * marked v15.0.11 - a markdown parser\n * Copyright (c) 2011-2025, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\n/**\n * Gets the original marked default options.\n */\nfunction _getDefaults() {\n    return {\n        async: false,\n        breaks: false,\n        extensions: null,\n        gfm: true,\n        hooks: null,\n        pedantic: false,\n        renderer: null,\n        silent: false,\n        tokenizer: null,\n        walkTokens: null,\n    };\n}\nlet _defaults = _getDefaults();\nfunction changeDefaults(newDefaults) {\n    _defaults = newDefaults;\n}\n\nconst noopTest = { exec: () => null };\nfunction edit(regex, opt = '') {\n    let source = typeof regex === 'string' ? regex : regex.source;\n    const obj = {\n        replace: (name, val) => {\n            let valSource = typeof val === 'string' ? val : val.source;\n            valSource = valSource.replace(other.caret, '$1');\n            source = source.replace(name, valSource);\n            return obj;\n        },\n        getRegex: () => {\n            return new RegExp(source, opt);\n        },\n    };\n    return obj;\n}\nconst other = {\n    codeRemoveIndent: /^(?: {1,4}| {0,3}\\t)/gm,\n    outputLinkReplace: /\\\\([\\[\\]])/g,\n    indentCodeCompensation: /^(\\s+)(?:```)/,\n    beginningSpace: /^\\s+/,\n    endingHash: /#$/,\n    startingSpaceChar: /^ /,\n    endingSpaceChar: / $/,\n    nonSpaceChar: /[^ ]/,\n    newLineCharGlobal: /\\n/g,\n    tabCharGlobal: /\\t/g,\n    multipleSpaceGlobal: /\\s+/g,\n    blankLine: /^[ \\t]*$/,\n    doubleBlankLine: /\\n[ \\t]*\\n[ \\t]*$/,\n    blockquoteStart: /^ {0,3}>/,\n    blockquoteSetextReplace: /\\n {0,3}((?:=+|-+) *)(?=\\n|$)/g,\n    blockquoteSetextReplace2: /^ {0,3}>[ \\t]?/gm,\n    listReplaceTabs: /^\\t+/,\n    listReplaceNesting: /^ {1,4}(?=( {4})*[^ ])/g,\n    listIsTask: /^\\[[ xX]\\] /,\n    listReplaceTask: /^\\[[ xX]\\] +/,\n    anyLine: /\\n.*\\n/,\n    hrefBrackets: /^<(.*)>$/,\n    tableDelimiter: /[:|]/,\n    tableAlignChars: /^\\||\\| *$/g,\n    tableRowBlankLine: /\\n[ \\t]*$/,\n    tableAlignRight: /^ *-+: *$/,\n    tableAlignCenter: /^ *:-+: *$/,\n    tableAlignLeft: /^ *:-+ *$/,\n    startATag: /^<a /i,\n    endATag: /^<\\/a>/i,\n    startPreScriptTag: /^<(pre|code|kbd|script)(\\s|>)/i,\n    endPreScriptTag: /^<\\/(pre|code|kbd|script)(\\s|>)/i,\n    startAngleBracket: /^</,\n    endAngleBracket: />$/,\n    pedanticHrefTitle: /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/,\n    unicodeAlphaNumeric: /[\\p{L}\\p{N}]/u,\n    escapeTest: /[&<>\"']/,\n    escapeReplace: /[&<>\"']/g,\n    escapeTestNoEncode: /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/,\n    escapeReplaceNoEncode: /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/g,\n    unescapeTest: /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig,\n    caret: /(^|[^\\[])\\^/g,\n    percentDecode: /%25/g,\n    findPipe: /\\|/g,\n    splitPipe: / \\|/,\n    slashPipe: /\\\\\\|/g,\n    carriageReturn: /\\r\\n|\\r/g,\n    spaceLine: /^ +$/gm,\n    notSpaceStart: /^\\S*/,\n    endingNewline: /\\n$/,\n    listItemRegex: (bull) => new RegExp(`^( {0,3}${bull})((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))`),\n    nextBulletRegex: (indent) => new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:[*+-]|\\\\d{1,9}[.)])((?:[ \\t][^\\\\n]*)?(?:\\\\n|$))`),\n    hrRegex: (indent) => new RegExp(`^ {0,${Math.min(3, indent - 1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)`),\n    fencesBeginRegex: (indent) => new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:\\`\\`\\`|~~~)`),\n    headingBeginRegex: (indent) => new RegExp(`^ {0,${Math.min(3, indent - 1)}}#`),\n    htmlBeginRegex: (indent) => new RegExp(`^ {0,${Math.min(3, indent - 1)}}<(?:[a-z].*>|!--)`, 'i'),\n};\n/**\n * Block-Level Grammar\n */\nconst newline = /^(?:[ \\t]*(?:\\n|$))+/;\nconst blockCode = /^((?: {4}| {0,3}\\t)[^\\n]+(?:\\n(?:[ \\t]*(?:\\n|$))*)?)+/;\nconst fences = /^ {0,3}(`{3,}(?=[^`\\n]*(?:\\n|$))|~{3,})([^\\n]*)(?:\\n|$)(?:|([\\s\\S]*?)(?:\\n|$))(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/;\nconst hr = /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/;\nconst heading = /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/;\nconst bullet = /(?:[*+-]|\\d{1,9}[.)])/;\nconst lheadingCore = /^(?!bull |blockCode|fences|blockquote|heading|html|table)((?:.|\\n(?!\\s*?\\n|bull |blockCode|fences|blockquote|heading|html|table))+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/;\nconst lheading = edit(lheadingCore)\n    .replace(/bull/g, bullet) // lists can interrupt\n    .replace(/blockCode/g, /(?: {4}| {0,3}\\t)/) // indented code blocks can interrupt\n    .replace(/fences/g, / {0,3}(?:`{3,}|~{3,})/) // fenced code blocks can interrupt\n    .replace(/blockquote/g, / {0,3}>/) // blockquote can interrupt\n    .replace(/heading/g, / {0,3}#{1,6}/) // ATX heading can interrupt\n    .replace(/html/g, / {0,3}<[^\\n>]+>\\n/) // block html can interrupt\n    .replace(/\\|table/g, '') // table not in commonmark\n    .getRegex();\nconst lheadingGfm = edit(lheadingCore)\n    .replace(/bull/g, bullet) // lists can interrupt\n    .replace(/blockCode/g, /(?: {4}| {0,3}\\t)/) // indented code blocks can interrupt\n    .replace(/fences/g, / {0,3}(?:`{3,}|~{3,})/) // fenced code blocks can interrupt\n    .replace(/blockquote/g, / {0,3}>/) // blockquote can interrupt\n    .replace(/heading/g, / {0,3}#{1,6}/) // ATX heading can interrupt\n    .replace(/html/g, / {0,3}<[^\\n>]+>\\n/) // block html can interrupt\n    .replace(/table/g, / {0,3}\\|?(?:[:\\- ]*\\|)+[\\:\\- ]*\\n/) // table can interrupt\n    .getRegex();\nconst _paragraph = /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/;\nconst blockText = /^[^\\n]+/;\nconst _blockLabel = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\nconst def = edit(/^ {0,3}\\[(label)\\]: *(?:\\n[ \\t]*)?([^<\\s][^\\s]*|<.*?>)(?:(?: +(?:\\n[ \\t]*)?| *\\n[ \\t]*)(title))? *(?:\\n+|$)/)\n    .replace('label', _blockLabel)\n    .replace('title', /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/)\n    .getRegex();\nconst list = edit(/^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/)\n    .replace(/bull/g, bullet)\n    .getRegex();\nconst _tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n    + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n    + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n    + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n    + '|p|param|search|section|summary|table|tbody|td|tfoot|th|thead|title'\n    + '|tr|track|ul';\nconst _comment = /<!--(?:-?>|[\\s\\S]*?(?:-->|$))/;\nconst html = edit('^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n[ \\t]*)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n[ \\t]*)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n[ \\t]*)+\\\\n|$)' // (7) closing tag\n    + ')', 'i')\n    .replace('comment', _comment)\n    .replace('tag', _tag)\n    .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n    .getRegex();\nconst paragraph = edit(_paragraph)\n    .replace('hr', hr)\n    .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n    .replace('|lheading', '') // setext headings don't interrupt commonmark paragraphs\n    .replace('|table', '')\n    .replace('blockquote', ' {0,3}>')\n    .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n    .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n    .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n    .replace('tag', _tag) // pars can be interrupted by type (6) html blocks\n    .getRegex();\nconst blockquote = edit(/^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/)\n    .replace('paragraph', paragraph)\n    .getRegex();\n/**\n * Normal Block Grammar\n */\nconst blockNormal = {\n    blockquote,\n    code: blockCode,\n    def,\n    fences,\n    heading,\n    hr,\n    html,\n    lheading,\n    list,\n    newline,\n    paragraph,\n    table: noopTest,\n    text: blockText,\n};\n/**\n * GFM Block Grammar\n */\nconst gfmTable = edit('^ *([^\\\\n ].*)\\\\n' // Header\n    + ' {0,3}((?:\\\\| *)?:?-+:? *(?:\\\\| *:?-+:? *)*(?:\\\\| *)?)' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)') // Cells\n    .replace('hr', hr)\n    .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n    .replace('blockquote', ' {0,3}>')\n    .replace('code', '(?: {4}| {0,3}\\t)[^\\\\n]')\n    .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n    .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n    .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n    .replace('tag', _tag) // tables can be interrupted by type (6) html blocks\n    .getRegex();\nconst blockGfm = {\n    ...blockNormal,\n    lheading: lheadingGfm,\n    table: gfmTable,\n    paragraph: edit(_paragraph)\n        .replace('hr', hr)\n        .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n        .replace('|lheading', '') // setext headings don't interrupt commonmark paragraphs\n        .replace('table', gfmTable) // interrupt paragraphs with table\n        .replace('blockquote', ' {0,3}>')\n        .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n        .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n        .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n        .replace('tag', _tag) // pars can be interrupted by type (6) html blocks\n        .getRegex(),\n};\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\nconst blockPedantic = {\n    ...blockNormal,\n    html: edit('^ *(?:comment *(?:\\\\n|\\\\s*$)'\n        + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n        + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n        .replace('comment', _comment)\n        .replace(/tag/g, '(?!(?:'\n        + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n        + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n        + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n        .getRegex(),\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n    heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n    fences: noopTest, // fences not supported\n    lheading: /^(.+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    paragraph: edit(_paragraph)\n        .replace('hr', hr)\n        .replace('heading', ' *#{1,6} *[^\\n]')\n        .replace('lheading', lheading)\n        .replace('|table', '')\n        .replace('blockquote', ' {0,3}>')\n        .replace('|fences', '')\n        .replace('|list', '')\n        .replace('|html', '')\n        .replace('|tag', '')\n        .getRegex(),\n};\n/**\n * Inline-Level Grammar\n */\nconst escape$1 = /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/;\nconst inlineCode = /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/;\nconst br = /^( {2,}|\\\\)\\n(?!\\s*$)/;\nconst inlineText = /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/;\n// list of unicode punctuation marks, plus any missing characters from CommonMark spec\nconst _punctuation = /[\\p{P}\\p{S}]/u;\nconst _punctuationOrSpace = /[\\s\\p{P}\\p{S}]/u;\nconst _notPunctuationOrSpace = /[^\\s\\p{P}\\p{S}]/u;\nconst punctuation = edit(/^((?![*_])punctSpace)/, 'u')\n    .replace(/punctSpace/g, _punctuationOrSpace).getRegex();\n// GFM allows ~ inside strong and em for strikethrough\nconst _punctuationGfmStrongEm = /(?!~)[\\p{P}\\p{S}]/u;\nconst _punctuationOrSpaceGfmStrongEm = /(?!~)[\\s\\p{P}\\p{S}]/u;\nconst _notPunctuationOrSpaceGfmStrongEm = /(?:[^\\s\\p{P}\\p{S}]|~)/u;\n// sequences em should skip over [title](link), `code`, <html>\nconst blockSkip = /\\[[^[\\]]*?\\]\\((?:\\\\.|[^\\\\\\(\\)]|\\((?:\\\\.|[^\\\\\\(\\)])*\\))*\\)|`[^`]*?`|<[^<>]*?>/g;\nconst emStrongLDelimCore = /^(?:\\*+(?:((?!\\*)punct)|[^\\s*]))|^_+(?:((?!_)punct)|([^\\s_]))/;\nconst emStrongLDelim = edit(emStrongLDelimCore, 'u')\n    .replace(/punct/g, _punctuation)\n    .getRegex();\nconst emStrongLDelimGfm = edit(emStrongLDelimCore, 'u')\n    .replace(/punct/g, _punctuationGfmStrongEm)\n    .getRegex();\nconst emStrongRDelimAstCore = '^[^_*]*?__[^_*]*?\\\\*[^_*]*?(?=__)' // Skip orphan inside strong\n    + '|[^*]+(?=[^*])' // Consume to delim\n    + '|(?!\\\\*)punct(\\\\*+)(?=[\\\\s]|$)' // (1) #*** can only be a Right Delimiter\n    + '|notPunctSpace(\\\\*+)(?!\\\\*)(?=punctSpace|$)' // (2) a***#, a*** can only be a Right Delimiter\n    + '|(?!\\\\*)punctSpace(\\\\*+)(?=notPunctSpace)' // (3) #***a, ***a can only be Left Delimiter\n    + '|[\\\\s](\\\\*+)(?!\\\\*)(?=punct)' // (4) ***# can only be Left Delimiter\n    + '|(?!\\\\*)punct(\\\\*+)(?!\\\\*)(?=punct)' // (5) #***# can be either Left or Right Delimiter\n    + '|notPunctSpace(\\\\*+)(?=notPunctSpace)'; // (6) a***a can be either Left or Right Delimiter\nconst emStrongRDelimAst = edit(emStrongRDelimAstCore, 'gu')\n    .replace(/notPunctSpace/g, _notPunctuationOrSpace)\n    .replace(/punctSpace/g, _punctuationOrSpace)\n    .replace(/punct/g, _punctuation)\n    .getRegex();\nconst emStrongRDelimAstGfm = edit(emStrongRDelimAstCore, 'gu')\n    .replace(/notPunctSpace/g, _notPunctuationOrSpaceGfmStrongEm)\n    .replace(/punctSpace/g, _punctuationOrSpaceGfmStrongEm)\n    .replace(/punct/g, _punctuationGfmStrongEm)\n    .getRegex();\n// (6) Not allowed for _\nconst emStrongRDelimUnd = edit('^[^_*]*?\\\\*\\\\*[^_*]*?_[^_*]*?(?=\\\\*\\\\*)' // Skip orphan inside strong\n    + '|[^_]+(?=[^_])' // Consume to delim\n    + '|(?!_)punct(_+)(?=[\\\\s]|$)' // (1) #___ can only be a Right Delimiter\n    + '|notPunctSpace(_+)(?!_)(?=punctSpace|$)' // (2) a___#, a___ can only be a Right Delimiter\n    + '|(?!_)punctSpace(_+)(?=notPunctSpace)' // (3) #___a, ___a can only be Left Delimiter\n    + '|[\\\\s](_+)(?!_)(?=punct)' // (4) ___# can only be Left Delimiter\n    + '|(?!_)punct(_+)(?!_)(?=punct)', 'gu') // (5) #___# can be either Left or Right Delimiter\n    .replace(/notPunctSpace/g, _notPunctuationOrSpace)\n    .replace(/punctSpace/g, _punctuationOrSpace)\n    .replace(/punct/g, _punctuation)\n    .getRegex();\nconst anyPunctuation = edit(/\\\\(punct)/, 'gu')\n    .replace(/punct/g, _punctuation)\n    .getRegex();\nconst autolink = edit(/^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/)\n    .replace('scheme', /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/)\n    .replace('email', /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/)\n    .getRegex();\nconst _inlineComment = edit(_comment).replace('(?:-->|$)', '-->').getRegex();\nconst tag = edit('^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>') // CDATA section\n    .replace('comment', _inlineComment)\n    .replace('attribute', /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/)\n    .getRegex();\nconst _inlineLabel = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\nconst link = edit(/^!?\\[(label)\\]\\(\\s*(href)(?:(?:[ \\t]*(?:\\n[ \\t]*)?)(title))?\\s*\\)/)\n    .replace('label', _inlineLabel)\n    .replace('href', /<(?:\\\\.|[^\\n<>\\\\])+>|[^ \\t\\n\\x00-\\x1f]*/)\n    .replace('title', /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/)\n    .getRegex();\nconst reflink = edit(/^!?\\[(label)\\]\\[(ref)\\]/)\n    .replace('label', _inlineLabel)\n    .replace('ref', _blockLabel)\n    .getRegex();\nconst nolink = edit(/^!?\\[(ref)\\](?:\\[\\])?/)\n    .replace('ref', _blockLabel)\n    .getRegex();\nconst reflinkSearch = edit('reflink|nolink(?!\\\\()', 'g')\n    .replace('reflink', reflink)\n    .replace('nolink', nolink)\n    .getRegex();\n/**\n * Normal Inline Grammar\n */\nconst inlineNormal = {\n    _backpedal: noopTest, // only used for GFM url\n    anyPunctuation,\n    autolink,\n    blockSkip,\n    br,\n    code: inlineCode,\n    del: noopTest,\n    emStrongLDelim,\n    emStrongRDelimAst,\n    emStrongRDelimUnd,\n    escape: escape$1,\n    link,\n    nolink,\n    punctuation,\n    reflink,\n    reflinkSearch,\n    tag,\n    text: inlineText,\n    url: noopTest,\n};\n/**\n * Pedantic Inline Grammar\n */\nconst inlinePedantic = {\n    ...inlineNormal,\n    link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n        .replace('label', _inlineLabel)\n        .getRegex(),\n    reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n        .replace('label', _inlineLabel)\n        .getRegex(),\n};\n/**\n * GFM Inline Grammar\n */\nconst inlineGfm = {\n    ...inlineNormal,\n    emStrongRDelimAst: emStrongRDelimAstGfm,\n    emStrongLDelim: emStrongLDelimGfm,\n    url: edit(/^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/, 'i')\n        .replace('email', /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/)\n        .getRegex(),\n    _backpedal: /(?:[^?!.,:;*_'\"~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'\"~)]+(?!$))+/,\n    del: /^(~~?)(?=[^\\s~])((?:\\\\.|[^\\\\])*?(?:\\\\.|[^\\s~\\\\]))\\1(?=[^~]|$)/,\n    text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/,\n};\n/**\n * GFM + Line Breaks Inline Grammar\n */\nconst inlineBreaks = {\n    ...inlineGfm,\n    br: edit(br).replace('{2,}', '*').getRegex(),\n    text: edit(inlineGfm.text)\n        .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n        .replace(/\\{2,\\}/g, '*')\n        .getRegex(),\n};\n/**\n * exports\n */\nconst block = {\n    normal: blockNormal,\n    gfm: blockGfm,\n    pedantic: blockPedantic,\n};\nconst inline = {\n    normal: inlineNormal,\n    gfm: inlineGfm,\n    breaks: inlineBreaks,\n    pedantic: inlinePedantic,\n};\n\n/**\n * Helpers\n */\nconst escapeReplacements = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nfunction escape(html, encode) {\n    if (encode) {\n        if (other.escapeTest.test(html)) {\n            return html.replace(other.escapeReplace, getEscapeReplacement);\n        }\n    }\n    else {\n        if (other.escapeTestNoEncode.test(html)) {\n            return html.replace(other.escapeReplaceNoEncode, getEscapeReplacement);\n        }\n    }\n    return html;\n}\nfunction cleanUrl(href) {\n    try {\n        href = encodeURI(href).replace(other.percentDecode, '%');\n    }\n    catch {\n        return null;\n    }\n    return href;\n}\nfunction splitCells(tableRow, count) {\n    // ensure that every cell-delimiting pipe has a space\n    // before it to distinguish it from an escaped pipe\n    const row = tableRow.replace(other.findPipe, (match, offset, str) => {\n        let escaped = false;\n        let curr = offset;\n        while (--curr >= 0 && str[curr] === '\\\\')\n            escaped = !escaped;\n        if (escaped) {\n            // odd number of slashes means | is escaped\n            // so we leave it alone\n            return '|';\n        }\n        else {\n            // add space before unescaped |\n            return ' |';\n        }\n    }), cells = row.split(other.splitPipe);\n    let i = 0;\n    // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n    if (!cells[0].trim()) {\n        cells.shift();\n    }\n    if (cells.length > 0 && !cells.at(-1)?.trim()) {\n        cells.pop();\n    }\n    if (count) {\n        if (cells.length > count) {\n            cells.splice(count);\n        }\n        else {\n            while (cells.length < count)\n                cells.push('');\n        }\n    }\n    for (; i < cells.length; i++) {\n        // leading or trailing whitespace is ignored per the gfm spec\n        cells[i] = cells[i].trim().replace(other.slashPipe, '|');\n    }\n    return cells;\n}\n/**\n * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n * /c*$/ is vulnerable to REDOS.\n *\n * @param str\n * @param c\n * @param invert Remove suffix of non-c chars instead. Default falsey.\n */\nfunction rtrim(str, c, invert) {\n    const l = str.length;\n    if (l === 0) {\n        return '';\n    }\n    // Length of suffix matching the invert condition.\n    let suffLen = 0;\n    // Step left until we fail to match the invert condition.\n    while (suffLen < l) {\n        const currChar = str.charAt(l - suffLen - 1);\n        if (currChar === c && true) {\n            suffLen++;\n        }\n        else {\n            break;\n        }\n    }\n    return str.slice(0, l - suffLen);\n}\nfunction findClosingBracket(str, b) {\n    if (str.indexOf(b[1]) === -1) {\n        return -1;\n    }\n    let level = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] === '\\\\') {\n            i++;\n        }\n        else if (str[i] === b[0]) {\n            level++;\n        }\n        else if (str[i] === b[1]) {\n            level--;\n            if (level < 0) {\n                return i;\n            }\n        }\n    }\n    if (level > 0) {\n        return -2;\n    }\n    return -1;\n}\n\nfunction outputLink(cap, link, raw, lexer, rules) {\n    const href = link.href;\n    const title = link.title || null;\n    const text = cap[1].replace(rules.other.outputLinkReplace, '$1');\n    lexer.state.inLink = true;\n    const token = {\n        type: cap[0].charAt(0) === '!' ? 'image' : 'link',\n        raw,\n        href,\n        title,\n        text,\n        tokens: lexer.inlineTokens(text),\n    };\n    lexer.state.inLink = false;\n    return token;\n}\nfunction indentCodeCompensation(raw, text, rules) {\n    const matchIndentToCode = raw.match(rules.other.indentCodeCompensation);\n    if (matchIndentToCode === null) {\n        return text;\n    }\n    const indentToCode = matchIndentToCode[1];\n    return text\n        .split('\\n')\n        .map(node => {\n        const matchIndentInNode = node.match(rules.other.beginningSpace);\n        if (matchIndentInNode === null) {\n            return node;\n        }\n        const [indentInNode] = matchIndentInNode;\n        if (indentInNode.length >= indentToCode.length) {\n            return node.slice(indentToCode.length);\n        }\n        return node;\n    })\n        .join('\\n');\n}\n/**\n * Tokenizer\n */\nclass _Tokenizer {\n    options;\n    rules; // set by the lexer\n    lexer; // set by the lexer\n    constructor(options) {\n        this.options = options || _defaults;\n    }\n    space(src) {\n        const cap = this.rules.block.newline.exec(src);\n        if (cap && cap[0].length > 0) {\n            return {\n                type: 'space',\n                raw: cap[0],\n            };\n        }\n    }\n    code(src) {\n        const cap = this.rules.block.code.exec(src);\n        if (cap) {\n            const text = cap[0].replace(this.rules.other.codeRemoveIndent, '');\n            return {\n                type: 'code',\n                raw: cap[0],\n                codeBlockStyle: 'indented',\n                text: !this.options.pedantic\n                    ? rtrim(text, '\\n')\n                    : text,\n            };\n        }\n    }\n    fences(src) {\n        const cap = this.rules.block.fences.exec(src);\n        if (cap) {\n            const raw = cap[0];\n            const text = indentCodeCompensation(raw, cap[3] || '', this.rules);\n            return {\n                type: 'code',\n                raw,\n                lang: cap[2] ? cap[2].trim().replace(this.rules.inline.anyPunctuation, '$1') : cap[2],\n                text,\n            };\n        }\n    }\n    heading(src) {\n        const cap = this.rules.block.heading.exec(src);\n        if (cap) {\n            let text = cap[2].trim();\n            // remove trailing #s\n            if (this.rules.other.endingHash.test(text)) {\n                const trimmed = rtrim(text, '#');\n                if (this.options.pedantic) {\n                    text = trimmed.trim();\n                }\n                else if (!trimmed || this.rules.other.endingSpaceChar.test(trimmed)) {\n                    // CommonMark requires space before trailing #s\n                    text = trimmed.trim();\n                }\n            }\n            return {\n                type: 'heading',\n                raw: cap[0],\n                depth: cap[1].length,\n                text,\n                tokens: this.lexer.inline(text),\n            };\n        }\n    }\n    hr(src) {\n        const cap = this.rules.block.hr.exec(src);\n        if (cap) {\n            return {\n                type: 'hr',\n                raw: rtrim(cap[0], '\\n'),\n            };\n        }\n    }\n    blockquote(src) {\n        const cap = this.rules.block.blockquote.exec(src);\n        if (cap) {\n            let lines = rtrim(cap[0], '\\n').split('\\n');\n            let raw = '';\n            let text = '';\n            const tokens = [];\n            while (lines.length > 0) {\n                let inBlockquote = false;\n                const currentLines = [];\n                let i;\n                for (i = 0; i < lines.length; i++) {\n                    // get lines up to a continuation\n                    if (this.rules.other.blockquoteStart.test(lines[i])) {\n                        currentLines.push(lines[i]);\n                        inBlockquote = true;\n                    }\n                    else if (!inBlockquote) {\n                        currentLines.push(lines[i]);\n                    }\n                    else {\n                        break;\n                    }\n                }\n                lines = lines.slice(i);\n                const currentRaw = currentLines.join('\\n');\n                const currentText = currentRaw\n                    // precede setext continuation with 4 spaces so it isn't a setext\n                    .replace(this.rules.other.blockquoteSetextReplace, '\\n    $1')\n                    .replace(this.rules.other.blockquoteSetextReplace2, '');\n                raw = raw ? `${raw}\\n${currentRaw}` : currentRaw;\n                text = text ? `${text}\\n${currentText}` : currentText;\n                // parse blockquote lines as top level tokens\n                // merge paragraphs if this is a continuation\n                const top = this.lexer.state.top;\n                this.lexer.state.top = true;\n                this.lexer.blockTokens(currentText, tokens, true);\n                this.lexer.state.top = top;\n                // if there is no continuation then we are done\n                if (lines.length === 0) {\n                    break;\n                }\n                const lastToken = tokens.at(-1);\n                if (lastToken?.type === 'code') {\n                    // blockquote continuation cannot be preceded by a code block\n                    break;\n                }\n                else if (lastToken?.type === 'blockquote') {\n                    // include continuation in nested blockquote\n                    const oldToken = lastToken;\n                    const newText = oldToken.raw + '\\n' + lines.join('\\n');\n                    const newToken = this.blockquote(newText);\n                    tokens[tokens.length - 1] = newToken;\n                    raw = raw.substring(0, raw.length - oldToken.raw.length) + newToken.raw;\n                    text = text.substring(0, text.length - oldToken.text.length) + newToken.text;\n                    break;\n                }\n                else if (lastToken?.type === 'list') {\n                    // include continuation in nested list\n                    const oldToken = lastToken;\n                    const newText = oldToken.raw + '\\n' + lines.join('\\n');\n                    const newToken = this.list(newText);\n                    tokens[tokens.length - 1] = newToken;\n                    raw = raw.substring(0, raw.length - lastToken.raw.length) + newToken.raw;\n                    text = text.substring(0, text.length - oldToken.raw.length) + newToken.raw;\n                    lines = newText.substring(tokens.at(-1).raw.length).split('\\n');\n                    continue;\n                }\n            }\n            return {\n                type: 'blockquote',\n                raw,\n                tokens,\n                text,\n            };\n        }\n    }\n    list(src) {\n        let cap = this.rules.block.list.exec(src);\n        if (cap) {\n            let bull = cap[1].trim();\n            const isordered = bull.length > 1;\n            const list = {\n                type: 'list',\n                raw: '',\n                ordered: isordered,\n                start: isordered ? +bull.slice(0, -1) : '',\n                loose: false,\n                items: [],\n            };\n            bull = isordered ? `\\\\d{1,9}\\\\${bull.slice(-1)}` : `\\\\${bull}`;\n            if (this.options.pedantic) {\n                bull = isordered ? bull : '[*+-]';\n            }\n            // Get next list item\n            const itemRegex = this.rules.other.listItemRegex(bull);\n            let endsWithBlankLine = false;\n            // Check if current bullet point can start a new List Item\n            while (src) {\n                let endEarly = false;\n                let raw = '';\n                let itemContents = '';\n                if (!(cap = itemRegex.exec(src))) {\n                    break;\n                }\n                if (this.rules.block.hr.test(src)) { // End list if bullet was actually HR (possibly move into itemRegex?)\n                    break;\n                }\n                raw = cap[0];\n                src = src.substring(raw.length);\n                let line = cap[2].split('\\n', 1)[0].replace(this.rules.other.listReplaceTabs, (t) => ' '.repeat(3 * t.length));\n                let nextLine = src.split('\\n', 1)[0];\n                let blankLine = !line.trim();\n                let indent = 0;\n                if (this.options.pedantic) {\n                    indent = 2;\n                    itemContents = line.trimStart();\n                }\n                else if (blankLine) {\n                    indent = cap[1].length + 1;\n                }\n                else {\n                    indent = cap[2].search(this.rules.other.nonSpaceChar); // Find first non-space char\n                    indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n                    itemContents = line.slice(indent);\n                    indent += cap[1].length;\n                }\n                if (blankLine && this.rules.other.blankLine.test(nextLine)) { // Items begin with at most one blank line\n                    raw += nextLine + '\\n';\n                    src = src.substring(nextLine.length + 1);\n                    endEarly = true;\n                }\n                if (!endEarly) {\n                    const nextBulletRegex = this.rules.other.nextBulletRegex(indent);\n                    const hrRegex = this.rules.other.hrRegex(indent);\n                    const fencesBeginRegex = this.rules.other.fencesBeginRegex(indent);\n                    const headingBeginRegex = this.rules.other.headingBeginRegex(indent);\n                    const htmlBeginRegex = this.rules.other.htmlBeginRegex(indent);\n                    // Check if following lines should be included in List Item\n                    while (src) {\n                        const rawLine = src.split('\\n', 1)[0];\n                        let nextLineWithoutTabs;\n                        nextLine = rawLine;\n                        // Re-align to follow commonmark nesting rules\n                        if (this.options.pedantic) {\n                            nextLine = nextLine.replace(this.rules.other.listReplaceNesting, '  ');\n                            nextLineWithoutTabs = nextLine;\n                        }\n                        else {\n                            nextLineWithoutTabs = nextLine.replace(this.rules.other.tabCharGlobal, '    ');\n                        }\n                        // End list item if found code fences\n                        if (fencesBeginRegex.test(nextLine)) {\n                            break;\n                        }\n                        // End list item if found start of new heading\n                        if (headingBeginRegex.test(nextLine)) {\n                            break;\n                        }\n                        // End list item if found start of html block\n                        if (htmlBeginRegex.test(nextLine)) {\n                            break;\n                        }\n                        // End list item if found start of new bullet\n                        if (nextBulletRegex.test(nextLine)) {\n                            break;\n                        }\n                        // Horizontal rule found\n                        if (hrRegex.test(nextLine)) {\n                            break;\n                        }\n                        if (nextLineWithoutTabs.search(this.rules.other.nonSpaceChar) >= indent || !nextLine.trim()) { // Dedent if possible\n                            itemContents += '\\n' + nextLineWithoutTabs.slice(indent);\n                        }\n                        else {\n                            // not enough indentation\n                            if (blankLine) {\n                                break;\n                            }\n                            // paragraph continuation unless last line was a different block level element\n                            if (line.replace(this.rules.other.tabCharGlobal, '    ').search(this.rules.other.nonSpaceChar) >= 4) { // indented code block\n                                break;\n                            }\n                            if (fencesBeginRegex.test(line)) {\n                                break;\n                            }\n                            if (headingBeginRegex.test(line)) {\n                                break;\n                            }\n                            if (hrRegex.test(line)) {\n                                break;\n                            }\n                            itemContents += '\\n' + nextLine;\n                        }\n                        if (!blankLine && !nextLine.trim()) { // Check if current line is blank\n                            blankLine = true;\n                        }\n                        raw += rawLine + '\\n';\n                        src = src.substring(rawLine.length + 1);\n                        line = nextLineWithoutTabs.slice(indent);\n                    }\n                }\n                if (!list.loose) {\n                    // If the previous item ended with a blank line, the list is loose\n                    if (endsWithBlankLine) {\n                        list.loose = true;\n                    }\n                    else if (this.rules.other.doubleBlankLine.test(raw)) {\n                        endsWithBlankLine = true;\n                    }\n                }\n                let istask = null;\n                let ischecked;\n                // Check for task list items\n                if (this.options.gfm) {\n                    istask = this.rules.other.listIsTask.exec(itemContents);\n                    if (istask) {\n                        ischecked = istask[0] !== '[ ] ';\n                        itemContents = itemContents.replace(this.rules.other.listReplaceTask, '');\n                    }\n                }\n                list.items.push({\n                    type: 'list_item',\n                    raw,\n                    task: !!istask,\n                    checked: ischecked,\n                    loose: false,\n                    text: itemContents,\n                    tokens: [],\n                });\n                list.raw += raw;\n            }\n            // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n            const lastItem = list.items.at(-1);\n            if (lastItem) {\n                lastItem.raw = lastItem.raw.trimEnd();\n                lastItem.text = lastItem.text.trimEnd();\n            }\n            else {\n                // not a list since there were no items\n                return;\n            }\n            list.raw = list.raw.trimEnd();\n            // Item child tokens handled here at end because we needed to have the final item to trim it first\n            for (let i = 0; i < list.items.length; i++) {\n                this.lexer.state.top = false;\n                list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n                if (!list.loose) {\n                    // Check if list should be loose\n                    const spacers = list.items[i].tokens.filter(t => t.type === 'space');\n                    const hasMultipleLineBreaks = spacers.length > 0 && spacers.some(t => this.rules.other.anyLine.test(t.raw));\n                    list.loose = hasMultipleLineBreaks;\n                }\n            }\n            // Set all items to loose if list is loose\n            if (list.loose) {\n                for (let i = 0; i < list.items.length; i++) {\n                    list.items[i].loose = true;\n                }\n            }\n            return list;\n        }\n    }\n    html(src) {\n        const cap = this.rules.block.html.exec(src);\n        if (cap) {\n            const token = {\n                type: 'html',\n                block: true,\n                raw: cap[0],\n                pre: cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style',\n                text: cap[0],\n            };\n            return token;\n        }\n    }\n    def(src) {\n        const cap = this.rules.block.def.exec(src);\n        if (cap) {\n            const tag = cap[1].toLowerCase().replace(this.rules.other.multipleSpaceGlobal, ' ');\n            const href = cap[2] ? cap[2].replace(this.rules.other.hrefBrackets, '$1').replace(this.rules.inline.anyPunctuation, '$1') : '';\n            const title = cap[3] ? cap[3].substring(1, cap[3].length - 1).replace(this.rules.inline.anyPunctuation, '$1') : cap[3];\n            return {\n                type: 'def',\n                tag,\n                raw: cap[0],\n                href,\n                title,\n            };\n        }\n    }\n    table(src) {\n        const cap = this.rules.block.table.exec(src);\n        if (!cap) {\n            return;\n        }\n        if (!this.rules.other.tableDelimiter.test(cap[2])) {\n            // delimiter row must have a pipe (|) or colon (:) otherwise it is a setext heading\n            return;\n        }\n        const headers = splitCells(cap[1]);\n        const aligns = cap[2].replace(this.rules.other.tableAlignChars, '').split('|');\n        const rows = cap[3]?.trim() ? cap[3].replace(this.rules.other.tableRowBlankLine, '').split('\\n') : [];\n        const item = {\n            type: 'table',\n            raw: cap[0],\n            header: [],\n            align: [],\n            rows: [],\n        };\n        if (headers.length !== aligns.length) {\n            // header and align columns must be equal, rows can be different.\n            return;\n        }\n        for (const align of aligns) {\n            if (this.rules.other.tableAlignRight.test(align)) {\n                item.align.push('right');\n            }\n            else if (this.rules.other.tableAlignCenter.test(align)) {\n                item.align.push('center');\n            }\n            else if (this.rules.other.tableAlignLeft.test(align)) {\n                item.align.push('left');\n            }\n            else {\n                item.align.push(null);\n            }\n        }\n        for (let i = 0; i < headers.length; i++) {\n            item.header.push({\n                text: headers[i],\n                tokens: this.lexer.inline(headers[i]),\n                header: true,\n                align: item.align[i],\n            });\n        }\n        for (const row of rows) {\n            item.rows.push(splitCells(row, item.header.length).map((cell, i) => {\n                return {\n                    text: cell,\n                    tokens: this.lexer.inline(cell),\n                    header: false,\n                    align: item.align[i],\n                };\n            }));\n        }\n        return item;\n    }\n    lheading(src) {\n        const cap = this.rules.block.lheading.exec(src);\n        if (cap) {\n            return {\n                type: 'heading',\n                raw: cap[0],\n                depth: cap[2].charAt(0) === '=' ? 1 : 2,\n                text: cap[1],\n                tokens: this.lexer.inline(cap[1]),\n            };\n        }\n    }\n    paragraph(src) {\n        const cap = this.rules.block.paragraph.exec(src);\n        if (cap) {\n            const text = cap[1].charAt(cap[1].length - 1) === '\\n'\n                ? cap[1].slice(0, -1)\n                : cap[1];\n            return {\n                type: 'paragraph',\n                raw: cap[0],\n                text,\n                tokens: this.lexer.inline(text),\n            };\n        }\n    }\n    text(src) {\n        const cap = this.rules.block.text.exec(src);\n        if (cap) {\n            return {\n                type: 'text',\n                raw: cap[0],\n                text: cap[0],\n                tokens: this.lexer.inline(cap[0]),\n            };\n        }\n    }\n    escape(src) {\n        const cap = this.rules.inline.escape.exec(src);\n        if (cap) {\n            return {\n                type: 'escape',\n                raw: cap[0],\n                text: cap[1],\n            };\n        }\n    }\n    tag(src) {\n        const cap = this.rules.inline.tag.exec(src);\n        if (cap) {\n            if (!this.lexer.state.inLink && this.rules.other.startATag.test(cap[0])) {\n                this.lexer.state.inLink = true;\n            }\n            else if (this.lexer.state.inLink && this.rules.other.endATag.test(cap[0])) {\n                this.lexer.state.inLink = false;\n            }\n            if (!this.lexer.state.inRawBlock && this.rules.other.startPreScriptTag.test(cap[0])) {\n                this.lexer.state.inRawBlock = true;\n            }\n            else if (this.lexer.state.inRawBlock && this.rules.other.endPreScriptTag.test(cap[0])) {\n                this.lexer.state.inRawBlock = false;\n            }\n            return {\n                type: 'html',\n                raw: cap[0],\n                inLink: this.lexer.state.inLink,\n                inRawBlock: this.lexer.state.inRawBlock,\n                block: false,\n                text: cap[0],\n            };\n        }\n    }\n    link(src) {\n        const cap = this.rules.inline.link.exec(src);\n        if (cap) {\n            const trimmedUrl = cap[2].trim();\n            if (!this.options.pedantic && this.rules.other.startAngleBracket.test(trimmedUrl)) {\n                // commonmark requires matching angle brackets\n                if (!(this.rules.other.endAngleBracket.test(trimmedUrl))) {\n                    return;\n                }\n                // ending angle bracket cannot be escaped\n                const rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n                if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n                    return;\n                }\n            }\n            else {\n                // find closing parenthesis\n                const lastParenIndex = findClosingBracket(cap[2], '()');\n                if (lastParenIndex === -2) {\n                    // more open parens than closed\n                    return;\n                }\n                if (lastParenIndex > -1) {\n                    const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n                    const linkLen = start + cap[1].length + lastParenIndex;\n                    cap[2] = cap[2].substring(0, lastParenIndex);\n                    cap[0] = cap[0].substring(0, linkLen).trim();\n                    cap[3] = '';\n                }\n            }\n            let href = cap[2];\n            let title = '';\n            if (this.options.pedantic) {\n                // split pedantic href and title\n                const link = this.rules.other.pedanticHrefTitle.exec(href);\n                if (link) {\n                    href = link[1];\n                    title = link[3];\n                }\n            }\n            else {\n                title = cap[3] ? cap[3].slice(1, -1) : '';\n            }\n            href = href.trim();\n            if (this.rules.other.startAngleBracket.test(href)) {\n                if (this.options.pedantic && !(this.rules.other.endAngleBracket.test(trimmedUrl))) {\n                    // pedantic allows starting angle bracket without ending angle bracket\n                    href = href.slice(1);\n                }\n                else {\n                    href = href.slice(1, -1);\n                }\n            }\n            return outputLink(cap, {\n                href: href ? href.replace(this.rules.inline.anyPunctuation, '$1') : href,\n                title: title ? title.replace(this.rules.inline.anyPunctuation, '$1') : title,\n            }, cap[0], this.lexer, this.rules);\n        }\n    }\n    reflink(src, links) {\n        let cap;\n        if ((cap = this.rules.inline.reflink.exec(src))\n            || (cap = this.rules.inline.nolink.exec(src))) {\n            const linkString = (cap[2] || cap[1]).replace(this.rules.other.multipleSpaceGlobal, ' ');\n            const link = links[linkString.toLowerCase()];\n            if (!link) {\n                const text = cap[0].charAt(0);\n                return {\n                    type: 'text',\n                    raw: text,\n                    text,\n                };\n            }\n            return outputLink(cap, link, cap[0], this.lexer, this.rules);\n        }\n    }\n    emStrong(src, maskedSrc, prevChar = '') {\n        let match = this.rules.inline.emStrongLDelim.exec(src);\n        if (!match)\n            return;\n        // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n        if (match[3] && prevChar.match(this.rules.other.unicodeAlphaNumeric))\n            return;\n        const nextChar = match[1] || match[2] || '';\n        if (!nextChar || !prevChar || this.rules.inline.punctuation.exec(prevChar)) {\n            // unicode Regex counts emoji as 1 char; spread into array for proper count (used multiple times below)\n            const lLength = [...match[0]].length - 1;\n            let rDelim, rLength, delimTotal = lLength, midDelimTotal = 0;\n            const endReg = match[0][0] === '*' ? this.rules.inline.emStrongRDelimAst : this.rules.inline.emStrongRDelimUnd;\n            endReg.lastIndex = 0;\n            // Clip maskedSrc to same section of string as src (move to lexer?)\n            maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n            while ((match = endReg.exec(maskedSrc)) != null) {\n                rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n                if (!rDelim)\n                    continue; // skip single * in __abc*abc__\n                rLength = [...rDelim].length;\n                if (match[3] || match[4]) { // found another Left Delim\n                    delimTotal += rLength;\n                    continue;\n                }\n                else if (match[5] || match[6]) { // either Left or Right Delim\n                    if (lLength % 3 && !((lLength + rLength) % 3)) {\n                        midDelimTotal += rLength;\n                        continue; // CommonMark Emphasis Rules 9-10\n                    }\n                }\n                delimTotal -= rLength;\n                if (delimTotal > 0)\n                    continue; // Haven't found enough closing delimiters\n                // Remove extra characters. *a*** -> *a*\n                rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n                // char length can be >1 for unicode characters;\n                const lastCharLength = [...match[0]][0].length;\n                const raw = src.slice(0, lLength + match.index + lastCharLength + rLength);\n                // Create `em` if smallest delimiter has odd char count. *a***\n                if (Math.min(lLength, rLength) % 2) {\n                    const text = raw.slice(1, -1);\n                    return {\n                        type: 'em',\n                        raw,\n                        text,\n                        tokens: this.lexer.inlineTokens(text),\n                    };\n                }\n                // Create 'strong' if smallest delimiter has even char count. **a***\n                const text = raw.slice(2, -2);\n                return {\n                    type: 'strong',\n                    raw,\n                    text,\n                    tokens: this.lexer.inlineTokens(text),\n                };\n            }\n        }\n    }\n    codespan(src) {\n        const cap = this.rules.inline.code.exec(src);\n        if (cap) {\n            let text = cap[2].replace(this.rules.other.newLineCharGlobal, ' ');\n            const hasNonSpaceChars = this.rules.other.nonSpaceChar.test(text);\n            const hasSpaceCharsOnBothEnds = this.rules.other.startingSpaceChar.test(text) && this.rules.other.endingSpaceChar.test(text);\n            if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n                text = text.substring(1, text.length - 1);\n            }\n            return {\n                type: 'codespan',\n                raw: cap[0],\n                text,\n            };\n        }\n    }\n    br(src) {\n        const cap = this.rules.inline.br.exec(src);\n        if (cap) {\n            return {\n                type: 'br',\n                raw: cap[0],\n            };\n        }\n    }\n    del(src) {\n        const cap = this.rules.inline.del.exec(src);\n        if (cap) {\n            return {\n                type: 'del',\n                raw: cap[0],\n                text: cap[2],\n                tokens: this.lexer.inlineTokens(cap[2]),\n            };\n        }\n    }\n    autolink(src) {\n        const cap = this.rules.inline.autolink.exec(src);\n        if (cap) {\n            let text, href;\n            if (cap[2] === '@') {\n                text = cap[1];\n                href = 'mailto:' + text;\n            }\n            else {\n                text = cap[1];\n                href = text;\n            }\n            return {\n                type: 'link',\n                raw: cap[0],\n                text,\n                href,\n                tokens: [\n                    {\n                        type: 'text',\n                        raw: text,\n                        text,\n                    },\n                ],\n            };\n        }\n    }\n    url(src) {\n        let cap;\n        if (cap = this.rules.inline.url.exec(src)) {\n            let text, href;\n            if (cap[2] === '@') {\n                text = cap[0];\n                href = 'mailto:' + text;\n            }\n            else {\n                // do extended autolink path validation\n                let prevCapZero;\n                do {\n                    prevCapZero = cap[0];\n                    cap[0] = this.rules.inline._backpedal.exec(cap[0])?.[0] ?? '';\n                } while (prevCapZero !== cap[0]);\n                text = cap[0];\n                if (cap[1] === 'www.') {\n                    href = 'http://' + cap[0];\n                }\n                else {\n                    href = cap[0];\n                }\n            }\n            return {\n                type: 'link',\n                raw: cap[0],\n                text,\n                href,\n                tokens: [\n                    {\n                        type: 'text',\n                        raw: text,\n                        text,\n                    },\n                ],\n            };\n        }\n    }\n    inlineText(src) {\n        const cap = this.rules.inline.text.exec(src);\n        if (cap) {\n            const escaped = this.lexer.state.inRawBlock;\n            return {\n                type: 'text',\n                raw: cap[0],\n                text: cap[0],\n                escaped,\n            };\n        }\n    }\n}\n\n/**\n * Block Lexer\n */\nclass _Lexer {\n    tokens;\n    options;\n    state;\n    tokenizer;\n    inlineQueue;\n    constructor(options) {\n        // TokenList cannot be created in one go\n        this.tokens = [];\n        this.tokens.links = Object.create(null);\n        this.options = options || _defaults;\n        this.options.tokenizer = this.options.tokenizer || new _Tokenizer();\n        this.tokenizer = this.options.tokenizer;\n        this.tokenizer.options = this.options;\n        this.tokenizer.lexer = this;\n        this.inlineQueue = [];\n        this.state = {\n            inLink: false,\n            inRawBlock: false,\n            top: true,\n        };\n        const rules = {\n            other,\n            block: block.normal,\n            inline: inline.normal,\n        };\n        if (this.options.pedantic) {\n            rules.block = block.pedantic;\n            rules.inline = inline.pedantic;\n        }\n        else if (this.options.gfm) {\n            rules.block = block.gfm;\n            if (this.options.breaks) {\n                rules.inline = inline.breaks;\n            }\n            else {\n                rules.inline = inline.gfm;\n            }\n        }\n        this.tokenizer.rules = rules;\n    }\n    /**\n     * Expose Rules\n     */\n    static get rules() {\n        return {\n            block,\n            inline,\n        };\n    }\n    /**\n     * Static Lex Method\n     */\n    static lex(src, options) {\n        const lexer = new _Lexer(options);\n        return lexer.lex(src);\n    }\n    /**\n     * Static Lex Inline Method\n     */\n    static lexInline(src, options) {\n        const lexer = new _Lexer(options);\n        return lexer.inlineTokens(src);\n    }\n    /**\n     * Preprocessing\n     */\n    lex(src) {\n        src = src.replace(other.carriageReturn, '\\n');\n        this.blockTokens(src, this.tokens);\n        for (let i = 0; i < this.inlineQueue.length; i++) {\n            const next = this.inlineQueue[i];\n            this.inlineTokens(next.src, next.tokens);\n        }\n        this.inlineQueue = [];\n        return this.tokens;\n    }\n    blockTokens(src, tokens = [], lastParagraphClipped = false) {\n        if (this.options.pedantic) {\n            src = src.replace(other.tabCharGlobal, '    ').replace(other.spaceLine, '');\n        }\n        while (src) {\n            let token;\n            if (this.options.extensions?.block?.some((extTokenizer) => {\n                if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n                    src = src.substring(token.raw.length);\n                    tokens.push(token);\n                    return true;\n                }\n                return false;\n            })) {\n                continue;\n            }\n            // newline\n            if (token = this.tokenizer.space(src)) {\n                src = src.substring(token.raw.length);\n                const lastToken = tokens.at(-1);\n                if (token.raw.length === 1 && lastToken !== undefined) {\n                    // if there's a single \\n as a spacer, it's terminating the last line,\n                    // so move it there so that we don't get unnecessary paragraph tags\n                    lastToken.raw += '\\n';\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // code\n            if (token = this.tokenizer.code(src)) {\n                src = src.substring(token.raw.length);\n                const lastToken = tokens.at(-1);\n                // An indented code block cannot interrupt a paragraph.\n                if (lastToken?.type === 'paragraph' || lastToken?.type === 'text') {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.text;\n                    this.inlineQueue.at(-1).src = lastToken.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // fences\n            if (token = this.tokenizer.fences(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // heading\n            if (token = this.tokenizer.heading(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // hr\n            if (token = this.tokenizer.hr(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // blockquote\n            if (token = this.tokenizer.blockquote(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // list\n            if (token = this.tokenizer.list(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // html\n            if (token = this.tokenizer.html(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // def\n            if (token = this.tokenizer.def(src)) {\n                src = src.substring(token.raw.length);\n                const lastToken = tokens.at(-1);\n                if (lastToken?.type === 'paragraph' || lastToken?.type === 'text') {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.raw;\n                    this.inlineQueue.at(-1).src = lastToken.text;\n                }\n                else if (!this.tokens.links[token.tag]) {\n                    this.tokens.links[token.tag] = {\n                        href: token.href,\n                        title: token.title,\n                    };\n                }\n                continue;\n            }\n            // table (gfm)\n            if (token = this.tokenizer.table(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // lheading\n            if (token = this.tokenizer.lheading(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // top-level paragraph\n            // prevent paragraph consuming extensions by clipping 'src' to extension start\n            let cutSrc = src;\n            if (this.options.extensions?.startBlock) {\n                let startIndex = Infinity;\n                const tempSrc = src.slice(1);\n                let tempStart;\n                this.options.extensions.startBlock.forEach((getStartIndex) => {\n                    tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n                    if (typeof tempStart === 'number' && tempStart >= 0) {\n                        startIndex = Math.min(startIndex, tempStart);\n                    }\n                });\n                if (startIndex < Infinity && startIndex >= 0) {\n                    cutSrc = src.substring(0, startIndex + 1);\n                }\n            }\n            if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n                const lastToken = tokens.at(-1);\n                if (lastParagraphClipped && lastToken?.type === 'paragraph') {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.text;\n                    this.inlineQueue.pop();\n                    this.inlineQueue.at(-1).src = lastToken.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                lastParagraphClipped = cutSrc.length !== src.length;\n                src = src.substring(token.raw.length);\n                continue;\n            }\n            // text\n            if (token = this.tokenizer.text(src)) {\n                src = src.substring(token.raw.length);\n                const lastToken = tokens.at(-1);\n                if (lastToken?.type === 'text') {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.text;\n                    this.inlineQueue.pop();\n                    this.inlineQueue.at(-1).src = lastToken.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            if (src) {\n                const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n                if (this.options.silent) {\n                    console.error(errMsg);\n                    break;\n                }\n                else {\n                    throw new Error(errMsg);\n                }\n            }\n        }\n        this.state.top = true;\n        return tokens;\n    }\n    inline(src, tokens = []) {\n        this.inlineQueue.push({ src, tokens });\n        return tokens;\n    }\n    /**\n     * Lexing/Compiling\n     */\n    inlineTokens(src, tokens = []) {\n        // String with links masked to avoid interference with em and strong\n        let maskedSrc = src;\n        let match = null;\n        // Mask out reflinks\n        if (this.tokens.links) {\n            const links = Object.keys(this.tokens.links);\n            if (links.length > 0) {\n                while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n                    if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n                        maskedSrc = maskedSrc.slice(0, match.index)\n                            + '[' + 'a'.repeat(match[0].length - 2) + ']'\n                            + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n                    }\n                }\n            }\n        }\n        // Mask out escaped characters\n        while ((match = this.tokenizer.rules.inline.anyPunctuation.exec(maskedSrc)) != null) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.anyPunctuation.lastIndex);\n        }\n        // Mask out other blocks\n        while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '[' + 'a'.repeat(match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n        }\n        let keepPrevChar = false;\n        let prevChar = '';\n        while (src) {\n            if (!keepPrevChar) {\n                prevChar = '';\n            }\n            keepPrevChar = false;\n            let token;\n            // extensions\n            if (this.options.extensions?.inline?.some((extTokenizer) => {\n                if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n                    src = src.substring(token.raw.length);\n                    tokens.push(token);\n                    return true;\n                }\n                return false;\n            })) {\n                continue;\n            }\n            // escape\n            if (token = this.tokenizer.escape(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // tag\n            if (token = this.tokenizer.tag(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // link\n            if (token = this.tokenizer.link(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // reflink, nolink\n            if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n                src = src.substring(token.raw.length);\n                const lastToken = tokens.at(-1);\n                if (token.type === 'text' && lastToken?.type === 'text') {\n                    lastToken.raw += token.raw;\n                    lastToken.text += token.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // em & strong\n            if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // code\n            if (token = this.tokenizer.codespan(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // br\n            if (token = this.tokenizer.br(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // del (gfm)\n            if (token = this.tokenizer.del(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // autolink\n            if (token = this.tokenizer.autolink(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // url (gfm)\n            if (!this.state.inLink && (token = this.tokenizer.url(src))) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // text\n            // prevent inlineText consuming extensions by clipping 'src' to extension start\n            let cutSrc = src;\n            if (this.options.extensions?.startInline) {\n                let startIndex = Infinity;\n                const tempSrc = src.slice(1);\n                let tempStart;\n                this.options.extensions.startInline.forEach((getStartIndex) => {\n                    tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n                    if (typeof tempStart === 'number' && tempStart >= 0) {\n                        startIndex = Math.min(startIndex, tempStart);\n                    }\n                });\n                if (startIndex < Infinity && startIndex >= 0) {\n                    cutSrc = src.substring(0, startIndex + 1);\n                }\n            }\n            if (token = this.tokenizer.inlineText(cutSrc)) {\n                src = src.substring(token.raw.length);\n                if (token.raw.slice(-1) !== '_') { // Track prevChar before string of ____ started\n                    prevChar = token.raw.slice(-1);\n                }\n                keepPrevChar = true;\n                const lastToken = tokens.at(-1);\n                if (lastToken?.type === 'text') {\n                    lastToken.raw += token.raw;\n                    lastToken.text += token.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            if (src) {\n                const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n                if (this.options.silent) {\n                    console.error(errMsg);\n                    break;\n                }\n                else {\n                    throw new Error(errMsg);\n                }\n            }\n        }\n        return tokens;\n    }\n}\n\n/**\n * Renderer\n */\nclass _Renderer {\n    options;\n    parser; // set by the parser\n    constructor(options) {\n        this.options = options || _defaults;\n    }\n    space(token) {\n        return '';\n    }\n    code({ text, lang, escaped }) {\n        const langString = (lang || '').match(other.notSpaceStart)?.[0];\n        const code = text.replace(other.endingNewline, '') + '\\n';\n        if (!langString) {\n            return '<pre><code>'\n                + (escaped ? code : escape(code, true))\n                + '</code></pre>\\n';\n        }\n        return '<pre><code class=\"language-'\n            + escape(langString)\n            + '\">'\n            + (escaped ? code : escape(code, true))\n            + '</code></pre>\\n';\n    }\n    blockquote({ tokens }) {\n        const body = this.parser.parse(tokens);\n        return `<blockquote>\\n${body}</blockquote>\\n`;\n    }\n    html({ text }) {\n        return text;\n    }\n    heading({ tokens, depth }) {\n        return `<h${depth}>${this.parser.parseInline(tokens)}</h${depth}>\\n`;\n    }\n    hr(token) {\n        return '<hr>\\n';\n    }\n    list(token) {\n        const ordered = token.ordered;\n        const start = token.start;\n        let body = '';\n        for (let j = 0; j < token.items.length; j++) {\n            const item = token.items[j];\n            body += this.listitem(item);\n        }\n        const type = ordered ? 'ol' : 'ul';\n        const startAttr = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n        return '<' + type + startAttr + '>\\n' + body + '</' + type + '>\\n';\n    }\n    listitem(item) {\n        let itemBody = '';\n        if (item.task) {\n            const checkbox = this.checkbox({ checked: !!item.checked });\n            if (item.loose) {\n                if (item.tokens[0]?.type === 'paragraph') {\n                    item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                    if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                        item.tokens[0].tokens[0].text = checkbox + ' ' + escape(item.tokens[0].tokens[0].text);\n                        item.tokens[0].tokens[0].escaped = true;\n                    }\n                }\n                else {\n                    item.tokens.unshift({\n                        type: 'text',\n                        raw: checkbox + ' ',\n                        text: checkbox + ' ',\n                        escaped: true,\n                    });\n                }\n            }\n            else {\n                itemBody += checkbox + ' ';\n            }\n        }\n        itemBody += this.parser.parse(item.tokens, !!item.loose);\n        return `<li>${itemBody}</li>\\n`;\n    }\n    checkbox({ checked }) {\n        return '<input '\n            + (checked ? 'checked=\"\" ' : '')\n            + 'disabled=\"\" type=\"checkbox\">';\n    }\n    paragraph({ tokens }) {\n        return `<p>${this.parser.parseInline(tokens)}</p>\\n`;\n    }\n    table(token) {\n        let header = '';\n        // header\n        let cell = '';\n        for (let j = 0; j < token.header.length; j++) {\n            cell += this.tablecell(token.header[j]);\n        }\n        header += this.tablerow({ text: cell });\n        let body = '';\n        for (let j = 0; j < token.rows.length; j++) {\n            const row = token.rows[j];\n            cell = '';\n            for (let k = 0; k < row.length; k++) {\n                cell += this.tablecell(row[k]);\n            }\n            body += this.tablerow({ text: cell });\n        }\n        if (body)\n            body = `<tbody>${body}</tbody>`;\n        return '<table>\\n'\n            + '<thead>\\n'\n            + header\n            + '</thead>\\n'\n            + body\n            + '</table>\\n';\n    }\n    tablerow({ text }) {\n        return `<tr>\\n${text}</tr>\\n`;\n    }\n    tablecell(token) {\n        const content = this.parser.parseInline(token.tokens);\n        const type = token.header ? 'th' : 'td';\n        const tag = token.align\n            ? `<${type} align=\"${token.align}\">`\n            : `<${type}>`;\n        return tag + content + `</${type}>\\n`;\n    }\n    /**\n     * span level renderer\n     */\n    strong({ tokens }) {\n        return `<strong>${this.parser.parseInline(tokens)}</strong>`;\n    }\n    em({ tokens }) {\n        return `<em>${this.parser.parseInline(tokens)}</em>`;\n    }\n    codespan({ text }) {\n        return `<code>${escape(text, true)}</code>`;\n    }\n    br(token) {\n        return '<br>';\n    }\n    del({ tokens }) {\n        return `<del>${this.parser.parseInline(tokens)}</del>`;\n    }\n    link({ href, title, tokens }) {\n        const text = this.parser.parseInline(tokens);\n        const cleanHref = cleanUrl(href);\n        if (cleanHref === null) {\n            return text;\n        }\n        href = cleanHref;\n        let out = '<a href=\"' + href + '\"';\n        if (title) {\n            out += ' title=\"' + (escape(title)) + '\"';\n        }\n        out += '>' + text + '</a>';\n        return out;\n    }\n    image({ href, title, text, tokens }) {\n        if (tokens) {\n            text = this.parser.parseInline(tokens, this.parser.textRenderer);\n        }\n        const cleanHref = cleanUrl(href);\n        if (cleanHref === null) {\n            return escape(text);\n        }\n        href = cleanHref;\n        let out = `<img src=\"${href}\" alt=\"${text}\"`;\n        if (title) {\n            out += ` title=\"${escape(title)}\"`;\n        }\n        out += '>';\n        return out;\n    }\n    text(token) {\n        return 'tokens' in token && token.tokens\n            ? this.parser.parseInline(token.tokens)\n            : ('escaped' in token && token.escaped ? token.text : escape(token.text));\n    }\n}\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\nclass _TextRenderer {\n    // no need for block level renderers\n    strong({ text }) {\n        return text;\n    }\n    em({ text }) {\n        return text;\n    }\n    codespan({ text }) {\n        return text;\n    }\n    del({ text }) {\n        return text;\n    }\n    html({ text }) {\n        return text;\n    }\n    text({ text }) {\n        return text;\n    }\n    link({ text }) {\n        return '' + text;\n    }\n    image({ text }) {\n        return '' + text;\n    }\n    br() {\n        return '';\n    }\n}\n\n/**\n * Parsing & Compiling\n */\nclass _Parser {\n    options;\n    renderer;\n    textRenderer;\n    constructor(options) {\n        this.options = options || _defaults;\n        this.options.renderer = this.options.renderer || new _Renderer();\n        this.renderer = this.options.renderer;\n        this.renderer.options = this.options;\n        this.renderer.parser = this;\n        this.textRenderer = new _TextRenderer();\n    }\n    /**\n     * Static Parse Method\n     */\n    static parse(tokens, options) {\n        const parser = new _Parser(options);\n        return parser.parse(tokens);\n    }\n    /**\n     * Static Parse Inline Method\n     */\n    static parseInline(tokens, options) {\n        const parser = new _Parser(options);\n        return parser.parseInline(tokens);\n    }\n    /**\n     * Parse Loop\n     */\n    parse(tokens, top = true) {\n        let out = '';\n        for (let i = 0; i < tokens.length; i++) {\n            const anyToken = tokens[i];\n            // Run any renderer extensions\n            if (this.options.extensions?.renderers?.[anyToken.type]) {\n                const genericToken = anyToken;\n                const ret = this.options.extensions.renderers[genericToken.type].call({ parser: this }, genericToken);\n                if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(genericToken.type)) {\n                    out += ret || '';\n                    continue;\n                }\n            }\n            const token = anyToken;\n            switch (token.type) {\n                case 'space': {\n                    out += this.renderer.space(token);\n                    continue;\n                }\n                case 'hr': {\n                    out += this.renderer.hr(token);\n                    continue;\n                }\n                case 'heading': {\n                    out += this.renderer.heading(token);\n                    continue;\n                }\n                case 'code': {\n                    out += this.renderer.code(token);\n                    continue;\n                }\n                case 'table': {\n                    out += this.renderer.table(token);\n                    continue;\n                }\n                case 'blockquote': {\n                    out += this.renderer.blockquote(token);\n                    continue;\n                }\n                case 'list': {\n                    out += this.renderer.list(token);\n                    continue;\n                }\n                case 'html': {\n                    out += this.renderer.html(token);\n                    continue;\n                }\n                case 'paragraph': {\n                    out += this.renderer.paragraph(token);\n                    continue;\n                }\n                case 'text': {\n                    let textToken = token;\n                    let body = this.renderer.text(textToken);\n                    while (i + 1 < tokens.length && tokens[i + 1].type === 'text') {\n                        textToken = tokens[++i];\n                        body += '\\n' + this.renderer.text(textToken);\n                    }\n                    if (top) {\n                        out += this.renderer.paragraph({\n                            type: 'paragraph',\n                            raw: body,\n                            text: body,\n                            tokens: [{ type: 'text', raw: body, text: body, escaped: true }],\n                        });\n                    }\n                    else {\n                        out += body;\n                    }\n                    continue;\n                }\n                default: {\n                    const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n                    if (this.options.silent) {\n                        console.error(errMsg);\n                        return '';\n                    }\n                    else {\n                        throw new Error(errMsg);\n                    }\n                }\n            }\n        }\n        return out;\n    }\n    /**\n     * Parse Inline Tokens\n     */\n    parseInline(tokens, renderer = this.renderer) {\n        let out = '';\n        for (let i = 0; i < tokens.length; i++) {\n            const anyToken = tokens[i];\n            // Run any renderer extensions\n            if (this.options.extensions?.renderers?.[anyToken.type]) {\n                const ret = this.options.extensions.renderers[anyToken.type].call({ parser: this }, anyToken);\n                if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(anyToken.type)) {\n                    out += ret || '';\n                    continue;\n                }\n            }\n            const token = anyToken;\n            switch (token.type) {\n                case 'escape': {\n                    out += renderer.text(token);\n                    break;\n                }\n                case 'html': {\n                    out += renderer.html(token);\n                    break;\n                }\n                case 'link': {\n                    out += renderer.link(token);\n                    break;\n                }\n                case 'image': {\n                    out += renderer.image(token);\n                    break;\n                }\n                case 'strong': {\n                    out += renderer.strong(token);\n                    break;\n                }\n                case 'em': {\n                    out += renderer.em(token);\n                    break;\n                }\n                case 'codespan': {\n                    out += renderer.codespan(token);\n                    break;\n                }\n                case 'br': {\n                    out += renderer.br(token);\n                    break;\n                }\n                case 'del': {\n                    out += renderer.del(token);\n                    break;\n                }\n                case 'text': {\n                    out += renderer.text(token);\n                    break;\n                }\n                default: {\n                    const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n                    if (this.options.silent) {\n                        console.error(errMsg);\n                        return '';\n                    }\n                    else {\n                        throw new Error(errMsg);\n                    }\n                }\n            }\n        }\n        return out;\n    }\n}\n\nclass _Hooks {\n    options;\n    block;\n    constructor(options) {\n        this.options = options || _defaults;\n    }\n    static passThroughHooks = new Set([\n        'preprocess',\n        'postprocess',\n        'processAllTokens',\n    ]);\n    /**\n     * Process markdown before marked\n     */\n    preprocess(markdown) {\n        return markdown;\n    }\n    /**\n     * Process HTML after marked is finished\n     */\n    postprocess(html) {\n        return html;\n    }\n    /**\n     * Process all tokens before walk tokens\n     */\n    processAllTokens(tokens) {\n        return tokens;\n    }\n    /**\n     * Provide function to tokenize markdown\n     */\n    provideLexer() {\n        return this.block ? _Lexer.lex : _Lexer.lexInline;\n    }\n    /**\n     * Provide function to parse tokens\n     */\n    provideParser() {\n        return this.block ? _Parser.parse : _Parser.parseInline;\n    }\n}\n\nclass Marked {\n    defaults = _getDefaults();\n    options = this.setOptions;\n    parse = this.parseMarkdown(true);\n    parseInline = this.parseMarkdown(false);\n    Parser = _Parser;\n    Renderer = _Renderer;\n    TextRenderer = _TextRenderer;\n    Lexer = _Lexer;\n    Tokenizer = _Tokenizer;\n    Hooks = _Hooks;\n    constructor(...args) {\n        this.use(...args);\n    }\n    /**\n     * Run callback for every token\n     */\n    walkTokens(tokens, callback) {\n        let values = [];\n        for (const token of tokens) {\n            values = values.concat(callback.call(this, token));\n            switch (token.type) {\n                case 'table': {\n                    const tableToken = token;\n                    for (const cell of tableToken.header) {\n                        values = values.concat(this.walkTokens(cell.tokens, callback));\n                    }\n                    for (const row of tableToken.rows) {\n                        for (const cell of row) {\n                            values = values.concat(this.walkTokens(cell.tokens, callback));\n                        }\n                    }\n                    break;\n                }\n                case 'list': {\n                    const listToken = token;\n                    values = values.concat(this.walkTokens(listToken.items, callback));\n                    break;\n                }\n                default: {\n                    const genericToken = token;\n                    if (this.defaults.extensions?.childTokens?.[genericToken.type]) {\n                        this.defaults.extensions.childTokens[genericToken.type].forEach((childTokens) => {\n                            const tokens = genericToken[childTokens].flat(Infinity);\n                            values = values.concat(this.walkTokens(tokens, callback));\n                        });\n                    }\n                    else if (genericToken.tokens) {\n                        values = values.concat(this.walkTokens(genericToken.tokens, callback));\n                    }\n                }\n            }\n        }\n        return values;\n    }\n    use(...args) {\n        const extensions = this.defaults.extensions || { renderers: {}, childTokens: {} };\n        args.forEach((pack) => {\n            // copy options to new object\n            const opts = { ...pack };\n            // set async to true if it was set to true before\n            opts.async = this.defaults.async || opts.async || false;\n            // ==-- Parse \"addon\" extensions --== //\n            if (pack.extensions) {\n                pack.extensions.forEach((ext) => {\n                    if (!ext.name) {\n                        throw new Error('extension name required');\n                    }\n                    if ('renderer' in ext) { // Renderer extensions\n                        const prevRenderer = extensions.renderers[ext.name];\n                        if (prevRenderer) {\n                            // Replace extension with func to run new extension but fall back if false\n                            extensions.renderers[ext.name] = function (...args) {\n                                let ret = ext.renderer.apply(this, args);\n                                if (ret === false) {\n                                    ret = prevRenderer.apply(this, args);\n                                }\n                                return ret;\n                            };\n                        }\n                        else {\n                            extensions.renderers[ext.name] = ext.renderer;\n                        }\n                    }\n                    if ('tokenizer' in ext) { // Tokenizer Extensions\n                        if (!ext.level || (ext.level !== 'block' && ext.level !== 'inline')) {\n                            throw new Error(\"extension level must be 'block' or 'inline'\");\n                        }\n                        const extLevel = extensions[ext.level];\n                        if (extLevel) {\n                            extLevel.unshift(ext.tokenizer);\n                        }\n                        else {\n                            extensions[ext.level] = [ext.tokenizer];\n                        }\n                        if (ext.start) { // Function to check for start of token\n                            if (ext.level === 'block') {\n                                if (extensions.startBlock) {\n                                    extensions.startBlock.push(ext.start);\n                                }\n                                else {\n                                    extensions.startBlock = [ext.start];\n                                }\n                            }\n                            else if (ext.level === 'inline') {\n                                if (extensions.startInline) {\n                                    extensions.startInline.push(ext.start);\n                                }\n                                else {\n                                    extensions.startInline = [ext.start];\n                                }\n                            }\n                        }\n                    }\n                    if ('childTokens' in ext && ext.childTokens) { // Child tokens to be visited by walkTokens\n                        extensions.childTokens[ext.name] = ext.childTokens;\n                    }\n                });\n                opts.extensions = extensions;\n            }\n            // ==-- Parse \"overwrite\" extensions --== //\n            if (pack.renderer) {\n                const renderer = this.defaults.renderer || new _Renderer(this.defaults);\n                for (const prop in pack.renderer) {\n                    if (!(prop in renderer)) {\n                        throw new Error(`renderer '${prop}' does not exist`);\n                    }\n                    if (['options', 'parser'].includes(prop)) {\n                        // ignore options property\n                        continue;\n                    }\n                    const rendererProp = prop;\n                    const rendererFunc = pack.renderer[rendererProp];\n                    const prevRenderer = renderer[rendererProp];\n                    // Replace renderer with func to run extension, but fall back if false\n                    renderer[rendererProp] = (...args) => {\n                        let ret = rendererFunc.apply(renderer, args);\n                        if (ret === false) {\n                            ret = prevRenderer.apply(renderer, args);\n                        }\n                        return ret || '';\n                    };\n                }\n                opts.renderer = renderer;\n            }\n            if (pack.tokenizer) {\n                const tokenizer = this.defaults.tokenizer || new _Tokenizer(this.defaults);\n                for (const prop in pack.tokenizer) {\n                    if (!(prop in tokenizer)) {\n                        throw new Error(`tokenizer '${prop}' does not exist`);\n                    }\n                    if (['options', 'rules', 'lexer'].includes(prop)) {\n                        // ignore options, rules, and lexer properties\n                        continue;\n                    }\n                    const tokenizerProp = prop;\n                    const tokenizerFunc = pack.tokenizer[tokenizerProp];\n                    const prevTokenizer = tokenizer[tokenizerProp];\n                    // Replace tokenizer with func to run extension, but fall back if false\n                    // @ts-expect-error cannot type tokenizer function dynamically\n                    tokenizer[tokenizerProp] = (...args) => {\n                        let ret = tokenizerFunc.apply(tokenizer, args);\n                        if (ret === false) {\n                            ret = prevTokenizer.apply(tokenizer, args);\n                        }\n                        return ret;\n                    };\n                }\n                opts.tokenizer = tokenizer;\n            }\n            // ==-- Parse Hooks extensions --== //\n            if (pack.hooks) {\n                const hooks = this.defaults.hooks || new _Hooks();\n                for (const prop in pack.hooks) {\n                    if (!(prop in hooks)) {\n                        throw new Error(`hook '${prop}' does not exist`);\n                    }\n                    if (['options', 'block'].includes(prop)) {\n                        // ignore options and block properties\n                        continue;\n                    }\n                    const hooksProp = prop;\n                    const hooksFunc = pack.hooks[hooksProp];\n                    const prevHook = hooks[hooksProp];\n                    if (_Hooks.passThroughHooks.has(prop)) {\n                        // @ts-expect-error cannot type hook function dynamically\n                        hooks[hooksProp] = (arg) => {\n                            if (this.defaults.async) {\n                                return Promise.resolve(hooksFunc.call(hooks, arg)).then(ret => {\n                                    return prevHook.call(hooks, ret);\n                                });\n                            }\n                            const ret = hooksFunc.call(hooks, arg);\n                            return prevHook.call(hooks, ret);\n                        };\n                    }\n                    else {\n                        // @ts-expect-error cannot type hook function dynamically\n                        hooks[hooksProp] = (...args) => {\n                            let ret = hooksFunc.apply(hooks, args);\n                            if (ret === false) {\n                                ret = prevHook.apply(hooks, args);\n                            }\n                            return ret;\n                        };\n                    }\n                }\n                opts.hooks = hooks;\n            }\n            // ==-- Parse WalkTokens extensions --== //\n            if (pack.walkTokens) {\n                const walkTokens = this.defaults.walkTokens;\n                const packWalktokens = pack.walkTokens;\n                opts.walkTokens = function (token) {\n                    let values = [];\n                    values.push(packWalktokens.call(this, token));\n                    if (walkTokens) {\n                        values = values.concat(walkTokens.call(this, token));\n                    }\n                    return values;\n                };\n            }\n            this.defaults = { ...this.defaults, ...opts };\n        });\n        return this;\n    }\n    setOptions(opt) {\n        this.defaults = { ...this.defaults, ...opt };\n        return this;\n    }\n    lexer(src, options) {\n        return _Lexer.lex(src, options ?? this.defaults);\n    }\n    parser(tokens, options) {\n        return _Parser.parse(tokens, options ?? this.defaults);\n    }\n    parseMarkdown(blockType) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const parse = (src, options) => {\n            const origOpt = { ...options };\n            const opt = { ...this.defaults, ...origOpt };\n            const throwError = this.onError(!!opt.silent, !!opt.async);\n            // throw error if an extension set async to true but parse was called with async: false\n            if (this.defaults.async === true && origOpt.async === false) {\n                return throwError(new Error('marked(): The async option was set to true by an extension. Remove async: false from the parse options object to return a Promise.'));\n            }\n            // throw error in case of non string input\n            if (typeof src === 'undefined' || src === null) {\n                return throwError(new Error('marked(): input parameter is undefined or null'));\n            }\n            if (typeof src !== 'string') {\n                return throwError(new Error('marked(): input parameter is of type '\n                    + Object.prototype.toString.call(src) + ', string expected'));\n            }\n            if (opt.hooks) {\n                opt.hooks.options = opt;\n                opt.hooks.block = blockType;\n            }\n            const lexer = opt.hooks ? opt.hooks.provideLexer() : (blockType ? _Lexer.lex : _Lexer.lexInline);\n            const parser = opt.hooks ? opt.hooks.provideParser() : (blockType ? _Parser.parse : _Parser.parseInline);\n            if (opt.async) {\n                return Promise.resolve(opt.hooks ? opt.hooks.preprocess(src) : src)\n                    .then(src => lexer(src, opt))\n                    .then(tokens => opt.hooks ? opt.hooks.processAllTokens(tokens) : tokens)\n                    .then(tokens => opt.walkTokens ? Promise.all(this.walkTokens(tokens, opt.walkTokens)).then(() => tokens) : tokens)\n                    .then(tokens => parser(tokens, opt))\n                    .then(html => opt.hooks ? opt.hooks.postprocess(html) : html)\n                    .catch(throwError);\n            }\n            try {\n                if (opt.hooks) {\n                    src = opt.hooks.preprocess(src);\n                }\n                let tokens = lexer(src, opt);\n                if (opt.hooks) {\n                    tokens = opt.hooks.processAllTokens(tokens);\n                }\n                if (opt.walkTokens) {\n                    this.walkTokens(tokens, opt.walkTokens);\n                }\n                let html = parser(tokens, opt);\n                if (opt.hooks) {\n                    html = opt.hooks.postprocess(html);\n                }\n                return html;\n            }\n            catch (e) {\n                return throwError(e);\n            }\n        };\n        return parse;\n    }\n    onError(silent, async) {\n        return (e) => {\n            e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n            if (silent) {\n                const msg = '<p>An error occurred:</p><pre>'\n                    + escape(e.message + '', true)\n                    + '</pre>';\n                if (async) {\n                    return Promise.resolve(msg);\n                }\n                return msg;\n            }\n            if (async) {\n                return Promise.reject(e);\n            }\n            throw e;\n        };\n    }\n}\n\nconst markedInstance = new Marked();\nfunction marked(src, opt) {\n    return markedInstance.parse(src, opt);\n}\n/**\n * Sets the default options.\n *\n * @param options Hash of options\n */\nmarked.options =\n    marked.setOptions = function (options) {\n        markedInstance.setOptions(options);\n        marked.defaults = markedInstance.defaults;\n        changeDefaults(marked.defaults);\n        return marked;\n    };\n/**\n * Gets the original marked default options.\n */\nmarked.getDefaults = _getDefaults;\nmarked.defaults = _defaults;\n/**\n * Use Extension\n */\nmarked.use = function (...args) {\n    markedInstance.use(...args);\n    marked.defaults = markedInstance.defaults;\n    changeDefaults(marked.defaults);\n    return marked;\n};\n/**\n * Run callback for every token\n */\nmarked.walkTokens = function (tokens, callback) {\n    return markedInstance.walkTokens(tokens, callback);\n};\n/**\n * Compiles markdown to HTML without enclosing `p` tag.\n *\n * @param src String of markdown source to be compiled\n * @param options Hash of options\n * @return String of compiled HTML\n */\nmarked.parseInline = markedInstance.parseInline;\n/**\n * Expose\n */\nmarked.Parser = _Parser;\nmarked.parser = _Parser.parse;\nmarked.Renderer = _Renderer;\nmarked.TextRenderer = _TextRenderer;\nmarked.Lexer = _Lexer;\nmarked.lexer = _Lexer.lex;\nmarked.Tokenizer = _Tokenizer;\nmarked.Hooks = _Hooks;\nmarked.parse = marked;\nconst options = marked.options;\nconst setOptions = marked.setOptions;\nconst use = marked.use;\nconst walkTokens = marked.walkTokens;\nconst parseInline = marked.parseInline;\nconst parse = marked;\nconst parser = _Parser.parse;\nconst lexer = _Lexer.lex;\n\nexport { _Hooks as Hooks, _Lexer as Lexer, Marked, _Parser as Parser, _Renderer as Renderer, _TextRenderer as TextRenderer, _Tokenizer as Tokenizer, _defaults as defaults, _getDefaults as getDefaults, lexer, marked, options, parse, parseInline, parser, setOptions, use, walkTokens };\n//# sourceMappingURL=marked.esm.js.map\n","function setInLocalStorage(key: string, value: string) {\n    const myPartitionKey = Office.context.partitionKey;\n  \n    // Check if local storage is partitioned. \n    // If so, use the partition to ensure the data is only accessible by your add-in.\n    if (myPartitionKey) {\n      localStorage.setItem(myPartitionKey + key, value);\n    } else {\n      localStorage.setItem(key, value);\n    }\n  }\n  \n  function getFromLocalStorage(key: string) {\n    const myPartitionKey = Office.context.partitionKey;\n  \n    // Check if local storage is partitioned.\n    if (myPartitionKey) {\n      return localStorage.getItem(myPartitionKey + key);\n    } else {\n      return localStorage.getItem(key);\n    }\n  }\n\n  export { setInLocalStorage, getFromLocalStorage };","import { getLLMResponse } from \"./llm\";\nimport { marked } from 'marked';\nimport { ChatOpenAI } from \"@langchain/openai\";\nimport { initializeModel } from \"./llm\";\nimport { getFromLocalStorage } from \"./local_storage\";\n\n\nasync function concatenatePrompt(promptUrl: string, selectedText: string, isReplaceSelection: boolean = false) {\n  if (promptUrl === \"\") {\n    return selectedText;\n  } else {\n    const response = await fetch(promptUrl);\n    if (!response.ok) {\n      throw new Error(`Failed to load prompt: ${response.status} ${response.statusText}`);\n    }\n    const promptText = await response.text();\n    // Remove trailing colon if present\n    \n    if (isReplaceSelection) {\n      const cleanPromptText = promptText.replace(/:$/, '.');\n      // Add HTML preservation prompt only for replace selection\n      const htmlPreserveResponse = await fetch('/WordLLM/prompts/html_preserve.txt');\n      if (!htmlPreserveResponse.ok) {\n        throw new Error(`Failed to load HTML preservation prompt: ${htmlPreserveResponse.status} ${htmlPreserveResponse.statusText}`);\n      }\n      const htmlPreserveText = await htmlPreserveResponse.text();\n      return cleanPromptText + ' ' + htmlPreserveText + '\\n' + selectedText;\n    } else {\n      return promptText + '\\n' + selectedText;\n    }\n  } \n}\n\nexport async function askLLMUrlPrompt(userText: string, taskPane: boolean = false, promptUrl: string = \"\", model: ChatOpenAI) {\n  const fullPrompt = await concatenatePrompt(promptUrl, userText, !taskPane);\n  console.log('Full prompt:', fullPrompt);\n  \n  // Extract prompt name from URL if available\n  let promptName;\n  if (promptUrl) {\n    const urlParts = promptUrl.split('/');\n    promptName = urlParts[urlParts.length - 1].replace('.txt', '');\n  }\n  \n  // Get configuration from local storage\n  const baseURL = getFromLocalStorage('baseURL');\n  const apiKey = getFromLocalStorage('apiKey');\n  const selectedModel = getFromLocalStorage('selectedModel');\n  \n  // Create a new model instance with the prompt name\n  const modelWithPrompt = initializeModel(\n    baseURL,\n    apiKey,\n    selectedModel,\n    promptName\n  );\n  \n  askLLM(fullPrompt, taskPane, modelWithPrompt);\n}\n\nexport async function askLLMStrPrompt(userText: string, taskPane: boolean = false, promptStr: string = \"\", model: ChatOpenAI) {\n  const fullPrompt = promptStr + \"\\n\" + userText;\n  console.log('Full prompt:', fullPrompt);\n  askLLM(fullPrompt, taskPane, model);\n}\n\n\n// If taskPane is true, the response is displayed in the taskpane\n// If taskPane is false, the response replace the selection\nexport async function askLLM(prompt: string, taskPane: boolean = false, model: ChatOpenAI) {\n    // Show loading overlay\n    const overlay = document.getElementById('loadingOverlay');\n    if (overlay) {\n        overlay.style.display = 'flex';\n        overlay.classList.add('active');\n    }\n\n    try {\n        await Word.run(async (context) => {\n            // Get response from LLM\n            const llmResponse = await getLLMResponse(prompt, model);\n            console.log('Received the LLM response:', llmResponse);\n\n            // Display the response in the taskpane\n            if (taskPane) {\n                const responseDiv = document.getElementById('response');\n                if (responseDiv) {\n                    const parsedMarkdown = await marked.parse(llmResponse);\n                    console.log('Displaying response in taskpane : \\n ' + parsedMarkdown);\n                    responseDiv.innerHTML = `<div class=\"markdown-content\">${parsedMarkdown}</div>`;\n                    \n                    // Scroll to the response section\n                    const responseSection = document.querySelector('.response-section');\n                    if (responseSection) {\n                        responseSection.scrollIntoView({ behavior: 'smooth', block: 'start' });\n                    }\n                }\n            } else {\n                // Get the current selection's HTML\n                const selection = context.document.getSelection();\n                const html = selection.getHtml();\n                await context.sync();\n                \n                // Replace the body content with the LLM response\n                const bodyRegex = /<body[^>]*>([\\s\\S]*)<\\/body>/i;\n                const modifiedHtml = html.value.replace(bodyRegex, `<body>${llmResponse}</body>`);\n                \n                // Clear the selection first\n                selection.clear();\n                \n                // Insert the modified HTML\n                selection.insertHtml(modifiedHtml, Word.InsertLocation.replace);\n            }\n\n            await context.sync();\n        });\n    } catch (error) {\n        console.error('Error in askLLM:', error);\n        const responseDiv = document.getElementById('response');\n        if (responseDiv) {\n            console.log('Displaying error in UI');\n            responseDiv.textContent = `An error occurred: ${error.message || error}. Please try again.`;\n            \n            // Scroll to the response section even on error\n            const responseSection = document.querySelector('.response-section');\n            if (responseSection) {\n                responseSection.scrollIntoView({ behavior: 'smooth', block: 'start' });\n            }\n        }\n    } finally {\n        // Hide loading overlay\n        if (overlay) {\n            overlay.style.display = 'none';\n            overlay.classList.remove('active');\n        }\n    }\n    console.log('Finished askLLM function');\n}\n\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global document, Office, Word */\nimport { askLLMUrlPrompt, askLLMStrPrompt } from '../lib/word_insertion';\nimport { initializeModel, fetchAvailableModels, filterModels } from '../lib/llm';\nimport { setInLocalStorage, getFromLocalStorage } from '../lib/local_storage';\nimport { marked } from 'marked';\n\nlet model: any = null;\nlet availableModels: string[] = [];\nlet currentPromptType: 'replaceSelection' | 'taskpane' | null = null;\n\n// Loading overlay functions\nfunction showLoadingOverlay() {\n    console.log('Showing loading overlay');\n    const overlay = document.getElementById('loadingOverlay');\n    if (overlay) {\n        overlay.style.display = 'flex';\n        overlay.classList.add('active');\n    } else {\n        console.error('Loading overlay element not found');\n    }\n}\n\nfunction hideLoadingOverlay() {\n    console.log('Hiding loading overlay');\n    const overlay = document.getElementById('loadingOverlay');\n    if (overlay) {\n        overlay.style.display = 'none';\n        overlay.classList.remove('active');\n    }\n}\n\nOffice.onReady((info) => {\n  if (info.host === Office.HostType.Word) {\n    // Load saved configuration\n    const savedBaseURL = getFromLocalStorage('baseURL');\n    const savedApiKey = getFromLocalStorage('apiKey');\n    const savedModel = getFromLocalStorage('selectedModel');\n    \n    if (savedBaseURL) {\n      (document.getElementById(\"baseURL\") as HTMLInputElement).value = savedBaseURL;\n    }\n    if (savedApiKey) {\n      (document.getElementById(\"apiKey\") as HTMLInputElement).value = savedApiKey;\n    }\n\n    // Initialize model with saved or default values\n    const baseURL = (document.getElementById(\"baseURL\") as HTMLInputElement).value;\n    const apiKey = (document.getElementById(\"apiKey\") as HTMLInputElement).value;\n    const selectedModel = savedModel || undefined;\n    model = initializeModel(baseURL, apiKey, selectedModel);\n\n    // Add event listeners for configuration changes\n    document.getElementById(\"baseURL\").addEventListener(\"change\", updateModel);\n    document.getElementById(\"apiKey\").addEventListener(\"change\", updateModel);\n    document.getElementById(\"saveConfig\").addEventListener(\"click\", saveConfiguration);\n    document.getElementById(\"modelSearch\").addEventListener(\"input\", handleModelSearch);\n    document.getElementById(\"modelSelect\").addEventListener(\"change\", handleModelChange);\n    document.getElementById(\"toggleConfig\").addEventListener(\"click\", toggleConfigSection);\n\n    // Add tab switching functionality\n    const tabButtons = document.querySelectorAll('.tab-button');\n    tabButtons.forEach(button => {\n      button.addEventListener('click', () => {\n        // Remove active class from all buttons and content\n        tabButtons.forEach(btn => btn.classList.remove('active'));\n        document.querySelectorAll('.tab-content').forEach(content => content.classList.remove('active'));\n        \n        // Add active class to clicked button and corresponding content\n        button.classList.add('active');\n        const tabId = button.getAttribute('data-tab');\n        document.getElementById(`${tabId}-tab`).classList.add('active');\n      });\n    });\n\n    // Add event listeners for dev mode execute buttons\n    document.getElementById(\"executeReplaceSelection\").addEventListener(\"click\", executeReplaceSelection);\n    document.getElementById(\"executeReplyTaskpane\").addEventListener(\"click\", executeReplyTaskpane);\n    document.getElementById(\"saveReplaceSelectionPrompt\").addEventListener(\"click\", () => showPromptNamePopup('replaceSelection'));\n    document.getElementById(\"saveTaskpanePrompt\").addEventListener(\"click\", () => showPromptNamePopup('taskpane'));\n    document.getElementById(\"savePromptConfirm\").addEventListener(\"click\", savePromptWithName);\n    document.getElementById(\"cancelPromptSave\").addEventListener(\"click\", hidePromptNamePopup);\n\n    // Load saved custom prompts\n    loadCustomPrompts();\n\n    // Fetch available models\n    fetchModels();\n\n    // Add here all the event listeners\n    document.getElementById(\"chat\").onclick = chat;\n    document.getElementById(\"explain\").onclick = explain;\n    document.getElementById(\"translateToEnglish\").onclick = translateToEnglish;\n    document.getElementById(\"translateToFrench\").onclick = translateToFrench;\n    document.getElementById(\"enhance\").onclick = enhance;\n    document.getElementById(\"correctSpelling\").onclick = correctSpelling;\n  }\n});\n\nasync function fetchModels() {\n    const modelSelect = document.getElementById(\"modelSelect\") as HTMLSelectElement;\n    modelSelect.classList.add(\"loading\");\n    \n    try {\n        const baseURL = (document.getElementById(\"baseURL\") as HTMLInputElement).value;\n        const apiKey = (document.getElementById(\"apiKey\") as HTMLInputElement).value;\n        \n        availableModels = await fetchAvailableModels(baseURL, apiKey);\n        updateModelDropdown(availableModels);\n        \n        // Restore saved model selection if exists\n        const savedModel = getFromLocalStorage('selectedModel');\n        if (savedModel && availableModels.includes(savedModel)) {\n            modelSelect.value = savedModel;\n        }\n    } catch (error) {\n        console.error(\"Error fetching models:\", error);\n        modelSelect.innerHTML = '<option value=\"\">Error loading models</option>';\n    } finally {\n        modelSelect.classList.remove(\"loading\");\n    }\n}\n\nfunction updateModelDropdown(models: string[]) {\n    const modelSelect = document.getElementById(\"modelSelect\") as HTMLSelectElement;\n    const searchTerm = (document.getElementById(\"modelSearch\") as HTMLInputElement).value;\n    \n    // Filter models based on search term\n    const filteredModels = filterModels(models, searchTerm);\n    \n    // Update dropdown options\n    modelSelect.innerHTML = filteredModels.length > 0 \n        ? filteredModels.map(model => `<option value=\"${model}\">${model}</option>`).join('')\n        : '<option value=\"\">No models found</option>';\n    \n    // If there's only one model after filtering, select it and update the model\n    if (filteredModels.length === 1) {\n        modelSelect.value = filteredModels[0];\n        updateModel();\n    }\n}\n\nfunction handleModelSearch() {\n    updateModelDropdown(availableModels);\n}\n\nfunction handleModelChange() {\n    const selectedModel = (document.getElementById(\"modelSelect\") as HTMLSelectElement).value;\n    if (selectedModel) {\n        setInLocalStorage('selectedModel', selectedModel);\n        updateModel();\n    }\n}\n\nfunction updateModel() {\n    const baseURL = (document.getElementById(\"baseURL\") as HTMLInputElement).value;\n    const apiKey = (document.getElementById(\"apiKey\") as HTMLInputElement).value;\n    const selectedModel = (document.getElementById(\"modelSelect\") as HTMLSelectElement).value;\n    \n    // Force a new model instance to be created\n    model = initializeModel(baseURL, apiKey, selectedModel);\n    console.log('Model updated to:', selectedModel);\n}\n\nfunction saveConfiguration() {\n  const baseURL = (document.getElementById(\"baseURL\") as HTMLInputElement).value;\n  const apiKey = (document.getElementById(\"apiKey\") as HTMLInputElement).value;\n  \n  setInLocalStorage('baseURL', baseURL);\n  setInLocalStorage('apiKey', apiKey);\n  \n  // Show a success message\n  const responseDiv = document.getElementById('response');\n  if (responseDiv) {\n    responseDiv.innerHTML = '<div class=\"markdown-content\">Configuration saved successfully!</div>';\n  }\n\n  // Fetch models with the new configuration\n  fetchModels();\n}\n\n// This function is called when the user clicks the \"Chat\" button\nexport async function chat() {\n    // Get the prompt from the textarea\n    const textAreaValue = (document.getElementById('prompt') as HTMLTextAreaElement).value;\n    console.log('Retrieved textAreaValue:', textAreaValue);\n    await askLLMUrlPrompt(textAreaValue, true, \"\", model);\n}\n\n// This function is called when the user clicks the \"Explain\" button\nexport async function explain() {\n    return Word.run(async (context) => {\n        // Get the current selection\n        const selection = context.document.getSelection();\n        selection.load('text');\n        await context.sync();\n        const selectedText = selection.text;\n        await askLLMUrlPrompt(selectedText, true, '/WordLLM/prompts/explain.txt', model);\n        await context.sync();\n    });\n}\n\n// Add this new function after the imports\nasync function getSelectionAsHTML(): Promise<{ html: string, body: string }> {\n    return Word.run(async (context) => {\n        const selection = context.document.getSelection();\n        const html = selection.getHtml();\n        await context.sync();\n        \n        // Extract the body content using regex\n        const bodyRegex = /<body[^>]*>([\\s\\S]*)<\\/body>/i;\n        const match = html.value.match(bodyRegex);\n        const bodyContent = match ? match[1] : '';\n        \n        // Replace the body content with a placeholder\n        const modifiedHtml = html.value.replace(bodyRegex, '<body>BODYTOREPLACE</body>');\n        \n        return {\n            html: modifiedHtml,\n            body: bodyContent\n        };\n    });\n}\n\n// Modify the functions that use getOoxml\nexport async function translateToEnglish() {\n    return Word.run(async (context) => {\n        console.log(\"translate to english button clicked\");\n        const { html, body } = await getSelectionAsHTML();\n        await askLLMUrlPrompt(body, false, '/WordLLM/prompts/translateToEnglish.txt', model);\n        await context.sync();\n    });\n}\n\nexport async function translateToFrench() {\n    return Word.run(async (context) => {\n        console.log(\"translate to english button clicked\");\n        const { html, body } = await getSelectionAsHTML();\n        await askLLMUrlPrompt(body, false, '/WordLLM/prompts/translateToFrench.txt', model);\n        await context.sync();\n    });\n}\n\nexport async function enhance() {\n    return Word.run(async (context) => {\n        console.log(\"enhance button clicked\");\n        const { html, body } = await getSelectionAsHTML();\n        await askLLMUrlPrompt(body, false, '/WordLLM/prompts/enhance.txt', model);\n        await context.sync();\n    });\n}\n\nexport async function correctSpelling() {\n    return Word.run(async (context) => {\n        console.log(\"correct spelling button clicked\");\n        const { html, body } = await getSelectionAsHTML();\n        await askLLMUrlPrompt(body, false, '/WordLLM/prompts/correctSpelling.txt', model);\n        await context.sync();\n    });\n}\n\n// Dev Mode Functions\nasync function executeReplaceSelection() {\n    const prompt = (document.getElementById(\"promptReplaceSelection\") as HTMLTextAreaElement).value;\n    if (!prompt) return;\n\n    return Word.run(async (context) => {\n        const { html, body } = await getSelectionAsHTML();\n        await askLLMStrPrompt(body, false, prompt, model);\n        await context.sync();\n    });\n}\n\nasync function executeReplyTaskpane() {\n    const prompt = (document.getElementById(\"promptReplyTaskpane\") as HTMLTextAreaElement).value;\n    if (!prompt) return;\n\n    return Word.run(async (context) => {\n        const selection = context.document.getSelection();\n        selection.load('text');\n        await context.sync();\n        const selectedText = selection.text;\n        await askLLMStrPrompt(selectedText, true, prompt, model);\n        await context.sync();\n    });\n}\n\nfunction showPromptNamePopup(promptType: 'replaceSelection' | 'taskpane') {\n    currentPromptType = promptType;\n    const popup = document.getElementById('promptNamePopup');\n    if (popup) {\n        popup.classList.add('active');\n        // Focus the input field\n        const input = document.getElementById('promptName') as HTMLInputElement;\n        if (input) {\n            input.value = '';\n            input.focus();\n        }\n    }\n}\n\nfunction hidePromptNamePopup() {\n    const popup = document.getElementById('promptNamePopup');\n    if (popup) {\n        popup.classList.remove('active');\n    }\n    currentPromptType = null;\n}\n\nfunction savePromptWithName() {\n    if (!currentPromptType) return;\n\n    const promptName = (document.getElementById('promptName') as HTMLInputElement).value.trim();\n    if (!promptName) {\n        showSuccessMessage('Please enter a name for the prompt');\n        return;\n    }\n\n    let promptText = '';\n    if (currentPromptType === 'replaceSelection') {\n        promptText = (document.getElementById(\"promptReplaceSelection\") as HTMLTextAreaElement).value;\n    } else {\n        promptText = (document.getElementById(\"promptReplyTaskpane\") as HTMLTextAreaElement).value;\n    }\n\n    if (promptText) {\n        // Save the prompt with its name\n        const savedPrompts = JSON.parse(getFromLocalStorage('savedPrompts') || '{}');\n        savedPrompts[promptName] = {\n            type: currentPromptType,\n            text: promptText\n        };\n        setInLocalStorage('savedPrompts', JSON.stringify(savedPrompts));\n        showSuccessMessage(`Prompt \"${promptName}\" saved successfully!`);\n        hidePromptNamePopup();\n        loadCustomPrompts(); // Reload the custom prompts list\n    }\n}\n\nfunction showSuccessMessage(message: string) {\n    const responseDiv = document.getElementById('response');\n    if (responseDiv) {\n        responseDiv.innerHTML = `<div class=\"markdown-content\">${message}</div>`;\n    }\n}\n\nfunction loadCustomPrompts() {\n    const savedPrompts = JSON.parse(getFromLocalStorage('savedPrompts') || '{}');\n    const customReplacePrompts = document.getElementById('customReplacePrompts');\n    const customTaskpanePrompts = document.getElementById('customTaskpanePrompts');\n\n    if (customReplacePrompts && customTaskpanePrompts) {\n        customReplacePrompts.innerHTML = '';\n        customTaskpanePrompts.innerHTML = '';\n\n        Object.entries(savedPrompts).forEach(([name, promptData]: [string, any]) => {\n            const button = createCustomPromptButton(name, promptData);\n            if (promptData.type === 'replaceSelection') {\n                customReplacePrompts.appendChild(button);\n            } else {\n                customTaskpanePrompts.appendChild(button);\n            }\n        });\n    }\n}\n\nfunction createCustomPromptButton(name: string, promptData: any) {\n    const button = document.createElement('button');\n    button.className = 'action-button custom-prompt-button';\n    button.innerHTML = `\n        <span class=\"button-text\">${name}</span>\n        <button class=\"delete-prompt-button\" title=\"Delete prompt\">🗑️</button>\n    `;\n\n    button.addEventListener('click', () => {\n        if (promptData.type === 'replaceSelection') {\n            return Word.run(async (context) => {\n                const { html, body } = await getSelectionAsHTML();\n                // Clean the custom prompt and add HTML preservation prompt\n                const cleanPrompt = promptData.text.replace(/:$/, '.');\n                const fullPrompt = cleanPrompt + ' ' + await (await fetch('/WordLLM/prompts/html_preserve.txt')).text();\n                await askLLMStrPrompt(body, false, fullPrompt, model);\n                await context.sync();\n            });\n        } else {\n            return Word.run(async (context) => {\n                const selection = context.document.getSelection();\n                selection.load('text');\n                await context.sync();\n                const selectedText = selection.text;\n                await askLLMStrPrompt(selectedText, true, promptData.text, model);\n                await context.sync();\n            });\n        }\n    });\n\n    const deleteButton = button.querySelector('.delete-prompt-button');\n    if (deleteButton) {\n        deleteButton.addEventListener('click', (e) => {\n            e.stopPropagation();\n            deleteCustomPrompt(name);\n        });\n    }\n\n    return button;\n}\n\nfunction deleteCustomPrompt(name: string) {\n    const savedPrompts = JSON.parse(getFromLocalStorage('savedPrompts') || '{}');\n    delete savedPrompts[name];\n    setInLocalStorage('savedPrompts', JSON.stringify(savedPrompts));\n    loadCustomPrompts();\n    showSuccessMessage(`Prompt \"${name}\" deleted successfully!`);\n}\n\nfunction toggleConfigSection() {\n    const configSection = document.querySelector('.config-section');\n    if (configSection) {\n        configSection.classList.toggle('collapsed');\n        const button = document.getElementById('toggleConfig');\n        if (button) {\n            button.innerHTML = configSection.classList.contains('collapsed') \n                ? '<span class=\"button-icon\">+</span>' \n                : '<span class=\"button-icon\">−</span>';\n        }\n    }\n}","// Imports\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.css\", import.meta.url);\n// Module\nvar code = \" <!DOCTYPE html> <html> <head> <meta charset=\\\"UTF-8\\\"/> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\"/> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"> <title>WordLLM2</title> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1/hosted/office.js\\\"><\" + \"/script> <link rel=\\\"preconnect\\\" href=\\\"https://fonts.googleapis.com\\\"> <link rel=\\\"preconnect\\\" href=\\\"https://fonts.gstatic.com\\\" crossorigin> <link href=\\\"https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&display=swap\\\" rel=\\\"stylesheet\\\"> <\" + \"script src=\\\"https://cdn.jsdelivr.net/npm/marked/marked.min.js\\\"><\" + \"/script> <link href=\\\"\" + ___HTML_LOADER_IMPORT_0___ + \"\\\" rel=\\\"stylesheet\\\"/> </head> <body class=\\\"notion-style\\\"> <div class=\\\"container\\\"> <header> <h1>WordLLM2</h1> <div class=\\\"config-section\\\"> <div class=\\\"config-header\\\"> <h3>Configuration</h3> <button id=\\\"toggleConfig\\\" class=\\\"collapse-button\\\"> <span class=\\\"button-icon\\\">−</span> </button> </div> <div class=\\\"config-content\\\"> <form id=\\\"configForm\\\"> <div class=\\\"config-input\\\"> <label for=\\\"baseURL\\\">API Base URL:</label> <input type=\\\"text\\\" id=\\\"baseURL\\\" placeholder=\\\"https://openrouter.ai/api/v1\\\" value=\\\"https://openrouter.ai/api/v1\\\"> </div> <div class=\\\"config-input\\\"> <label for=\\\"apiKey\\\">API Key:</label> <input type=\\\"password\\\" id=\\\"apiKey\\\" placeholder=\\\"Enter your API key\\\"> </div> <button type=\\\"button\\\" id=\\\"saveConfig\\\" class=\\\"save-button\\\"> <span class=\\\"button-icon\\\">💾</span> <span>Save Config</span> </button> </form> </div> </div> <div class=\\\"model-section\\\"> <div class=\\\"model-input\\\"> <label for=\\\"modelSearch\\\">Search Model:</label> <input type=\\\"text\\\" id=\\\"modelSearch\\\" placeholder=\\\"Type to search models...\\\" class=\\\"search-input\\\"> </div> <div class=\\\"model-dropdown\\\"> <select id=\\\"modelSelect\\\" class=\\\"model-select\\\"> <option value=\\\"\\\">Loading models...</option> </select> </div> </div> </header> <div class=\\\"tab-navigation\\\"> <button class=\\\"tab-button active\\\" data-tab=\\\"main\\\">Main</button> <button class=\\\"tab-button\\\" data-tab=\\\"advanced\\\">Advanced Mode</button> </div> <div class=\\\"tab-content active\\\" id=\\\"main-tab\\\"> <div class=\\\"input-section\\\"> <textarea id=\\\"prompt\\\" placeholder=\\\"Type your prompt here...\\\" rows=\\\"4\\\"></textarea> <button id=\\\"chat\\\" class=\\\"action-button chat-button\\\"> <span class=\\\"button-icon\\\">💬</span> <span>Chat</span> </button> </div> <h3 class=\\\"columns-title\\\">Predefined prompts</h3> <div class=\\\"button-columns\\\"> <div class=\\\"button-column\\\"> <h3>Replace selection prompt</h3> <div class=\\\"button-group\\\"> <button id=\\\"translateToEnglish\\\" class=\\\"action-button\\\"> <span class=\\\"button-icon\\\">🌐</span> <span>Translate to English</span> </button> <button id=\\\"translateToFrench\\\" class=\\\"action-button\\\"> <span class=\\\"button-icon\\\">🌐</span> <span>Translate to French</span> </button> <button id=\\\"enhance\\\" class=\\\"action-button\\\"> <span class=\\\"button-icon\\\">✨</span> <span>Enhance</span> </button> <button id=\\\"correctSpelling\\\" class=\\\"action-button\\\"> <span class=\\\"button-icon\\\">✏️</span> <span>Correct Spelling</span> </button> </div> </div> <div class=\\\"button-column\\\"> <h3>TaskPane prompt</h3> <div class=\\\"button-group\\\"> <button id=\\\"explain\\\" class=\\\"action-button\\\"> <span class=\\\"button-icon\\\">📚</span> <span>Explain</span> </button> </div> </div> </div> <h3 class=\\\"columns-title\\\">Custom prompts</h3> <div class=\\\"button-columns\\\"> <div class=\\\"button-column\\\"> <h3>Replace selection prompt</h3> <div class=\\\"button-group custom-prompts-group\\\" id=\\\"customReplacePrompts\\\"> </div> </div> <div class=\\\"button-column\\\"> <h3>TaskPane prompt</h3> <div class=\\\"button-group custom-prompts-group\\\" id=\\\"customTaskpanePrompts\\\"> </div> </div> </div> </div> <div class=\\\"tab-content\\\" id=\\\"advanced-tab\\\"> <div class=\\\"dev-input-section\\\"> <div class=\\\"dev-textarea-group\\\"> <label for=\\\"promptReplaceSelection\\\">Replace selection prompt:</label> <textarea id=\\\"promptReplaceSelection\\\" placeholder=\\\"Enter prompt for replacing selection...\\\" rows=\\\"4\\\"></textarea> <div class=\\\"button-container\\\"> <button id=\\\"executeReplaceSelection\\\" class=\\\"action-button\\\"> <span class=\\\"button-icon\\\">▶️</span> <span>Execute</span> </button> <button id=\\\"saveReplaceSelectionPrompt\\\" class=\\\"action-button\\\"> <span class=\\\"button-icon\\\">💾</span> <span>Save this prompt</span> </button> </div> </div> <div class=\\\"dev-textarea-group\\\"> <label for=\\\"promptReplyTaskpane\\\">TaskPane prompt:</label> <textarea id=\\\"promptReplyTaskpane\\\" placeholder=\\\"Enter prompt for taskpane reply...\\\" rows=\\\"4\\\"></textarea> <div class=\\\"button-container\\\"> <button id=\\\"executeReplyTaskpane\\\" class=\\\"action-button\\\"> <span class=\\\"button-icon\\\">▶️</span> <span>Execute</span> </button> <button id=\\\"saveTaskpanePrompt\\\" class=\\\"action-button\\\"> <span class=\\\"button-icon\\\">💾</span> <span>Save this prompt</span> </button> </div> </div> </div> </div> <div class=\\\"response-section\\\"> <h3 class=\\\"response-title\\\">TaskPane Response</h3> <div id=\\\"response\\\" class=\\\"markdown-content\\\"></div> </div> <div id=\\\"loadingOverlay\\\" class=\\\"loading-overlay\\\"> <div class=\\\"loading-spinner\\\"> <div class=\\\"spinner-gear\\\">⚙️</div> <div class=\\\"spinner-text\\\">Processing request...</div> </div> </div> </div> <div id=\\\"promptNamePopup\\\" class=\\\"popup-overlay\\\"> <div class=\\\"popup-content\\\"> <h3>Save Prompt</h3> <div class=\\\"popup-input\\\"> <label for=\\\"promptName\\\">Enter a name for this prompt:</label> <input type=\\\"text\\\" id=\\\"promptName\\\" placeholder=\\\"My Custom Prompt\\\"> </div> <div class=\\\"popup-buttons\\\"> <button id=\\\"savePromptConfirm\\\" class=\\\"action-button\\\"> <span class=\\\"button-icon\\\">💾</span> <span>Save</span> </button> <button id=\\\"cancelPromptSave\\\" class=\\\"action-button\\\"> <span class=\\\"button-icon\\\">❌</span> <span>Cancel</span> </button> </div> </div> </div> </body> </html> \";\n// Exports\nexport default code;"],"names":["compare","module","exports","a","b","loose","Range","r1","r2","options","intersects","looseOption","Object","freeze","emptyOpts","RetryOperation","timeouts","forever","this","_originalTimeouts","JSON","parse","stringify","_timeouts","_options","_maxRetryTime","maxRetryTime","Infinity","_fn","_errors","_attempts","_operationTimeout","_operationTimeoutCb","_timeout","_operationStart","_timer","_cachedTimeouts","slice","prototype","reset","stop","clearTimeout","retry","err","currentTime","Date","getTime","push","unshift","Error","timeout","shift","undefined","splice","length","self","setTimeout","unref","attempt","fn","timeoutOps","cb","try","console","log","start","errors","attempts","mainError","counts","mainErrorCount","i","error","message","count","UPPERCASE","LOWERCASE","LEADING_CAPITAL","IDENTIFIER","SEPARATORS","LEADING_SEPARATORS","RegExp","source","SEPARATORS_AND_IDENTIFIER","NUMBERS_AND_IDENTIFIER","camelCase","input","Array","isArray","TypeError","pascalCase","preserveConsecutiveUppercase","map","x","trim","filter","join","toLowerCase","locale","string","toLocaleLowerCase","toUpperCase","toLocaleUpperCase","isLastCharLower","isLastCharUpper","isLastLastCharUpper","character","test","preserveCamelCase","replace","lastIndex","m1","charAt","_","identifier","m","postProcess","ANY","Symbol","Comparator","constructor","comp","parseOptions","value","split","debug","semver","operator","version","r","re","t","COMPARATORLOOSE","COMPARATOR","match","SemVer","toString","er","cmp","includePrerelease","startsWith","includes","safeRe","patch","compareBuild","list","sort","gt","range","minver","set","comparators","setMin","forEach","comparator","compver","prerelease","raw","format","throwErrors","SPACE_CHARACTERS","formatted","parseRange","c","first","isNullSet","isAny","comps","k","memoKey","FLAG_INCLUDE_PRERELEASE","FLAG_LOOSE","cached","cache","get","hr","HYPHENRANGELOOSE","HYPHENRANGE","hyphenReplace","COMPARATORTRIM","comparatorTrimReplace","TILDETRIM","tildeTrimReplace","CARETTRIM","caretTrimReplace","rangeList","parseComparator","replaceGTE0","rangeMap","Map","size","has","delete","result","values","some","thisComparators","isSatisfiable","rangeComparators","every","thisComparator","rangeComparator","testSet","remainingComparators","testComparator","pop","otherComparator","replaceCarets","replaceTildes","replaceXRanges","replaceStars","isX","id","replaceTilde","TILDELOOSE","TILDE","M","p","pr","ret","replaceCaret","CARETLOOSE","CARET","z","replaceXRange","XRANGELOOSE","XRANGE","gtlt","xM","xm","xp","anyX","STAR","GTE0PRE","GTE0","incPr","$0","from","fM","fm","fp","fpr","fb","to","tM","tm","tp","tpr","allowed","major","minor","hasOwnProperty","prefix","Events","EE","context","once","addListener","emitter","event","listener","evt","_events","_eventsCount","clearEvent","EventEmitter","create","__proto__","eventNames","events","name","names","call","getOwnPropertySymbols","concat","listeners","handlers","l","ee","listenerCount","emit","a1","a2","a3","a4","a5","args","len","arguments","removeListener","apply","j","on","removeAllListeners","off","prefixed","MAX_LENGTH","MAX_SAFE_INTEGER","safeSrc","src","compareIdentifiers","LOOSE","FULL","num","build","other","compareMain","comparePre","inc","release","identifierBase","PRERELEASELOOSE","PRERELEASE","base","Number","isNaN","outside","s","promise","onFinally","then","val","Promise","resolve","satisfies","versions","prev","v","ranges","min","max","simplified","original","String","wrapAnsi256","offset","code","wrapAnsi16m","red","green","blue","defineProperty","enumerable","codes","styles","modifier","bold","dim","italic","underline","overline","inverse","hidden","strikethrough","color","black","yellow","magenta","cyan","white","blackBright","redBright","greenBright","yellowBright","blueBright","magentaBright","cyanBright","whiteBright","bgColor","bgBlack","bgRed","bgGreen","bgYellow","bgBlue","bgMagenta","bgCyan","bgWhite","bgBlackBright","bgRedBright","bgGreenBright","bgYellowBright","bgBlueBright","bgMagentaBright","bgCyanBright","bgWhiteBright","gray","bgGray","grey","bgGrey","groupName","group","entries","styleName","style","open","close","ansi256","ansi16m","defineProperties","rgbToAnsi256","Math","round","hexToRgb","hex","matches","exec","colorString","groups","integer","parseInt","hexToAnsi256","parsed","lt","lte","gte","hilo","gtfn","ltefn","ltfn","ecomp","high","low","process","env","NODE_DEBUG","lower_bound_1","_queue","enqueue","run","element","priority","assign","index","default","dequeue","item","pFinally","TimeoutError","super","pTimeout","milliseconds","fallback","reject","timer","timeoutError","cancel","MAX_SAFE_COMPONENT_LENGTH","MAX_SAFE_BUILD_LENGTH","R","LETTERDASHNUMBER","safeRegexReplacements","createToken","isGlobal","safe","token","makeSafeRegex","NUMERICIDENTIFIER","NUMERICIDENTIFIERLOOSE","NONNUMERICIDENTIFIER","PRERELEASEIDENTIFIER","PRERELEASEIDENTIFIERLOOSE","BUILDIDENTIFIER","MAINVERSION","BUILD","FULLPLAIN","MAINVERSIONLOOSE","LOOSEPLAIN","XRANGEIDENTIFIER","XRANGEIDENTIFIERLOOSE","GTLT","XRANGEPLAIN","XRANGEPLAINLOOSE","COERCEPLAIN","COERCE","COERCEFULL","LONETILDE","LONECARET","eq","neq","op","key","firstKey","keys","next","maxSV","rangeObj","internalRe","constants","identifiers","valid","clean","diff","rcompare","compareLoose","rsort","coerce","toComparators","maxSatisfying","minSatisfying","minVersion","validRange","gtr","ltr","simplifyRange","subset","tokens","SEMVER_SPEC_VERSION","RELEASE_TYPES","rcompareIdentifiers","rtl","coerceRtlRegex","COERCERTLFULL","COERCERTL","minSV","byteLength","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","tmp","arr","Arr","_byteLength","curByte","revLookup","charCodeAt","fromByteArray","uint8","extraBytes","parts","maxChunkLength","len2","encodeChunk","lookup","Uint8Array","indexOf","end","output","minimumVersionWithPreRelease","minimumVersion","simpleSubset","sub","dom","eqSet","Set","gtltComp","higher","lower","hasDomLT","hasDomGT","higherGT","lowerLT","add","needDomLTPre","needDomGTPre","sawNonNull","OUTER","simpleSub","simpleDom","isSub","p_timeout_1","priority_queue_1","empty","_a","_b","_c","_d","_intervalCount","_intervalEnd","_pendingCount","_resolveEmpty","_resolveIdle","carryoverConcurrencyCount","intervalCap","interval","concurrency","autoStart","queueClass","isFinite","_carryoverConcurrencyCount","_isIntervalIgnored","_intervalCap","_interval","_queueClass","_throwOnTimeout","throwOnTimeout","_isPaused","_doesIntervalAllowAnother","_doesConcurrentAllowAnother","_concurrency","_next","_tryToStartAnother","_resolvePromises","_onResumeInterval","_onInterval","_initializeIntervalIfNeeded","_timeoutId","_isIntervalPaused","now","_intervalId","delay","clearInterval","canInitializeInterval","job","setInterval","_processQueue","newConcurrency","async","operation","addAll","functions","all","function_","pause","clear","onEmpty","existingResolve","onIdle","sizeBy","pending","isPaused","numeric","anum","bnum","version1","version2","v1","v2","comparison","v1Higher","highVersion","lowVersion","highHasPre","str","sep","array","step","it","retries","opts","factor","minTimeout","maxTimeout","randomize","createTimeout","random","pow","wrap","obj","methods","method","callback","bind","networkErrorMsgs","AbortError","originalError","stack","pRetry","onFailedAttempt","attemptNumber","errorMessage","retriesLeft","decorateErrorWithCounts","versionA","versionB","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","loaded","__webpack_modules__","d","definition","o","g","globalThis","Function","e","window","prop","toStringTag","nmd","paths","children","scriptUrl","importScripts","location","document","currentScript","tagName","scripts","getElementsByTagName","baseURI","href","default_format","formatters","RFC1738","RFC3986","is_array","hex_table","limit","maybe_map","mapped","array_prefix_generators","brackets","comma","indices","repeat","push_to_array","value_or_array","to_ISO","toISOString","defaults","addQueryPrefix","allowDots","allowEmptyArrays","arrayFormat","charset","charsetSentinel","delimiter","encode","encodeDotInKeys","encoder","_defaultEncoder","_kind","escape","out","segment","encodeValuesOnly","formatter","serializeDate","date","skipNulls","strictNullHandling","sentinel","inner_stringify","object","generateArrayPrefix","commaRoundTrip","sideChannel","tmp_sc","find_flag","pos","RangeError","isBuffer","is_buffer","key_value","obj_keys","encoded_prefix","adjusted_prefix","encoded_key","key_prefix","valueSideChannel","WeakMap","VERSION","kind","getDefaultAgent","fileFromPath","isFsReadStream","auto","MultipartBody","body","init","shims","fetch","Request","Response","Headers","FormData","Blob","File","ReadableStream","getMultipartRequestOptions","manuallyImported","recommendation","_fetch","_Request","_Response","_Headers","form","url","APIError","status","headers","makeMessage","request_id","data","param","type","msg","generate","errorResponse","APIConnectionError","cause","castToError","BadRequestError","AuthenticationError","PermissionDeniedError","NotFoundError","ConflictError","UnprocessableEntityError","RateLimitError","InternalServerError","APIUserAbortError","APIConnectionTimeoutError","LengthFinishReasonError","ContentFilterFinishReasonError","_LineDecoder_carriageReturnIndex","__classPrivateFieldSet","receiver","state","f","__classPrivateFieldGet","LineDecoder","buffer","decode","chunk","binaryChunk","ArrayBuffer","TextEncoder","newData","lines","patternIndex","findNewlineIndex","carriage","decodeText","endIndex","preceding","line","bytes","Buffer","TextDecoder","textDecoder","flush","startIndex","findDoubleNewlineIndex","ReadableStreamToAsyncIterable","stream","asyncIterator","reader","getReader","read","done","releaseLock","cancelPromise","NEWLINE_CHARS","NEWLINE_REGEXP","Stream","iterator","controller","fromSSEResponse","response","consumed","sse","abort","sseDecoder","SSEDecoder","lineDecoder","iter","sseChunk","iterSSEChunks","_iterSSEMessages","createResponseHeaders","fromReadableStream","readableStream","iterLines","tee","left","right","teeIterator","queue","toReadableStream","pull","ctrl","return","chunks","endsWith","substring","fieldname","partition","isResponseLike","blob","isFileLike","lastModified","isBlobLike","text","arrayBuffer","toFile","URL","pathname","bits","isView","isAsyncIterableIterator","getOwnPropertyNames","propsForError","getBytes","getStringFromMaybeBuffer","filename","path","getName","isMultipartBody","multipartFormRequestOptions","createForm","addFormValue","append","isUploadable","file","entry","_AbstractPage_client","defaultParseResponse","props","__streamClass","__binaryResponse","contentType","mediaType","json","_addRequestID","APIPromise","responsePromise","parseResponse","_thenUnwrap","transform","asResponse","withResponse","parsedPromise","onfulfilled","onrejected","catch","onfinally","finally","APIClient","baseURL","maxRetries","httpAgent","overriddenFetch","validatePositiveInteger","authHeaders","defaultHeaders","Accept","getUserAgent","getPlatformHeaders","validateHeaders","customHeaders","defaultIdempotencyKey","uuid4","methodRequest","post","put","request","DataView","getAPIList","Page","requestAPIList","calculateContentLength","buildRequest","inputOptions","retryCount","query","__binaryRequest","contentLength","buildURL","minAgentTimeout","idempotencyHeader","idempotencyKey","req","buildHeaders","agent","signal","reqHeaders","applyHeadersMut","getHeader","trunc","prepareOptions","prepareRequest","parseHeaders","fromEntries","header","makeStatusError","remainingRetries","makeRequest","optionsInput","retriesRemaining","aborted","AbortController","fetchWithTimeout","retryRequest","responseHeaders","ok","shouldRetry","errText","errJSON","safeJSON","errMessage","PagePromise","isAbsoluteURL","defaultQuery","isEmptyObj","search","stringifyQuery","encodeURIComponent","ms","addEventListener","fetchOptions","shouldRetryHeader","timeoutMillis","retryAfterMillisHeader","timeoutMs","parseFloat","retryAfterHeader","timeoutSeconds","calculateDefaultRetryTimeoutMillis","sleep","numRetries","AbstractPage","client","hasNextPage","getPaginatedItems","nextPageInfo","getNextPage","nextInfo","nextOptions","params","searchParams","iterPages","page","Proxy","target","requestOptionsKeys","__metadata","isRequestOptions","hasOwn","normalizeArch","arch","normalizePlatform","platform","_platformHeaders","Deno","os","deno","EdgeRuntime","browserInfo","navigator","browserPatterns","pattern","userAgent","browser","getBrowserInfo","getPlatformProperties","startsWithSchemeRegexp","n","isInteger","readEnv","_k","targetHeaders","newHeaders","lowerKey","SENSITIVE_HEADERS","action","modifiedArgs","arg","modifiedArg","lowerCasedHeader","isHeadersProtocol","intercapsHeader","_m","g1","g2","warn","isObj","APIResource","_client","Completions","Messages","completionId","ChatCompletionStoreMessagesPage","nextPageParams","CursorPage","has_more","info","after","messages","retrieve","update","ChatCompletionsPage","del","Chat","completions","Embeddings","hasUserProvidedEncodingFormat","encoding_format","embeddingBase64Obj","embeddingBase64Str","embedding","base64Str","buf","Float32Array","byteOffset","BYTES_PER_ELEMENT","binaryStr","atob","Files","fileId","FileObjectsPage","content","retrieveContent","waitForProcessing","pollInterval","maxWait","TERMINAL_STATES","Images","createVariation","edit","Speech","Transcriptions","model","Translations","Audio","transcriptions","translations","speech","Moderations","Models","ModelsPage","Permissions","fineTunedModelCheckpoint","PermissionCreateResponsesPage","permissionId","Checkpoints","permissions","fineTuningJobId","FineTuningJobCheckpointsPage","Jobs","checkpoints","FineTuningJobsPage","listEvents","FineTuningJobEventsPage","FineTuning","jobs","vectorStoreId","VectorStoreFilesPage","createAndPoll","poll","pollIntervalMs","fileResponse","sleepInterval","headerInterval","headerIntervalMs","upload","fileInfo","files","purpose","file_id","uploadAndPoll","FileContentResponsesPage","FileBatches","batchId","batch","listFiles","fileIds","configuredConcurrency","maxConcurrency","concurrencyLimit","fileIterator","allFileIds","workers","fill","fileObj","promises","results","allSettled","rejected","reason","allSettledWithThrow","file_ids","VectorStores","fileBatches","VectorStoresPage","VectorStoreSearchResponsesPage","Assistants","assistantId","AssistantsPage","isRunnableFunctionWithParse","isAssistantMessage","role","isFunctionMessage","isToolMessage","_EventStream_instances","_EventStream_connectedPromise","_EventStream_resolveConnectedPromise","_EventStream_rejectConnectedPromise","_EventStream_endPromise","_EventStream_resolveEndPromise","_EventStream_rejectEndPromise","_EventStream_listeners","_EventStream_ended","_EventStream_errored","_EventStream_aborted","_EventStream_catchingPromiseCreated","_EventStream_handleError","EventStream","_run","executor","_emitFinal","_emit","_connected","ended","errored","findIndex","emitted","isAutoParsableResponseFormat","response_format","isAutoParsableTool","tool","parseChatCompletion","completion","choices","choice","finish_reason","tool_calls","toolCall","inputTool","tools","find","function","parsed_arguments","$parseRaw","strict","parseToolCall","refusal","parseResponseFormat","shouldParseToolCall","hasAutoParseableInput","WeakSet","openAIError","_AbstractChatCompletionRunner_instances","_AbstractChatCompletionRunner_getFinalContent","_AbstractChatCompletionRunner_getFinalMessage","_AbstractChatCompletionRunner_getFinalFunctionCall","_AbstractChatCompletionRunner_getFinalFunctionCallResult","_AbstractChatCompletionRunner_calculateTotalUsage","_AbstractChatCompletionRunner_validateParams","_AbstractChatCompletionRunner_stringifyFunctionCallResult","DEFAULT_MAX_CHAT_COMPLETIONS","AbstractChatCompletionRunner","_chatCompletions","_addChatCompletion","chatCompletion","_addMessage","function_call","tool_call","finalChatCompletion","finalContent","finalMessage","finalFunctionCall","finalFunctionCallResult","totalUsage","allChatCompletions","usage","_createChatCompletion","chat","_runChatCompletion","_runFunctions","restParams","singleFunctionToCall","maxChatCompletions","functionsByName","parameters","description","rawContent","_runTools","tool_choice","inputTools","$callback","tool_call_id","rest","at","y","total","completion_tokens","prompt_tokens","total_tokens","ChatCompletionRunner","runFunctions","runner","runTools","PartialJSON","MalformedJSON","partialParse","jsonString","allowPartial","ATOM","allow","markPartialJSON","throwMalformedError","parseAny","skipBlank","parseStr","parseObj","parseArr","NaN","parseNum","lastIndexOf","writable","configurable","_parseJSON","parseJSON","Allow","_ChatCompletionStream_instances","_ChatCompletionStream_params","_ChatCompletionStream_choiceEventStates","_ChatCompletionStream_currentChatCompletionSnapshot","_ChatCompletionStream_beginRequest","_ChatCompletionStream_getChoiceEventState","_ChatCompletionStream_addChunk","_ChatCompletionStream_emitToolCallDoneEvent","_ChatCompletionStream_emitContentDoneEvents","_ChatCompletionStream_endRequest","_ChatCompletionStream_getAutoParseableResponseFormat","_ChatCompletionStream_accumulateChatCompletion","ChatCompletionStream","currentChatCompletionSnapshot","_fromReadableStream","createChatCompletion","chatId","content_done","refusal_done","logprobs_content_done","logprobs_refusal_done","done_tool_calls","current_tool_call_index","choiceSnapshot","delta","snapshot","logprobs","toolCallDelta","toolCallSnapshot","arguments_delta","toolCallIndex","responseFormat","created","system_fingerprint","choiceRest","messageRest","toolRest","fnRest","maybeParseChatCompletion","finalizeChatCompletion","pushQueue","readQueue","ChatCompletionStreamingRunner","validateInputTools","Sessions","TranscriptionSessions","Realtime","sessions","transcriptionSessions","_AssistantStream_instances","_AssistantStream_events","_AssistantStream_runStepSnapshots","_AssistantStream_messageSnapshots","_AssistantStream_messageSnapshot","_AssistantStream_finalRun","_AssistantStream_currentContentIndex","_AssistantStream_currentContent","_AssistantStream_currentToolCallIndex","_AssistantStream_currentToolCall","_AssistantStream_currentEvent","_AssistantStream_currentRunSnapshot","_AssistantStream_currentRunStepSnapshot","_AssistantStream_addEvent","_AssistantStream_endRequest","_AssistantStream_handleMessage","_AssistantStream_handleRunStep","_AssistantStream_handleEvent","_AssistantStream_accumulateRunStep","_AssistantStream_accumulateMessage","_AssistantStream_accumulateContent","_AssistantStream_handleRun","AssistantStream","_addRun","createToolAssistantStream","threadId","runId","runs","_runToolAssistantStream","_createToolAssistantStream","submitToolOutputs","createThreadAssistantStream","thread","_threadAssistantStream","createAssistantStream","_runAssistantStream","currentEvent","currentRun","currentMessageSnapshot","currentRunStepSnapshot","finalRunSteps","finalMessages","finalRun","_createThreadAssistantStream","createAndRun","_createAssistantStream","accumulateDelta","acc","deltaValue","accValue","deltaEntry","accEntry","accumulatedMessage","newContent","snapshotContent","textDelta","image_file","currentContent","accumulatedRunStep","step_details","accumulated","contentElement","messageId","MessagesPage","Steps","stepId","RunStepsPage","Runs","steps","include","RunsPage","createAndStream","beta","threads","submitToolOutputsAndPoll","submitToolOutputsStream","Threads","createAndRunPoll","thread_id","createAndRunStream","Beta","realtime","assistants","Batches","BatchesPage","Parts","uploadId","Uploads","complete","parseTextFormat","getOwnPropertyDescriptor","addOutputText","text_format","input_tools","rsp","texts","output_text","InputItems","responseId","ResponseItemsPage","_ResponseStream_instances","_ResponseStream_params","_ResponseStream_currentResponseSnapshot","_ResponseStream_finalResponse","_ResponseStream_beginRequest","_ResponseStream_addEvent","_ResponseStream_endRequest","_ResponseStream_accumulateResponse","ResponseStream","createResponse","_createResponse","responses","output_index","content_index","parsedResponse","output_parsed","maybeParseResponse","finalizeResponse","part","finalResponse","Responses","inputItems","OutputItems","evalId","outputItemId","OutputItemListResponsesPage","outputItems","RunListResponsesPage","Evals","EvalListResponsesPage","apiKey","organization","project","dangerouslyAllowBrowser","embeddings","images","audio","moderations","models","fineTuning","vectorStores","batches","uploads","evals","Authorization","normalize_stringify_options","joined","parseJsonMarkdown","parser","parsePartialJson","new_s","isInsideString","escaped","char","OpenAI","DEFAULT_TIMEOUT","OpenAIError","util","objectUtil","keyToJson","mapKeys","fields","mapper","shallowCopy","replaceSecrets","root","secretsMap","secretId","last","partsReverse","reverse","current","lc","get_lc_unique_name","serializableClass","parentClass","getPrototypeOf","lc_name","Serializable","lc_id","lc_namespace","lc_secrets","lc_attributes","lc_aliases","lc_serializable_keys","kwargs","_args","lc_kwargs","toJSON","lc_serializable","toJSONNotImplemented","aliases","secrets","reduce","Reflect","keyPath","write","isDataContentBlock","content_block","source_type","isBase64ContentBlock","convertToOpenAIImageBlock","image_url","mime_type","parseMimeType","subtype","parameterKvp","parameterParts","parseBase64DataUrl","dataUrl","data_url","asTypedArray","formatMatch","convertToProviderContentBlock","block","converter","fromStandardTextBlock","providerName","fromStandardImageBlock","fromStandardAudioBlock","fromStandardFileBlock","mergeContent","firstContent","secondContent","_mergeLists","BaseMessage","additional_kwargs","response_metadata","getType","_getType","toDict","_printableFields","_updateId","for","depth","printable","depthLimit","helper","currentDepth","_mergeDicts","merged","toMerge","leftItem","_mergeObj","BaseMessageChunk","isBaseMessage","messageLike","artifact","isInstance","invalid_tool_calls","initParams","rawToolCalls","toolCalls","invalidToolCalls","functionName","defaultToolCallParser","usage_metadata","isAIMessage","isAIMessageChunk","tool_call_chunks","toolCallChunk","parsedArgs","combinedFields","inputTokenDetails","input_token_details","cache_read","cache_creation","outputTokenDetails","output_token_details","reasoning","input_tokens","output_tokens","_chatMessageClass","addLangChainErrorFields","lc_error_code","_isToolCall","ToolInputParsingException","_coerceToolCall","_constructMessageFromParams","className","extractedType","otherParams","__openai_role__","coerceMessageLikeToMessage","getBufferString","humanPrefix","aiPrefix","string_messages","nameStr","readableContent","aiChunkFields","tc","assertEqual","assertIs","_arg","assertNever","_x","arrayToEnum","items","getValidEnumValues","validKeys","objectKeys","filtered","objectValues","checker","floor","joinValues","separator","jsonStringifyReplacer","mergeShapes","second","ZodParsedType","getParsedType","nan","number","boolean","bigint","symbol","null","unknown","ZodIssueCode","ZodError","issues","addIssue","addIssues","subs","actualProto","setPrototypeOf","_mapper","issue","fieldErrors","processError","unionErrors","returnTypeError","argumentsError","curr","el","assert","isEmpty","flatten","formErrors","errorMap","_ctx","invalid_type","received","expected","invalid_literal","unrecognized_keys","invalid_union","invalid_union_discriminator","invalid_enum_value","invalid_arguments","invalid_return_type","invalid_date","invalid_string","validation","position","too_small","exact","inclusive","minimum","too_big","maximum","custom","invalid_intersection_types","not_multiple_of","multipleOf","not_finite","defaultError","overrideErrorMap","getErrorMap","makeIssue","errorMaps","issueData","fullPath","fullIssue","maps","addIssueToContext","ctx","overrideMap","common","contextualErrorMap","schemaErrorMap","ParseStatus","dirty","mergeArray","arrayValue","INVALID","mergeObjectAsync","pairs","syncPairs","pair","mergeObjectSync","finalObject","alwaysSet","DIRTY","OK","isAborted","isDirty","isValid","isAsync","errorUtil","_ZodEnum_cache","_ZodNativeEnum_cache","SuppressedError","errToObj","ParseInputLazyPath","parent","_cachedPath","_path","_key","handleResult","success","_error","processCreateParams","invalid_type_error","required_error","iss","ZodType","_def","_getOrReturnCtx","parsedType","_processInputParams","_parseSync","_parse","_parseAsync","safeParse","parseAsync","safeParseAsync","maybeAsyncResult","refine","check","getIssueProperties","_refinement","setError","refinement","refinementData","ZodEffects","schema","typeName","ZodFirstPartyTypeKind","effect","superRefine","def","spa","optional","nullable","nullish","or","and","brand","describe","pipe","readonly","isNullable","isOptional","vendor","validate","ZodOptional","ZodNullable","ZodArray","ZodPromise","option","ZodUnion","incoming","ZodIntersection","defaultValueFunc","ZodDefault","innerType","defaultValue","ZodBranded","catchValueFunc","ZodCatch","catchValue","This","ZodPipeline","ZodReadonly","cuidRegex","cuid2Regex","ulidRegex","uuidRegex","nanoidRegex","jwtRegex","durationRegex","emailRegex","emojiRegex","ipv4Regex","ipv4CidrRegex","ipv6Regex","ipv6CidrRegex","base64Regex","base64urlRegex","dateRegexSource","dateRegex","timeRegexSource","regex","precision","datetimeRegex","local","isValidJWT","jwt","alg","base64","padEnd","decoded","typ","isValidCidr","ip","ZodString","checks","tooBig","tooSmall","_regex","_addCheck","email","emoji","uuid","nanoid","cuid","cuid2","ulid","base64url","cidr","datetime","time","duration","minLength","maxLength","nonempty","isDatetime","ch","isDate","isTime","isDuration","isEmail","isURL","isEmoji","isUUID","isNANOID","isCUID","isCUID2","isULID","isIP","isCIDR","isBase64","isBase64url","floatSafeRemainder","valDecCount","stepDecCount","decCount","toFixed","ZodNumber","setLimit","int","positive","negative","nonpositive","nonnegative","finite","MIN_SAFE_INTEGER","minValue","maxValue","isInt","ZodBigInt","BigInt","_getInvalidInput","ZodBoolean","Boolean","ZodDate","minDate","maxDate","ZodSymbol","ZodUndefined","ZodNull","ZodAny","_any","ZodUnknown","_unknown","ZodNever","never","ZodVoid","void","exactLength","deepPartialify","ZodObject","newShape","shape","fieldSchema","unwrap","ZodTuple","_cached","nonstrict","passthrough","augment","extend","_getCached","shapeKeys","extraKeys","catchall","unknownKeys","keyValidator","strip","augmentation","merge","merging","setKey","pick","mask","omit","deepPartial","partial","required","newField","keyof","createZodEnum","strictCreate","lazycreate","childCtx","types","getDiscriminator","ZodLazy","ZodLiteral","ZodEnum","ZodNativeEnum","enum","ZodDiscriminatedUnion","discriminator","discriminatorValue","optionsMap","discriminatorValues","mergeValues","aType","bType","bKeys","sharedKeys","newObj","sharedValue","newArray","handleParsed","parsedLeft","parsedRight","itemIndex","schemas","ZodRecord","keySchema","keyType","valueSchema","valueType","third","ZodMap","finalMap","ZodSet","minSize","maxSize","finalizeSet","elements","parsedSet","ZodFunction","implement","makeArgsIssue","makeReturnsIssue","returns","me","parsedReturns","returnType","func","strictImplement","getter","expectedValues","enumValues","Values","Enum","extract","newDef","exclude","opt","nativeEnumValues","promisified","sourceType","checkCtx","fatal","processed","executeRefinement","inner","createWithPreprocess","preprocess","removeDefault","newCtx","removeCatch","ZodNaN","BRAND","inResult","in","handleAsync","cleanParams","_params","_fatal","late","stringType","numberType","nanType","bigIntType","booleanType","dateType","symbolType","undefinedType","nullType","anyType","unknownType","neverType","voidType","arrayType","objectType","strictObjectType","unionType","discriminatedUnionType","intersectionType","tupleType","recordType","mapType","setType","functionType","lazyType","literalType","enumType","nativeEnumType","promiseType","effectsType","optionalType","nullableType","preprocessType","pipelineType","NEVER","getRandomValues","defaultErrorMap","setErrorMap","EMPTY_PATH","ZodTransformer","Schema","ZodSchema","any","discriminatedUnion","cls","intersection","lazy","literal","nativeEnum","oboolean","onumber","ostring","pipeline","record","strictObject","transformer","tuple","union","quotelessJson","randomUUID","crypto","rnds8","rng","byteToHex","rnds","unsafeStringify","DEFAULT_FETCH_IMPLEMENTATION","LANGSMITH_FETCH_IMPLEMENTATION_KEY","_getFetchImplementation","getLangSmithEnvironmentVariable","res","statusText","STATUS_NO_RETRY","STATUS_IGNORE","AsyncCaller","onFailedResponseHook","callable","callWithOptions","race","isLangChainMessage","convertLangChainMessageToExample","converted","assertUuid","which","warnedMessages","warnOnce","parsePromptIdentifier","ownerNamePart","commitPart","commit","owner","LangSmithConflictError","raiseForStatus","consume","errorBody","fullMessage","LIMIT_REPLACE_NODE","CIRCULAR_REPLACE_NODE","replacerStack","encodeString","serialize","replacer","spacer","edgesLimit","decirc","replaceGetterValues","setReplace","propertyDescriptor","edgeIndex","mergeRuntimeEnvIntoRunCreate","runtimeEnv","getRuntimeEnvironment","envVars","allEnvVars","getEnvironmentVariables","excluded","getLangChainEnvVarsMetadata","extra","metadata","runtime","revision_id","trimQuotes","handle429","retryAfter","_formatFeedbackScore","score","AutoBatchQueue","peek","itemPromiseResolve","itemPromise","payload","sizeBytes","upToSizeBytes","popped","poppedSizeBytes","Client","config","getEnvironmentVariable","defaultConfig","getDefaultClientConfig","tracingSampleRate","configRate","samplingRateStr","samplingRate","getTracingSamplingRate","tracingSamplingRate","apiUrl","webUrl","timeout_ms","caller","callerOptions","traceBatchConcurrency","batchIngestCaller","hideInputs","anonymizer","hideOutputs","autoBatchTracing","blockOnRootRunFinalization","batchSizeBytesLimit","manualFlushMode","getHostUrl","hostname","isLocalhost","__version__","processInputs","inputs","processOutputs","outputs","prepareRunCreateOrUpdateInputs","runParams","_getResponse","queryParams","paramsString","AbortSignal","_get","_getPaginated","URLSearchParams","_getCursorPaginatedList","requestMethod","dataKey","bodyParams","responseBody","cursors","cursor","_shouldSample","_filterForSampling","sampled","filteredPostUuids","traceId","trace_id","_getBatchSizeLimitBytes","serverInfo","_ensureServerInfo","batch_ingest_config","size_limit_bytes","_getMultiPartSupport","instance_flags","dataset_examples_multipart_enabled","drainAutoBatchQueue","batchSizeLimit","autoBatchQueue","batchPromise","_processBatch","ingestParams","runCreates","runUpdates","use_multipart_endpoint","multipartIngestRuns","batchIngestRuns","processRunOperation","autoBatchTimeout","sizeLimitBytes","autoBatchAggregationDelayMs","_getServerInfo","_getServerInfoPromise","_serverInfo","_getSettings","settings","createRun","session_name","project_name","runCreate","start_time","dotted_order","mergedRunCreateParam","preparedCreateParams","preparedUpdateParams","createById","standaloneUpdates","updateParam","rawBatch","batchChunks","batchItems","batchItem","_postBatchIngestRuns","allAttachments","preparedCreate","attachments","runUpdate","accumulatedContext","accumulatedParts","payloads","originalPayload","stringifiedPayload","stringifiedValue","attachment","mimeType","_sendMultipartRequest","boundary","updateRun","end_time","parent_run_id","readRun","loadChildRuns","child_run_ids","_loadChildRuns","getRunUrl","projectOpts","sessionId","session_id","projectName","readProject","projectId","tenantId","_getTenantId","run_","app_path","childRuns","iterable","toArray","listRuns","treemap","localeCompare","childRun","child_runs","parentRunId","referenceExampleId","startTime","executionOrder","isRoot","runType","traceFilter","treeFilter","select","projectIds","projectNames","projectIds_","session","run_type","reference_example","trace_filter","tree_filter","execution_order","parent_run","trace","is_root","runsYielded","newRuns","getRunStats","parentRun","referenceExampleIds","endTime","dataSourceType","data_source_type","filteredPayload","shareRun","shareId","run_id","share_token","unshareRun","readRunSharedLink","listSharedRuns","shareToken","runIds","readDatasetSharedSchema","datasetId","datasetName","readDataset","shareSchema","shareDataset","dataset_id","unshareDataset","readSharedDataset","listSharedExamples","exampleIds","urlParams","detail","example","_hostUrl","createProject","upsert","projectExtra","referenceDatasetId","upsert_","endpoint","updateProject","hasProject","includeStats","getProjectUrl","getDatasetUrl","dataset","_tenantId","projects","tenant_id","listProjects","nameContains","referenceDatasetName","referenceFree","deleteProject","projectId_","uploadCsv","csvFile","fileName","inputKeys","outputKeys","dataType","formData","createDataset","inputsSchema","outputsSchema","data_type","inputs_schema_definition","outputs_schema_definition","hasDataset","diffDatasetVersions","fromVersion","toVersion","datasetId_","from_version","to_version","readDatasetOpenaiFinetuning","listDatasets","datasetIds","datasetNameContains","id_","datasets","updateDataset","_datasetId","updateDatasetTag","asOf","tag","as_of","deleteDataset","indexDataset","similarExamples","createExample","inputsOrUpdate","isExampleCreate","datasetName_","dataset_name","createdAt_","createdAt","created_at","exampleId","source_run_id","sourceRunId","use_source_run_io","useSourceRunIO","use_source_run_attachments","useSourceRunAttachments","_uploadExamplesMultipart","readExample","example_ids","createExamples","propsOrUploads","splits","sourceRunIds","useSourceRunIOs","formattedExamples","idx","createLLMExample","generation","createChatExample","generations","finalInput","finalOutput","rawExample","attachment_urls","presigned_url","listExamples","inlineS3Urls","includeAttachments","dataset_version","inlineS3Urls_","serializedMetadata","field","rawExamples","deleteExample","updateExample","exampleIdOrUpdate","updateToUse","_updateExamplesMultipart","updateExamples","readDatasetVersion","resolvedDatasetId","listDatasetSplits","updateDatasetSplits","splitName","remove","split_name","examples","evaluateRun","evaluator","sourceInfo","referenceExample","reference_example_id","feedbackResult","feedbacks","_logEvaluationFeedback","createFeedback","correction","comment","feedbackSourceType","feedbackId","feedbackConfig","comparativeExperimentId","feedback_source","feedback","comparative_experiment_id","updateFeedback","feedbackUpdate","readFeedback","deleteFeedback","listFeedback","feedbackKeys","feedbackSourceTypes","createPresignedFeedbackToken","feedbackKey","expiration","feedback_key","feedback_config","hours","minutes","days","createComparativeExperiment","experimentIds","reference_dataset_id","experiment_ids","listPresignedFeedbackTokens","_selectEvalResults","results_","evaluatorResponse","evalResults","sourceInfo_","evaluatorInfo","runId_","targetRunId","logEvaluationFeedback","listAnnotationQueues","queueIds","queues","createAnnotationQueue","queueId","readAnnotationQueue","queueIteratorResult","updateAnnotationQueue","deleteAnnotationQueue","addRunsToAnnotationQueue","getRunFromAnnotationQueue","baseUrl","deleteRunFromAnnotationQueue","queueRunId","getSizeFromAnnotationQueue","_currentTenantIsOwner","tenant_handle","_ownerConflictError","_getLatestCommitHash","promptOwnerAndName","statusCode","commits","commit_hash","_likeOrUnlikePrompt","promptIdentifier","like","promptName","_getPromptUrl","commitHash","promptExists","getPrompt","likePrompt","unlikePrompt","listCommits","listPrompts","sortField","isArchived","isPublic","prompts","repos","repo","createPrompt","repo_handle","readme","tags","is_public","createCommit","resolvedParentCommitHash","parentCommitHash","manifest","parent_commit","updateExamplesMultipart","updates","stringifiedExample","exampleBlob","stringifiedInputs","inputsBlob","stringifiedOutputs","outputsBlob","attachmentBlob","attachments_operations","stringifiedAttachmentsOperations","attachmentsOperationsBlob","datasetIdToUse","uploadExamplesMultipart","updatePrompt","is_archived","deletePrompt","pullPromptCommit","includeModel","_pullPrompt","promptObject","pushPrompt","clonePublicDataset","tokenOrUrl","sourceApiUrl","parsedApiUrl","tokenUuid","parseTokenOrUrl","sourceClient","ds","finalDatasetName","flatMap","urlOrToken","numParts","pathParts","awaitPendingTraceBatches","globalEnv","isDeno","getEnv","node","runtimeEnvironment","cachedCommitSHAs","releaseEnv","common_release_envs","shas","envVar","getShas","library","sdk","sdk_version","_LC_CONTEXT_VARIABLES_KEY","Baggage","fromHeader","uriValue","decodeURIComponent","toHeader","originalConfig","getDefaultConfig","getSharedClient","dedupedMetadata","child_execution_order","currentDottedOrder","epoch","paddedOrder","padStart","convertToDottedOrderFormat","api_url","api_key","caller_options","serialized","sharedClient","createChild","child","tracingEnabled","LC_CHILD","presentConfig","callbacks","containsLangChainTracerLike","newConfig","isCallbackManagerLike","copy","_parentRunId","isLangChainTracerLike","updateFromRunTree","visited","_convertToCreate","excludeChildRuns","runExtra","child_run","postRun","patchRun","addEvent","fromRunnableConfig","parentConfig","callbackManager","getParentRunId","langChainTracer","handler","getRun","fromDottedOrder","dottedOrder","fromHeaders","inheritArgs","rawHeaders","baggage","headerTrace","parentDottedOrder","parsedDottedOrder","strTime","toHeaders","TRACING_ALS_KEY","mockAsyncLocalStorage","getStore","getInstance","initializeGlobalInstance","instance","isTraceableFunction","_hasOwnProperty","_objectKeys","charCode","escapePathComponent","hasUndefined","objKeys","objKeysLength","patchErrorMessageFormatter","messageParts","PatchError","tree","JsonPatchError","deepClone","objOps","newDocument","removed","move","getValueByPointer","originalValue","applyOperation","valueToCopy","_areEquals","arrOps","pointer","getOriginalDestination","validateOperation","mutateDocument","banPrototypeModifications","validator","returnValue","existingPathFragment","validateFunction","applyReducer","operationResult","pathLen","existingPathLen","sequence","externalValidator","arrA","arrB","_generate","mirror","patches","invertible","newKeys","oldKeys","deleted","oldVal","newVal","tree1","tree2","BaseCallbackHandlerMethodsClass","callbackHandlerPrefersStreaming","lc_prefer_streaming","BaseCallbackHandler","ignoreLLM","ignoreChain","ignoreAgent","ignoreRetriever","ignoreCustomEvent","raiseError","awaitHandlers","_awaitHandler","fromMethods","isBaseCallbackHandler","callbackHandler","_coerceToDict","defaultKey","isBaseTracer","_addRunToRunMap","BaseTracer","_fields","stringifyError","_addChildRun","storedRun","runMap","_endTrace","persistRun","onRunUpdate","_getExecutionOrder","_createRunForLLMStart","llm","extraParams","finalExtraParams","handleLLMStart","onRunCreate","onLLMStart","_createRunForChatModelStart","handleChatModelStart","handleLLMEnd","_tags","onLLMEnd","handleLLMError","onLLMError","_createRunForChainStart","chain","handleChainStart","onChainStart","handleChainEnd","onChainEnd","handleChainError","onChainError","_createRunForToolStart","handleToolStart","onToolStart","handleToolEnd","onToolEnd","handleToolError","onToolError","handleAgentAction","agentRun","actions","onAgentAction","handleAgentEnd","onAgentEnd","_createRunForRetrieverStart","retriever","handleRetrieverStart","onRetrieverStart","handleRetrieverEnd","documents","onRetrieverEnd","handleRetrieverError","onRetrieverError","handleText","onText","handleLLMNewToken","onLLMNewToken","tryJsonStringify","formatKVMapItem","elapsed","ConsoleCallbackHandler","getParents","parents","getBreadcrumbs","crumbs","getDefaultLangChainClientSingleton","clientParams","traceableTree","getTraceableRunTree","example_id","persistedRun","runTree","rootRun","convertToRunTree","runTreeMap","runTreeList","parentRunTree","getCurrentRunTree","consumeCallback","promiseFn","wait","asyncLocalStorageInstance","PQueue","getContextVariable","LC_CONFIGURE_HOOKS_KEY","BaseCallbackManager","setHandler","setHandlers","BaseRunManager","inheritableHandlers","inheritableTags","inheritableMetadata","handleCustomEvent","eventName","_runId","_metadata","CallbackManagerForRetrieverRun","getChild","manager","CallbackManager","addTags","addMetadata","CallbackManagerForLLMRun","prompt","CallbackManagerForChainRun","CallbackManagerForToolRun","runName","messageGroup","messageString","addHandler","inherit","removeHandler","_handler","removeTags","removeMetadata","additionalHandlers","inheritable","h","fromHandlers","configure","localHandlers","localTags","localMetadata","_configureSync","ensureHandler","verboseEnabled","verbose","tracingV2Enabled","consoleHandler","tracerV2","contextVar","handlerClass","createIfNotInContext","contextVarValue","_store","enterWith","LC_CHILD_KEY","getRunnableConfig","storage","runWithConfig","avoidCreatingRootRunTree","previousValue","setGlobalAsyncLocalStorageInstance","getCallbackManagerForConfig","mergeConfigs","configs","baseKeys","baseCallbacks","providedCallbacks","typedKey","PRIMITIVES","ensureConfig","implicitConfig","recursionLimit","currentConfig","timeoutSignal","raceWithSignal","removeEventListener","IterableReadableStream","ensureReader","locked","asyncDispose","pump","fromAsyncGenerator","generator","atee","buffers","AsyncGeneratorWithSetup","setup","firstResult","startSetup","_result","throwIfAborted","firstResultUsed","throw","RunLogPatch","ops","states","RunLog","fromRunLogPatch","isLogStreamHandler","_getStandardizedInputs","schemaFormat","_getStandardizedOutputs","LogStreamCallbackHandler","autoClose","includeNames","includeTypes","includeTags","excludeNames","excludeTypes","excludeTags","_schemaFormat","transformStream","TransformStream","writer","getWriter","receiveStream","readable","_includeRun","rootId","runTags","tapOutputIterable","keyMapByRunId","streamed_output","final_output","logs","counterMapByRunName","logEntry","streamed_output_str","streamedOutputValue","RUN_KEY","GenerationChunk","generationInfo","ChatGenerationChunk","assignName","isStreamEventsHandler","EventStreamCallbackHandler","outputStream","firstChunk","runInfo","runInfoMap","_formatOutputChunk","eventType","tappedPromise","tappedPromises","tappedPromiseResolver","send","sendEndEvent","llmOutput","eventData","finish","pendingPromises","defaultFailedAttemptHandler","RootListenersTracer","onStart","onEnd","onError","argOnStart","argOnEnd","argOnError","isRunnableInterface","thing","lc_runnable","_RootEventFilter","includeEvent","rootType","eventTags","ignoreOverride","$refStrategy","basePath","effectStrategy","pipeStrategy","dateStrategy","mapStrategy","removeAdditionalStrategy","allowedAdditionalProperties","rejectedAdditionalProperties","definitionPath","strictUnions","definitions","errorMessages","markdownDescription","patternStrategy","applyRegexFlags","emailStrategy","base64Strategy","nameStrategy","addErrorMessage","refs","setResponseValueAndErrors","parseBrandedDef","parseDef","parseDateDef","overrideDateStrategy","strategy","anyOf","integerDateParser","zodPatterns","parseStringDef","addFormat","addPattern","escapeLiteralCheckValue","ALPHA_NUMERIC","escapeNonAlphaNumeric","allOf","stringifyRegExpWithFlags","flags","isEscaped","inCharGroup","inCharRange","currentPath","parseRecordDef","properties","additionalProperties","propertyNames","primitiveMappings","asAnyOf","safeIsOptional","selectParser","exclusiveMinimum","exclusiveMaximum","parseNumberDef","forceOptionalIntoNullable","propName","propDef","propOptional","parsedDef","propertyPath","decideAdditionalProperties","parseObjectDef","parseBigintDef","not","parseNullDef","parseArrayDef","uniqueTypes","parseUnionDef","unevaluatedProperties","mergedAllOf","nestedSchema","parseIntersectionDef","minItems","additionalItems","maxItems","parseTupleDef","const","parseLiteralDef","parseEnumDef","actualValues","parsedTypes","parseNativeEnumDef","parseNullableDef","innerSchema","parseOptionalDef","parseMapDef","uniqueItems","parseSetDef","parsePromiseDef","parseEffectsDef","parseDefaultDef","parseCatchDef","parsePipelineDef","forceResolution","seenItem","seen","override","overrideResult","seenSchema","get$ref","newItem","jsonSchema","jsonSchemaOrGetter","addMeta","postProcessResult","$ref","getRelativePath","pathA","pathB","getDefaultOptions","getRefs","main","title","combined","$schema","_escapeNodeLabel","nodeLabel","MARKDOWN_SPECIAL_CHARS","nodeDataStr","dataStr","nodeDataJson","Graph","nodes","edges","stableNodeIds","edge","conditional","addNode","nodeId","removeNode","addEdge","firstNode","_firstNode","lastNode","_lastNode","graph","finalPrefix","newEdges","trimFirstNode","trimLastNode","reid","nodeLabels","nodeLabelCounts","label","getNodeId","drawMermaid","withStyles","curveStyle","nodeColors","wrapLabelNWords","mermaidGraph","defaultClassLabel","formatDict","nodeName","finalLabel","edgeGroups","srcParts","tgtParts","commonPrefix","seenSubgraphs","addSubgraph","selfLoop","subgraph","edgeLabel","edgeData","words","ceil","nestedPrefix","_generateMermaidGraphStyles","drawMermaidPng","mermaidSyntax","backgroundColor","mermaidSyntaxEncoded","btoa","imageUrl","targets","found","sources","isIterableIterator","isAsyncIterable","consumeIteratorInContext","consumeAsyncIterableInContext","Runnable","suffix","RunnableBinding","bound","RunnableEach","withRetry","RunnableRetry","maxAttemptNumber","stopAfterAttempt","withConfig","withFallbacks","fallbacks","RunnableWithFallbacks","runnable","_getOptionsList","subsequent","batchOptions","configList","batchCalls","invoke","returnExceptions","_streamIterator","wrappedGenerator","_separateRunnableConfigFromCallOptions","runnableConfig","callOptions","_callWithConfig","callbackManager_","runManager","_batchWithConfig","optionsList","callbackManagers","runManagers","handleStartRes","_transformStreamWithConfig","inputGenerator","finalInputSupported","finalOutputSupported","gen","pipeGeneratorWithSetup","wrapInputForTracing","streamEventsHandler","streamLogHandler","getGraph","inputNode","runnableNode","outputNode","coerceable","RunnableSequence","_coerceToRunnable","RunnablePick","mapping","RunnableAssign","RunnableMap","finalChunk","streamLog","streamOptions","logStreamCallbackHandler","_streamLog","copiedCallbacks","runnableStreamPromise","runnableStreamConsumePromise","runnableStream","consumeRunnableStream","streamEvents","_streamEventsV1","_streamEventsV2","encoding","finalStream","convertToHttpEventStream","eventStreamer","abortController","outerThis","tappedStream","firstEventRunId","firstEventSent","runLog","hasEncounteredStartEvent","rootTags","rootMetadata","rootName","rootEventFilter","logStream","dedupedPaths","chunkCount","isRunnable","withListeners","configFactories","asTool","RunnableToolLike","convertRunnableToTool","_mergeConfig","configFactory","mergedOptions","individualOption","isRunnableBinding","_invoke","_patchConfigForRetry","_batch","resultsMap","remainingIndexes","remainingInputs","patchedConfigs","firstException","resultMapIndex","middle","omitSequenceTags","nextStepInput","initialSteps","nextStepInputs","childRunManager","otherOptions","concatSupported","finalGenerator","currentLastNode","stepGraph","stepFirstNode","isRunnableSequence","runnables","nameOrFields","getStepsKeys","_transform","inputCopies","tasks","RunnableTraceable","assertNonTraceableFunction","childConfig","otherConfigFields","firstError","mapperResult","mapperKeys","forPassthrough","forMapper","mapperOutput","firstMapperChunkPromise","_pick","picked","toolInput","HEX_CHARS","EXTRA","SHIFT","blocks","Sha1","sharedMemory","h0","h1","h2","h3","h4","hBytes","finalized","hashed","notString","lastByteIndex","hash","finalize","digest","dataView","setUint32","getCacheKey","strings","insecureHash","BaseCache","GLOBAL_MAP","InMemoryCache","llmKey","global","BasePromptValue","StringPromptValue","toChatMessages","ChatPromptValue","__defProp","bytePairEncode","piece","ranks","minRank","rank","bytePairMerge","_Tiktoken","specialTokens","inverseSpecialTokens","patStr","textEncoder","rankMap","textMap","extendedSpecialTokens","pat_str","uncompressed","bpe_ranks","memo","offsetStr","special_tokens","allowedSpecial","disallowedSpecial","regexes","specialRegex","specialTokenRegex","allowedSpecialSet","disallowedSpecialSet","disallowedSpecialRegex","specialMatch","nextSpecial","startFind","matchAll","token2","i2","mergedArray","Tiktoken","escapeRegex","__defNormalProp","isOpenAITool","BaseLangChain","BaseLanguageModel","callKeys","getNumTokens","numTokens","_encoding","getEncoding","getEncodingNameForModel","encodingForModel","modelName","_convertInputToPromptValue","_identifyingParams","_getSerializedCacheKeyParametersForCall","_type","_llmType","_model","_modelType","filteredEntries","serializedEntries","deserialize","_data","RunnablePassthrough","asZodSchema","_formatForTracing","messagesToTrace","messageToTrace","BaseChatModel","_separateRunnableConfigFromCallOptionsCompat","promptValue","generatePrompt","_streamResponseChunks","_messages","_runManager","disableStreaming","getLsParams","invocation_params","invocationParams","batch_size","generationChunk","tokenUsage","promptTokens","completionTokens","totalTokens","ls_model_type","ls_stop","ls_provider","_generateUncached","parsedOptions","handledOptions","startedRunManagers","baseMessages","messageList","llmOutputs","aggregated","promptIndex","pResult","_combineLLMOutput","_generateCached","llmStringKey","missingPromptIndices","cachedResults","baseMessage","promiseResult","promptValues","promptMessages","callPrompt","predictMessages","predict","withStructuredOutput","outputSchema","bindTools","includeRaw","outputParser","parserAssign","parserNone","parsedWithFallback","BaseLLMOutputParser","parseResultWithPrompt","_prompt","parseResult","_baseMessageToString","_baseMessageContentToString","BaseOutputParser","parseWithPrompt","OutputParserException","observation","sendToLLM","deepCompareStrict","typeofa","aKeys","encodePointer","encodeURI","escapePointer","schemaArrayKeyword","prefixItems","oneOf","schemaMapKeyword","$defs","patternProperties","dependentSchemas","ignoredKeyword","$id","$anchor","$vocabulary","$comment","maxProperties","minProperties","initialBaseURI","origin","basePointer","schemaURI","__absolute_uri__","__absolute_ref__","$recursiveRef","__absolute_recursive_ref__","keyBase","subSchema","subKey","DATE","DAYS","TIME","dateTime","DATE_TIME_SEPARATOR","uri","NOT_URI_FRAGMENT","URI_PATTERN","host","ipv4","ipv6","Z_ANCHOR","year","month","day","isLeapYear","full","hour","minute","timeZone","OutputFormat","draft","shortCircuit","recursiveAnchor","instanceLocation","schemaLocation","evaluated","keyword","keywordLocation","rawInstanceType","instanceType","$recursiveAnchor","$type","$const","$enum","$required","$not","$anyOf","$allOf","$oneOf","if","$if","$then","else","$else","$format","$properties","$patternProperties","$additionalProperties","$unevaluatedProperties","$minProperties","$maxProperties","$propertyNames","dependentRequired","$dependentRequired","$dependentSchemas","dependencies","$dependencies","$prefixItems","$items","$additionalItems","unevaluatedItems","$unevaluatedItems","contains","$contains","minContains","$minContains","maxContains","$maxContains","$minItems","$maxItems","$uniqueItems","$minimum","$maximum","$exclusiveMinimum","$exclusiveMaximum","$multipleOf","$minLength","$maxLength","$pattern","refSchema","subEvaluateds","errorsLength","anyValid","subEvaluated","allValid","thenResult","elseResult","subInstancePointer","dependantKey","propsOrSchema","thisEvaluated","length2","contained","ao","remainder","abs","ucs2length","BaseTransformOutputParser","BaseCumulativeTransformOutputParser","prevParsed","accGen","chunkGen","parsePartialResult","_diff","getFormatInstructions","StructuredOutputParser","fromZodSchema","fromNamesAndDescriptions","escapedJson","_match","capturedGroup","JsonOutputParser","rawToolCall","functionArgs","parsedToolCall","returnId","convertLangChainToolCallToOpenAI","makeInvalidToolCall","errorMsg","JsonOutputToolsParser","parsedToolCalls","backwardsCompatibleToolCall","JsonOutputKeyToolsParser","keyName","returnSingle","zodSchema","_validateResult","zodParsedResult","matchingResults","returnedValues","toolCallResults","processPattern","processRegExp","regexOrFunction","nullableStrategy","seenRefs","openaiStrictMode","actualKeys","zodDef","processedDefinitions","newDefinitions","zodResponseFormat","zodObject","$brand","makeParseableResponseFormat","json_schema","isLangChainTool","isStructuredToolParams","isRunnableToolLike","isStructuredTool","convertToOpenAIFunction","fieldsCopy","wrapOpenAIClientError","formatToOpenAIToolChoice","toolChoice","formatObjectProperties","indent","formatType","messageToOpenAIRole","extractGenericMessageCustomRole","completionsApiContentBlockConverter","rawMimeType","input_audio","file_data","isReasoningModel","completionParam","_FUNCTION_CALL_IDS_MAP_KEY","_convertMessagesToOpenAIResponsesParams","lcMsg","toolMessage","oaiScreenshot","lcImage","call_id","annotations","functionCallIds","toolOutputs","tool_outputs","castToolOutputs","reasoningCalls","computerCalls","_convertOpenAIResponsesMessageToBaseMessage","incomplete_details","user","model_name","fnAdapter","_convertOpenAIResponsesDeltaToBaseMessageChunk","annotation","item_id","isBuiltInTool","_convertChatOpenAIToolTypeToOpenAITool","toolDef","_convertToOpenAITool","ChatOpenAI","openAIApiKey","configuration","modelKwargs","temperature","topP","frequencyPenalty","presencePenalty","topLogprobs","logitBias","stopSequences","__includeRawResponse","modalities","reasoningEffort","maxTokens","maxCompletionTokens","useResponsesApi","streaming","streamUsage","clientConfig","supportsStrictToolCalling","ls_model_name","ls_temperature","ls_max_tokens","max_tokens","createResponseFormat","resFormat","_useResponseApi","top_p","previous_response_id","truncation","parallel_tool_calls","max_output_tokens","reasoning_effort","effort","streamOptionsConfig","stream_options","include_usage","frequency_penalty","presence_penalty","top_logprobs","logit_bias","seed","prediction","max_completion_tokens","_convertOpenAIChatCompletionMessageToBaseMessage","rawResponse","__raw_response","_convertOpenAIDeltaToBaseMessageChunk","defaultRole","toolCallChunks","streamIterable","responseApiWithRetry","messagesMapped","completionWithRetry","newTokenIndices","prompt_tokens_details","audio_tokens","cached_tokens","completion_tokens_details","reasoning_tokens","identifyingParams","_responseApiGenerate","estimatedTokenUsage","usesBuiltInTools","hasResponsesOnlyKwargs","usageMetadata","finalChunks","aKey","bKey","promptTokenUsage","getEstimatedTokenCountFromPrompt","completionTokenUsage","getNumTokensFromGenerations","betaParsedCompletionWithRetry","promptTokensDetails","completionTokensDetails","getNumTokensFromMessages","totalCount","promptDefinitions","formatFunctionDefinitions","countPerMessage","tokensPerMessage","tokensPerName","textCount","roleCount","nameCount","openAIMessage","requestOptions","_getClientOptions","azureOpenAIApiDeploymentName","azureOpenAIApiInstanceName","azureOpenAIApiKey","azureOpenAIBasePath","azureADTokenProvider","azureOpenAIEndpoint","getEndpoint","altParser","aiMessage","asJsonSchema","openAIFunctionDefinition","StructuredTool","verboseParsingErrors","enrichedConfig","configArg","parseCallbackConfigArg","toolCallId","_call","formattedOutput","lc_direct_tool_output","_stringify","_formatToolOutput","Tool","_noOp","_regeneratorRuntime","u","define","Generator","Context","makeInvokeMethod","tryCatch","GeneratorFunction","GeneratorFunctionPrototype","defineIteratorMethods","AsyncIterator","_typeof","__await","callInvokeWithMethodAndArg","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","displayName","isGeneratorFunction","mark","awrap","rval","handle","delegateYield","asyncGeneratorStep","_asyncToGenerator","_throw","fetchAvailableModels","_x2","_fetchAvailableModels","_callee","_context","t0","initializeModel","getLLMResponse","_x3","_x4","_getLLMResponse","_callee2","_errorData$error","errorData","_context2","t1","dallEResponseFormat","quality","processMultipleGeneratedUrls","b64_json","generateImageFields","_defaults","breaks","extensions","gfm","hooks","pedantic","renderer","silent","tokenizer","walkTokens","changeDefaults","newDefaults","noopTest","valSource","caret","getRegex","codeRemoveIndent","outputLinkReplace","indentCodeCompensation","beginningSpace","endingHash","startingSpaceChar","endingSpaceChar","nonSpaceChar","newLineCharGlobal","tabCharGlobal","multipleSpaceGlobal","blankLine","doubleBlankLine","blockquoteStart","blockquoteSetextReplace","blockquoteSetextReplace2","listReplaceTabs","listReplaceNesting","listIsTask","listReplaceTask","anyLine","hrefBrackets","tableDelimiter","tableAlignChars","tableRowBlankLine","tableAlignRight","tableAlignCenter","tableAlignLeft","startATag","endATag","startPreScriptTag","endPreScriptTag","startAngleBracket","endAngleBracket","pedanticHrefTitle","unicodeAlphaNumeric","escapeTest","escapeReplace","escapeTestNoEncode","escapeReplaceNoEncode","unescapeTest","percentDecode","findPipe","splitPipe","slashPipe","carriageReturn","spaceLine","notSpaceStart","endingNewline","listItemRegex","bull","nextBulletRegex","hrRegex","fencesBeginRegex","headingBeginRegex","htmlBeginRegex","bullet","lheadingCore","lheading","lheadingGfm","_paragraph","_blockLabel","_tag","_comment","html","paragraph","blockNormal","blockquote","fences","heading","newline","table","gfmTable","blockGfm","blockPedantic","br","_punctuation","_punctuationOrSpace","_notPunctuationOrSpace","punctuation","_punctuationGfmStrongEm","emStrongLDelimCore","emStrongLDelim","emStrongLDelimGfm","emStrongRDelimAstCore","emStrongRDelimAst","emStrongRDelimAstGfm","emStrongRDelimUnd","anyPunctuation","autolink","_inlineComment","_inlineLabel","reflink","nolink","inlineNormal","_backpedal","blockSkip","link","reflinkSearch","inlinePedantic","inlineGfm","inlineBreaks","normal","inline","escapeReplacements","getEscapeReplacement","cleanUrl","splitCells","tableRow","row","cells","rtrim","invert","suffLen","outputLink","cap","lexer","rules","inLink","inlineTokens","_Tokenizer","space","codeBlockStyle","matchIndentToCode","indentToCode","matchIndentInNode","indentInNode","lang","trimmed","inBlockquote","currentLines","currentRaw","currentText","top","blockTokens","lastToken","oldToken","newText","newToken","isordered","ordered","itemRegex","endsWithBlankLine","endEarly","itemContents","nextLine","trimStart","rawLine","nextLineWithoutTabs","ischecked","istask","task","checked","lastItem","trimEnd","spacers","hasMultipleLineBreaks","pre","aligns","rows","align","cell","inRawBlock","trimmedUrl","rtrimSlash","lastParenIndex","level","findClosingBracket","linkLen","links","emStrong","maskedSrc","prevChar","lLength","rDelim","rLength","delimTotal","midDelimTotal","endReg","lastCharLength","codespan","hasNonSpaceChars","hasSpaceCharsOnBothEnds","prevCapZero","inlineText","_Lexer","inlineQueue","lex","lexInline","lastParagraphClipped","extTokenizer","cutSrc","startBlock","tempSrc","tempStart","getStartIndex","errMsg","keepPrevChar","startInline","_Renderer","langString","parseInline","listitem","itemBody","checkbox","tablecell","tablerow","strong","em","cleanHref","image","textRenderer","_TextRenderer","_Parser","anyToken","renderers","genericToken","textToken","_Hooks","static","markdown","postprocess","processAllTokens","provideLexer","provideParser","markedInstance","setOptions","parseMarkdown","Parser","Renderer","TextRenderer","Lexer","Tokenizer","Hooks","use","tableToken","listToken","childTokens","flat","pack","ext","prevRenderer","extLevel","rendererProp","rendererFunc","tokenizerProp","tokenizerFunc","prevTokenizer","hooksProp","hooksFunc","prevHook","passThroughHooks","packWalktokens","blockType","origOpt","throwError","marked","setInLocalStorage","myPartitionKey","Office","partitionKey","localStorage","setItem","getFromLocalStorage","getItem","concatenatePrompt","_concatenatePrompt","promptUrl","selectedText","isReplaceSelection","promptText","cleanPromptText","htmlPreserveResponse","htmlPreserveText","askLLMUrlPrompt","_askLLMUrlPrompt","userText","taskPane","fullPrompt","urlParts","selectedModel","modelWithPrompt","_args2","askLLM","askLLMStrPrompt","_askLLMStrPrompt","_callee3","_args3","_context3","_x5","_askLLM","_callee5","overlay","responseDiv","responseSection","_args5","_context5","getElementById","display","classList","Word","_ref","_callee4","llmResponse","parsedMarkdown","selection","bodyRegex","modifiedHtml","_context4","innerHTML","querySelector","scrollIntoView","behavior","getSelection","getHtml","sync","insertHtml","InsertLocation","_x6","textContent","_arrayLikeToArray","getDefaults","availableModels","currentPromptType","fetchModels","_fetchModels","modelSelect","savedModel","updateModelDropdown","filteredModels","term","filterModels","updateModel","handleModelSearch","handleModelChange","saveConfiguration","_chat","textAreaValue","explain","_explain","_callee6","_context6","_ref5","load","getSelectionAsHTML","_getSelectionAsHTML","_callee8","_context8","_ref6","_callee7","bodyContent","_context7","translateToEnglish","_translateToEnglish","_callee10","_context10","_ref7","_callee9","_yield$getSelectionAs2","_context9","translateToFrench","_translateToFrench","_callee12","_context12","_ref8","_callee11","_yield$getSelectionAs3","_context11","enhance","_enhance","_callee14","_context14","_ref9","_callee13","_yield$getSelectionAs4","_context13","_x7","correctSpelling","_correctSpelling","_callee16","_context16","_ref10","_callee15","_yield$getSelectionAs5","_context15","_x8","executeReplaceSelection","_executeReplaceSelection","_callee18","_context18","_ref11","_callee17","_yield$getSelectionAs6","_context17","_x9","executeReplyTaskpane","_executeReplyTaskpane","_callee20","_context20","_ref12","_callee19","_context19","_x10","showPromptNamePopup","promptType","popup","focus","hidePromptNamePopup","savePromptWithName","savedPrompts","showSuccessMessage","loadCustomPrompts","customReplacePrompts","customTaskpanePrompts","_ref2","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","promptData","button","createElement","_ref3","_yield$getSelectionAs","cleanPrompt","_ref4","deleteButton","stopPropagation","deleteCustomPrompt","createCustomPromptButton","appendChild","toggleConfigSection","configSection","toggle","onReady","HostType","savedBaseURL","savedApiKey","tabButtons","querySelectorAll","btn","tabId","getAttribute","onclick"],"sourceRoot":""}